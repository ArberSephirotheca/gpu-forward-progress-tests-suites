#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-243.711) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-6.1)), bool(false))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), (mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat3(4.0, -438.642, 80.01, 1.4, 274.651, 1088.1340, -6.9, -904.580, 2.1)))), (_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)), mat3(mat3(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0)))))))))) * mat3(1.0)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))) * _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(2.5, -1836.5164, -84.60, 98.91, -5.5, 6.6, -2.4, -50.16, 4207.8240)))))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, true, false))), true, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.2)), bool(false))), 1.0)), 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-64.89)))), transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))) * mat3(1.0)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1412.2351) : 1.0))), float(_GLF_FUZZED(-5.2)), bool(false))), 0.0, 1.0), transpose(transpose(mat3(injectionSwitch.y, 1.0, 0.0, 0.0, exp(0.0), 1.0, 1.0, 0.0, 1.0))))) * mat3(1.0))))))))), true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(181.703)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, true)), true), bvec2(bvec2(bvec2(bool(bvec2(false, true)), true))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)), gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, max(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) - (uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u | (0u))))) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))) / _GLF_IDENTITY(uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))), clamp(uvec3(1u, 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), 0u | (0u | (1u))))), uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))), uvec3(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(1u, 1u, 1u), (_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))) << uvec3(0u, 0u, 0u)) * (gl_WorkGroupID)), gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(1u, (1u) - 0u), 1u, 1u)).x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) + _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID, gl_WorkGroupID)))), uvec3(uvec3((~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED((+ uvec3(uvec2(74203u, 138460u), workgroup_size))))))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED((+ uvec3(uvec2(74203u, 138460u), workgroup_size))))))))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED((+ uvec3(uvec2(74203u, 138460u), workgroup_size)))))))))) << uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))), clamp(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(100972u, 91660u, 31735u)) : gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)))))))) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), max((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(195437u, 171631u, 108495u))))))) / uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u & 129602u), (_GLF_IDENTITY((0u & 129602u), (true ? (0u & 129602u) : _GLF_FUZZED(155805u)))) + 0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), max((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u))), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u)))))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), max(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))) * uvec3(1u, 1u, 1u)), gl_WorkGroupID)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) >> 0u))), 1u), (uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) | uvec3(0u, 0u, 0u)), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))).x) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), min(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))))))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))), 1u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID, gl_WorkGroupID)))))), gl_WorkGroupID)))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))) / uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u & 129602u) | (0u))), uvec3(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u)))))))), 0u), uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2646.9231), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(true, false))).x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u))), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(56.81)), vec2(_GLF_FUZZED(-0.2), (injectionSwitch)[1]), bvec2(false, true))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((84.85 / 843.099))), bool(false))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u)))))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) * uvec3(1u, 1u, 1u)), gl_WorkGroupID)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) | uvec3(0u, 0u, 0u)), min(uvec3(1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u)))) | (uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u)))))), 1u)))).x) | 0u) : _GLF_FUZZED(atomicMin(num_workgroup, subgroup_id)))), 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), uvec3(0u, 0u, 0u) + _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID, gl_WorkGroupID)))), uvec3(uvec3((~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED((+ uvec3(uvec2(74203u, 138460u), workgroup_size))))))))), uvec3(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED((+ uvec3(uvec2(74203u, 138460u), workgroup_size))))))))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED((+ uvec3(uvec2(74203u, 138460u), workgroup_size)))))))))) << uvec3(0u, 0u, 0u))))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)))), clamp(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(100972u, 91660u, 31735u)) : gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID)))))))) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), max((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(195437u, 171631u, 108495u))))))) / uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u & 129602u), (_GLF_IDENTITY((0u & 129602u), (true ? (0u & 129602u) : _GLF_FUZZED(155805u)))) + 0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), max((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (_GLF_IDENTITY(0u, (0u) - 0u)))))), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u))), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))) + 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u)))))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), max(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))) * uvec3(1u, 1u, 1u)), gl_WorkGroupID)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) >> 0u))), 1u), (uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) | uvec3(0u, 0u, 0u)), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)))).x) | 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), min(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))))))))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))), 1u))))))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), gl_WorkGroupID, gl_WorkGroupID)))))), gl_WorkGroupID)))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))))) / uvec3(1u, 1u, 1u)).x, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupID)), gl_WorkGroupID, gl_WorkGroupID))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))) / uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u & 129602u) | (0u))), uvec3(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ _GLF_IDENTITY((0u), ~ (~ ((0u)))))))), 0u), uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2646.9231), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.2)), bvec2(true, false))).x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u))), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(56.81)), vec2(_GLF_FUZZED(-0.2), (injectionSwitch)[1]), bvec2(false, true))).x), _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((84.85 / 843.099))), bool(false))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(190939u, 183847u, 114588u)))))), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))) | ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) * uvec3(1u, 1u, 1u)), gl_WorkGroupID)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, ~ (~ _GLF_IDENTITY((1u), ((1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), (uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) | uvec3(0u, 0u, 0u)), min(uvec3(1u, 1u, 1u), uvec3(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u))), (uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u)))) | (uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) * uvec3(1u, 1u, 1u)))))), 1u)))).x) | 0u) : _GLF_FUZZED(atomicMin(num_workgroup, subgroup_id)))), 0u)) * ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(uvec2(50643u, 74248u), num_workgroup)) : _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (~ (uvec3(1u, 1u, 1u)))))), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)), 1u))), 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, 46255u, 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))))).x, 0u)), 0u | _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, _GLF_IDENTITY(46255u, uint(uvec3(_GLF_IDENTITY(46255u, (46255u) + 0u), 0u, 0u))), 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))))).x, 0u))), 0u | ((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, _GLF_IDENTITY(46255u, uint(uvec3(_GLF_IDENTITY(46255u, (46255u) + 0u), 0u, 0u))), 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))))).x, 0u)))))), (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)), 1u))), 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, 46255u, 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))))).x, 0u)), 0u | _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, _GLF_IDENTITY(46255u, uint(uvec3(_GLF_IDENTITY(46255u, (46255u) + 0u), 0u, 0u))), 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))))).x, 0u))), 0u | ((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, _GLF_IDENTITY(46255u, uint(uvec3(_GLF_IDENTITY(46255u, (46255u) + 0u), 0u, 0u))), 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))))).x, 0u))))))) | (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (1u)), 1u))), 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, 46255u, 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))))).x, 0u)), 0u | _GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, _GLF_IDENTITY(46255u, uint(uvec3(_GLF_IDENTITY(46255u, (46255u) + 0u), 0u, 0u))), 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))))).x, 0u))), 0u | ((uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(78415u, _GLF_IDENTITY(46255u, uint(uvec3(_GLF_IDENTITY(46255u, (46255u) + 0u), 0u, 0u))), 160631u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), ((false ? _GLF_FUZZED(uvec3(170467u, 60145u, 99809u)) : clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)))))).x, 0u)))))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || false) ? _GLF_FUZZED(1950u) : uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_IDENTITY(false, ! (! (false))), false))) ? _GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u), (uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) << uvec3(0u, 0u, 0u))) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) + uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)), (_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u))) | (_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)))) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x), min(min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)), (_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u))) | (_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)))) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)), (_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u))) | (_GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)))) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, _GLF_IDENTITY(54019u, clamp(54019u, 54019u, 54019u)), 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x)))))), 0u)))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), ~ (~ ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), ((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))))))).x, 0u)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (_GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), clamp(_GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupID), max(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupID), _GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupID), (false ? _GLF_FUZZED((uvec3(84815u, 44881u, 169732u) << uvec3(108234u, 164169u, 143709u))) : clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), gl_WorkGroupID))))), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), min(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))), _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (false ? _GLF_FUZZED(uvec3(77524u, 111189u, 2749u)) : _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), ~ (~ (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))))))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))).x, 0u)))), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), uvec3(uvec4(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), 1u))))))) / uvec3(1u, 1u, 1u)))).x, 0u), uvec2(0u, 0u) + (uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), uvec3(uvec4(uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), 1u))))))) / uvec3(1u, 1u, 1u)))).x, 0u)))), (false ? _GLF_FUZZED(1950u) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(156592u, 154894u, 48641u)) : _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))))).x, 0u)))), (_GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)), ~ (~ ((false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u))))))))).x, 0u)))), _GLF_IDENTITY((uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u))))), (true ? (uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u))), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u))))) : _GLF_FUZZED(uvec4(17031u, 56792u, 42034u, 44468u)[2]))) ^ 0u)) ^ 0u), 0u + (uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u))))))))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), uvec3(uvec4((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))).x, 0u)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))), (_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u))))) ^ uvec3(0u, 0u, 0u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))), min(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))), _GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u))))))) * uvec3(1u, 1u, 1u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))).x, 0u))), (clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u)), (false ? _GLF_FUZZED(1950u) : _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, _GLF_IDENTITY((79409u), ((79409u)) - 0u) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(clamp(0u, 0u, 0u), min(clamp(0u, 0u, 0u), clamp(0u, 0u, 0u))))))), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) ^ (gl_WorkGroupID)))), gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u))), (uvec3(uvec3(uvec3(1u, 1u, 1u)))) - uvec3(0u, 0u, 0u)))))).x, 0u)))), (_GLF_IDENTITY(uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, _GLF_IDENTITY((79409u) ^ 0u, uint(uint(_GLF_IDENTITY((79409u) ^ 0u, uint(uvec4((79409u) ^ 0u, 1u, 0u, 0u))))))), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), 0u)))))), (uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)))).x, 0u))))) ^ 0u)) ^ 0u), 0u + (uint(uint(uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(79409u, (79409u) ^ 0u), 54019u, 123878u)) : (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), gl_WorkGroupID, gl_WorkGroupID))) / uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u)))).x, 0u))))))))), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), (true ? _GLF_IDENTITY(1u, (1u) | (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))), clamp(_GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))), _GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))), max(_GLF_IDENTITY(_GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))), max(_GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))), _GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))))), _GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338))))), _GLF_FUZZED(packUnorm2x16(vec2(-8.5, -391.338)))))))), (false ? _GLF_FUZZED(uvec3(79409u, 54019u, 123878u)) : _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID), (clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)) / uvec3(1u, 1u, 1u)))) / uvec3(1u, 1u, 1u), uvec3(uvec4((_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))).x, 0u)), uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) * uvec3(1u, 1u, 1u))), max(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) * uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) * uvec3(1u, 1u, 1u))), (false ? _GLF_FUZZED(uvec3(56126u, 140652u, 40960u)) : uvec3(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * (gl_WorkGroupID))) * uvec3(1u, 1u, 1u))))))))), gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))))) / uvec3(1u, 1u, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u)), ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false))) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))), (_GLF_IDENTITY(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, _GLF_IDENTITY((123878u) | (123878u), ~ (~ (_GLF_IDENTITY((123878u), (_GLF_IDENTITY((123878u), (false ? _GLF_FUZZED(subgroup_size) : (123878u)))) >> 0u) | (123878u))))))), min(_GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u)))), _GLF_FUZZED(uvec3(79409u, 54019u, _GLF_IDENTITY(123878u, (123878u) | (123878u))))))) * uvec3(1u, 1u, 1u)) : (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, 1u, 1u))) - uvec3(0u, 0u, 0u)))).x, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) / uvec3(1u, _GLF_IDENTITY(1u, max(1u, 1u)), 1u)).x, 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec2(false, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))))))))))) || false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))), false || ((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-156.605) : injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false))))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-156.605) : injectionSwitch.x)) > injectionSwitch.y)))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat3(mat3(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(mat3(-5876.0074, -48.45, 33.54, -9.9, -486.064, 0.4, 7.4, 2.9, -8.9)))) : _GLF_FUZZED(mat3(-40.93, 4.5, -5.8, 35.30, 9028.2921, -6574.6412, 7.1, -46.71, 790.126)))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0) + (_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), (mat3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) >> _GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), max((0), (0)))))) % subgroup_size) ^ 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) ^ 0u))))), ~ (~ (workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u)) % subgroup_size), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) - 0)) >> _GLF_IDENTITY(0, 0 | _GLF_IDENTITY((0), max((0), (0)))))) % subgroup_size) ^ 0u), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))) ^ 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-28.58), (_GLF_FUZZED(-28.58)) / 1.0)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))) - 0.0), (_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (float(mat2x4(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 0.0))) - 0.0)) * 1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true, true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true, true))))), ! (! (! (bool(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true, true))))))))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), vec2(_GLF_IDENTITY(_GLF_FUZZED((0.7 + 1803.5388)), float(_GLF_IDENTITY(vec2(_GLF_FUZZED((0.7 + 1803.5388)), 1.0), mat2(1.0) * (vec2(_GLF_FUZZED((0.7 + 1803.5388)), 1.0))))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, bool(bool(true)))))).y, mix(float(_GLF_FUZZED(-7.3)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, tan(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.0)), float(1.0), bool(true))))), length(0.0), 0.0, 1.0, sqrt(sin(0.0)), 0.0))).y) - 0.0)), sqrt(1.0) * (float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))), false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) || false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false || (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), false))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-58996)))))], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.0)), vec2(_GLF_FUZZED(-12.76), (injectionSwitch)[1]), bvec2(false, true))))).y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2991.5452), clamp(_GLF_FUZZED(-2991.5452), _GLF_FUZZED(-2991.5452), _GLF_IDENTITY(_GLF_FUZZED(-2991.5452), clamp(_GLF_FUZZED(-2991.5452), _GLF_FUZZED(-2991.5452), _GLF_IDENTITY(_GLF_FUZZED(-2991.5452), float(vec3(_GLF_FUZZED(-2991.5452), 0.0, 0.0))))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-4.0 * _GLF_IDENTITY(-1.5, float(vec4(_GLF_IDENTITY(-1.5, min(-1.5, -1.5)), 1.0, 0.0, 0.0)))))), bvec2(true, false))).y))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, true, false)), bool(bvec2(bool(bvec4(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false, true, false)), _GLF_IDENTITY(false, ! (! (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-89.50))) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, vec2(9505.8750, 93.70), vec2(-23.08, 0.8))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(clamp(82702, -66535, -65386)) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (-66535)))))) >> 0), -65386)) : 4), (_GLF_IDENTITY((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (-66535)))))) >> 0), -65386)) : 4), 0 | _GLF_IDENTITY(((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (-66535)))))) >> 0), -65386)) : 4)), clamp(((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (-66535)))))) >> 0), -65386)) : 4)), ((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (-66535)))))) >> 0), -65386)) : 4)), ((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (-66535)))))) >> 0), -65386)) : 4)))))) | ((false ? _GLF_FUZZED(clamp(82702, _GLF_IDENTITY(-66535, (_GLF_IDENTITY(-66535, ~ (~ (_GLF_IDENTITY(-66535, 0 ^ (_GLF_IDENTITY(-66535, int(ivec2(-66535, 1))))))))) >> 0), -65386)) : 4))))) ^ 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8848.2486) : _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.8))))) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(8.7)), bool(false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
