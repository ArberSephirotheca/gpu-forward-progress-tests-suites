#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base;
 uvec4 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.xyz = GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 uvec4 GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.xyz = GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz = _GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid, uvec4(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid[0], GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid[1], GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid[2], GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid[3])))).xyz;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz = GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw = GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base.xy = GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.zw;
 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base, min(_GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base, (GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base) / uvec4(1u, 1u, 1u, 1u)), GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base)).xy;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.x = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.y = subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.w = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.y, exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread.z = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.xyz.x = GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z = workgroup_size;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))) | (gl_WorkGroupID)).x, _GLF_IDENTITY((gl_WorkGroupID.x) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))).x) / 1u, min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))) | 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)), (false ? _GLF_FUZZED(20751u) : ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))) / 1u))))) ^ 0u))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID.x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2]))))) | (gl_WorkGroupID)).x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) / _GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))), max(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))), _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))))))).x) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID.x) / _GLF_IDENTITY(1u, (1u) ^ 0u), (gl_WorkGroupID.x) / 1u), (true ? _GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))).x) / 1u), (_GLF_IDENTITY(false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), 0u + (false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))) - 0u)) | (gl_WorkGroupID.x))) / 1u))))) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z))), 0u | (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), clamp(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), clamp(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (0u ^ 0u) | (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), max(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))))), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) - 0u))))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_local_id) : 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID[2], 1u * (gl_WorkGroupID[2])), max(gl_WorkGroupID[2], _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))[2]))))) | (gl_WorkGroupID)).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) / _GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))).x) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (true ? _GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z))), 0u | (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), clamp(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) - 0u))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) / _GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))).x) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (true ? _GLF_IDENTITY(min((gl_WorkGroupID.x) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), uint(uint(uint(uvec4(1u, 1u, 0u, 0u)))))), (gl_WorkGroupID.x) / 1u), (false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z))), 0u | (_GLF_IDENTITY(min((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) / 1u, (gl_WorkGroupID.x) / 1u), (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), clamp(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x))) / 1u, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u)))))) - 0u))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).x) / _GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base))).x) / 1u, _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, _GLF_IDENTITY((gl_WorkGroupID.x) / 1u, ((gl_WorkGroupID.x) / 1u) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), (true ? _GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z), min(_GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z), _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z))))), 0u | (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))), clamp(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min(_GLF_IDENTITY((gl_WorkGroupID.x) / 1u, max((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u)), (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) - 0u))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x) / _GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base)), uvec3(uvec3((true ? gl_WorkGroupID : _GLF_FUZZED(GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_base)))))).x) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), (true ? _GLF_IDENTITY(min((gl_WorkGroupID.x) / _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, 1u, 0u, 0u)), uint(uint(uint(uvec4(1u, 1u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))))), (gl_WorkGroupID.x) / 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u)), 0u | ((false ? _GLF_FUZZED(61694u) : min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u))))))) : _GLF_FUZZED(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z))), 0u | (_GLF_IDENTITY(min((_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) >> 0u)) / 1u, (gl_WorkGroupID.x) / 1u), (_GLF_IDENTITY(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), clamp(min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((gl_WorkGroupID.x) / 1u, (gl_WorkGroupID.x) / 1u), min((_GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x))) / 1u, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) * 1u), 1u)))))) - 0u))))) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)))) / 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) * 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)), (false ? _GLF_FUZZED(20751u) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u))), (_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x))) / 1u))))) ^ 0u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)), 0u) | (gl_WorkGroupID)).x, (gl_WorkGroupID.x) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)) / 1u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)) / 1u), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)) / 1u), 0u, 0u, 0u))) | (uint(uvec4(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u)) / 1u), 0u, 0u, 0u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(20751u) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), (_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ 0u)) / 1u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(20751u, max(_GLF_IDENTITY(20751u, uint(uint(_GLF_IDENTITY(20751u, (_GLF_IDENTITY(20751u, (20751u) | (20751u))) | 0u)))), 20751u))) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u), (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u), 0u ^ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u))))))))), ~ (~ (false ? _GLF_FUZZED(20751u) : ~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u)), min((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u)), (true ? (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u)) : _GLF_FUZZED(subgroup_id)))))))) : _GLF_FUZZED(subgroup_id)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(false ? _GLF_FUZZED(20751u) : ~ (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)), ((_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u))) - (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u)), ~ (~ (false ? _GLF_FUZZED(20751u) : ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u))))) : _GLF_FUZZED(subgroup_id)), uint(uvec4((true ? _GLF_IDENTITY(false ? _GLF_FUZZED(20751u) : ~ (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))), _GLF_IDENTITY((gl_WorkGroupID.x), ((gl_WorkGroupID.x)) << 0u) ^ 0u)) / 1u)), ~ (~ (false ? _GLF_FUZZED(20751u) : ~ _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) - 0u)), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u)), 0u ^ ((_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) << uvec3(0u, 0u, 0u), ((gl_WorkGroupID) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), 1u))).x, (gl_WorkGroupID.x) ^ 0u)) / 1u))))))) : _GLF_FUZZED(subgroup_id)), (0u & 141975u), 1u, 1u)))) | 0u))))) ^ 0u)))));
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.xyz.z = GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || false))) && true)), (! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) || false))) && true))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.xyz.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.y = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-958.358), clamp(_GLF_FUZZED(-958.358), _GLF_FUZZED(-958.358), _GLF_FUZZED(-958.358))), clamp(_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-958.358), 1.0 * (true ? 1.0 : _GLF_FUZZED(-958.358))), true ? 1.0 : _GLF_FUZZED(-958.358), _GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-958.358), (true ? 1.0 : _GLF_FUZZED(-958.358)) * 1.0))))), 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy.y = _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), _GLF_IDENTITY((~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (_GLF_IDENTITY(~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), min(_GLF_IDENTITY((~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (_GLF_IDENTITY(~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), max((~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (_GLF_IDENTITY(~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (_GLF_IDENTITY(~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))))), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (_GLF_IDENTITY(~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id), (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)) | (~ (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id))))))))).xy.y;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z * GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy.y, 1u * (GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy), uvec2(uvec3(_GLF_IDENTITY(~ (GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy), uvec2(0u, 0u) | (~ (GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy))), 1u))))).y));
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.w = _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u);
 GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.xyz.y = _GLF_IDENTITY(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.w, clamp(GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.w, GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.w, GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.w));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base.w = GLF_merged2_0_3_71_3_1_14GLF_merged3_0_1_13_1_1_14_2_1_12num_workgroupworkgroup_baseworkgroup_idworkgroup_base.xyz.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.z = _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base, (true ? _GLF_IDENTITY(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base, (true ? GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base : _GLF_FUZZED(uvec4(190162u, 106209u, 72719u, 103796u)))) : _GLF_FUZZED(GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base))).w;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy.x = _GLF_IDENTITY(GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.z, (1u & 1u) * (GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.z));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.x * GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.w, uint(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.x * GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.w, (GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.x * GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.w) | 0u), 1u, 0u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.y = subgroup_base;
 uint virtual_gid = GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy.x + GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.y + GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.z;
 GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x = virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((5.6 + 6.3))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.w = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, clamp(_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, (false ? _GLF_FUZZED(subgroup_base) : GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x)), GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x, GLF_merged3_0_1_11_1_1_12_2_1_14virtual_gidworkgroup_idworkgroup_size.x));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z = GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base.z = GLF_merged4_0_1_11_1_1_13_2_1_11_3_1_12subgroup_idsubgroup_sizevirtual_gidworkgroup_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x = GLF_merged3_0_2_51_2_1_11_3_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idvirtual_gidworkgroup_base.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.xyz.xy.x + GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.y + ((GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.z + 1) % GLF_merged2_0_3_90_3_1_13GLF_merged2_0_2_51_2_1_14GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idworkgroup_basesubgroup_size.w);
 _GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, (GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid) >> 0u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, (GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid) >> 0u)) ^ 0u), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid, (GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w = next_virtual_gid) >> 0u)) ^ 0u))))) << 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w), (~ (GLF_merged2_0_3_78_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idnext_virtual_gid.w)) << 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), _GLF_IDENTITY(max(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), _GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), (true ? uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), max(max(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), _GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), (true ? uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), _GLF_IDENTITY(max(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), _GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), (true ? uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))), uvec2(0u, 0u) | (max(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), _GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), (true ? uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id)))))))))), ~ (~ (uint(_GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), max(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), _GLF_IDENTITY(uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u), (true ? uvec2(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.xy.x, 0u) : _GLF_FUZZED(GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id))))))))))], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread.w = read;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid, (GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid) / uvec4(1u, 1u, 1u, 1u)).xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid, (GLF_merged2_0_3_78_3_1_11GLF_merged3_0_1_16_1_1_13_2_1_17next_virtual_gidsubgroup_basesubgroup_local_idvirtual_gid) / uvec4(1u, 1u, 1u, 1u)).xyz.x) ^ 0u)], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 + (_GLF_IDENTITY((1), _GLF_IDENTITY((false ? _GLF_FUZZED(4486) : (1)), int(ivec3((false ? _GLF_FUZZED(4486) : (1)), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 0))))))) | ((1)))), 1), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(82994) : max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) | (1)), 1))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(checker[_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id, (GLF_merged2_0_2_48_2_2_51GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_idGLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)).xy.x], GLF_merged3_0_2_51_2_1_13_3_1_4GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroupread.w, 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (64) | (64)))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
