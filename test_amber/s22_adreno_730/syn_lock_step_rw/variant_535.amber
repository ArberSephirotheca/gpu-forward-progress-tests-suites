#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 uvec4 _f0;
 ivec4 _f1;
 vec4 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 uvec2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 vec4 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 vec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_9 {
 float _f0;
 mat2x4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 mat4 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 bool _f1;
 mat3x2 _f2;
 uint _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 bool _f1;
 mat4x3 _f2;
 mat4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 mat2 _f1;
 uvec3 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 ivec3 _f1;
 mat2 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat2 _f1;
 uvec2 _f2;
 mat4x2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat2x4 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 bool _f4;
 mat3 _f5;
 uint _f6;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat4x2 _f1;
 _GLF_struct_0 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_16 {
 uint workgroup_id;
 _GLF_struct_4 _f0;
 uvec3 _f1;
 uint _f2;
 uvec2 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_15 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(79594u, 103471u, 37400u))))), uvec3(0u, 0u, 0u) + (~ (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(79594u, 103471u, 37400u)))))))))), ~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(79594u, 103471u, 37400u))))), uvec3(0u, 0u, 0u) + (~ (_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(79594u, 103471u, 37400u))))))))))))))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (gl_WorkGroupID)), max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(153599u, 67938u, 82247u)) : _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(3048u, 111217u, 187151u)) : gl_WorkGroupID)), gl_WorkGroupID))) - uvec3(0u, 0u, 0u)))).x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))), min((_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID))))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), max(gl_WorkGroupID, gl_WorkGroupID))) - uvec3(0u, 0u, 0u)).x)))))), _GLF_struct_4(mat2x3(1.0), mat4x2(1.0), _GLF_struct_0(bvec4(true), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) / 1)), (ivec2(_GLF_IDENTITY(1, (1) / 1))) | (ivec2(_GLF_IDENTITY(1, (1) / 1)))), mat3x2(1.0), true, mat3(1.0), 1u), _GLF_struct_1(ivec4(1), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(47.22, 705.124, _GLF_IDENTITY(4605.6030, (4605.6030) / 1.0), -40.67)) : mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(47.22, 705.124, 4605.6030, -40.67)) : mat2(1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat2x4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(47.22, 705.124, _GLF_IDENTITY(4605.6030, (4605.6030) / 1.0), -40.67)) : mat2(1.0)) : _GLF_FUZZED(mat2x4(-8.4, 75.77, 857.406, -28.81, 0.1, 4807.8474, _GLF_IDENTITY(6.2, min(6.2, 6.2)), -5545.7004)))))))), uvec2(1u), mat4x2(1.0), uvec3(1u)), _GLF_struct_2(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(degrees(2641.8056))))), mat2(1.0)), _GLF_struct_3(bvec2(true), ivec3(1), mat2(1.0), bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), uvec3(1u), 1u, uvec2(1u), _GLF_struct_8(_GLF_struct_5(mat2(1.0), true, mat4x3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(1.0), float(1.0))), _GLF_IDENTITY(float(1.0), 0.0 + (_GLF_IDENTITY(float(1.0), 1.0 * (float(1.0))))), float(1.0))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-0.5, clamp(-0.5, -0.5, -0.5))))))) / 1.0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0))), (clamp(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)), min((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_IDENTITY(_GLF_FUZZED(-6.6), (_GLF_FUZZED(-6.6)) - 0.0), _GLF_FUZZED(-6.6))) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))) : _GLF_FUZZED(-0.5))))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5)))), 1.0 * (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))))) / 1.0)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)) ? _GLF_IDENTITY(_GLF_FUZZED(-6.6), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-6.6), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0)), (float(mat4(_GLF_FUZZED(-6.6), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0))) - 0.0)) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(float(1.0), (float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-0.5))))) / 1.0)))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))), float(_GLF_FUZZED(6.9)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (bool(false)))))), mat4(1.0), vec2(1.0)), mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u))), clamp(uvec3(1u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(_GLF_IDENTITY(1u, (1u) - 0u), 1u)) | uvec2(0u, 0u)))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(_GLF_IDENTITY(1u, (1u) - 0u), 1u)) | uvec2(0u, 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(1u))), _GLF_struct_6(ivec2(1), true, mat3x2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(3.2) : abs(0.0))), (_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)))))) - 0.0)) - 0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))), (float(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(3.2) : abs(0.0))), (_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? abs(0.0) : _GLF_FUZZED(-7438.5395))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8118.2801)), float(1.0), bool(true))), 1.0, 1.0)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(abs(0.0), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))), float(mat2x4(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max(_GLF_IDENTITY((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), max((true ? abs(0.0) : _GLF_FUZZED(-7438.5395)), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395)))), (true ? abs(0.0) : _GLF_FUZZED(-7438.5395))))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0))))) - sqrt(0.0)))))) - 0.0)) - 0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))))) / 1.0)))), 1u, mat2x3(1.0)), _GLF_struct_7(mat2x3(1.0), mat4(1.0), bvec2(true)), bvec2(true)), _GLF_struct_11(_GLF_struct_9(1.0, mat2x4(1.0), mat3(1.0)), _GLF_struct_10(bvec2(true), vec4(1.0), mat2x3(1.0), ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (false ? _GLF_FUZZED(vec3(-915.659, -5.2, 797.029)) : _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), vec3(1.0), vec3(1.0))))), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0), vec3(mat2x3(vec3(1.0), 0.0, 0.0, 0.0))))), ivec3(1))), _GLF_struct_15(_GLF_struct_12(mat4x3(1.0), uvec2(1u), mat3x2(1.0)), _GLF_struct_13(mat2x4(1.0), ivec3(1)), _GLF_struct_14(uvec4(1u), ivec4(1), vec4(1.0), ivec4(_GLF_IDENTITY(1, min(1, 1))))));
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_16.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.9)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0 * (determinant(mat2(0.0, 0.0, 1.0, 0.0)))), sqrt(log(1.0)), log(1.0)), (true ? mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0)), sqrt(log(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4.6) : 1.0)), 1.0)))), log(1.0)) : _GLF_FUZZED(mat4x3(-313.530, -8.7, 6.5, -6.8, 4999.2461, -4.3, -59.68, 2.2, 32.35, 576.958, -5.7, -715.744)))))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-72.88)), bool(false)))))), (mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.9)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0))).x), abs(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(log(1.0)), log(1.0)), (true ? mat4x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(35.76))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, cos(0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0)), mat2x4(mat2x4(mat4(1.0) * (mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0))))))), float(mat4x2(float(_GLF_IDENTITY(mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0)), mat2x4(mat2x4(mat4(1.0) * (mat2x4(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, 0.0), vec2(1.0, 0.0))) - 0.0)), sqrt(0.0), 1.0, 1.0, exp(0.0), 0.0, 1.0))))))), 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 1.0)))))), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0)), sqrt(log(1.0)), log(1.0)) : _GLF_FUZZED(mat4x3(-313.530, -8.7, 6.5, -6.8, 4999.2461, -4.3, -59.68, 2.2, 32.35, 576.958, -5.7, -715.744)))))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.9)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(log(1.0)), log(1.0)), (true ? mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(max(-97.90, 3336.2209)) : 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0)), sqrt(log(1.0)), log(1.0)) : _GLF_FUZZED(mat4x3(-313.530, -8.7, 6.5, -6.8, 4999.2461, -4.3, -59.68, 2.2, 32.35, 576.958, -5.7, -715.744)))))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0), (mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), float(_GLF_FUZZED(8.9)), bool(false))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), determinant(mat2(0.0, 0.0, 1.0, 0.0)), sqrt(log(1.0)), log(1.0)), (true ? mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), determinant(mat2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(max(-97.90, 3336.2209)) : 0.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), 1.0, 0.0)), sqrt(log(1.0)), log(1.0)) : _GLF_FUZZED(mat4x3(-313.530, -8.7, 6.5, -6.8, 4999.2461, -4.3, -59.68, 2.2, 32.35, 576.958, -5.7, -715.744)))))).x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, round(length(normalize(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-9.0)), float(injectionSwitch[1]), bool(true))))).y), true)), bvec2(bvec4(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false, true)))))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bvec2(bvec4(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true)), false, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(58695) : 1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_FUZZED(-87802))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(7, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? 7 : _GLF_FUZZED(-24156))) : _GLF_FUZZED(-87802))))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), 1))))), (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_IDENTITY(_GLF_FUZZED(-87802), min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)))))), max(int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), 1))))), (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_IDENTITY(_GLF_FUZZED(-87802), min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)))))), int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), 1), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), 1))))), (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_IDENTITY(_GLF_FUZZED(-87802), min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)))))))), clamp(int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_IDENTITY(_GLF_FUZZED(-87802), _GLF_IDENTITY(min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)), ~ (~ (_GLF_IDENTITY(min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)), max(min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)), min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802))))))))))), int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-87802, int(ivec4(-87802, 0, 0, _GLF_IDENTITY(1, min(1, 1)))))), min(_GLF_FUZZED(-87802), _GLF_FUZZED(-87802)))))), int(_GLF_IDENTITY(7, (true ? _GLF_IDENTITY(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) + 0)) + 0), (true ? 7 : _GLF_FUZZED(-24156))) : _GLF_IDENTITY(_GLF_FUZZED(-87802), min(_GLF_FUZZED(-87802), _GLF_FUZZED(_GLF_IDENTITY(-87802, max(-87802, -87802)))))))))))) >> 0)) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   do
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << 0u))], 4, 64, 2), ~ (~ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), (~ (~ (virtual_gid))) << 0u))], 4, 64, 2))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(bool(bvec3(_injected_loop_counter > 0, true, false)), ! (! (bool(bvec3(_injected_loop_counter > 0, true, false))))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter != 1)), true && _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))))))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1)))))))))), ((_GLF_IDENTITY(_injected_loop_counter != 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))))))), ! (! (! (_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((_injected_loop_counter) ^ 0, max(_GLF_IDENTITY((_injected_loop_counter) ^ 0, max((_injected_loop_counter) ^ 0, (_injected_loop_counter) ^ 0)), (_injected_loop_counter) ^ 0))) != 1))))))))))) || false))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false)))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) * 1.0) > injectionSwitch.y))))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   subgroupBarrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, uint(uvec4(read, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u))), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
