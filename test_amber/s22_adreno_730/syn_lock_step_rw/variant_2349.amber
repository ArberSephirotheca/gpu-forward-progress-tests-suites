#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_44 {
 bvec3 _f0;
 vec2 _f1;
 mat2x3 _f2;
 mat4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_45 {
 _GLF_struct_44 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_42 {
 vec3 _f0;
} ;

struct _GLF_struct_43 {
 uint workgroup_id;
 _GLF_struct_42 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_41 {
 vec3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_39 {
 mat2x4 _f0;
 vec3 _f1;
 mat2x3 _f2;
 bvec3 _f3;
 int _f4;
 mat4x2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_40 {
 mat3x4 _f0;
 vec3 _f1;
 _GLF_struct_39 _f2;
} ;

struct _GLF_struct_37 {
 mat2 _f0;
 mat4x3 _f1;
 uint _f2;
 mat4x3 _f3;
 mat4x2 _f4;
 uvec4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_36 {
 uvec4 _f0;
 float _f1;
 bvec4 _f2;
 ivec4 _f3;
 mat4x3 _f4;
 ivec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_36 _f0;
 bool _f1;
 _GLF_struct_37 _f2;
} ;

struct _GLF_struct_34 {
 mat3x4 _f0;
 uint _f1;
 bool _f2;
 uvec2 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_33 {
 vec3 _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_35 {
 _GLF_struct_33 _f0;
 float _f1;
 ivec3 _f2;
 _GLF_struct_34 _f3;
} ;

struct _GLF_struct_46 {
 _GLF_struct_35 _f0;
 _GLF_struct_38 _f1;
 _GLF_struct_40 _f2;
 _GLF_struct_41 _f3;
 _GLF_struct_43 _f4;
 _GLF_struct_45 _f5;
} ;

struct _GLF_struct_31 {
 vec4 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_29 {
 ivec2 _f0;
 uvec3 _f1;
 bool _f2;
 ivec2 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
 bvec2 _f1;
 int _f2;
 ivec2 _f3;
 uint _f4;
 mat3 _f5;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 ivec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_26 {
 ivec3 _f0;
 ivec3 _f1;
 ivec4 _f2;
 mat2 _f3;
 uint _f4;
} ;

struct _GLF_struct_30 {
 mat4x3 _f0;
 mat4x2 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 _GLF_struct_28 _f4;
 mat2 _f5;
 _GLF_struct_29 _f6;
} ;

struct _GLF_struct_24 {
 uint subgroup_base;
 uvec3 _f0;
 mat4 _f1;
 mat2x3 _f2;
 uint _f3;
 mat4 _f4;
} ;

struct _GLF_struct_25 {
 bool _f0;
 bvec3 _f1;
 ivec2 _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
} ;

struct _GLF_struct_21 {
 bool _f0;
} ;

struct _GLF_struct_20 {
 mat2x4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_18 {
 uint _f0;
 vec2 _f1;
 mat4x3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
} ;

struct _GLF_struct_23 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
 _GLF_struct_22 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 mat4x3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_13 {
 ivec3 _f0;
 uvec3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 bvec4 _f1;
 vec3 _f2;
 int _f3;
 mat2x3 _f4;
 float _f5;
} ;

struct _GLF_struct_11 {
 int _f0;
 bvec2 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_11 _f0;
 bvec4 _f1;
 bool _f2;
 bvec2 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 ivec3 _f1;
 mat4x3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 vec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_32 {
 _GLF_struct_10 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_25 _f4;
 _GLF_struct_30 _f5;
 _GLF_struct_31 _f6;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat3x4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 ivec2 _f1;
 mat3 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_4 {
 mat4 _f0;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 mat3x2 _f1;
 mat2 _f2;
 ivec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 vec4 _f3;
 float _f4;
 ivec3 _f5;
 float _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 mat4x2 _f1;
 _GLF_struct_2 _f2;
 ivec3 _f3;
 _GLF_struct_3 _f4;
 ivec2 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
 _GLF_struct_0 _f1;
 vec2 _f2;
 _GLF_struct_5 _f3;
 bvec4 _f4;
 uint subgroup_size;
 mat3 _f5;
 _GLF_struct_7 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec3(bool(bool(false)), true, false)), bool(bool(bool(bvec3(bool(bool(false)), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.4), _GLF_FUZZED(205.283)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(954.790)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), false, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(830.869)), float(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true))))), bool(true)))))), max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(830.869)), float(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true))))), bool(true)))))), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true)))), mix(float(_GLF_FUZZED(830.869)), float(clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED(-6.5)), float(injectionSwitch.x), bool(true))))), bool(true)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9056.8808), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat4x2((injectionSwitch)[0], 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat4x2((injectionSwitch)[0], 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))), _GLF_FUZZED(vec4(21.14, 44.54, -37.68, -3938.7198).r)), bvec2(true, false))).y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.z = subgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(false, false, false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(ivec3(1), _GLF_struct_0(mat3x2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(23.09))))), vec2(1.0), _GLF_struct_5(_GLF_struct_1(vec2(1.0), mat4x3(1.0), mat3x2(1.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3.3) : 1.0))), 1.0, ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(82438)))), 1.0), mat4x2(1.0), _GLF_struct_2(ivec4(1), mat3x2(1.0), mat2(1.0), ivec2(1), ivec4(1)), ivec3(1), _GLF_struct_3(mat3x2(1.0)), ivec2(1), _GLF_struct_4(_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.2) : 1.0)), 1.0)))))))))), bvec4(true), gl_SubgroupSize, mat3(1.0), _GLF_struct_7(bvec2(true), ivec2(1), mat3(1.0), _GLF_struct_6(1, mat3x4(1.0), ivec3(1))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY((uvec3(0u, 0u, 0u)), ((uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 0.0)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (! (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))), true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), true, false)))), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))), true, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - length(vec4(0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), float(_GLF_FUZZED(-626.279)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0)), mat4(1.0) * (mat3x4(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), (abs(1.0)) / 1.0)) / 1.0), 0.0, 0.0, 0.0, 0.0, sin(0.0)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true)))), (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, true))))) || false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) / 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0)))), (true ? float(_GLF_IDENTITY(mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0), mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat2x3((injectionSwitch)[1], 1.0, 0.0, 0.0, 1.0, 1.0)))) : _GLF_FUZZED(-0.0))))), vec2(_GLF_FUZZED(561.810), _GLF_FUZZED(6111.0101)), bvec2(false, false))).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_46 _GLF_struct_replacement_46 = _GLF_struct_46(_GLF_struct_35(_GLF_struct_33(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mix(vec3((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[0], _GLF_FUZZED(-534.263), _GLF_FUZZED((- -1.4))), vec3(_GLF_FUZZED(-8.9), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[1], _GLF_IDENTITY(_GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[2], ((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[2]) / 1.0), (false ? _GLF_FUZZED(5.2) : _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[2], ((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[2]) / 1.0)))), bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true, true))), mix(vec3(_GLF_FUZZED(48.86), _GLF_FUZZED(-19.63), _GLF_FUZZED(-7.6)), vec3((vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(30.58)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))[0], (vec3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-2865.4894), 0.0 + (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-2865.4894), (true ? 1.0 : _GLF_FUZZED(-2865.4894)) / 1.0)))))))))))[1], (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[2]), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), uvec2(1u), mat2(1.0)), 1.0, ivec3(1), _GLF_struct_34(mat3x4(1.0), 1u, true, uvec2(1u), ivec2(1), mat2x4(1.0), vec3(1.0))), _GLF_struct_38(_GLF_struct_36(uvec4(1u), 1.0, bvec4(true), ivec4(1), mat4x3(1.0), ivec3(1), mat4x2(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, length(0.0), tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-26.82)), float(1.0), bool(true))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 1.0))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)), bool(bvec4(bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)), false, false, false)))))) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) || false)) || false))), _GLF_struct_37(mat2(1.0), mat4x3(1.0), 1u, mat4x3(1.0), mat4x2(1.0), uvec4(1u), _GLF_IDENTITY(mat3(1.0), (true ? _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)) : _GLF_FUZZED(mat3(-874.375, 3.5, -54.27, _GLF_IDENTITY(8682.0211, max(_GLF_IDENTITY(8682.0211, (8682.0211) - 0.0), 8682.0211)), 0.4, 4.5, 1913.5018, _GLF_IDENTITY(917.342, max(_GLF_IDENTITY(917.342, 1.0 * (917.342)), 917.342)), 8300.8142)))))), _GLF_struct_40(mat3x4(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))).x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((367.722 * -6709.8531), ((367.722 * -6709.8531)) + 0.0)) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) - 0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), mix(float((1.0)), float(_GLF_FUZZED(-5272.5066)), bool(false))) / 1.0)))))), vec3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.0)), float(1.0), bool(true))), 1.0)) : _GLF_FUZZED(-521.302)))), _GLF_struct_39(mat2x4(1.0), vec3(1.0), mat2x3(1.0), bvec3(true), 1, mat4x2(1.0), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true))), bvec2(bvec2(bvec2(bvec2(bvec2(true))))))))), _GLF_struct_41(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.3) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mat3x2(1.0)), _GLF_struct_43(gl_WorkGroupID.x, _GLF_struct_42(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0, abs(cos(0.0)), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(transpose(transpose(mat4(1.0, abs(cos(0.0)), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (transpose(transpose(_GLF_IDENTITY(mat4(1.0, abs(cos(0.0)), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0) + (mat4(1.0, abs(cos(0.0)), sin(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), (mat4(1.0, abs(cos(0.0)), sin(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-23.20))), _GLF_ZERO(0.0, injectionSwitch.x))) * mat4(1.0)))))), uvec4(1u)), _GLF_struct_45(_GLF_struct_44(bvec3(true), vec2(1.0), mat2x3(1.0), mat4(1.0), ivec4(1)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9.7)), bool(false))), 1.0)), max(1.0, 1.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(exp(0.0), 0.0)), dot(vec2(0.0, 1.0), vec2(exp(0.0), 0.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / exp(0.0))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, log(1.0)), transpose(transpose(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, cos(0.0), sin(0.0), 1.0, 0.0, 0.0, 1.0, log(1.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_46._f4.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), mix(vec2(_GLF_FUZZED(-9.1), (vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))[1]), vec2((vec2(mat4x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))[0], _GLF_FUZZED(-226.844)), bvec2(true, false)))), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(_GLF_struct_10(_GLF_struct_9(vec3(1.0), ivec3(1), mat4x3(1.0), mat2(1.0)), vec3(1.0), mat2x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_14(_GLF_struct_11(1, _GLF_IDENTITY(bvec2(true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), false, true)), true, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mat3x4(1.0), mat4x3(1.0), bvec2(true)), bvec4(true), true, bvec2(true), _GLF_struct_12(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) | 0u)) | (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))))), bvec4(true), vec3(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), 1, mat2x3(1.0), 1.0), _GLF_struct_13(ivec3(1), uvec3(1u), uvec4(1u)), ivec3(1)), _GLF_struct_16(mat3x4(1.0), _GLF_struct_15(ivec3(1), mat4x3(1.0), bvec4(true))), _GLF_struct_23(_GLF_struct_17(mat2x3(1.0)), _GLF_struct_18(1u, _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-3666.7578), _GLF_FUZZED(-573.475)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))), mix(vec2(_GLF_FUZZED((-9.0 / -987.099)), _GLF_FUZZED((94.56))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))))[0], max((_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))))[0])), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))))[1]), bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true)), clamp(mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true)), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true)), _GLF_IDENTITY(mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true)), mix(vec2((mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true)))[0], _GLF_FUZZED(3.5)), vec2(_GLF_FUZZED(523.505), (mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true)))[1]), bvec2(false, true)))))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))), mix(vec2(_GLF_FUZZED((-9.0 / -987.099)), _GLF_FUZZED((_GLF_IDENTITY(94.56, clamp(94.56, 94.56, 94.56))))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(622.173)), float(1.0), bool(true))), 1.0, 1.0)), 1.0))))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) - 0)))], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(_GLF_IDENTITY(1.0, float(float(1.0)))))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), clamp(vec2(1.0), vec2(1.0), vec2(1.0))))[0], ((vec2(1.0))[0]) + 0.0))), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), max(_GLF_IDENTITY((vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), min((vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), (vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], _GLF_IDENTITY((false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]), (true ? (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]) : _GLF_FUZZED(15.45))))))))[0], max((_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))))[0], (_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-914.790), _GLF_FUZZED(-2.6)), vec2((vec2(1.0))[0], (vec2(1.0))[1]), bvec2(true, true))))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(788.573), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1])), (_GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))) / 1.0)))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-804.885))), 1.0)), 1.0, 0.0, 1.0)))))[1]))))))[0])), (_GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], (_GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 | 0), 0)), (int(ivec3(0, (0 | 0), 0))) << 0))], max((vec2(1.0))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 | 0), 0)), (int(ivec3(0, (0 | 0), 0))) << 0))], (vec2(1.0))[_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, (0 | 0), 0)), (int(ivec3(0, (0 | 0), 0))) << 0))]))) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), clamp(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1])), (true ? _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1])) : _GLF_FUZZED(round(-96.80))))), mix(vec2((vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec3(19.73, -72.89, -7174.1719).x)), float(1.0), bool(true)))))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[0], _GLF_FUZZED(2.1)), vec2(_GLF_IDENTITY(_GLF_FUZZED(788.573), (false ? _GLF_FUZZED(vec3(-32.16, 76.16, -6.9)[2]) : _GLF_FUZZED(788.573))), (vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[1], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))[1]), bvec2(false, true))), vec2(_GLF_IDENTITY((vec2(1.0))[0], ((vec2(1.0))[0]) + 0.0), _GLF_IDENTITY((vec2(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(96918)))) / 1)], (false ? _GLF_FUZZED(-4288.6610) : (vec2(1.0))[1]))))))[1]), bvec2(true, true)))) / abs(vec2(1.0, 1.0))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), mat4x3(1.0), bvec2(true)), _GLF_struct_19(mat2x3(1.0), mat3x2(1.0)), _GLF_struct_20(mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2x4(1.0)), _GLF_struct_21(true), _GLF_struct_22(mat2x4(1.0)), mat3x4(1.0)), _GLF_struct_25(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), bvec3(true), ivec2(1), _GLF_struct_24(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.z * _GLF_struct_replacement_8.subgroup_size, uvec3(1u), mat4(1.0), mat2x3(1.0), 1u, mat4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0)))))))), _GLF_struct_30(mat4x3(1.0), mat4x2(1.0), _GLF_struct_26(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), max(ivec3(1), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec4(ivec3(1), 1)), (ivec3(ivec4(ivec3(1), 1))) | ivec3(0, 0, 0))))), min(ivec3(1), ivec3(1))), ivec4(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(-32052)))))), mat2(1.0), _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY((1u), ((1u)) - 0u))), _GLF_struct_27(vec4(1.0), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))) ^ ivec4(0, 0, 0, 0)), mat3(1.0)), _GLF_struct_28(mat3x2(1.0), bvec2(true), 1, ivec2(1), 1u, mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))) || false) ? _GLF_FUZZED(2.7) : 1.0)))), mat2(1.0), _GLF_struct_29(ivec2(1), uvec3(1u), true, ivec2(1), ivec3(1))), _GLF_struct_31(vec4(1.0), mat2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.y = _GLF_struct_replacement_32._f4._f3.subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.y + subgroup_local_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))) ^ (workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.y + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.w = virtual_gid, (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.w = virtual_gid) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << 0u))) ^ (GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.w = virtual_gid));
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.y + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_size, (_GLF_struct_replacement_8.subgroup_size) | (_GLF_struct_replacement_8.subgroup_size))) ^ 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.w], 4, 64, _GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, clamp(2, 2, 2)), 2, 2)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.x = read;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-7.9)), bool(false))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), 0 + (_GLF_IDENTITY(64, (64) ^ 0))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, false)), bool(bvec2(bool(bvec3((! (false)), true, false)), false))))))))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 atomicStore(checker[GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.w], GLF_merged4_0_1_4_1_1_13_2_1_11_3_1_11readsubgroup_basesubgroup_idvirtual_gid.x, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, 4)), _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, max(64, 64)))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), float(_GLF_FUZZED(993.609)), bool(false)))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), float(_GLF_FUZZED(993.609)), bool(false)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))), float(_GLF_FUZZED(993.609)), bool(false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), (_GLF_IDENTITY(! (! (bool(false))), ! (! (! (! (bool(false))))))) || false)))) || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
