#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec4(-72.35, 33.18, 3.8, -7969.2824).st))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true)))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(! (false))))), true && (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec4((false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(! (false)), (bool(! (false))) && true))))))))), bool(bvec2((! (_GLF_IDENTITY(false, (false) || false))), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false)))))), false || (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(116465u) : 0u)), 0u), (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(116465u) : 0u)), 0u), (false ? _GLF_FUZZED(uvec3(41449u, 20563u, 51585u)) : (gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(116465u) : 0u)), 0u)))) | (_GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(116465u) : 0u)), 0u), ~ (~ ((gl_NumWorkGroups) ^ uvec3(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(116465u) : 0u)), 0u))))))), gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))))).x, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups), clamp(min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups), min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups), _GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups)) | uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u))))), gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u)), gl_NumWorkGroups)), gl_NumWorkGroups), (min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)), gl_NumWorkGroups)), gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))))).x, _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u))), gl_NumWorkGroups)), gl_NumWorkGroups)).x));
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = num_workgroup;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0))), 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) * 1.0), sin(0.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3458.1106)), bool(false)))))))))), (round(length(normalize(1.0)))) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3458.1106)), bool(false)))))))))), (round(length(normalize(1.0)))) * 1.0), mix(float(_GLF_FUZZED(-3927.0261)), float(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3458.1106)), bool(false)))))))))), (round(length(normalize(1.0)))) * 1.0)), bool(true))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3458.1106)), bool(false)))))))))), (round(length(normalize(1.0)))) * 1.0))), sin(0.0))))) + 0.0), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, determinant(mat4(1.0, 0.0, log(1.0), 0.0, 1.0, round(length(normalize(1.0))), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-473.075)), bool(false))), 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), max(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0))), 1.0, 1.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0))), (_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (_GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (round(length(normalize(1.0)))))))) * 1.0), sin(0.0))))) + 0.0)))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), injectionSwitch)).y, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), sqrt(1.0))), (determinant(mat2(1.0, 0.0, 0.0, sqrt(1.0)))) - sqrt(0.0)), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) * 1.0), max(_GLF_IDENTITY(round(length(normalize(1.0))), (round(length(normalize(1.0)))) * 1.0), _GLF_IDENTITY(round(length(normalize(1.0))), _GLF_IDENTITY((round(length(normalize(1.0)))), (false ? _GLF_FUZZED(66.70) : (round(length(normalize(1.0)))))) * 1.0))), sin(0.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), (_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(5.5)), float(sqrt(1.0)), bool(true)))) * 1.0)), float(_GLF_FUZZED(-65.56)), bool(false)))))) * 1.0))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true))), 1.0 * (_GLF_IDENTITY(normalize(1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.2)), (false ? _GLF_FUZZED(refract(tan(-3470.5320), 2518.2535, -72.15)) : float(_GLF_FUZZED(1.2)))), float(normalize(1.0)), bool(true)))))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, ((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0) / 1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), mix(float(_GLF_FUZZED(float(100095u))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), (false ? _GLF_FUZZED(656.409) : _GLF_FUZZED(-6364.4829)))), bool(true)))), bool(false)))) - 0.0))))), (round(length(normalize(1.0)))) * 1.0), clamp(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true))), 1.0 * (_GLF_IDENTITY(normalize(1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.2)), (false ? _GLF_FUZZED(refract(tan(-3470.5320), 2518.2535, -72.15)) : float(_GLF_FUZZED(1.2)))), float(normalize(1.0)), bool(true)))))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, ((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0) / 1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), mix(float(_GLF_FUZZED(float(100095u))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), (false ? _GLF_FUZZED(656.409) : _GLF_FUZZED(-6364.4829)))), bool(true)))), bool(false)))) - 0.0))))), (round(length(normalize(1.0)))) * 1.0), _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true))), 1.0 * (_GLF_IDENTITY(normalize(1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.2)), (false ? _GLF_FUZZED(refract(tan(-3470.5320), 2518.2535, -72.15)) : float(_GLF_FUZZED(1.2)))), float(normalize(1.0)), bool(true)))))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, ((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0) / 1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), mix(float(_GLF_FUZZED(float(100095u))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), (false ? _GLF_FUZZED(656.409) : _GLF_FUZZED(-6364.4829)))), bool(true)))), bool(false)))) - 0.0))))), (round(length(normalize(1.0)))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true))), 1.0 * (_GLF_IDENTITY(normalize(1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.2)), (false ? _GLF_FUZZED(refract(tan(-3470.5320), 2518.2535, -72.15)) : float(_GLF_FUZZED(1.2)))), float(normalize(1.0)), bool(true)))))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, ((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0) / 1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), mix(float(_GLF_FUZZED(float(100095u))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), (false ? _GLF_FUZZED(656.409) : _GLF_FUZZED(-6364.4829)))), bool(true)))), bool(false)))) - 0.0))))), (round(length(normalize(1.0)))) * 1.0), (_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true))), 1.0 * (_GLF_IDENTITY(normalize(1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(1.2)), (false ? _GLF_FUZZED(refract(tan(-3470.5320), 2518.2535, -72.15)) : float(_GLF_FUZZED(1.2)))), float(normalize(1.0)), bool(true)))))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, clamp((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0, ((_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_FUZZED(-6364.4829)), bool(false)))) - 0.0) / 1.0), (_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(1.2)), float(normalize(1.0)), bool(true)))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), mix(float(_GLF_FUZZED(float(100095u))), float(_GLF_IDENTITY(_GLF_FUZZED(-6364.4829), (false ? _GLF_FUZZED(656.409) : _GLF_FUZZED(-6364.4829)))), bool(true)))), bool(false)))) - 0.0))))), (round(length(normalize(1.0)))) * 1.0)) / 1.0))), sin(0.0))))) + 0.0)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) << 0)], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8987.9750)), vec2(_GLF_FUZZED(-5.8), (injectionSwitch)[1]), bvec2(false, true)))[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - sqrt(vec2(0.0, 0.0))), vec2(1.0, 1.0), vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))) * mat2(1.0), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))) * mat2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))) * mat2(1.0)))))).y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))) && true)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 1.0)))))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(4.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (! (_GLF_IDENTITY(false, ! (! (false))))), true))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))), ! (! (! ((_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))) && _GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], uint(_GLF_IDENTITY(uvec2(gl_WorkGroupID[0], 0u), clamp(uvec2(gl_WorkGroupID[0], 0u), uvec2(gl_WorkGroupID[0], 0u), uvec2(gl_WorkGroupID[0], 0u))))), gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y * workgroup_id, uint(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y, ~ (~ (GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y))) * workgroup_id, 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))), (0u << _GLF_IDENTITY(uint(2u), uint(2u))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | (0u << _GLF_IDENTITY(uint(2u), uint(2u))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0 + (injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), int(ivec4(_GLF_IDENTITY(1, (1) / 1), (0 ^ 1), 1, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))) - 0))))) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), clamp(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), (subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) << 0u)))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (true ? _GLF_IDENTITY(1, int(int(1))) : _GLF_FUZZED(-35966))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (true ? _GLF_IDENTITY(1, int(int(1))) : _GLF_FUZZED(-35966))), 0u ^ (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(int(1))), (true ? _GLF_IDENTITY(1, int(int(1))) : _GLF_FUZZED(-35966)))))) << (1u ^ 1u)), subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) << 0))))) % subgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size), _GLF_IDENTITY((true ? _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1 | 1) * (1)), max(_GLF_IDENTITY(1, (1 | 1) * (1)), _GLF_IDENTITY(1, (1 | 1) * (1)))), int(int(_GLF_IDENTITY(1, max(1, 1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size)) * 1u) : _GLF_FUZZED(uvec3(172521u, 74700u, _GLF_IDENTITY(53943u, (53943u) >> (0u << _GLF_IDENTITY(uint(6u), uint(6u))))).r)), 0u | ((true ? _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1 | 1) * (1)), max(_GLF_IDENTITY(1, (1 | 1) * (1)), _GLF_IDENTITY(1, (1 | 1) * _GLF_IDENTITY((1), ((1)) | ((1)))))), int(int(_GLF_IDENTITY(1, max(1, 1)))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size)) * 1u) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(172521u, min(172521u, 172521u)), 74700u, _GLF_IDENTITY(53943u, (53943u) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) >> 0u))).r))))), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1)))))) % subgroup_size)) | (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), max(int(1), int(1)))))) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))))), (uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))))))) ^ 0u))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))))), (uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))))))) ^ 0u))) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))))), (uint(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), 0u | ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))))))) ^ 0u))) % subgroup_size))), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size)), ~ (~ ((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(int(1))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))))) << 0u)) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size) * 1u)))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size)), ~ (~ ((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size))))) | ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1), int(int(1)))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size)), ~ (~ ((((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(int(1), ~ (~ (int(1))))))) % subgroup_size))))) | ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << ((0 >> _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(3), int(3)))))))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size) * 1u)))), (true ? _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size), _GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size)), ~ (~ ((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size))))) | ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size) * 1u)))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))), ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1))))) - 0u) % subgroup_size)), ~ (~ ((((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size))))) | ((_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, int(int(1)))) % subgroup_size) * 1u))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(64609) : 4))), min(min(4, 4), min(4, 4)))))), _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-18813))), 2);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(~ (4), (~ (4)) | (_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))))) >> 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 1 * (4)), ~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)))), (true ? (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) >> 0)))) : _GLF_FUZZED(34616))) - 0), 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
