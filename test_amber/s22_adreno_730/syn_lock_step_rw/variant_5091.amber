#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), (bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))) && true)) && (false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)))) && true)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))) || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), false, true, false)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(1.0), mix(float(_GLF_FUZZED(2.5)), float(_GLF_FUZZED(1.0)), bool(true))), mix(float(_GLF_FUZZED(1.0)), float(_GLF_FUZZED(7302.5429)), bool(false))) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), max(clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))), injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(0u, 0u, 0u)) + (uvec3(gl_NumWorkGroups))), (true ? _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(0u, 0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(0u, 0u, 0u), (uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)), (max(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))) / 1.0)) + 0.0))) - 0.0)) * (0u))) ^ uvec3(0u, 0u, 0u)) | _GLF_IDENTITY((uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3((uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3((uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))) - 0.0)) * (0u))) ^ uvec3(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), 0u)), 0u, 0u)))))))))))) + (uvec3(gl_NumWorkGroups))) : _GLF_FUZZED(uvec3(55881u, 129783u, 196586u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), (false ? _GLF_FUZZED(uvec3(37475u, 80434u, 17593u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), gl_NumWorkGroups)), gl_NumWorkGroups)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])))), min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), _GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), _GLF_IDENTITY((~ (gl_NumWorkGroups)), max((~ (gl_NumWorkGroups)), (~ (gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))))))), (_GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(37475u, 80434u, 17593u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)), gl_NumWorkGroups)), ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(33423u, 186170u, 76744u) * 198469u) & uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups))), min(~ (_GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(33423u, 186170u, 76744u) * 198469u) & uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(33423u, 186170u, 76744u) * 198469u) & uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups))), (~ (_GLF_IDENTITY(gl_NumWorkGroups, ((uvec3(33423u, 186170u, 76744u) * 198469u) & uvec3(0u, 0u, 0u)) ^ (gl_NumWorkGroups)))) * (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))))) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u))))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), _GLF_IDENTITY(uvec3(7u), min(uvec3(7u), uvec3(7u))))))), uvec3(gl_NumWorkGroups)))), (uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) >> uvec3(0u, 0u, 0u)))), clamp(uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), clamp(_GLF_IDENTITY(uvec3(gl_NumWorkGroups), _GLF_IDENTITY((uvec3(gl_NumWorkGroups)), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(gl_NumWorkGroups), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec3(77044u, 6810u, 112477u) + uvec3(46687u, 75495u, 175461u))) : uvec3(gl_NumWorkGroups)))), min((uvec3(gl_NumWorkGroups)), (uvec3(gl_NumWorkGroups)))), (uvec3(gl_NumWorkGroups)))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), uvec3(gl_NumWorkGroups), _GLF_IDENTITY(uvec3(gl_NumWorkGroups), (uvec3(gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))), uvec3(gl_NumWorkGroups))))) - uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (0u)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (~ (0u)))), (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))) | 0u), ~ (_GLF_IDENTITY(0u, ~ (~ (0u)))))))), 0u))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, (false) || false))) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false))) && true)))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, true)), false || (bool(bvec3(true, false, true)))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))))))), ! (! (! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))), true && ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))))))))))))))))), true && _GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))))))), (_GLF_IDENTITY(((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true)))))))), (((! (bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), false)), true, true))))))))) || false)) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))))), (false ? _GLF_FUZZED(mat2(641.377, 2948.5374, -70.27, -9.2)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat3x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(_GLF_IDENTITY(mat2(mat2(1.0)), (mat2(mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))))))))))))).y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, (true) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)), uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))) | (workgroup_size * workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) | 0u)), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) + 0u)) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))), uint(5u))) + 0u)) >> 0u) >> _GLF_IDENTITY(0u, 1u * (0u))))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(workgroup_size, 1u, 0u)), clamp(uint(uvec3(workgroup_size, 1u, 0u)), uint(uvec3(workgroup_size, 1u, 0u)), uint(uvec3(workgroup_size, 1u, 0u))))) * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id)))), workgroup_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, _GLF_IDENTITY(1u, (1u) | (1u))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.87)), float(0.0), bool(true))), injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (workgroup_size * workgroup_id)))), ((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) >> 0u), 5u))), uint(5u))) | (workgroup_size * workgroup_id))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.87)), float(0.0), bool(true))), injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (workgroup_size * workgroup_id)))), ((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) >> 0u), 5u))), uint(5u))) | (workgroup_size * workgroup_id))))) | 0u), uint(uint(_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.87)), float(0.0), bool(true))), injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (workgroup_size * workgroup_id)))), ((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) >> 0u), 5u))), uint(5u))) | (workgroup_size * workgroup_id))))) | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.87)), float(0.0), bool(true))), injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (workgroup_size * workgroup_id)))), ((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) >> 0u), 5u))), uint(5u))) | (workgroup_size * workgroup_id))))) | 0u), (_GLF_IDENTITY((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.87)), float(0.0), bool(true))), injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - _GLF_IDENTITY(0u, (0u) | (0u)))))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))) | (workgroup_size * workgroup_id)))), ((max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id), min((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id), ((0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)) - 0u)))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, _GLF_IDENTITY(5u, (5u) >> 0u), 5u))), uint(5u))) | (workgroup_size * workgroup_id))))) | 0u)) << 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u))), uint(5u))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, uint(uvec4(5u, 0u, 1u, 1u)))))) | (workgroup_size * workgroup_id)))), 0u, 1u), (uvec3(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id))) / 1u))), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)))), 0u, 1u)) ^ uvec3(0u, 0u, 0u))), max(uint(uvec3(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), 1u, 1u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, ~ (~ (5u))) : _GLF_FUZZED(subgroup_local_id)))), uint(5u))) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)), injectionSwitch.x, injectionSwitch.x)))), 1u, 1u))), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, ~ (~ (5u))) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), max(uint(5u), uint(5u)))) - 0u))) | (workgroup_size * workgroup_id))) / 1u), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | _GLF_IDENTITY((workgroup_size * workgroup_id), ~ (~ (_GLF_IDENTITY((workgroup_size * workgroup_id), max((workgroup_size * workgroup_id), (workgroup_size * workgroup_id))))))))), 0u, 1u)), uint(uvec3(~ (max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec4(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-3131.3237)), bool(false)))), float(_GLF_FUZZED(-8.2)), bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))), 1u, _GLF_IDENTITY(1u, min(1u, 1u))))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec2(uint(5u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) >> 0u)), uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_local_id))), uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uint(5u), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u | (uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), uint(_GLF_IDENTITY(uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec2(uint(5u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(1164.6307) : _GLF_ONE(1.0, injectionSwitch.y))))), uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec2(uint(5u), uint(_GLF_ONE(1.0, injectionSwitch.y))))))))), uint(5u))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (workgroup_size * workgroup_id)))), 0u, 1u))))))))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_DEAD(false), true, true)), true, true))))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), false, false, false))))))), false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || _GLF_IDENTITY((_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false)))), true && ((_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-75.39, -8.2)) : injectionSwitch)).x < injectionSwitch.y)), false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, ~ (~ ((subgroup_size) << 0u)))), subgroup_size)), min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size)), (subgroup_id * subgroup_size) << 0u), (true ? subgroup_id * subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-36.06 + 6201.4178))), vec2(_GLF_FUZZED(-9993.0155), (injectionSwitch)[1]), bvec2(false, true)), min(mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-36.06 + 6201.4178))), vec2(_GLF_FUZZED(-9993.0155), (injectionSwitch)[1]), bvec2(false, true)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-36.06 + 6201.4178))), vec2(_GLF_FUZZED(-9993.0155), (injectionSwitch)[1]), bvec2(false, true))))), injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))) + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) ^ 0u), workgroup_base + subgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), uint(uvec2(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(uint(uvec2(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), uint(uvec2(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u)), (uint(uvec2(~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), uint(uvec2(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), 0u))) | 0u)))) ^ _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, ~ (~ (0u))))))), _GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))) + subgroup_base))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && _GLF_IDENTITY(true, (true) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true, false)), true, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))) - 0u), (true ? buf[virtual_gid] : _GLF_FUZZED(_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) / 1u)))), (buf[virtual_gid]) >> 0u), 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-871.572) : injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-871.572) : injectionSwitch.x)) > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-871.572) : injectionSwitch.x)) > injectionSwitch.y)), true))))))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(! (! (bool(bool(false)))), (! (! (bool(bool(false))))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(54.90)), bool(false))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(908.341)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-163.640)), float(mix(float(_GLF_FUZZED(908.341)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) || false), true, false)))))) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(4.0, _GLF_IDENTITY(-84.61, max(-84.61, -84.61)))))).x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) && true)))))))) && true)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) && true)))))))) && true)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) && true)))))))) && true)))))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) && true)))))))) && true)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
