#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base;
 do
  {
   switch(_GLF_SWITCH(0))
    {
     case 75:
     {
     }
     case 0:
     case 35:
     case 79:
     case 87:
     case 2:
     case 56:
     case 33:
     case 1:
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 85:
     mat2x3 _GLF_SWITCH_4_0v[83], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
     case 55:
     for(mat2x4 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v[87]; false; (uvec4(85569u, 176167u, 44333u, 198897u) / GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base))
      {
       {
        vec3(-8.0, -2.7, -3.6);
        _GLF_SWITCH_4_4v;
        ;
        {
         (ivec2(-77090, -25386) % ivec2(28756, 99782));
         bvec3(false, true, true);
        }
        uvec3 _GLF_SWITCH_4_6v;
       }
       while(false)
        {
         vec4(645.685, 926.463, 4.4, -5.9);
         if(false)
          {
           mat4x2 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v;
           vec2(-7.7, 3.8);
           equal(bvec3(true, false, true), bvec3(true, true, true));
          }
         else
          {
          }
         true;
        }
       if(true)
        {
         uintBitsToFloat(uvec2(40493u, 84485u)).grg;
         mat3 _GLF_SWITCH_4_10v[61];
         vec4(vec3(63.41, 9.6, 38.05), inversesqrt(-86.90));
         ivec3(-21047, 57034, -17983);
         mat3(_GLF_SWITCH_4_2v);
         bvec2 _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v, _GLF_SWITCH_4_13v;
         (uvec3(18594u, 40165u, 46703u).sssp * GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base);
         bvec2 _GLF_SWITCH_4_14v, _GLF_SWITCH_4_15v, _GLF_SWITCH_4_16v;
         vec2 _GLF_SWITCH_4_17v, _GLF_SWITCH_4_18v, _GLF_SWITCH_4_19v;
        }
       else
        {
         (_GLF_SWITCH_4_4v - mat2x4(6.7, -8.9, 712.882, -5.0, -809.212, -45.00, 7.0, 0.8));
         bvec3(false, true, true);
         while(true)
          {
           mat2x3 _GLF_SWITCH_4_20v[34], _GLF_SWITCH_4_21v, _GLF_SWITCH_4_22v;
           vec2(-9.8, -2.8);
          }
         bvec4(false, false, false, false);
         (mat3x2(6.5, 6.0, 4191.3528, 3.1, 31.88, 64.25) / -2.7);
        }
       vec2(4.6, -8378.9308);
       if((ivec2(72794, -46260) == ivec2(-62765, 85752)))
        {
         for(         4461u;
 true; -80298)
          {
           bvec3 _GLF_SWITCH_4_23v;
           mat3x4(6.0, -61.55, 16.59, -2.4, -7.6, 969.153, -4795.9459, -3.9, -9541.3531, -986.625, 85.88, -53.84);
           bvec4 _GLF_SWITCH_4_24v, _GLF_SWITCH_4_25v, _GLF_SWITCH_4_26v;
          }
         while(true)
          {
           _GLF_SWITCH_4_3v;
           vec4(5623.1151, 5212.4656, -7305.3216, -8101.9003);
           440.861;
           _GLF_SWITCH_4_2v;
          }
         for(int _GLF_SWITCH_4_27v; true; (uvec2(131951u, 146486u) != uvec2(49740u, 98818u)))
          {
           ivec3 _GLF_SWITCH_4_28v;
           ;
           vec3 _GLF_SWITCH_4_29v, _GLF_SWITCH_4_30v, _GLF_SWITCH_4_31v;
           abs(_GLF_SWITCH_4_28v);
           mat4x2(1.6, -0.0, -2.3, -3.2, -3451.3877, 2.8, -17.87, -37.98);
           mat3x4(-6423.8321, 39.78, -3.8, -68.26, 88.47, 2606.5175, -0.3, 3.4, 37.74, -4282.0374, -0.6, 482.802);
           (_GLF_SWITCH_4_4v * injectionSwitch);
          }
         mat2x4 _GLF_SWITCH_4_32v[15], _GLF_SWITCH_4_33v[37];
         mat2x3 _GLF_SWITCH_4_34v, _GLF_SWITCH_4_35v, _GLF_SWITCH_4_36v;
        }
       else
        {
         ;
         while(true)
          {
           uvec3 _GLF_SWITCH_4_37v;
           ;
           bool _GLF_SWITCH_4_38v, _GLF_SWITCH_4_39v;
          }
         if((uvec3(166192u, 75224u, 68123u) , false))
          {
           mat2x3 _GLF_SWITCH_4_40v[80];
          }
         ivec2 _GLF_SWITCH_4_41v;
         (mat3(7620.5646, 626.201, -789.669, 2293.5288, -2.1, -1.0, -4.5, -2.8, -5.8) / mat3(-115.756, 4929.6642, 2.2, -9.5, -4.4, -753.157, -7327.9298, -159.847, 775.568));
         uvec2(103471u, 60741u);
         vec4 _GLF_SWITCH_4_42v, _GLF_SWITCH_4_43v[74], _GLF_SWITCH_4_44v;
         _GLF_SWITCH_4_44v.q;
         mat2x3 _GLF_SWITCH_4_45v[72];
        }
       {
        ivec4(-46337, -20944, -75903, -25032);
       }
       while((_GLF_SWITCH_4_3v == _GLF_SWITCH_4_4v))
        {
         uvec4 _GLF_SWITCH_4_46v[43], _GLF_SWITCH_4_47v[74], _GLF_SWITCH_4_48v;
         mat4x2 _GLF_SWITCH_4_49v[34];
         while(true)
          {
           mat4(mat2x4(mat2(-8.3, -43.14, -4.1, 7475.7325)));
           bool _GLF_SWITCH_4_50v[77], _GLF_SWITCH_4_51v[30];
           ivec3(-37313, 66614, -8087);
          }
         for(         mat4x3(-0.6, -753.024, 569.791, 6.5, 4532.8636, 679.912, 207.249, 628.368, 3087.2534, 1.4, -5750.3207, -0.9);
 false; -41840)
          {
           vec2 _GLF_SWITCH_4_52v, _GLF_SWITCH_4_53v;
           mat4x3 _GLF_SWITCH_4_54v[39], _GLF_SWITCH_4_55v, _GLF_SWITCH_4_56v[81];
           mat3(-3.4, 6722.9442, 8664.7314, 5.9, 68.39, -6.8, -6.8, 937.227, -2.6);
           (_GLF_SWITCH_4_55v * (false ? mat3x4(-7069.5548, 816.353, 0.0, 1.8, 4.8, 804.142, 789.889, -0.8, 33.78, 681.369, -7412.5689, -834.695) : mat3x4(84.97, 222.655, -7.2, -8194.0827, 8.3, -5.0, -349.717, 5163.7670, -8.7, 4707.4303, 682.275, 2086.1187)));
           findLSB(ivec3(34979, 12601, 94631));
           ivec4 _GLF_SWITCH_4_57v;
           _GLF_SWITCH_4_1v;
           ivec3(-16792, 13965, 36349).x;
          }
         ivec4(6059, 36935, -23673, 68577);
         uint _GLF_SWITCH_4_58v[37];
         for(mat3 _GLF_SWITCH_4_59v[98], _GLF_SWITCH_4_60v[78]; (74613 < 28537); vec3(-8.2, 9.0, -1.2))
          {
           ivec4(sign(mix(56216, -7574, false)), (~ ivec2(-40662, 6743)), 71755);
           uvec3 _GLF_SWITCH_4_61v;
           vec3(-2.6, -2.0, -422.140);
           bvec2(true, true);
           mat4x2 _GLF_SWITCH_4_62v, _GLF_SWITCH_4_63v[87];
           mat2x4 _GLF_SWITCH_4_64v;
          }
         float _GLF_SWITCH_4_65v, _GLF_SWITCH_4_66v, _GLF_SWITCH_4_67v;
         do
          {
           mat4 _GLF_SWITCH_4_68v, _GLF_SWITCH_4_69v[95], _GLF_SWITCH_4_70v;
           mat3x2 _GLF_SWITCH_4_71v, _GLF_SWITCH_4_72v;
           transpose(mat2x4(1.9, -5776.3175, 3.9, 3.9, -20.35, 872.364, 175.251, -460.375));
          }
         while(true);
        }
      }
     default:
     1;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup;
 uvec2 GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy = GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_size;
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy = GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x = subgroup_local_id;
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 25:
     {
      bvec4(false, true, true, false);
     }
     case 0:
     case 16:
     case 93:
     case 12:
     case 73:
     case 34:
     case 19:
     case 60:
     case 50:
     case 70:
     GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.z = num_workgroup;
     break;
     default:
     1;
    }
  }
 else
  {
  }
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.w = GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.z;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 94:
     ivec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[60], _GLF_SWITCH_1_2v[21];
     case 0:
     case 17:
     case 3:
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))))))
        barrier();
       return;
      }
     case 36:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     case 32:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
        {
         case 90:
         for(float _GLF_SWITCH_4_0v; (! false); bitfieldReverse(subgroup_id))
          {
           for(           mat4(7.3, -2246.5297, -36.33, 19.31, -3.0, 0.0, -5.6, -37.75, 31.45, 834.852, 7.7, -75.25, 859.920, -7744.0629, -9.8, 888.148);
 true; sign(ivec3(21642, -49251, -3608)))
            {
             int _GLF_SWITCH_4_1v[9], _GLF_SWITCH_4_2v[39], _GLF_SWITCH_4_3v;
            }
           ;
           while(true)
            {
             sign(ivec4(7292, 86085, -66594, 28291)).b;
             transpose((- mat3x4(37.15, -1132.1725, 0.3, 33.05, -65.10, 8.7, 4.2, 37.35, 14.85, -308.603, 9296.2306, -1412.5481)));
             ;
             vec2 _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v;
             (+ 61818);
             mat4x3 _GLF_SWITCH_4_6v;
            }
           mat4x3 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v[48];
           ;
           (subgroup_id < num_workgroup);
           uvec2 _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v;
          }
         case 2:
         mat4(-2.6, 98.77, 7.8, -86.68, -6.8, 4.0, -0.7, 401.395, 0.7, -7.3, -5.1, 1.5, -0.5, -7.1, -549.056, -4.1);
         case 0:
         case 50:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
         break;
         case 85:
         {
         }
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      return;
     case 35:
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     case 7:
     case 42:
     for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
      }
     case 23:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     case 56:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       switch(_GLF_SWITCH(0))
        {
         case 93:
         if((step(normalize(-287.688), injectionSwitch) != vec2(4.2, 6.6)))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 46:
               mat4x3 _GLF_SWITCH_1_0v;
               case 94:
               {
                switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((_GLF_IDENTITY(int(0), (int(0)) | 0)), ((_GLF_IDENTITY(int(0), (int(0)) | 0))) >> 0) ^ 0)))))
                 {
                  case 70:
                  (vec4(792.445, -940.312, 759.928, -4312.0657) + -3334.2367);
                  case 0:
                  do
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      for(                      uvec3(40480u, 161995u, 19172u);
 true; (false ? bvec3(true, true, true) : bvec3(true, true, true)))
                       {
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                         {
                          mat4x2(547.277, -82.61, 691.931, 2.9, 7.4, 0.3, 84.21, -3.9);
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        (mat2x4(-96.85, _GLF_IDENTITY(-7.8, clamp(-7.8, -7.8, -7.8)), -3.8, 439.274, -1.8, -0.5, 4.5, -626.426));
                        for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                         {
                          for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                           {
                            if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                         }
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          break;
                         }
                       }
                     }
                    else
                     {
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   {
                    do
                     {
                      return;
                     }
                    while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
                   }
                  if((ivec2(59745, -7868) == ivec2(20855, -80365)))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     return;
                    ivec2(12538, 83270);
                    if(_GLF_DEAD(false))
                     return;
                    vec3 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                    do
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    (7.2 - (3530.9907 + mat3x4(51.08, 3.0, 924.786, -28.22, -5800.8743, -4.9, -1.3, 7268.8601, 7360.2052, 8.1, -990.590, -8.6)));
                    if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) : _GLF_FUZZED(vec2(728.707, -152.088)))).x > injectionSwitch.y))))
                     barrier();
                    bvec2(false, true);
                    (mat3x4(-63.52, 26.74, -300.835, _GLF_IDENTITY(4.2, max(_GLF_IDENTITY(4.2, (4.2) + 0.0), _GLF_IDENTITY(4.2, min(4.2, 4.2)))), 79.67, -716.270, 421.415, 42.54, 509.399, 7.8, -833.651, -5.4) * mat4x3(7143.3359, -1.5, -2.8, 1045.3033, 919.332, 52.89, -72.56, 542.889, -6.7, -1897.6323, -348.261, 5.7));
                    ;
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      if(_GLF_DEAD(false))
                       return;
                     }
                    uvec4 _GLF_SWITCH_1_3v;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))
                       barrier();
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1)))))
                           {
                            case 0:
                            case 31:
                            case 6:
                            case 82:
                            case 18:
                            case 54:
                            case 69:
                            case 83:
                            case 44:
                            barrier();
                            break;
                            default:
                            1;
                           }
                         }
                       }
                     }
                    mat3x2 _GLF_SWITCH_1_4v[75], _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  mat2 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v[63], _GLF_SWITCH_1_9v;
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 | 0) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))); _injected_loop_counter --)
                    {
                     mat4(15.54, -2583.5108, 9.2, 6.7, 5.0, 77.03, 446.641, 1.8, -8.4, -91.72, -9.3, -1091.3620, -2378.2306, 8.6, 5754.0465, 49.99);
                    }
                   mat4(8388.7612, 8.0, -58.86, 6150.4730, 79.77, 2133.6592, 9.3, -0.4, 20.02, 7601.5255, 0.5, 2.2, _GLF_IDENTITY(-44.36, max(-44.36, _GLF_IDENTITY(-44.36, max(-44.36, -44.36)))), -4491.5176, 543.011, 3.9);
                   vec3(-1.4, 862.300, 7.8);
                  }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    barrier();
                   }
                  ivec4(87214, 52037, 72284, -57534).aar;
                  mat3 _GLF_SWITCH_1_10v;
                  if(true)
                   {
                    switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                     {
                      case 34:
                      uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                      case 82:
                      if(_GLF_DEAD(false))
                       barrier();
                      (mat2(-3608.8842, 1.3, 191.687, 9.7) / _GLF_SWITCH_1_7v);
                      if(_GLF_DEAD(false))
                       return;
                      case 0:
                      for(int _injected_loop_counter = ((0 & -69625) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        length(9403.3451);
                       }
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          barrier();
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      bvec4 _GLF_SWITCH_1_11v;
                      case 78:
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                         barrier();
                       }
                      else
                       {
                       }
                      uint _GLF_SWITCH_1_12v;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        return;
                       }
                      do
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))))
                       barrier();
                      case 38:
                      case 37:
                      (ivec4(78388, -68661, -40485, 6118) / ivec4(71049, -27109, _GLF_IDENTITY(61224, (61224) / 1), -57398));
                      for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                       {
                        if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))) + 0.0) > injectionSwitch.y))))
                         return;
                       }
                      ;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 44:
                      mat2x3(-1545.9080, -6.7, -63.28, 6353.6214, -4.8, 7052.6122);
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                        barrier();
                       }
                      case 40:
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          return;
                         }
                        else
                         {
                         }
                       }
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        mat4x2(2.2, 2598.2620, 762.146, 2.2, -47.29, -18.28, -4.6, -2654.6852);
                       }
                      else
                       {
                       }
                      case 19:
                      if(_GLF_DEAD(false))
                       return;
                      (subgroup_size - GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup);
                      break;
                      case 65:
                      if(_GLF_DEAD(false))
                       barrier();
                      ivec3 _GLF_SWITCH_2_2v;
                      case 3:
                      ;
                      default:
                      1;
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                       {
                       }
                      else
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          case 2:
                          case 24:
                          case 95:
                          case 47:
                          if(_GLF_DEAD(false))
                           barrier();
                          break;
                          default:
                          1;
                         }
                       }
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    switch(_GLF_SWITCH(0))
                     {
                      case 51:
                      mat3x4(-8.0, -428.126, 65.83, -30.52, 1336.9781, -7.2, _GLF_IDENTITY(3.7, _GLF_IDENTITY(float(mat4(3.7, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, tan(0.0), abs(0.0), 1.0, 1.0)), float(mat2x4(_GLF_IDENTITY(float(mat4(3.7, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, tan(0.0), abs(0.0), 1.0, 1.0)), float(mat3x4(float(mat4(3.7, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, cos(0.0), 1.0, 1.0, 1.0, tan(0.0), abs(0.0), 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(0.0))))), -35.06, 6.5, 3.8, 563.387, -5.6);
                      case 20:
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                      mat2x4 _GLF_SWITCH_3_0v[13];
                      case 0:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      ivec3(-22878, -39920, -74970);
                      ;
                      mat3x4(4102.1853, 9.0, -141.617, -33.03, 2347.1994, 6.7, 2.9, 44.53, -434.716, 4.8, -1945.9152, -244.946);
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       barrier();
                      break;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                       barrier();
                      case 90:
                      ivec2 _GLF_SWITCH_3_1v;
                      default:
                      1;
                     }
                   }
                  break;
                  default:
                  if(_GLF_DEAD(false))
                   barrier();
                  1;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    return;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
               }
               case 0:
               bvec2 _GLF_SWITCH_0_0v[4], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
               mat3x4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[71];
               case 38:
               uvec2 _GLF_SWITCH_0_5v[98], _GLF_SWITCH_0_6v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               ivec4 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 18:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               {
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
                 {
                  do
                   {
                    _GLF_SWITCH_0_6v;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                   }
                 }
                else
                 {
                 }
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                ivec2 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v;
                uvec4(48551u, _GLF_IDENTITY(14010u, max(14010u, 14010u)), 23618u, 143672u);
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                   barrier();
                 }
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      return;
                     }
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))), false || (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))))))))))); _injected_loop_counter ++)
                         {
                          barrier();
                         }
                        break;
                        default:
                        1;
                       }
                     }
                   }
                  uvec4(_GLF_IDENTITY(196781u, (196781u) | 0u), 153476u, _GLF_IDENTITY(31893u, (true ? 31893u : _GLF_FUZZED(workgroup_size))), 8440u);
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                 }
                mat2x3 _GLF_SWITCH_0_11v;
               }
               float _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[91], _GLF_SWITCH_0_14v;
               case 17:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 47:
                     uvec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                     case 62:
                     mat2(-2.5);
                     case 0:
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     break;
                     case 4:
                     (mat4(3429.2940, -4251.4409, 9088.2863, 0.6, -3122.8160, -904.659, 4.5, 3.9, -68.41, -19.30, -7.9, 81.55, 8.1, -281.322, 4008.4303, -82.07) - mat4(-73.90, 751.471, 5.6, 5.5, -1.5, 8355.4164, -23.33, -2558.3732, 6.5, 3.4, 13.88, 965.997, -9.3, -879.463, 2.9, 889.050));
                     default:
                     1;
                    }
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               (((ivec2(43989, 21958) % -32708) - -73277) , _GLF_SWITCH_0_3v);
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), int(7)))))
                      {
                       case 15:
                       mat3x4 _GLF_SWITCH_4_0v;
                       case 24:
                       float _GLF_SWITCH_4_1v[14], _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v;
                       case 0:
                       case 36:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                        {
                         barrier();
                        }
                       break;
                       default:
                       1;
                      }
                    }
                  }
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 73:
               if(_GLF_DEAD(false))
                barrier();
               mat2x3 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[11], _GLF_SWITCH_0_17v;
               {
                if((ivec3(_GLF_IDENTITY(-93184, ~ (~ (_GLF_IDENTITY(-93184, ~ (~ (-93184)))))), -80420, -93051) != ivec3(ivec4(58480, _GLF_IDENTITY(-63708, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(bitCount(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) : _GLF_IDENTITY(-63708, 1 * (-63708)))), -27466, -43083))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    return;
                   }
                  switch(_GLF_SWITCH(0))
                   {
                    case 95:
                    ;
                    case 4:
                    if(_GLF_DEAD(false))
                     barrier();
                    uvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    case 0:
                    case 76:
                    mat3x2 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    case 56:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    case 15:
                    float _GLF_SWITCH_0_20v[73], _GLF_SWITCH_0_21v;
                    case 1:
                    case 75:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                         }
                       }
                      return;
                     }
                    break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                       {
                        return;
                       }
                      else
                       {
                       }
                     }
                    case 23:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      if(_GLF_DEAD(false))
                       barrier();
                      barrier();
                     }
                    int _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v[95], _GLF_SWITCH_2_5v;
                    case 53:
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                     barrier();
                    ;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                      else
                       {
                       }
                      return;
                     }
                    default:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    1;
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                     {
                      for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 73:
                          (mat2x4(-1.0, 0.9, 6.4, -6.4, 22.39, -4.9, 3.7, -1050.9058) - distance(vec2(63.89, -87.89), injectionSwitch));
                          case 0:
                          case 93:
                          case 95:
                          case 33:
                          case 89:
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                          break;
                          case 15:
                          _GLF_SWITCH_0_3v;
                          case 46:
                          ivec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                          default:
                          1;
                         }
                       }
                     }
                   }
                  do
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))));
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  do
                   {
                    switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                     {
                      case 0:
                      if(_GLF_DEAD(false))
                       barrier();
                      break;
                      default:
                      1;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(false))
                   barrier();
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    switch(_GLF_SWITCH((0 & 34620)))
                     {
                      case 69:
                      uvec3 _GLF_SWITCH_4_0v;
                      case 0:
                      switch(_GLF_SWITCH(0))
                       {
                        case 51:
                        mat3(mat4x2(5.5, 670.096, 7.7, -4.2, -6.6, 82.33, -0.8, -3939.8414));
                        case 96:
                        mat4x3(_GLF_SWITCH_0_15v);
                        case 0:
                        case 58:
                        case 84:
                        barrier();
                        break;
                        case 83:
                        findMSB(uvec2(99692u, 37235u));
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        default:
                        1;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      break;
                      default:
                      1;
                     }
                   }
                 }
                {
                 (_GLF_SWITCH_0_3v == (mat3x4(_GLF_IDENTITY(_GLF_SWITCH_0_14v, mix(float(_GLF_FUZZED(86.31)), float(_GLF_SWITCH_0_14v), bool(true)))) / mat3x4(-8576.1457, 9918.5239, -8800.6510, -1.0, 8.1, 3.7, 5.6, 5.6, -43.56, 5.4, 8.4, -8.6)));
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 mat3x2 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   _GLF_SWITCH_0_3v;
                  }
                }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    _GLF_IDENTITY(_GLF_SWITCH_0_1v, bvec2(bvec2(_GLF_SWITCH_0_1v)));
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        barrier();
                       }
                      else
                       {
                       }
                     }
                   }
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                injectionSwitch;
                while(false)
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    isnan(_GLF_IDENTITY(vec2(-49.30, 2.1), _GLF_IDENTITY(mat2(1.0) * (vec2(-49.30, 2.1)), vec2(0.0, 0.0) + (mat2(1.0) * (vec2(-49.30, 2.1)))))).stt;
                   }
                  else
                   {
                   }
                  do
                   {
                    min(_GLF_SWITCH_0_6v, _GLF_IDENTITY(_GLF_SWITCH_0_6v, (_GLF_SWITCH_0_6v) << (uvec2(0u, 0u) ^ uvec2(0u, 0u))));
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     continue;
                    if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                     barrier();
                    break;
                   }
                 }
                while((mat4(-6.5, -2116.3381, -85.41, -687.788, -0.2, -65.23, 5.8, -1.1, -3.1, 35.83, 39.53, 5.6, 24.78, -48.06, 776.476, 7.3) == mat4(599.722, -520.472, 832.380, 6.2, -27.02, -6488.3518, -7980.2725, -5.2, -86.14, -5.7, 2.8, 99.64, -6.1, 780.606, -5965.8042, -886.224)))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     {
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        barrier();
                       }
                      if(_GLF_DEAD(false))
                       {
                        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                         {
                          case 4:
                          lessThanEqual(pow(vec3(-36.57, 21.41, 835.749), vec3(24.53, -72.34, 5768.5264)), vec3(5.3, -63.61, 2791.5514));
                          case 55:
                          mat2(7682.8178, -8.1, -0.1, 5.0);
                          case 0:
                          case 36:
                          case 5:
                          case 97:
                          case 27:
                          case 3:
                          do
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          case 95:
                          case 17:
                          continue;
                          break;
                          case 78:
                          uint _GLF_SWITCH_4_0v[58], _GLF_SWITCH_4_1v;
                          default:
                          1;
                         }
                       }
                      barrier();
                      if(_GLF_DEAD(false))
                       continue;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                     barrier();
                   }
                  for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    ;
                   }
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    return;
                   }
                  else
                   {
                   }
                 }
                vec4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        barrier();
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    do
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    barrier();
                   }
                 }
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     barrier();
                    return;
                   }
                 }
                else
                 {
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  return;
                 }
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  return;
                 }
                uvec4((_GLF_IDENTITY(subgroup_id + subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id + subgroup_size), min(~ (subgroup_id + subgroup_size), ~ (subgroup_id + subgroup_size)))))), subgroup_size, _GLF_SWITCH_0_6v);
               }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))
                  return;
                 return;
                }
               break;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               case 6:
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | (3))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(false)
                  {
                   uvec3 _GLF_SWITCH_1_13v[43], _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v[31];
                   mat3x2(-897.929, -38.73, -8.7, -93.28, -84.71, _GLF_IDENTITY(-5.4, mix(float(-5.4), float(_GLF_FUZZED(-25.20)), bool(false))));
                   mat2 _GLF_SWITCH_1_16v;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(false)
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true))))))
                        barrier();
                       ivec4(ivec3(-20138, -27921, 75735), _GLF_IDENTITY(74780, (74780) | (74780))).z;
                      }
                     mat2 _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6)))); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   int _GLF_SWITCH_1_20v, _GLF_SWITCH_1_21v[31];
                   if(_GLF_DEAD(false))
                    continue;
                   uvec2(40440u, 52412u);
                   uvec3 _GLF_SWITCH_1_22v;
                   ivec3 _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   ivec2 _GLF_SWITCH_1_25v, _GLF_SWITCH_1_26v, _GLF_SWITCH_1_27v;
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(false)
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       _GLF_IDENTITY(uvec4(199372u, _GLF_IDENTITY(152246u, min(152246u, _GLF_IDENTITY(152246u, (152246u) / 1u))), 27739u, 40832u), _GLF_IDENTITY((uvec4(199372u, _GLF_IDENTITY(152246u, min(152246u, _GLF_IDENTITY(152246u, (152246u) / 1u))), 27739u, 40832u)), ((uvec4(199372u, _GLF_IDENTITY(152246u, min(152246u, _GLF_IDENTITY(152246u, (152246u) / 1u))), 27739u, 40832u))) >> uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) / uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, (1u) / 1u)));
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         ;
                        }
                       ((workgroup_size & subgroup_id) & GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.z);
                       (mat2x3(-54.90, -55.02, -400.416, -239.681, -411.141, -3153.9654) * mat3x2(66.04, -82.85, -712.273, 1.0, -90.04, -9740.8422));
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                        {
                         mat4(9.6, -114.788, 62.82, 49.27, -8.0, 8.5, -0.2, -3.4, -74.16, -47.27, -5290.2679, 52.20, -1.1, 5.6, -441.553, 4.8);
                        }
                       else
                        {
                        }
                       uvec4 _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v[2], _GLF_SWITCH_1_30v;
                       vec3 _GLF_SWITCH_1_31v, _GLF_SWITCH_1_32v, _GLF_SWITCH_1_33v[9];
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           barrier();
                          }
                        }
                       uvec2(73756u, 39346u);
                       bvec4 _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v, _GLF_SWITCH_1_36v;
                      }
                     else
                      {
                       bvec3(true, false, false);
                       ;
                       mat2(7.8, -9761.7411, -994.732, 78.45);
                       mat3(2.2, -280.788, 3.1, 862.331, -2.7, -1447.6235, 58.33, -703.115, -761.394);
                      }
                    }
                   else
                    {
                    }
                   ((65919 ^ _GLF_SWITCH_1_24v) / ivec3(7416, _GLF_IDENTITY(87108, 0 + (87108)), 92414));
                   mat4x2(90.77, 9384.7768, 3.1, 4191.2552, 92.13, 80.42, 4.3, -4.5);
                  }
                }
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 0:
                   case 27:
                   case 9:
                   case 47:
                   case 5:
                   case 18:
                   case 12:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                   break;
                   default:
                   1;
                  }
                }
               1;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), false, true)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).y))))
          {
           switch(_GLF_SWITCH(((0 | 0) << _GLF_IDENTITY(int(5), int(5)))))
            {
             case 0:
             case 56:
             case 33:
             case 24:
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             case 1:
             case 14:
             case 45:
             do
              {
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(false)))));
             case 92:
             barrier();
             break;
             default:
             1;
            }
          }
         case 38:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
           barrier();
          }
         while((mat2x4(mat2x3(mat3(2.1, -9.2, 11.83, 92.97, 34.96, 9822.6301, 6.2, -2980.9654, -6.3))) != mat2x4(1.6, 16.39, 9.2, _GLF_IDENTITY(8.2, float(mat4(8.2, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, log(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 1.0, 1.0, exp(0.0), exp(sin(0.0))))), 98.30, 92.72, -9586.7451, 0.5)))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -2688)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         case 0:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
            barrier();
           barrier();
          }
         case 11:
         case 57:
         case 23:
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         case 32:
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 31:
             (mat3x4(-3.1, -468.651, 61.23, -6.7, 2.2, -176.075, -315.163, 5380.9536, -8.7, -7876.1888, 1838.0181, 4.3) + -60.39);
             case 0:
             case 56:
             case 36:
             case 80:
             case 60:
             case 37:
             case 99:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
             else
              {
              }
             break;
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         case 19:
         (uvec3(94616u, 127853u, 36688u) - (~ uvec3(72649u, 44227u, 57814u)));
         case 26:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         ivec2(-75596, -68940);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-45.09)))))))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         default:
         _GLF_IDENTITY(1, (1) | 0);
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
         barrier();
        }
       return;
      }
     break;
     case 83:
     for(     mat2x4(38.46, -0.1, 2.4, 90.97, -2107.3138, 7.1, 6.5, 11.71);
 true; uvec4(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy, clamp(GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy, _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy, _GLF_IDENTITY(uvec2(uvec3(GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy, 1u)), uvec2(uvec2(uvec2(uvec3(GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy, 1u)))))), GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy)), 19952u, ((mat3x2(597.168, 6072.9158, -732.691, 57.92, 6.2, -624.191) , subgroup_id) & subgroup_id)))
      {
       switch(_GLF_SWITCH(0))
        {
         case 23:
         uvec2 _GLF_SWITCH_4_0v;
         case 71:
         ;
         case 0:
         while((true || (vec4(-109.931, -87.33, _GLF_IDENTITY(-3.8, clamp(-3.8, _GLF_IDENTITY(-3.8, min(-3.8, -3.8)), -3.8)), -5142.3423) != vec4(-69.52, -844.230, -3684.2642, -9.3))))
          {
           switch(_GLF_SWITCH(0))
            {
             case 28:
             mat3(547.031, 4.5, 4.4, -3.8, 21.32, 2.0, 16.55, -26.26, -758.287);
             case 41:
             bvec2((3.0 != distance(vec3(-8.4, 155.465, -607.102), vec3(3.8, -34.63, 227.082))));
             case 0:
             case 55:
             mat3x4(-430.320, 7898.9971, -87.90, 3449.8246, 6.2, 5.5, 204.628, 77.79, 7.8, 8.2, 9.2, -921.457);
             if(_GLF_DEAD(false))
              barrier();
             case 66:
             {
              if(_GLF_DEAD(false))
               barrier();
              ;
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                   {
                    barrier();
                   }
                 }
               }
              if(_GLF_DEAD(false))
               barrier();
              uvec3(154141u, 152162u, 147602u);
              if(_GLF_DEAD(false))
               barrier();
              mat2x4 _GLF_SWITCH_1_3v[59], _GLF_SWITCH_1_4v[39], _GLF_SWITCH_1_5v[99];
              bvec2(false, false);
              vec3 _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
              bool _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                mat3x2(7.5, -5.9, -7752.6414, 9477.7060, -28.36, 64.52);
               }
              ;
             }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             case 79:
             mat3x2 _GLF_SWITCH_1_11v;
             case 90:
             if(true)
              {
               uint _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
               -580;
               if(_GLF_DEAD(false))
                barrier();
               ;
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 8:
                   vec2(8.8, 8955.9074).xyx;
                   case 0:
                   case 65:
                   case 60:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   break;
                   case 81:
                   ;
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               bvec4 _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v, _GLF_SWITCH_1_16v;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               injectionSwitch;
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               ;
               uvec3(5300u, 119841u, 97855u);
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 uvec2(136835u, 193339u).sstt;
                }
               mat2x4 _GLF_SWITCH_1_17v[40], _GLF_SWITCH_1_18v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup --);
               bvec4(true, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))), false);
               mat3(428.353, -4.1, 3.4, -0.9, -2855.6761, 864.084, -478.074, 6285.5376, 6173.6813);
               true;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 46:
                     mat4x3 _GLF_SWITCH_4_0v[74], _GLF_SWITCH_4_1v;
                     case 13:
                     ivec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[75];
                     case 0:
                     case 80:
                     case 60:
                     barrier();
                     break;
                     case 97:
                     (8.1 + mat3x4(-741.615, 0.2, -9379.4206, 5.0, -5980.4952, 3.8, 6.5, 6.5, 1.4, -1.5, -1164.1195, -8973.0284));
                     default:
                     1;
                    }
                  }
                }
               vec2 _GLF_SWITCH_1_19v, _GLF_SWITCH_1_20v[63], _GLF_SWITCH_1_21v;
               if(_GLF_DEAD(false))
                barrier();
               subgroup_id;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 mat2(-69.24, 4.3, 4.4, -14.84);
                }
               else
                {
                }
               ;
               ((GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy | subgroup_id) | subgroup_id).xy;
               if(_GLF_DEAD(false))
                barrier();
              }
             case 65:
             (mat3x4(9929.3363, -2.7, 4338.5530, 0.8, -9.1, -46.09, _GLF_IDENTITY(-6365.6789, float(mat3x4(_GLF_IDENTITY(-6365.6789, 1.0 * (-6365.6789)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), 679.352, -0.4, -23.94, 745.017, 73.92));
             case 96:
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             mat4x2(3279.0251, _GLF_IDENTITY(-28.28, float(vec2(-28.28, 1.0))), -4.0, 6.1, 0.9, -3438.2908, 5250.4268, 8701.2526);
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    return;
                   }
                 }
                subgroup_local_id;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), false, false)))))))
               return;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              uint _GLF_SWITCH_1_22v[64], _GLF_SWITCH_1_23v, _GLF_SWITCH_1_24v[11];
             }
             case 40:
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              continue;
             break;
             case 29:
             ;
             default:
             1;
            }
          }
         for(         bvec4(true, true, true, true);
 _GLF_IDENTITY((uvec3(69677u, 52504u, 6877u) != uvec3(76105u, 144088u, 101391u)), ! (! (_GLF_IDENTITY((uvec3(69677u, 52504u, 6877u) != uvec3(76105u, 144088u, 101391u)), false || ((uvec3(69677u, 52504u, 6877u) != uvec3(76105u, 144088u, 101391u))))))); vec3(-97.03, _GLF_IDENTITY(-1.0, clamp(-1.0, _GLF_IDENTITY(-1.0, mix(float(_GLF_FUZZED(3.5)), float(-1.0), bool(true))), -1.0)), -80.66))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(false)
              {
               ivec2(-98801, -73609);
               mat4x3(4773.7602, -7.7, -506.914, -3.7, 8212.2203, -407.266, 151.978, 488.256, 11.96, -664.427, -7.0, -391.407);
               mat2(181.312, -9526.6853, 6176.2301, -1.0);
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
                break;
               bvec2(true, false);
               if(_GLF_DEAD(false))
                barrier();
               ;
               bool _GLF_SWITCH_1_25v[80], _GLF_SWITCH_1_26v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               vec2(0.5, -60.45);
               mat4 _GLF_SWITCH_1_27v[75], _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               outerProduct(vec4(-32.50, 191.587, -9267.0558, 3.7), _GLF_IDENTITY(vec4(-5.9, -8935.2618, 97.81, -2.0), clamp(vec4(-5.9, -8935.2618, _GLF_IDENTITY(97.81, min(_GLF_IDENTITY(97.81, (false ? _GLF_FUZZED(412.695) : 97.81)), 97.81)), -2.0), _GLF_IDENTITY(vec4(-5.9, -8935.2618, 97.81, -2.0), clamp(_GLF_IDENTITY(vec4(-5.9, -8935.2618, 97.81, -2.0), (vec4(-5.9, -8935.2618, 97.81, -2.0)) - vec4(0.0, 0.0, 0.0, 0.0)), vec4(-5.9, -8935.2618, 97.81, -2.0), vec4(-5.9, -8935.2618, 97.81, -2.0))), vec4(-5.9, -8935.2618, 97.81, -2.0))));
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               vec2 _GLF_SWITCH_1_30v[16], _GLF_SWITCH_1_31v[75];
               mat4x3(mat2(-971.759, -5.0, -6.8, -5558.2120));
               mat4(7020.6018, 789.081, -14.43, -69.75, _GLF_IDENTITY(-2.1, mix(float(_GLF_FUZZED(-4908.8703)), float(-2.1), bool(true))), -3.4, 1.0, 7425.6623, -471.618, -8.9, 5.1, 2.2, -161.571, -9407.4470, _GLF_IDENTITY(-90.81, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -90.81 : _GLF_FUZZED(7687.3167), mix(float(_GLF_FUZZED(-191.290)), float(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -90.81 : _GLF_FUZZED(7687.3167)), bool(true))))), -8.4);
               bvec2(true, false);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   step(vec2(0.3, -9.1), vec2(-8.4, 43.63));
                  }
                }
              }
            }
           for(           clamp(uvec4(66378u, 157187u, 86061u, 159995u), uvec4(59867u, 105743u, 139596u, 79789u), uvec4(102899u, 95592u, 65899u, 47045u));
 bvec2(false, true)[0]; _GLF_SWITCH_1_0v)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           ivec3 _GLF_SWITCH_1_32v[46];
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(true)
              {
              }
            }
           if((vec4(-3.1, -8631.1460, -3552.4751, -6.0) == cosh(vec4(7624.2655, 0.1, -39.04, -451.932))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
              return;
             _GLF_SWITCH_1_0v;
             mat4(4188.9283, 9038.1040, -8.0, 36.21, 44.39, 5.8, -88.82, 6.7, 4.1, -214.491, 7455.8152, -7420.8111, -8.0, -1570.4968, -3071.0972, 4.7);
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               mat3x4(726.812, -5602.0955, _GLF_IDENTITY(82.68, max(_GLF_IDENTITY(82.68, clamp(82.68, 82.68, 82.68)), 82.68)), _GLF_IDENTITY(-784.538, (false ? _GLF_FUZZED(asin(579.648)) : -784.538)), -49.93, 2.0, 93.16, -8163.2953, 8.3, 3962.6612, 86.05, 6.3);
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
             mat3x2 _GLF_SWITCH_1_33v, _GLF_SWITCH_1_34v, _GLF_SWITCH_1_35v;
             uint _GLF_SWITCH_1_36v[4];
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              barrier();
             for(int _injected_loop_counter = (57227 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 vec4(33.97, -71.26, -6157.9684, 7.9);
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true))))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             vec4 _GLF_SWITCH_1_37v[90], _GLF_SWITCH_1_38v, _GLF_SWITCH_1_39v[11];
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
            barrier();
           if(((subgroup_id) > GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.z))
            {
             if(_GLF_DEAD(false))
              barrier();
             matrixCompMult(mat4x2(1.6, 862.046, _GLF_IDENTITY(4741.2998, 0.0 + (4741.2998)), -8.8, 61.89, -0.8, 8714.1092, -8.4), mat4x2(695.584, 7002.9202, -967.011, 5.2, 400.331, -86.64, -9311.3671, 5744.9202));
             (702.100 * -8.6);
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) / 1)))))
                    {
                     case 0:
                     case 48:
                     case 41:
                     case 69:
                     case 99:
                     case 7:
                     case 49:
                     case 28:
                     barrier();
                     break;
                     case 51:
                     vec2 _GLF_SWITCH_4_0v;
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat4x2 _GLF_SWITCH_1_40v[41];
            }
           else
            {
             outerProduct(vec2(-125.092, -398.206), vec3(70.36, -2481.5293, 63.99));
             _GLF_IDENTITY(mat4(mat3x2(mat4(484.348, -5964.4967, 5.0, -675.198, -63.91, -219.375, -5802.3191, 371.893, -677.135, 35.25, 96.08, -7.6, -4673.5400, 29.79, -265.435, -785.504))), mat4(1.0) * (mat4(mat3x2(mat4(484.348, -5964.4967, 5.0, -675.198, -63.91, -219.375, -5802.3191, 371.893, -677.135, 35.25, 96.08, -7.6, -4673.5400, 29.79, -265.435, -785.504)))));
             mat2x3 _GLF_SWITCH_1_41v;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           mat2(538.959, 5059.6054, 708.685, 7.0);
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             while((uvec3(24029u, 169196u, 193785u) == (uvec3(145480u, 27655u, 97997u) & GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.z)))
              {
               vec3 GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_43v_GLF_SWITCH_1_46v;
               vec3 GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_44v_GLF_SWITCH_1_46v;
               mat4x2 _GLF_SWITCH_1_42v;
               mat3(-7311.4242, _GLF_IDENTITY(-8.0, mix(float(-8.0), float(_GLF_FUZZED(-765.802)), bool(false))), 6072.9684, -1.4, -5.0, -45.97, -3.7, 8.4, 4.6);
               mix(ivec2(-95960, -36192), ivec2(-40641, 77455), bvec2(false, false));
               if(_GLF_DEAD(false))
                barrier();
               vec2 _GLF_SWITCH_1_43v, _GLF_SWITCH_1_44v;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                {
                 switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))))))
                  {
                   case 42:
                   ;
                   case 88:
                   bvec3(bvec2(false, true), all(bvec3(false, false, false)));
                   case 0:
                   case 63:
                   case 36:
                   case 41:
                   case 49:
                   case 76:
                   case 20:
                   case 3:
                   case 47:
                   case 39:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   break;
                   default:
                   1;
                  }
                }
               GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_43v_GLF_SWITCH_1_46v.xy = _GLF_SWITCH_1_43v;
               if(_GLF_DEAD(false))
                continue;
               GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_44v_GLF_SWITCH_1_46v.xy = _GLF_SWITCH_1_44v;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 (subgroup_id >> packSnorm4x8(vec4(-9.1, 8.0, 300.402, 5921.1219)));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               (subgroup_local_id);
               ;
               float _GLF_SWITCH_1_45v, _GLF_SWITCH_1_46v;
               GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_43v_GLF_SWITCH_1_46v.z = _GLF_SWITCH_1_46v;
               GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_44v_GLF_SWITCH_1_46v.z = GLF_merged2_0_2_17_2_1_17_GLF_SWITCH_1_43v_GLF_SWITCH_1_46v.z;
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 switch(_GLF_SWITCH(((1 & 1) ^ 1)))
                  {
                   case 87:
                   ivec4 _GLF_SWITCH_4_0v;
                   case 0:
                   case 21:
                   case 9:
                   case 35:
                   case 14:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   break;
                   case 71:
                   mat4x3 _GLF_SWITCH_4_1v;
                   case 67:
                   subgroup_size;
                   default:
                   1;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 29:
                     ;
                     case 0:
                     case 31:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     break;
                     default:
                     1;
                    }
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            continue;
          }
         isnan(vec4(71.08, 8.6, 64.33, 9.1));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
          }
         case 74:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           mat2(-10.87, 1750.4998, -5.9, -5.6);
          }
         else
          {
          }
         ivec4 _GLF_SWITCH_1_47v, _GLF_SWITCH_1_48v[13];
         vec2 _GLF_SWITCH_1_49v, _GLF_SWITCH_1_50v[40], _GLF_SWITCH_1_51v;
         for(uint _GLF_SWITCH_1_52v[56], _GLF_SWITCH_1_53v, _GLF_SWITCH_1_54v; (75.56 < -2817.6356); (~ bitfieldExtract(32566, int(698.099), -7031)))
          {
           if(_GLF_DEAD(false))
            barrier();
           while(false)
            {
             mat4x2 _GLF_SWITCH_1_55v;
             if(_GLF_DEAD(false))
              continue;
             mat2x4(-3965.1849, -9756.2206, 55.82, -8850.3988, -1.5, -0.5, 9.6, 4877.7584);
            }
           70549;
           if(_GLF_DEAD(false))
            barrier();
           float _GLF_SWITCH_1_56v;
           for(ivec2 _GLF_SWITCH_1_57v[2]; (vec3(6829.1875, 285.409, 27.16) == vec3(_GLF_IDENTITY(-57.53, 0.0 + (-57.53)), 65.99, -78.34)); bvec2(false, false))
            {
             uvec2 _GLF_SWITCH_1_58v, _GLF_SWITCH_1_59v, _GLF_SWITCH_1_60v[26];
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               mat2(9.8, -6553.7243, 956.592, 246.124);
              }
             97458;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 case 53:
                 case 76:
                 case 75:
                 case 93:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 31:
                 mat2x4 _GLF_SWITCH_4_0v;
                 case 72:
                 uvec3(103251u, 199681u, 30930u);
                 default:
                 1;
                }
              }
             (47394u & _GLF_SWITCH_1_58v.yxy);
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat3x2 _GLF_SWITCH_1_61v[44], _GLF_SWITCH_1_62v[41];
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               equal(ivec2(-47256, 39501), ivec2(-65219, 84351));
              }
             unpackUnorm4x8(workgroup_size);
            }
           while(isinf(_GLF_SWITCH_1_56v))
            {
             subgroup_id;
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              break;
             vec2 _GLF_SWITCH_1_63v;
            }
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 ^ 1))); _injected_loop_counter ++)
            {
             mix((vec2(-3732.3045, -747.309) , (_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy, (GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy) - uvec2(0u, 0u)) / 74422u)), _GLF_IDENTITY((~ uvec2(132418u, 165465u)), (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(3u), uvec2(3u))) + ((~ uvec2(132418u, 165465u)))), equal((workgroup_size / GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy), GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.xy));
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec4(true, _GLF_IDENTITY(true, (true) || false), false, true)[0];
             if(_GLF_DEAD(false))
              {
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), int(1)))))
                {
                 case 0:
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 break;
                 case 16:
                 bvec4 _GLF_SWITCH_4_0v;
                 case 21:
                 mat4x3(809.096, -2.4, 947.128, -3456.1914, 740.396, 4.9, -2.4, 3277.1480, 315.178, -906.731, -6036.0072, -1.2);
                 default:
                 1;
                }
              }
            }
           bvec4(true, false, true, true);
          }
         false;
         if(_GLF_DEAD(false))
          continue;
         case 90:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          barrier();
         break;
         case 66:
         mat3x4(mat4(-14.93, -8.3, 171.554, -6.7, -3.2, -6021.1697, -70.22, -25.69, 674.138, -99.48, -221.801, -9393.7606, -2.2, 7852.0929, -0.4, -3.7));
         case 68:
         {
          mat3x2(-89.15, -4.7, 6616.4141, -6099.3775, 50.14, -6.3);
          (-56240 | ivec2(-85084, 71839));
          mat2(-55.52, 992.318, 6385.2634, 887.670);
          bvec3 _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v;
          mat4 _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v[45];
          vec2 _GLF_SWITCH_4_7v, _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v[19];
          int _GLF_SWITCH_4_10v[5], _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v[60];
          int _GLF_SWITCH_4_13v[67], _GLF_SWITCH_4_14v, _GLF_SWITCH_4_15v;
          mat2 _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v[73], _GLF_SWITCH_4_18v[7];
         }
         default:
         1;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     1;
    }
  }
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y, (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.y) << 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u);
 do
  {
   GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.w = subgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, clamp(1, 1, 1)) & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           break;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.w + _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x, (false ? _GLF_FUZZED((subgroup_id >> GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.w)) : _GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x, _GLF_IDENTITY((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x), clamp((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x), (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x), _GLF_IDENTITY((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x), uint(_GLF_IDENTITY(uvec4((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x), 0u, 1u, 0u), (uvec4((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x), 0u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))) - 0u))), 0u), (true ? uvec2(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x, (false ? _GLF_FUZZED((subgroup_id >> GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.w)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x, min(_GLF_IDENTITY(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x, (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x) + 0u), GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x)), (GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x) - 0u))), 0u) : _GLF_FUZZED(uvec2(15710u, 13129u))))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base.w + _GLF_IDENTITY(((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x + 1) % subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x + 1) % subgroup_size), (true ? ((GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.xy.x + 1) % subgroup_size) : _GLF_FUZZED(workgroup_size)))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.z = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 75:
         case 14:
         case 47:
         case 71:
         case 63:
         barrier();
         break;
         case 50:
         for(         2.2;
 true; uvec3(78234u, 5909u, 46250u))
          {
           outerProduct(injectionSwitch, (3.6 / vec2(0.1, -8.5)));
           7475.0878;
          }
         case 94:
         {
          smoothstep(8.5, 7.8, vec3(765.550, -7406.5433, -80.44));
          for(mat4x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[62]; (mat4x2(-644.097, 1893.3999, -27.89, 89.43, 797.444, -91.14, 4.7, 5.4) == (ivec3(-54060, -73959, 44512) , mat4x2(20.54, 81.10, 3259.6543, -0.8, 7189.4488, 575.629, 137.841, 150.149))); mat2x3(-9929.7425, 4.0, 55.97, -8.7, -9687.6030, 7.7))
           {
            ivec4 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v;
            ivec2 _GLF_SWITCH_4_4v[94];
            ;
            (ivec2(32504, -94221) ^ 16089);
            normalize(sign(5957.8700));
            (bitfieldReverse(GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup) , mat3x4(mat2x4(-9.2, -8.3, -17.35, -5.8, 5242.7473, 3.8, 72.81, -4364.0376)));
            ivec2(25131, 63993);
           }
          {
           uvec4 _GLF_SWITCH_4_5v[33], _GLF_SWITCH_4_6v;
           mat2x3(-5558.4172, 3.4, -2.7, -776.382, -4864.3913, -4.2);
           vec4(-79.31, -6.7, 953.046, 41.94);
           mat3(3.8, -3.4, 0.8, -65.38, 2393.7301, 2.6, -1837.7483, -778.138, -202.982);
           (~ ivec2(-10670, 53167));
           outerProduct(atan(vec2(-2540.1921, 5.2)), vec3(4.8, -3.5, -39.20));
          }
          mat4x2 _GLF_SWITCH_4_7v[92], _GLF_SWITCH_4_8v;
          if(false)
           {
            (uvec3(2181u, 60581u, 16319u));
            mat3x4(-1867.6555, 5554.0208, -47.99, 53.95, -5.9, 6.8, 86.28, 2.2, -8937.3886, 2.1, 426.126, 7.4);
            mat4x2 _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v;
           }
          if(false)
           {
            (subgroup_id >> 107056u);
            ;
            vec4(1.9, 12.99, 9400.7651, 1514.0787);
            float _GLF_SWITCH_4_12v[72], _GLF_SWITCH_4_13v;
            GLF_merged3_0_2_56_2_1_13_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenum_workgroupsubgroup_base;
            mat2x3 _GLF_SWITCH_4_14v, _GLF_SWITCH_4_15v, _GLF_SWITCH_4_16v;
            _GLF_SWITCH_4_8v;
            (subgroup_size == workgroup_id);
           }
          matrixCompMult(mat4(-635.180, 2829.9331, 654.055, -8.5, -9.1, 60.22, -341.494, 52.26, 632.318, 297.680, 4280.6457, -92.32, 0.8, 9.0, -154.740, -5.7), mat4(mat3(-3.3, -83.37, 46.74, -42.51, 5.9, 2431.7563, -7.4, 85.71, 4.8)));
         }
         default:
         1;
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   switch(_GLF_SWITCH(0))
    {
     case 21:
     for(     mat2x4(-7577.2349, 3.6, -8373.6891, 519.808, -6.4, -605.708, 60.70, -5820.6586);
 (mat4(796.182, 7848.0620, -4.2, 2150.0878, 3.1, 293.320, -6.4, -58.88, 61.32, 262.574, -4.2, 5.8, 570.970, -9.3, -82.60, -8.6) == mat4(22.24, -7.9, -893.428, -5.9, -732.176, -2.8, 2.2, 2710.6653, -5.6, -30.34, -729.386, -4.1, 4.5, 43.14, 21.30, 686.767)); mat4x2(injectionSwitch, injectionSwitch, vec3(-690.230, 93.33, 1.5).ps, (injectionSwitch * vec2(-621.928, -7.5))))
      {
       for(       subgroup_local_id;
 false; mat4x2(49.30, -82.69, -6008.8319, -6612.1360, -26.12, -2504.5267, 625.224, -31.76))
        {
         ;
         if((read == (subgroup_local_id / uvec3(173283u, 74595u, 19062u))[2]))
          {
           bvec2(true, false);
           ;
           false;
           true;
           mat3(-9781.1719, 2.3, 330.172, 9.5, -3959.9060, 8539.2581, 43.15, -1095.8058, 9.1);
           (mat3(44.30, 8390.2244, -1.1, -27.21, -58.92, 70.08, 34.23, -1432.8196, 6.1) * mat4x3(-22.66, -1240.7369, -1.5, 7.9, 8698.7392, 2.3, -78.17, 286.118, 2.0, 0.5, -723.981, -1.1));
           mat2x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
           mat2x3(-3.4, -9.3, -2773.3263, 64.03, -65.15, 772.397);
           ivec3 _GLF_SWITCH_4_2v;
          }
         (52067 % -8332);
        }
      }
     case 11:
     (uintBitsToFloat(num_workgroup) + mat3x4(64.35, 38.41, 45.37, -49.39, 1.1, -3.2, -2200.7150, -724.454, 7346.2068, 7486.7329, -80.12, 8.2));
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     barrier();
     break;
     default:
     1;
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   atomicStore(buf[GLF_merged3_0_2_56_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_14subgroup_local_idworkgroup_sizenext_virtual_gidnum_workgroup.z], uint(1), 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
