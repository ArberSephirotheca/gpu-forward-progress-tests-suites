#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))) || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), true, true, false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec4(_GLF_DEAD(false), true, true, false))))))))) || false)) && _GLF_IDENTITY(true, (true) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u);
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), true, true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), true, true))), false))), true), false))))), bvec2(bvec4(bvec2(bool(bool(false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(bvec3(bvec2(bool(bool(false)), true), true)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), true), bvec3(bvec4(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), true), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false))))))), true), true, true))), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))), (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), true))), false))), true), false))))), bvec2(bvec4(bvec2(bool(bool(false)), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))), bvec2(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), true), true))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-60.82)), float(injectionSwitch.y), bool(true)))) * 1.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, gl_WorkGroupID.x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, 1.0)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[_GLF_IDENTITY(1, int(ivec2(1, (1 ^ 1))))], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(648.039) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(33.93) : 0.0)))), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(float(mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(-27.19)), bool(false)))), 0.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) + sin(determinant(mat2(0.0, 0.0, 0.0, 0.0)))), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(-9.6)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))))) || false)))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)))))))), clamp(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)))))))), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)))))))), length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(44.70)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0)))) * cos(0.0)))))))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-25.07), (true ? true ? 0.0 : _GLF_FUZZED(-25.07) : _GLF_FUZZED(-6882.0025)))))), sin(0.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(36.96))), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.6) : 0.0)), 0.0, 0.0)))), injectionSwitch.x), 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)) / 1.0))) ? _GLF_FUZZED(vec4(-4797.3430, -626.326, -6902.5575, 1207.4523)) : vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), vec4(mat2x3(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), 1.0, 1.0))), vec4(injectionSwitch, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(5.9) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), 0.0))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5276)))], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))])), (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), 0.0 + (float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))))))[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-47.98)), vec2(_GLF_FUZZED(160.377), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(398.957)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch)), mix(vec2(_GLF_FUZZED((8.4)), _GLF_FUZZED(-0.1)), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5276)))], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))])), (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), 0.0 + (float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))))))[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-47.98)), vec2(_GLF_FUZZED(160.377), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(398.957)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch)))[0], ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5276)))], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))])), (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), 0.0 + (float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))))))[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-47.98)), vec2(_GLF_FUZZED(160.377), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(398.957)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch)))[0]) - 0.0), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-5276)))], _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], min(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) - 0)))), 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))])), (false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), 0.0 + (float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))), mix(float(_GLF_FUZZED(7.5)), float(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0))))), bool(true)))))))], (true ? injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))] : _GLF_FUZZED(-6.0)))))) / 1.0), 0.0, 1.0))), length(vec4(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-85.80)), bool(false))), 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), clamp(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0), _GLF_IDENTITY(mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)), mat4(1.0) * (mat4(1.0) * (vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0)))))))))[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.3)), bool(false))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-5.5) : float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-47.98)), vec2(_GLF_FUZZED(160.377), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(398.957)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true))))), 0.0, 0.0, 0.0)))), 0.0 + _GLF_IDENTITY((float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(0.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(log(vec2(1.0, 1.0)))).y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(-0.7)), bool(false))), 0.0, 0.0))), (false ? _GLF_FUZZED(-680.764) : (float(mat4x3(_GLF_IDENTITY(injectionSwitch[1], float(vec3(injectionSwitch[1], 0.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0)))), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, 0.0))))), injectionSwitch)))[1]), bvec2(true, true))).x > injectionSwitch.y) && true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))), true, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y))), true, false, true)), true, true, false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), vec2(mat3(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0))), tan(0.0), 1.0, sin(0.0), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(vec3(vec3(0.0, 0.0, 1.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-53.06) : 0.0)), 0.0), vec3(0.0, 1.0, 1.0))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.7)), bool(false))), 1.0))), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(workgroup_id)), clamp((true ? workgroup_base : _GLF_FUZZED(workgroup_id)), (true ? workgroup_base : _GLF_FUZZED(workgroup_id)), (true ? workgroup_base : _GLF_FUZZED(workgroup_id))))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, log(1.0), 0.0, 1.0, 0.0, 1.0, length(abs(vec2(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0)), (vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0)), log(1.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(length(abs(vec2(0.0, 0.0))), max(length(abs(vec2(0.0, 0.0))), _GLF_IDENTITY(length(abs(vec2(0.0, 0.0))), clamp(length(abs(vec2(0.0, 0.0))), length(abs(vec2(0.0, 0.0))), length(abs(vec2(0.0, 0.0))))))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), max(dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, cos(0.0), 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 1.0))) + vec2(0.0, 0.0))).y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-22376) : _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) | (1))))))) % subgroup_size);
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec2(4, int(_GLF_ZERO(0.0, injectionSwitch.x))))), 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(mat4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(78.34), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(((-7.0 - -84.19) + -5104.6235))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), abs(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, sqrt(1.0), length(cross(vec3(3.7, 5.5, -533.093), vec3(3.7, 5.5, -533.093))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0)), float(_GLF_IDENTITY(float(float(mat3(injectionSwitch.y, 0.0, sqrt(1.0), length(cross(vec3(3.7, 5.5, -533.093), vec3(3.7, 5.5, -533.093))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))), float(mat4(float(float(mat3(injectionSwitch.y, 0.0, sqrt(1.0), length(cross(vec3(3.7, 5.5, -533.093), vec3(3.7, 5.5, -533.093))), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38663) : 1)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_id) : (0u))) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))), (false ? _GLF_FUZZED(workgroup_size) : ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))), (((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))))) << 0u))))), (_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(38663) : 1)))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(subgroup_id) : (0u))) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (false ? _GLF_FUZZED(workgroup_size) : (0u))) / 1u)))))), (_GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))))), (false ? _GLF_FUZZED(workgroup_size) : ((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), uint(uvec2(_GLF_IDENTITY(0u, (0u) | 0u), 1u))) : _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))), (((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u)))))) | ((_GLF_IDENTITY(uint(1), (uint(1)) | _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) / 1u))))))) << 0u)))))) - 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (! (! (false))) || false), ! (! (_GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))), false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))), false, true)))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), false, true)))) && true), bool(bvec4(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) || false), true, true, false))), false, true)))))), false, true, false)), ! (! (bool(bvec4((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false))), false, true)))))), false, true, false))))))) && true))) || false)))))))) && true)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, ! (! (false)))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (_GLF_IDENTITY(false, ! (! (false)))))) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true, false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true, false, false)))))), false || (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true, false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) || false) && true, false, false)))))))))))))) || (_GLF_IDENTITY(false, ! (! (false)))))) && true), true, false)), true, true, true)))))))) && true) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), false, true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
