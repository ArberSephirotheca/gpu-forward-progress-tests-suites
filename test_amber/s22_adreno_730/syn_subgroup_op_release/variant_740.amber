#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat2x3 _f0;
 bvec2 _f1;
 mat2x4 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_9 {
 mat2 _f0;
 ivec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat3x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 uvec4 _f1;
 uvec3 _f2;
 uvec4 _f3;
 uint _f4;
 bvec4 _f5;
 bool _f6;
} ;

struct _GLF_struct_11 {
 vec3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_9 _f3;
 mat4 _f4;
 mat4 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_5 {
 mat3 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 ivec4 _f1;
 uint _f2;
 uint _f3;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 uvec4 _f1;
 ivec3 _f2;
 bvec3 _f3;
 vec3 _f4;
 uvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 uint _f1;
 mat2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_1 {
 float _f0;
 float _f1;
 float _f2;
 bvec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 ivec3 _f1;
 mat4x3 _f2;
 bool _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_12 {
 mat4 _f0;
 _GLF_struct_6 _f1;
 uint workgroup_id;
 _GLF_struct_11 _f2;
 ivec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), bool(bvec4(! (true), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false, true)))))))) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(98.63)), vec2(_GLF_FUZZED(4381.5709), (injectionSwitch)[1]), bvec2(false, true))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4(1.0), _GLF_struct_6(_GLF_struct_0(bvec4(true), ivec3(1), mat4x3(1.0), true, bvec2(true)), _GLF_struct_1(1.0, 1.0, 1.0, bvec2(true), mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), (_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(122.035)), bool(false))))) / 1.0))), _GLF_struct_2(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - vec4(0.0, 0.0, 0.0, 0.0)), 1u, mat2(1.0), bvec4(true)), mat4(1.0), _GLF_struct_3(bvec4(true), uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), 1u * (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), (true ? (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u) >> _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(num_workgroup))) | (1u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) ^ 0u))), ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup))) | (1u), _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)), min((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), clamp(~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)))) << 0u)), (true ? (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), (~ (5u)) ^ 0u))), ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup))) | (1u), _GLF_IDENTITY((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)), min((_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), clamp(~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)))) << 0u)) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), clamp(_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(num_workgroup))) | (1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))), uint(uint(~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))))))))))) : _GLF_FUZZED(num_workgroup))) | (1u), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)) << 0u)))), uint(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(num_workgroup))) | (1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))), uint(uint(~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))))))))))) : _GLF_FUZZED(num_workgroup))) | (1u), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)) << 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u)) | (_GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec2(_GLF_IDENTITY(uint(5u), uint(5u)), 1u))))))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(num_workgroup))) | (1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (true ? _GLF_IDENTITY(5u, (5u) << 0u) : _GLF_FUZZED(46839u)))))), (true ? (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))), (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (_GLF_IDENTITY(5u, ~ (~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) + 0u)) | 0u))))))))))) << 0u))) : _GLF_FUZZED(num_workgroup))) | (1u), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)) << 0u)))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))) ? clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), min(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), 0u ^ (_GLF_FUZZED(num_workgroup))), _GLF_FUZZED(num_workgroup))))) | (1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) - 0u))) | 0u)) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ _GLF_IDENTITY((5u), (_GLF_IDENTITY((5u), ~ (~ ((5u))))) ^ (1u ^ (1u & 1u))), ~ (5u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u), 1u * (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u))))) | (1u), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (true ? _GLF_IDENTITY(uint(5u), uint(5u)) : _GLF_FUZZED(186252u)))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) >> 0u))) | (1u)) << 0u)))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))) : _GLF_FUZZED(subgroup_size), (true ? clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) << 0u, min((uint(5u)) << 0u, (uint(5u)) << 0u)))) << 0u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (_GLF_IDENTITY(uint(5u), uint(5u))))) : _GLF_FUZZED(num_workgroup))) | (1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ _GLF_IDENTITY((5u), min((5u), _GLF_IDENTITY(_GLF_IDENTITY((5u), ((5u)) >> 0u), (_GLF_IDENTITY((5u), ((5u)) >> 0u)) - 0u))), ~ (5u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u), 1u * (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u))))) | (1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)))) : _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u), 1u * (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (_GLF_IDENTITY(5u, (5u) >> 0u)), ~ (5u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) / 1u))))) | (1u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, 1u * (5u))))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))) ^ 0u), uint(5u)), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 5u))), max(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u)), (true ? 0u | (_GLF_IDENTITY(uint(5u), (uint(5u)) * 1u)) : _GLF_FUZZED(uvec4(82173u, 163653u, 130221u, 158680u).p)))), uint(5u))))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)) << 0u)))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec3((1u), 1u, 1u), (uvec3((1u), 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))))) | (uvec3((1u), 1u, 1u))))) + 0u), 1u))) : _GLF_FUZZED(subgroup_size)) | 0u))))), clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) / 1u))) * ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))) << (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) : _GLF_FUZZED(num_workgroup))) | _GLF_IDENTITY((1u), uint(uint((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))))))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), 0u), clamp(uvec2(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), 0u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) - (190774u & 0u)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))), min((~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))), (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))))))), 0u), uvec2(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), 0u))))) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))), clamp(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))), 0u ^ (uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))))))) : _GLF_FUZZED(num_workgroup))) | (1u), (_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))) | (1u)) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 0u | (1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), min(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) / 1u) + 0u), 1u)), clamp(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, max((1u) + 0u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, uint(uint(1u))), 1u))) ^ (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) + 0u))), 1u)), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))) << 0u)))) >> 0u)), _GLF_IDENTITY(clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) : _GLF_FUZZED(num_workgroup))) | (1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))))))), _GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))))) : _GLF_FUZZED(num_workgroup), clamp(true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))))))), _GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))))) : _GLF_FUZZED(num_workgroup), true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))))))), _GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (_GLF_IDENTITY(5u, (5u) | 0u))))))))))) : _GLF_FUZZED(num_workgroup), true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u))))))), _GLF_IDENTITY(0u, 1u * (0u)) | (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, ~ (~ (5u)))) << 0u)) - 0u))))))))))) : _GLF_FUZZED(num_workgroup))))) | (1u), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY((true ? (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u))) * uvec4(1u, 1u, 1u, 1u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u))) * uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u))) * uvec4(1u, 1u, 1u, 1u)), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u)), (uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 1u, (1u & 1u))) * uvec4(1u, 1u, 1u, 1u))))) ^ uvec4(0u, 0u, 0u, 0u)))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup)), ~ (~ (_GLF_IDENTITY((true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) - 0u))), ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) - 0u)))) | ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), 0u + (uint(5u)))) - 0u))))) * 1u)) : _GLF_FUZZED(num_workgroup)), (false ? _GLF_FUZZED(subgroup_size) : (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup)))))))) | (1u)) << 0u)))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) + 0u), 1u))), (clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), (true) && true) ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) / 1u)) : _GLF_FUZZED(num_workgroup))) | (1u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup))), ~ (~ (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (5u), 1u * (_GLF_IDENTITY(~ (5u), uint(uint(~ _GLF_IDENTITY((5u), 0u | ((5u)))))))), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup)))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, ~ (~ (5u))), ~ (_GLF_IDENTITY(~ (5u), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), uint(_GLF_IDENTITY(5u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(5u, (5u) ^ (0u | 0u))), min(~ (5u), ~ (5u)))))))) : _GLF_FUZZED(num_workgroup)))) / 1u))) | (1u), (_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (_GLF_IDENTITY(uint(5u), uint(uvec4(uint(5u), 1u, _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 0u, 0u))), 0u))))))), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))), 0u + (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) * 1u)))) << 0u), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(5u), uint(5u))), (true ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) * 1u)) : _GLF_FUZZED(num_workgroup))))) | (1u)) << 0u)))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) + 0u, ((1u) + 0u) ^ 0u)), 1u)))) / 1u))))), ivec3(1), bvec3(true), vec3(1.0), uvec2(1u), _GLF_IDENTITY(vec2(1.0), min(vec2(1.0), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(1.0)))))), _GLF_struct_4(ivec2(1), ivec4(1), 1u, 1u), _GLF_struct_5(mat3(1.0), mat4x2(1.0), ivec3(_GLF_IDENTITY(1, 0 ^ (1))), mat2x3(1.0), uvec4(1u))), _GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)).x, max(gl_WorkGroupID.x, gl_WorkGroupID.x)), gl_WorkGroupID.x)), _GLF_struct_11(vec3(1.0), _GLF_struct_7(mat4(1.0), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u)))) - uvec4(0u, 0u, 0u, 0u)), uvec3(1u), uvec4(1u), 1u, bvec4(_GLF_IDENTITY(true, (true) || false)), true), _GLF_struct_8(vec2(1.0), mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, float(mat4(1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), float(float(1.0))))), 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) - 0.0))))), mat4(1.0)), _GLF_struct_9(mat2(1.0), ivec4(1), mat4x2(1.0)), mat4(1.0), _GLF_IDENTITY(mat4(1.0), transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))))), _GLF_struct_10(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec2(true), mat2x4(1.0), mat2x3(1.0))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) * 1))), clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) && true)))))))
  return;
 uint workgroup_base = workgroup_size * _GLF_struct_replacement_12.workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(194714u) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(194714u) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))), ((_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(194714u) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))))))) | ((_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(194714u) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))))) - 0u))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(194714u) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))) + subgroup_id * subgroup_size) / 1u), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(194714u) : _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, 0u)))))), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))) + subgroup_id * subgroup_size)) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))))))), (true ? (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | 0u), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | _GLF_IDENTITY(((workgroup_base)), clamp(((workgroup_base)), ((workgroup_base)), ((workgroup_base)))))))) : _GLF_FUZZED(19225u))) - 0u))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))), uint(uvec2(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))), 1u))), _GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u), ~ (~ (_GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u)))) : _GLF_FUZZED(floatBitsToUint(-6.2)))))))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)) | ((workgroup_base)), (true ? _GLF_IDENTITY(((workgroup_base)) | ((workgroup_base)), (((workgroup_base)) | ((workgroup_base))) | 0u) : _GLF_FUZZED(subgroup_size))))))) - 0u))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | 0u) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ (uint(3u)))))) ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED(clamp((num_workgroup % num_workgroup), subgroup_size, uvec2(144203u, 140908u)[0])))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size) | 0u)) ^ 0u) + subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), max((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), clamp(_GLF_IDENTITY((workgroup_base), min((workgroup_base), (workgroup_base))), (workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base)))))) - 0u))))) + subgroup_id * subgroup_size + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_id * subgroup_size + subgroup_local_id))))) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uvec4(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(subgroup_local_id, 0u, 1u)), 0u | (uint(uvec3(subgroup_local_id, 0u, 1u))))) + 1) % subgroup_size), 1u, 0u, 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bvec3((subgroup_local_id + 1 < subgroup_size), false, false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-255.765) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), float(mat3x2(float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(vec4(-848.882, -16.23, -5.5, 765.767)[0]))), 0.0, 1.0, 1.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), int(ivec2(0, 0))))), 0))], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))), bool(bvec4(false, true, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), ! (! ((! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (! _GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, true, true))))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((! (! (false))))), (! (_GLF_IDENTITY(! ((! (! (false)))), false || (! ((! (! (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))), false || ((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), bool(bvec3(! (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))), ! (! ((! (! (false))))))), true, false))), false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), ! (! ((! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (! _GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, true, true))))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((! (! (false))))), (! (_GLF_IDENTITY(! ((! (! (false)))), false || (! ((! (! (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))), false || ((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), bool(bvec3(! (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))), ! (! ((! (! (false))))))), true, false))), false)))))), true && (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), ! (! ((! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! (! _GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, true, true))))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! ((! (! (false))))), (! (_GLF_IDENTITY(! ((! (! (false)))), false || (! ((! (! (false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))), false || ((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), bool(bvec3(! (_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))), ! (! ((! (! (false))))))), true, false))), false)))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)) || ((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))))), ! (! ((! (! (false))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((! _GLF_IDENTITY((! (false)), true && ((! (false))))), ! (_GLF_IDENTITY(! ((! (! (false)))), ! (_GLF_IDENTITY(! (! ((! (! (false))))), (! (! ((! (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))), false || ((_GLF_IDENTITY((! (! (false))), ! (! ((! (! (false)))))))))))), bool(bvec3(! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), false || (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))), ! (! ((! (! (false))))))), true, false))), false)))))))))), bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), true && (bool(bool((! (false))))))))) && true)), ! (! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bool((! (false)))), (bool(bool((! (false))))) || false)))))), bool(bvec4(false, true, false, false)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-326.098, 7528.3817)))), injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | (4)));
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
