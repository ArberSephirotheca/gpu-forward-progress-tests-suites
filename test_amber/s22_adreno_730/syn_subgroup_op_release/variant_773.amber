#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-194.552))) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false))))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (false)) || false))))))), false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false))), true, true, true))))) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, true))) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))))), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false)))) && true)))) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (false), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && (false)) || false))))))), false, false))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))))), false, false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! ((false) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (true)) && (false))))))), bool(bvec3((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), ((false)) && true))))))), false, false))), true, true, true))))) || false)) || false)))) || false), true && ((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) | uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), true && (bool(false))), _GLF_IDENTITY((bool(false)), ((bool(false))) && true) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false)), true, true, false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) || false)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false))))) || false), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(-7.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), min(cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), mix(float(cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0)))), float(_GLF_FUZZED(14.86)), bool(false))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5.9))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0)), (false ? _GLF_FUZZED(determinant(mat3(-2.7, -819.669, -9693.5711, -6540.9165, -77.60, 851.116, -6.0, 675.233, -91.06))) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))))), 1.0, _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : min(injectionSwitch, injectionSwitch)))).y)))))), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, bool(_GLF_IDENTITY(bvec3((bool(false)) || false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(false)) || false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3((bool(false)) || false, false, false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(5.3))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))))), true, true, false)))), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, bool(_GLF_IDENTITY(bvec3((bool(false)) || false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(false)) || false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3((bool(false)) || false, false, false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(5.3))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))))), true, true, false)))), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), true)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || false, bool(_GLF_IDENTITY(bvec3((bool(false)) || false, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((bool(false)) || false, false, false))), bvec3(bvec3(bvec3(bvec3(bvec3((bool(false)) || false, false, false))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) : _GLF_FUZZED(5.3))), cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(false, ! (! (false)))), false))))), true, true, false)))), (bool(false)) || false)), true, true, false)))), (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, determinant(mat4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))) / 1.0)), 0.0))), 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), true)))))))), true))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) + 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(40269) : 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) | 0), (buf[virtual_gid] = 1) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))) && true))) && (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) || false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0))), clamp(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0)), (min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0))) / 1)), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0))), (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0))), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0)))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0)))))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0))), (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(1, (1) >> 0)))) / 1u))), subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, (1) >> 0))))), (subgroup_local_id + 1) >> 0u) < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(29058))) | 0))) ^ (_GLF_IDENTITY(4, (4) / 1))), 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(bvec4(bool(bvec4(false, false, false, false)), true, true, true)))), ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true), true, true, true))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_IDENTITY(((true)) || false, ! (! (((true)) || false)))), bool(bvec4(! (true), true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) || false), bool(bvec4(! (true), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))), false)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(false, false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, false)))))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.8)), bool(false))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(vec3(abs(1.0), 0.0, 1.0)), clamp(float(vec3(abs(1.0), 0.0, 1.0)), float(vec3(abs(1.0), 0.0, 1.0)), float(vec3(abs(1.0), 0.0, 1.0))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0)), vec3(0.0, 0.0, abs(1.0)))), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, abs(1.0))), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, abs(1.0)))), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y)))), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(distance(4.8, -1.2), min(_GLF_IDENTITY(distance(4.8, -1.2), float(mat2x4(distance(4.8, -1.2), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(distance(4.8, -1.2), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(distance(4.8, -1.2), min(distance(4.8, -1.2), distance(4.8, -1.2))), 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, tan(0.0), 1.0)), mix(float(float(mat3(_GLF_IDENTITY(distance(4.8, -1.2), min(distance(4.8, -1.2), distance(4.8, -1.2))), 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, tan(0.0), 1.0))), float(_GLF_FUZZED(-734.044)), bool(false))))))) : 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, exp(0.0)), _GLF_IDENTITY(vec3(0.0, 0.0, abs(1.0)), vec3(mat2x4(vec3(0.0, 0.0, abs(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, 1.0))))), float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.6, 8.1)) : injectionSwitch)).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) * 1.0), 0.0, 0.0, 1.0)), dot(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(vec3(abs(1.0), 0.0, 1.0)), clamp(float(_GLF_IDENTITY(vec3(abs(1.0), 0.0, 1.0), (vec3(abs(1.0), 0.0, 1.0)) * mat3(1.0))), float(vec3(abs(1.0), 0.0, 1.0)), float(vec3(abs(1.0), 0.0, 1.0))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0)), vec3(0.0, 0.0, abs(1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(78.89)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(fract(-295.414))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, exp(0.0)), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, abs(1.0)))), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y), clamp(_GLF_IDENTITY(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y), min(clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y)))))), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(4.8, -1.2)) : 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4x3(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, exp(0.0)), _GLF_IDENTITY(vec3(0.0, 0.0, abs(1.0)), vec3(mat2x4(vec3(0.0, 0.0, abs(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) + 0.0), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(448.128)), vec2(_GLF_FUZZED(-8622.8711), (injectionSwitch)[1]), bvec2(false, true))).y)))), 1.0, 0.0, exp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(8.9)), float(max(0.0, 0.0)), bool(true))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0)))), max(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0)))) + 0.0)) / 1.0))), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mix(vec4(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], min(_GLF_IDENTITY((vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], max((vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0], (vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0])), (vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[0])), _GLF_FUZZED(0.7), _GLF_FUZZED(-2.0), _GLF_FUZZED(-4.0)), vec4(_GLF_FUZZED(-3.2), (vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[1], (vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[2], (vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))[3]), bvec4(false, true, true, true))), vec4(0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(float(vec3(abs(1.0), 0.0, 1.0)), clamp(float(vec3(abs(1.0), 0.0, 1.0)), float(vec3(abs(1.0), 0.0, 1.0)), float(vec3(abs(1.0), 0.0, 1.0))))))), dot(vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), exp(0.0)), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7.2)), bool(false))))), abs(1.0)))), 1.0, 1.0)), min(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), 1.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), min(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, sqrt(1.0), cos(0.0), 0.0))), abs(1.0))), dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, abs(1.0)))), 1.0, 1.0)), float(mat3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(72.48) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false))), injectionSwitch.y)))))), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(4.8, -1.2)) : 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 0.0, 1.0, determinant(mat3(1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat4x2(1.0, 0.0, 1.0, determinant(mat3(1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, exp(0.0)), vec3(0.0, 0.0, abs(1.0))), dot(vec3(0.0, 0.0, exp(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, abs(1.0)), vec3(mat2x4(vec3(0.0, 0.0, abs(1.0)), 0.0, 0.0, 1.0, 1.0, 1.0))), vec3(mat2x4(vec3(0.0, 0.0, abs(1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)))))) / round(length(_GLF_IDENTITY(normalize(1.0), clamp(_GLF_IDENTITY(normalize(1.0), max(_GLF_IDENTITY(normalize(1.0), mix(float(_GLF_FUZZED(-13.71)), float(normalize(1.0)), bool(true))), _GLF_IDENTITY(normalize(1.0), 1.0 * (normalize(1.0))))), _GLF_IDENTITY(normalize(1.0), (normalize(1.0)) * 1.0), normalize(1.0)))))), 0.0)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))))))) > injectionSwitch.y) || false)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, sin(0.0)))) > injectionSwitch.y) || false)), false, false, false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
