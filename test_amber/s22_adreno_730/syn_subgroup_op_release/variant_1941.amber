#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), false)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, int(ivec3(1, 1, (1 & 1))))], (true ? injectionSwitch[1] : _GLF_FUZZED(0.1))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(_GLF_IDENTITY(1u, (1u) >> 0u), 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), (_GLF_DEAD(false)) || false)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY((1.0), max((1.0), (1.0))) * 1.0, mix(float((1.0) * 1.0), float(_GLF_FUZZED(663.666)), _GLF_IDENTITY(bool(false), false || (bool(false)))))), 1.0))) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3.4, -2170.9522), vec2(mat4(vec2(-3.4, -2170.9522), 0.0, length(0.0), 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (true ? length(vec3(0.0, 0.0, 0.0)) : _GLF_FUZZED(-3.7))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)), sin(0.0), 1.0, 0.0, 1.0, 0.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), (false ? _GLF_FUZZED(2693.2740) : _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), clamp(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), max(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0)))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0))))))), exp(0.0)))).r)), float(injectionSwitch.y), bool(true))), injectionSwitch.y), min(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3.4, -2170.9522), vec2(mat4(vec2(-3.4, -2170.9522), 0.0, length(0.0), 1.0, 1.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 1.0, 0.0, 1.0, 0.0, tan(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9657.1993)), float(1.0), bool(true)))))), exp(0.0)))).r)), float(injectionSwitch.y), bool(true))), injectionSwitch.y), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-3.4, -2170.9522), vec2(mat4(vec2(-3.4, -2170.9522), 0.0, length(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)))), 1.0, determinant(mat3(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), sin(0.0), 1.0, 0.0, 1.0, 0.0, tan(_GLF_IDENTITY(determinant(mat2(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (float(mat4x2(determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))) / 1.0))), exp(0.0)))).r)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true)))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(1.0)))))) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(false, bool(bool(false)))), true)))))) || _GLF_IDENTITY(false, true && (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ (uint(workgroup_id))) >> 0u))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ (uint(workgroup_id))) >> 0u))))), (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ (uint(workgroup_id))) >> 0u)))))) - 0u)), max(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ _GLF_IDENTITY((uint(workgroup_id)), ((uint(workgroup_id))) | ((uint(workgroup_id))))) >> 0u))))), (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(workgroup_id), max(uint(workgroup_id), uint(workgroup_id))), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ (uint(workgroup_id))) >> 0u)))))) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ _GLF_IDENTITY((uint(workgroup_id)), ((uint(workgroup_id))) / 1u)) >> 0u))))), (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), ~ (_GLF_IDENTITY(~ (uint(workgroup_id)), (~ (uint(workgroup_id))) >> 0u)))))) - 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(7737.5479)), bvec2(false, false))), (false ? _GLF_FUZZED(vec2(4.5, 284.825)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(4415.6033), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(896.876, 9.3)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-79471))))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-79471)))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))]), vec2(_GLF_FUZZED(1.7), _GLF_FUZZED(_GLF_IDENTITY(7737.5479, clamp(7737.5479, 7737.5479, 7737.5479)))), bvec2(false, false))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), min((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (injectionSwitch))), vec2(mat4x3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), sin(0.0), cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) + vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)) / vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + 1), (true ? ~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 0u)))), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + _GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), ((clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) + 0u)))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + 1) : _GLF_FUZZED(workgroup_base)))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), uint(uvec4(min(subgroup_local_id, subgroup_local_id), (85538u & 0u), 1u, 0u)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u), subgroup_local_id), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u)))) << 0u)))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) ^ 0u)) + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), max((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)), max(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size) << 0u), (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + (clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + 1), (true ? ~ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 0u)))), uint(uvec4(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))), subgroup_local_id, subgroup_local_id), max(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + _GLF_IDENTITY((clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)), ((clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id))) + 0u)))), (1u & uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u, 0u)))) + 1) : _GLF_FUZZED(workgroup_base)))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(subgroup_local_id, subgroup_local_id), uint(uvec4(min(subgroup_local_id, subgroup_local_id), (85538u & 0u), 1u, 0u)))), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size, min((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_id))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u + (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u), subgroup_local_id), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), uint(uvec2(clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id), 0u)))) << 0u)))) + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), true && ((! (! (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (0 << _GLF_IDENTITY(int(0), int(0)))), 1))])).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), min(_GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), clamp(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), min(vec2(1.0, 1.0) * (injectionSwitch), vec2(1.0, 1.0) * (injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(62.07)), bool(false))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true)))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, ! (! (true))))))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(4, (4) / 1));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.8)), bool(false))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, sqrt(1.0), 0.0))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.8)), bool(false))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, sqrt(1.0), 0.0))) > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -53.02))), vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -53.02))), vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -53.02))), vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -53.02))), vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((+ -53.02))), vec2(_GLF_FUZZED(9.5), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))) || false)) && true))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))), false || (bool(bvec3(false, false, true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), false || (bool(bvec3(false, false, true)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, false, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (! (! (injectionSwitch.x > injectionSwitch.y))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))) && true), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y, injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))), true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- -5.8)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(((279.854 + -8278.4372) - -17.67))), bvec2(true, false))).y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), float(float(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0)))))), 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), max(float(1.0), float(1.0))), float(_GLF_FUZZED(-91.49)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.3)), float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(26.91) : 1.0))), bool(true))), 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-91.49)), bool(false))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(2.3)), bool(false))), 0.0, 0.0)), 1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(0.5)), float(0.0), bool(true))), 1.0)))) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(-4.7)), mix(float(float(_GLF_FUZZED(-4.7))), float(_GLF_FUZZED((8569.0794 + -9760.3505))), bool(false))), bool(false)))), float(_GLF_FUZZED(float(73275u))), bool(false)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-110.201))) : _GLF_FUZZED(uintBitsToFloat(subgroup_id))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x)))), log(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, log(1.0), 0.0)), (float(mat3x4(injectionSwitch.y, 0.0, determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))))))))), log(1.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, log(1.0), 0.0))) - 0.0))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), 0.0, 0.0))), (injectionSwitch))) + sin(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) * 1.0), (1.0) / 1.0))), 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(24.32) : 1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), 0.0, 0.0))), _GLF_IDENTITY((injectionSwitch), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))))) + sin(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), (mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * (mat2(1.0) * ((injectionSwitch))))), min((injectionSwitch), (injectionSwitch))), 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), 0.0, 0.0)), 0.0, 0.0)) * mat4(1.0)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3350.6007)), float(0.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), 0.0, 0.0))), (injectionSwitch))) + sin(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0)))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(1.0, 1.0) * (vec2(1.0, 1.0))))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, float(vec2(0.0, cos(0.0)))), 0.0, 0.0))), (injectionSwitch))) + _GLF_IDENTITY(sin(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-8787.2311, -66.56))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), min(_GLF_IDENTITY(sin(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-8787.2311, -66.56))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), (sin(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-8787.2311, -66.56))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))) * mat2(1.0)), sin(_GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(vec2(0.0, 0.0))), (clamp(sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(vec4(sqrt(vec2(0.0, 0.0)), 1.0, 0.0))), sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-8787.2311, -66.56))))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), ! (! (bool(bvec4(false, true, true, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0)))) / cos(vec2(0.0, 0.0))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-719.494, -683.560)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))), mix(vec2(_GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-719.494, _GLF_IDENTITY(-683.560, mix(float(_GLF_FUZZED(0.3)), float(-683.560), bool(true))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], mix(float((false ? _GLF_FUZZED(vec2(-719.494, _GLF_IDENTITY(-683.560, mix(float(_GLF_FUZZED(0.3)), float(-683.560), bool(true))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0]), float(_GLF_FUZZED(-1683.3439)), bool(false))), (false ? _GLF_FUZZED(vec2(-719.494, -683.560)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-35.87, mix(float(-35.87), float(_GLF_FUZZED(3.7)), bool(false)))), _GLF_FUZZED(48.81)), bvec2(_GLF_IDENTITY(false, false || (false)), false))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))).y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)), injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, log(cos(0.0)) + (injectionSwitch.y))))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, log(cos(0.0)) + (injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false))))), (bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false)))))) || false))))))) || (! ((_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.6)))) * 1.0) < injectionSwitch.y))))))))) && (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2625.7161)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0)).x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), (bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))) || false))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.46), _GLF_FUZZED(-0.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-10.46), _GLF_FUZZED(-0.7)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), bvec2(true, true)))) / cos(vec2(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))).y), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-98.80) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(562.048, -1384.1779, 224.288, -9.3))) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.7))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), _GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(562.048, -1384.1779, 224.288, -9.3))) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.7))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), true && (_GLF_IDENTITY(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(562.048, -1384.1779, 224.288, -9.3))) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.7))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bool(bool(bool(bool(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(562.048, -1384.1779, 224.288, -9.3))) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.7))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(2.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), vec2(_GLF_FUZZED(990.578), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(0.3)), min(float(_GLF_FUZZED(0.3)), float(_GLF_FUZZED(0.3)))), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))) + 0.0))), injectionSwitch.x)))) > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))), true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), ! (! (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true))))), true, _GLF_IDENTITY(true, (true) && true)), true))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(357.567)), bool(false))) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.3), _GLF_FUZZED(-0.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y)))))), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4309.4213)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || ((! ((injectionSwitch.x > injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4309.4213)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || ((! ((injectionSwitch.x > injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), false || (_GLF_IDENTITY(false || (true), ! (! (false || (true))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true), false, true, true)))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || _GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), true, true, true)))), ((_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bool((false)))), true, true, true))))) && true))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.50), _GLF_FUZZED(881.821)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)))) / vec2(1.0, 1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(9.7, -2.2))), ((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, _GLF_IDENTITY(4.4, clamp(4.4, 4.4, 4.4))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)), mat2(1.0) * (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(87.49, 4.4)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(87.49, 4.4)))))))) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, _GLF_IDENTITY(4.4, clamp(4.4, 4.4, 4.4))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)), mat2(1.0) * (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(87.49, 4.4)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(87.49, 4.4)))))))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(2.1)), vec2(_GLF_FUZZED(6.4), (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, _GLF_IDENTITY(4.4, clamp(4.4, 4.4, 4.4))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)), mat2(1.0) * (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(87.49, 4.4)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(87.49, 4.4)))))))) / vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), mat4(1.0) * (vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))) : _GLF_FUZZED(vec2(9.7, -2.2)))) - vec2(0.0, 0.0))).y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)))))) || _GLF_IDENTITY((false), false || ((false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.50), _GLF_FUZZED(881.821)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)))) / vec2(1.0, 1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(9.7, -2.2))), ((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(510.772)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, 0.0)))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, _GLF_IDENTITY(4.4, clamp(4.4, 4.4, 4.4))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)), mat2(1.0) * (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(87.49, 4.4)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(87.49, 4.4)))))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), mat4(1.0) * (_GLF_IDENTITY(vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), (vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))) * vec4(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(vec2(9.7, -2.2)))) - vec2(0.0, 0.0))).y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || _GLF_IDENTITY((false), false || ((false)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-36.50), _GLF_FUZZED(881.821)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4)))) / vec2(1.0, 1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(9.7, -2.2))), ((_GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), min(_GLF_IDENTITY((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))), clamp((true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, _GLF_IDENTITY(4.4, clamp(4.4, _GLF_IDENTITY(4.4, (4.4) / 1.0), 4.4))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(87.49, mix(float(_GLF_FUZZED((vec4(-9.6, -1.0, 7.1, -6.0).a - -4063.6934))), float(87.49), bool(true))), 4.4)), mat2(1.0) * (true ? _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) - vec2(0.0, 0.0)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(mat2((injectionSwitch), 1.0, sqrt(1.0)))), ((injectionSwitch)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(87.49, 4.4))))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))) && true) ? _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(87.49, 4.4)), vec2(0.0, 0.0) + (_GLF_FUZZED(vec2(87.49, 4.4)))))))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - abs(vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), mat4(1.0) * (vec4(clamp(injectionSwitch, injectionSwitch, injectionSwitch), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))))))) : _GLF_FUZZED(vec2(9.7, -2.2)))) - vec2(0.0, 0.0))).y)))) && true), true, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) / sqrt(1.0))), vec3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), dot(vec3(1.0, 0.0, sqrt(0.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(1.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-4099.8467, 46.69, 4.3)))), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) * vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])))), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], max((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0])), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0], injectionSwitch[1])))))[1]), vec2(_GLF_FUZZED(-54.05), _GLF_FUZZED(-852.841)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(vec2(0.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(vec2(0.0, 0.0))))), abs(0.0), determinant(mat2(0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(mat3x4(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(vec2(0.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(vec2(0.0, 0.0))))), abs(0.0), determinant(mat2(0.0, 0.0, sqrt(0.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), transpose(transpose(mat3x4(mat3x4(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 1.0))), 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, length(vec2(0.0, 0.0))))), abs(0.0), determinant(mat2(0.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))[0], injectionSwitch[1])), injectionSwitch)).y))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-35253) : 1))])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-35253) : 1))])))[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(-544.395), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-35253) : 1))])))[1]), bvec2(false, true))))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y))))) / 1.0)))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, max(injectionSwitch.y, injectionSwitch.y)))))) || false), (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat2(injectionSwitch[0], 1.0, 1.0, 1.0))), injectionSwitch[1])))))).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(-35253) : 1, (false ? _GLF_FUZZED(-35253) : 1) ^ 0)))])))).y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), 1.0 * (max(injectionSwitch.y, injectionSwitch.y)))))))))) / 1.0)))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, exp(0.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, exp(0.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0)))))), injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))), injectionSwitch))[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED(6.3), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED((-583.374 / 5.5))), bvec2(true, false))))))).y, max(injectionSwitch.y, injectionSwitch.y)))))) || false)) || false)) || _GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), bool(bvec4((! _GLF_IDENTITY((false), ((false)) && true)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(8.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0)), (float(mat3x4(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0))) + 0.0)), injectionSwitch.x)), max(int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat4x3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2344.3539)), bool(false))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.9)), bool(false))))))), mat2(1.0) * (vec2(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), float(mat4x3(1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (1.0) * _GLF_ONE(1.0, injectionSwitch.y)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)), int(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-703.113)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))) | (int(_GLF_ZERO(_GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), mix(vec2(_GLF_FUZZED(7.6), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch)), (((injectionSwitch))) * mat2(1.0))[0], _GLF_FUZZED(-1.8)), _GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))), true, false)))))))[0], _GLF_FUZZED(vec3(-5.1, -343.342, _GLF_IDENTITY(85.81, float(mat2(85.81, 1.0, 0.0, 1.0)))).x)), vec2(_GLF_FUZZED(-9851.2023), (injectionSwitch)[1]), bvec2(false, true))).x)))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0, clamp(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0, (_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0, (false ? _GLF_FUZZED(-41421) : (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))) | ((int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0)), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0, (true ? (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0 : _GLF_FUZZED(52144))), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) < (1 ^ 0)); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
