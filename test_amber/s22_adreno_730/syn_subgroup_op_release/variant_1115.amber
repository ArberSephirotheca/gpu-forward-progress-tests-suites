#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 uvec3 _f0;
 bool _f1;
 ivec4 _f2;
 mat3 _f3;
 ivec3 _f4;
 vec2 _f5;
 int _f6;
} ;

struct _GLF_struct_9 {
 mat2x3 _f0;
} ;

struct _GLF_struct_8 {
 uint _f0;
 vec4 _f1;
 uvec3 _f2;
 mat3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 bool _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_10 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 uint workgroup_base;
 uint _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 uvec2 _f1;
 _GLF_struct_7 _f2;
 int _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_3 {
 float _f0;
 bvec2 _f1;
 ivec3 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat4 _f1;
 mat4x2 _f2;
 _GLF_struct_3 _f3;
 float _f4;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 uint subgroup_local_id;
 bool _f1;
 bool _f2;
 vec4 _f3;
 vec4 _f4;
 bvec4 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 mat2x4 _f3;
 float _f4;
 mat3x4 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_2 {
 float _f0;
 bvec4 _f1;
 mat3x2 _f2;
 int _f3;
 _GLF_struct_0 _f4;
 mat3x4 _f5;
 _GLF_struct_1 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 _GLF_struct_4 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))))) * mat2(1.0)))).y), float(_GLF_FUZZED(9.1)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, abs(1.0), 0.0, 0.0, 0.0)), (float(mat2x3(injectionSwitch.x, 1.0, abs(1.0), 0.0, 0.0, 0.0))) * 1.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), true, true)))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), true)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), true))))))) || false))))) && true), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, true)))), _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true))), ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true)))) || false) && true, true && ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0))) - 0.0)) > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y))))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), true, true)))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), true)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), true))))))) || false))))) && true), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, true)))), _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true))), ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true)))) || false) && true, true && ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0))) - 0.0)) > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y))))))), (bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))))).y))))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), true, true)))), true)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), bool(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), true)))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, false || (true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, false || (true)), false, true)), true))))))) || false))))) && true), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true, true)))), _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true))), ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true)))) || false) && true, true && ((bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0))) - 0.0)) > injectionSwitch.y))), bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), true)))), true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(1.0) * (mat3(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y)))))))) || false))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-662.967) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(_GLF_struct_2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2029.4805)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))) || false)))), bool(bvec2(bool(true), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) && true, false || ((true) && true)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) && true, false || ((true) && true))))), (injectionSwitch.x < injectionSwitch.y)))))))), mat3x2(1.0), 1, _GLF_struct_0(mat4x3(1.0), mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, 0.0, log(1.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(815.448), (true ? _GLF_FUZZED(815.448) : _GLF_FUZZED(5402.8433))) : _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 0.0))), log(1.0))), clamp(float(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, 0.0, log(1.0))), float(mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, 0.0, log(1.0))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp(0.0)) : 1.0)), mix(float(1.0), float(_GLF_FUZZED(-3.8)), bool(false))), 0.0, 0.0, log(1.0))))))))), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, mat3x4(1.0), ivec4(1)), mat3x4(1.0), _GLF_struct_1(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))))), gl_SubgroupInvocationID, true, true, vec4(1.0), vec4(1.0), bvec4(true), vec2(1.0))), _GLF_struct_4(mat2x3(1.0), mat4(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), _GLF_struct_3(1.0, bvec2(true), ivec3(1), _GLF_IDENTITY(vec4(1.0), mix(_GLF_IDENTITY(vec4(_GLF_FUZZED(-152.007), _GLF_IDENTITY((vec4(1.0)), _GLF_IDENTITY(mix(vec4(((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)))))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true)), _GLF_IDENTITY((mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_IDENTITY(_GLF_FUZZED(20.59), min(_GLF_FUZZED(20.59), _GLF_FUZZED(20.59)))), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true))) * mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)))), mat4(1.0) * ((mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((_GLF_IDENTITY(vec4(1.0), (true ? vec4(1.0) : _GLF_FUZZED(vec4(-24.53, 3856.2323, -0.1, -524.033))))))[1], _GLF_FUZZED(0.4), _GLF_IDENTITY(((vec4(1.0))), (false ? _GLF_FUZZED(vec4(-9.2, 2.0, -8.8, 583.846)) : _GLF_IDENTITY(((vec4(1.0))), mix(vec4((((vec4(1.0))))[0], (((vec4(1.0))))[1], _GLF_FUZZED((-1861.2194)), (((vec4(1.0))))[3]), vec4(_GLF_FUZZED(float(75635)), _GLF_FUZZED(-4205.4911), (((vec4(1.0))))[2], _GLF_FUZZED(0.7)), bvec4(false, false, true, false)))))[3]), bvec4(false, true, false, true))) * mat4(1.0)))))[1], (vec4(1.0))[2], (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[3]), (false ? _GLF_FUZZED(vec4(-32.40, -50.18, -374.551, -242.368)) : vec4(_GLF_FUZZED(-152.007), _GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true))), _GLF_IDENTITY(vec4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true))), (_GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true)))) / vec4(1.0, 1.0, 1.0, 1.0)), length(0.0), 1.0)), (true ? vec4(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true))), (_GLF_IDENTITY((vec4(1.0)), mix(vec4(((vec4(1.0)))[0], _GLF_FUZZED(-1.2), ((vec4(1.0)))[2], _GLF_FUZZED(20.59)), vec4(_GLF_FUZZED(8025.7462), ((vec4(1.0)))[1], _GLF_FUZZED(0.4), ((vec4(1.0)))[3]), bvec4(false, true, false, true)))) / vec4(1.0, 1.0, 1.0, 1.0)), length(0.0), 1.0)) : _GLF_FUZZED(vec4(83.51, 7.1, -0.6, -0.9)))))[1], (vec4(1.0))[2], (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[3]))), vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0))[_GLF_IDENTITY(0, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0)), (~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))], clamp(_GLF_IDENTITY((vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0)))], (false ? _GLF_FUZZED(775.210) : (vec4(1.0))[_GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (0), (~ (0)) | _GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) | 0, ((~ (0)) | 0) / 1))), 0 | ((_GLF_IDENTITY(~ (0), (~ (0)) | 0))))) ^ 0, ((_GLF_IDENTITY((_GLF_IDENTITY(~ (0), _GLF_IDENTITY((~ (0)) | 0, ((~ (0)) | 0) / 1))), 0 | ((_GLF_IDENTITY(~ (0), (~ (0)) | 0))))) ^ 0) >> 0)))])), _GLF_IDENTITY((vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 | (0))))), (~ (0)) | 0)))], mix(float((vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0)))]), float(_GLF_FUZZED(504.873)), bool(false))), _GLF_IDENTITY((vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0)))], max(_GLF_IDENTITY((vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | 0)))], max((vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | _GLF_IDENTITY(0, (0) | 0))))], (vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (_GLF_IDENTITY(~ (0), ~ (_GLF_IDENTITY(~ (~ (0)), 0 | (~ (~ (0))))))) | 0)))])), (vec4(1.0))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0), 0 | (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0))))), (~ (0)) | 0)))])))), ((vec4(1.0))[0]) / 1.0), _GLF_FUZZED(-34.37), _GLF_FUZZED(_GLF_IDENTITY((- 3.5), clamp((- 3.5), (- 3.5), (- 3.5)))), _GLF_FUZZED(-2261.4264)), bvec4(true, false, false, false)))), 1.0));
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-7792.8729)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)))))))) || false), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))), false || ((_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))) || false)) || false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)) && true))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2165.2218)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(741.856))) < injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, true, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, false))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0)))))))), ! (! (false)))), true), true, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) : _GLF_FUZZED(135.973))) > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), true, true, true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.4))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(vec3(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x)), vec3(mat3(vec3(injectionSwitch.x, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-53.89))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.2)), bool(false))))), 0.0, 0.0, 0.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) - vec3(0.0, 0.0, 0.0)))) > injectionSwitch.y, true, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((7390.3833 * 32.97))), bool(false))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true))), true && (! ((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), true && (false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)))))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))) || false, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(true, bool(bool(true)))) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((_GLF_IDENTITY(true, bool(bool(true)))) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(bool(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false, _GLF_IDENTITY(true, true && (true)))), bool(bvec3(bool(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))))), false, _GLF_IDENTITY(true, true && (true)))), true, true))))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true))), true && (! ((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)))))))), false, true)), ! (! (bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true))), true && (! ((_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), bool(bvec4(true, _GLF_IDENTITY(true, bool(bool(true))), true, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))) && true)))))))), false, true)))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), bool(bvec3(bool(bvec4(false, true, true, true)), true, true))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), (_GLF_IDENTITY((uvec2(1u)), uvec2(0u, 0u) + ((uvec2(1u))))) >> uvec2(0u, 0u)) | uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec2(1u)) - uvec2(0u, 0u), min((uvec2(1u)) - uvec2(0u, 0u), (uvec2(1u)) - uvec2(0u, 0u)))), _GLF_struct_7(_GLF_struct_6(ivec2(1), _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, ivec3(1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), (0 | 0))), int(ivec3(int(ivec2(~ (1), (0 | 0))), 0, _GLF_IDENTITY(0, (0) >> 0))))))), (1) - 0), _GLF_struct_11(_GLF_struct_8(1u, vec4(1.0), uvec3(1u), mat3(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), mat2x4(1.0)), true, _GLF_struct_9(mat2x3(1.0)), _GLF_struct_10(uvec3(1u), true, ivec4(1), mat3(1.0), ivec3(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(45028)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(vec2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(5.0, 2.8)))), 1), mat2(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! _GLF_IDENTITY((bool(bvec2(false, false))), bool(_GLF_IDENTITY(bool((bool(bvec2(false, false)))), ! (! (bool((bool(bvec2(false, false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_12._f2._f0.workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_struct_replacement_12._f2._f0.workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(uint(778.576)) : subgroup_id * subgroup_size)))) + _GLF_struct_replacement_5._f0._f6.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_12._f2._f0.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), (_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), clamp((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(0u, 0u))), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (1u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)) << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u)))) - 0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u)))) | ((1u << _GLF_IDENTITY(uint(0u), uint(0u))))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), uint(uvec3(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 0u, 1u)))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), clamp(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u)))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), clamp(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))), _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) << (0u & 24510u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))) | 0u) + 1) % subgroup_size), 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), min(1u << _GLF_IDENTITY(uint(0u), uint(0u)), 1u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) + 0u))) : _GLF_FUZZED(virtual_gid)))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), 0u + (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))), min((1u << _GLF_IDENTITY(uint(0u), uint(0u))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), clamp((1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u)))) - 0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u + (0u)))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (true ? uint(0u) : _GLF_FUZZED(137341u))), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))))) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (true ? _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (~ (0u)))), (uint(_GLF_IDENTITY(0u, ~ (~ (0u))))) | 0u))))) : _GLF_FUZZED(atomicOr(workgroup_id, num_workgroup)))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, max(0u, 0u))), uint(0u)))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - 0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) << (0u & 24510u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))) | 0u) + 1) % subgroup_size), 0u ^ (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, clamp(_GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id, _GLF_struct_replacement_5._f0._f6.subgroup_local_id)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u)))) >> 0u)))), _GLF_IDENTITY(uint(0u), ~ (~ (uint(0u)))))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), ((0u & 79050u) << _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), clamp(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u)))), clamp(uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), clamp(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), clamp(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), clamp(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u))))))), uint(_GLF_IDENTITY(uvec4(1u, 1u, 0u, 1u), clamp(uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u), uvec4(1u, 1u, 0u, 1u))))))) << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u)))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) | (_GLF_IDENTITY(uint(0u), uint(0u))))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))), uint(0u))), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), max((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(0u)), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), (_GLF_IDENTITY(uint(0u), uint(0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (1u << _GLF_IDENTITY(uint(0u), uint(0u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), (1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u)))) / 1u))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))) | (1u << _GLF_IDENTITY(uint(0u), uint(0u))))))))) << (0u & 24510u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u)))) | 0u) + 1) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true))))), ! (! (false)))))), false, false, true)))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bool(bool(bvec2(_GLF_DEAD(false), true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = _GLF_IDENTITY(1, (1) * 1);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_struct_replacement_5._f0._f6.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) ^ 0)), int(7)))), (int(6)) - (0 | 0)), int(6))), 0 + (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (6) | (6)), 6))), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))), clamp(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))), int(_GLF_IDENTITY(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))), 0, 1, 1), min(_GLF_IDENTITY(ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))), 0, 1, 1), (ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))), 0, 1, 1)) - (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(0), ivec4(0)))), ivec4(((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))), 0, 1, 1))))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(_GLF_IDENTITY(6, (6) / 1)))), ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) << (0 >> _GLF_IDENTITY(int(7), int(7)))), (int(6)) - (0 | 0)), int(6))))))))), max(uint(2), uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, false))))))))))
    barrier();
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, (true) && true));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), min((injectionSwitch) * vec2(1.0, 1.0), (injectionSwitch) * vec2(1.0, 1.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
