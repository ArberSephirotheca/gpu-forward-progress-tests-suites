#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec3(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), true))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec2((! (_GLF_DEAD(false))), true))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), false || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(true, true && (true)) && (false))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))), (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))) || false)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (false))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))))))), true && ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (false))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))))))))))) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7896.3081)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7896.3081)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7896.3081)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7896.3081)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)) || false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true)))), ! (! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))) - 0.0) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, exp(sqrt(0.0)), 1.0, 0.0)), mix(vec2((vec2(mat3x2(injectionSwitch, 1.0, exp(sqrt(0.0)), 1.0, 0.0)))[0], (vec2(mat3x2(injectionSwitch, 1.0, exp(sqrt(0.0)), 1.0, 0.0)))[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(2502.8094)), bvec2(false, false)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))) / 1.0)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), true))), bool(bvec3(! (false), true, false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), true, false, true)))), false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, true)))))), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), true, true)))))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(127719u, 33523u, 132046u)))), uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))), (~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID))))) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, 1u), (uvec3(0u, 1u, 1u)) | uvec3(0u, 0u, 0u)))), 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, (1) << 0)], gl_WorkGroupID[2]))) - ((uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(78851u) : 0u)), 0u))) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))), 0u + ((_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))))) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)), ((_GLF_IDENTITY(1u, (1u) / 1u))) | 0u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) / 1u)))), ~ _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u)))), ((~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u))))) - uvec3(0u, 0u, 0u)))))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 0)))) + 0)) >> 0)]), (uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, (1) << 0)], gl_WorkGroupID[2]))) - ((uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(78851u) : 0u)), 0u))) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))), 0u + ((_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))))) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)), ((_GLF_IDENTITY(1u, (1u) / 1u))) | 0u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) / 1u)))), ~ _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u)))), ((~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u))))) - uvec3(0u, 0u, 0u)))))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 0)))) + 0)) >> 0)])) | (uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0)), 0))], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, (1) << 0)], gl_WorkGroupID[2]))) - ((uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(78851u) : 0u)), 0u))) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))), 0u + ((_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, max(1u, 1u))))))) / 1u), 0u | _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)), ((_GLF_IDENTITY(1u, (1u) / 1u))) | 0u)), _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) / 1u)))), ~ _GLF_IDENTITY((~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u)))), ((~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u))))) - uvec3(0u, 0u, 0u)))))))))[1], gl_WorkGroupID[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 0)))) + 0)) >> 0)]))))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], 0u | (gl_WorkGroupID[0])), gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u))))[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(2u), (uvec3(2u)) - (uvec3(0u, 0u, 0u) & uvec3(93210u, 106261u, 165368u))), uvec3(2u)))) - uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u + (1u))), uvec3(1u)))), (false ? _GLF_FUZZED(uvec3(121560u, 28199u, 178976u)) : _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u), ~ (~ (uvec3(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)))))) + (1u), (0u + (1u)) | 0u))), uvec3(1u))))))[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(1, (1) << 0), _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y))), 1)), 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0))) - ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 1, 1, 0)), clamp(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0), int(0))))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0) : _GLF_FUZZED(ivec4(-89636, 42159, -79003, -98695))))), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))) * ivec4(1, 1, 1, 1))), max((_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 1, 1, 0)), clamp(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0), int(0))))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0) : _GLF_FUZZED(ivec4(-89636, 42159, -79003, -98695))))), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))) * ivec4(1, 1, 1, 1))), _GLF_IDENTITY((_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 1, 1, 0)), clamp(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0), int(0))))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0) : _GLF_FUZZED(ivec4(-89636, 42159, -79003, -98695))))), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))) * ivec4(1, 1, 1, 1))), ((_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 1, 1, 0)), clamp(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0), int(0))))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0) : _GLF_FUZZED(ivec4(-89636, 42159, -79003, -98695))))), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))) * ivec4(1, 1, 1, 1)))) >> ivec4(0, 0, 0, 0)))))) ^ ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, 1, 0), min(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, 1, 0), ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, 1, 0))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), 0)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, 1, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | (1))), ((_GLF_IDENTITY(1, (1) | (1)))) / 1))), 0))))) | (0 << _GLF_IDENTITY(int(4), int(4))))) | _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) - 0), 1, 1, 0), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0)), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)) | 0)), 1, 1, 0))) << ivec4(0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(int(false)))), 0, 0))))), ((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) - 0), 1, 1, 0), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0, (true ? _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0) << 0)))) : _GLF_FUZZED(24320))))), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (_GLF_IDENTITY((0) | 0, (_GLF_IDENTITY((0), 0 | ((0))) | 0) ^ 0)) | 0)), 1, 1, 0))) << ivec4(0, 0, 0, 0)))))) | 0)))], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) / ivec2(1, 1)))) | 0))]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(58482u)))) << 0u), 0u)), (0u ^ 1u) * (0u)), 0u, 0u)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (_GLF_IDENTITY(0u ^ 1u, uint(uint(0u ^ 1u)))) * (0u)), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2], min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2], _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2]))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u))), (max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | _GLF_IDENTITY(_GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0)), ivec4(0, 0, 0, 0) | ((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0))))) | ivec4(0, 0, 0, 0)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | 0, (1 ^ 1) | (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (0))) | 0, max((_GLF_IDENTITY(0, (0) | (0))) | 0, (_GLF_IDENTITY(0, (0) | (0))) | 0))))), 1, 1, 0)), _GLF_IDENTITY(((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0))) - ivec4(0, 0, 0, 0), (_GLF_IDENTITY(((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0))) - ivec4(0, 0, 0, 0), (((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0))) - ivec4(0, 0, 0, 0)) - ivec4(0, 0, 0, 0))) ^ ivec4(0, 0, 0, 0)))) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 1, 1, 0)), clamp(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(0), (int(0)) | 0), int(0))))))), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), 1, 1, 0) : _GLF_FUZZED(ivec4(-89636, 42159, -79003, -98695))))), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))) * ivec4(1, 1, 1, 1))))) ^ ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, 1, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), 0)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, 1, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-23930) : _GLF_IDENTITY(1, (1) >> 0)))) | (1)), ~ (~ (_GLF_IDENTITY(1, (1) | (1))))), 0))))) | (0 << _GLF_IDENTITY(int(4), int(4))))) | _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) - 0), 1, 1, 0), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0) | 0, max((0) | 0, _GLF_IDENTITY((0) | 0, int(int((0) | 0))))), ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0)), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0), 0 ^ (_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)))))), 0 + ((_GLF_IDENTITY(_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0), 0 + (_GLF_IDENTITY(_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0), 0 ^ (_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)))))))) | 0)), 1, 1, 0))) << ivec4(0, 0, 0, 0))))), ((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) - 0), 1, 1, 0), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0)), (false ? _GLF_FUZZED(-5479) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) + 0), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(bitCount(8067)))), 0)), _GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0)))), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, (_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(sign(-57137)) : 0)))), 1, 1, 0))) << ivec4(0, 0, 0, 0)))))) | 0)))], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID[0], (gl_WorkGroupID[0]) >> 0u), gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), 0u, 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(155682u, 144027u, 162446u)))), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), clamp(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), (0u ^ 1u) * (0u)), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2], min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2], _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2]))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)))) >> uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) | (gl_WorkGroupID)), uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u)), 0u) ^ (~ (gl_WorkGroupID)))))[0], _GLF_IDENTITY(gl_WorkGroupID[1], (true ? gl_WorkGroupID[1] : _GLF_FUZZED(161162u))), gl_WorkGroupID[2]))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(~ (gl_WorkGroupID), clamp(_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) | (~ (gl_WorkGroupID))), ~ (gl_WorkGroupID), ~ (gl_WorkGroupID)))))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)), uvec3(uvec4(uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)), 0u))))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))))[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2]))))))) - ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[1], gl_WorkGroupID[2]))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[_GLF_IDENTITY(2, (2) - 0)]))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), max((_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ (~ (gl_WorkGroupID)))))[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) << 0u)))))))) - ((uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) << 0u)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))[1], gl_WorkGroupID[2]))))) - uvec3(_GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) >> _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), ~ (~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), ~ (~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u)))))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) / 1u)), ~ (~ (uvec3(_GLF_IDENTITY(1u, (1u) / 1u))))))))) << uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))))[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))))[0], _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), (false ? _GLF_FUZZED(uvec3(20959u, 139411u, 119847u)) : (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u))))) - (uvec3(137845u, 73315u, 21824u) & uvec3(0u, 0u, 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u))))) - (uvec3(137845u, 73315u, 21824u) & uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))), ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))) - uvec3(0u, 0u, 0u))))) - (uvec3(137845u, 73315u, 21824u) & uvec3(0u, 0u, 0u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, 0u + _GLF_IDENTITY((1u), clamp(_GLF_IDENTITY((1u), max((1u), (1u))), (1u), (1u))))), uvec3(1u))))[1], gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0)), (_GLF_IDENTITY((ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) >> 0, ((0) >> 0) >> 0)), (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 1, 1, 0))) - ivec4(0, 0, 0, 0))) / ivec4(1, 1, 1, 1)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 1, _GLF_IDENTITY(1, (1) + 0), 0)), clamp(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), clamp(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(0)) | 0), int(0))))))), _GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)), max(_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, _GLF_IDENTITY(1, (1) ^ 0), 0)), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))) << ivec4(0, 0, 0, 0)), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0)))), ivec4(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) << 0), 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0))))) | (_GLF_IDENTITY(ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0), (true ? ivec4(_GLF_IDENTITY(0, (0) | 0), 1, 1, 0) : _GLF_FUZZED(_GLF_IDENTITY(ivec4(-89636, 42159, -79003, -98695), max(ivec4(-89636, 42159, -79003, -98695), ivec4(-89636, 42159, -79003, -98695))))))), (ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-46222) : 0)), _GLF_IDENTITY((0), ((0)) + 0) | 0), 1, 1, 0))) * ivec4(1, 1, 1, 1))))) ^ ivec4(0, 0, 0, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, (0) >> 0)) | 0)) | 0), 1, _GLF_IDENTITY(1, int(ivec4(1, 1, 1, 1))), 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 0 ^ (_GLF_IDENTITY(0, (0) | 0))))), 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (1) | (1))))), _GLF_IDENTITY(0, _GLF_IDENTITY(min(_GLF_IDENTITY(0, (0) ^ 0), 0), _GLF_IDENTITY(int(int(min(_GLF_IDENTITY(0, (0) ^ 0), 0))), (int(int(min(_GLF_IDENTITY(0, (0) ^ 0), 0)))) << 0))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(0, 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-8313) : _GLF_IDENTITY(1, (1) >> 0))), 1))))))) | 0), 1, 1, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), 1)), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - 0)))))), 0))))), int(int((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(0, 0, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-8313) : _GLF_IDENTITY(1, (1) >> 0))), 1))))))) | 0), 1, 1, 0), ivec4(0, 0, 0, 0) | (ivec4(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)), 1)), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - 0)))))), 0)))))))) | (0 << _GLF_IDENTITY(int(4), int(4))))) | _GLF_IDENTITY((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) ^ 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), (0))) | 0)) - 0), 1, 1, 0), ivec4(0, 0, 0, 0) | _GLF_IDENTITY((_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0)), 1, 1, 0), (false ? _GLF_FUZZED(ivec4(89612, -82099, 71154, 42920)) : ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))) | 0)), 1, 1, 0)))), ((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 | (0))) | (0)), (_GLF_IDENTITY(_GLF_IDENTITY((0), _GLF_IDENTITY(int(int((0))), int(int(_GLF_IDENTITY(int(int((0))), (int(int((0)))) << 0))))) | 0, ((0) | 0) ^ 0)) | 0)), 1, 1, 0))) << ivec4(0, 0, 0, 0))))), ((int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, clamp((0) | 0, (0) | 0, (0) | 0)))) - 0), 1, 1, 0), ivec4(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0, 0, 0) | _GLF_IDENTITY((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((0), max((0), (0))) | 0, ((0) | 0) ^ 0)), (0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | (2))))) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)))))), max((_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)))))), (_GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)), ~ (~ ((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0))))))))) | 0)), 1, 1, 0)), ((ivec4(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, _GLF_IDENTITY((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)) | 0, max((_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)) | 0, (_GLF_IDENTITY((0) | 0, ((0) | 0) ^ 0)) | 0)))), 1, 1, 0))) << ivec4(0, 0, 0, 0)))))) | 0)))], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], ~ (~ (gl_WorkGroupID[1]))), gl_WorkGroupID[2]))) - uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), 0u, 0u), ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], ~ (_GLF_IDENTITY(~ (gl_WorkGroupID[1]), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (~ (gl_WorkGroupID[1]))))), gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(0u, (0u) << 0u))), 0u)), (0u ^ 1u) * (0u)), 0u, 0u)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), _GLF_IDENTITY(0u, (0u) | (0u)))), (0u ^ 1u) * (0u)), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], (gl_WorkGroupID[2]) + (1u ^ 1u)))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2], min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID))))), _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))[2], _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2]))))) - uvec3(0u, 0u, 0u))) - uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))), 0u)), (false ? _GLF_FUZZED(uvec3(76359u, 41105u, 178709u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))], gl_WorkGroupID[2]))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, (_GLF_IDENTITY((0u) << 0u, (_GLF_IDENTITY((0u) << 0u, min((_GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u, (0u) << 0u))) - 0u)) | ((0u) << 0u))), 0u)), (0u ^ 1u) * (0u)), 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))))) - uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), 0u | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)))), (0u ^ 1u) * (0u)))), 0u, 0u)) | ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID))[2]))) - _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u) : _GLF_FUZZED(uvec3(98836u, 187417u, 105020u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u) : _GLF_FUZZED(uvec3(98836u, 187417u, 105020u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u) : _GLF_FUZZED(uvec3(98836u, 187417u, 105020u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u) : _GLF_FUZZED(uvec3(98836u, 187417u, 105020u))))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u), (true ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)), (0u ^ 1u) * (0u))) | 0u), 0u, 0u) : _GLF_FUZZED(uvec3(98836u, 187417u, 105020u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(gl_WorkGroupID[1], uint(uvec2(gl_WorkGroupID[1], 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, ~ (~ (2)))))], min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2], _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))[2]))))) - uvec3(0u, _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), 0u + ((0u)))), 0u))) - uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u)))), _GLF_IDENTITY(0u, uint(uint(0u))))))))).x) << uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), bool(bool((false)))))) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))), false)), true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size))) | 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), 0u | ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | 0u)) | (subgroup_size)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_size), 0u | ((false ? _GLF_FUZZED(subgroup_id) : subgroup_size))))) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), min(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), ~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)))))))), (1u ^ 1u) | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), min(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), ~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)))))))), (max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), min(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), ~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size))))))))) + 0u))), max(max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), max((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), min(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), ~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)))))))), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), min(~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), ~ ((_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))))))))))))))) ^ 0u)) | 0u), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : subgroup_size))) | (subgroup_size))) ^ 0u)) | 0u), subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)), injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.y), bool(true))))) ? subgroup_size : _GLF_FUZZED(workgroup_id))), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))), min(subgroup_id, subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))) * 1u)) : subgroup_size))) | (subgroup_size))) | 0u)))) ^ 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) << (0u | 0u))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))), true && (_GLF_IDENTITY(true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6213.3916)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-54.25))) > injectionSwitch.y)), (_GLF_IDENTITY(true, true && (true)) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.4, 3.3)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-54.54)), vec2(_GLF_FUZZED(-9.6), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-695.210)), bool(false)))), bvec2(false, true))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.4, 3.3)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-54.54)), vec2(_GLF_FUZZED(-9.6), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-695.210)), bool(false)))), bvec2(false, true))))))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), (true ? vec2(injectionSwitch) : _GLF_FUZZED(injectionSwitch))))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-72.76)), bool(false))), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) || false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), false, true)), true, false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false), false))))), bool(bvec2(false, false))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), bool(bvec2(bool(! (_GLF_DEAD(false))), false)))))))), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-3.6))))), true, true, true))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) * (1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u)))), 0u ^ (_GLF_IDENTITY(true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u)))), (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u))))) | (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u)))))))))), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)) < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY((subgroup_local_id), 0u ^ _GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) ^ 0u)) ^ 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) | (int(int(1))))))) * (1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))), max((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) >> 0u)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))))), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u + (subgroup_size), ~ (_GLF_IDENTITY(~ (0u + (subgroup_size)), uint(uvec3(~ (0u + (subgroup_size)), 1u, 0u)))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, mix(float(_GLF_FUZZED(-45.53)), float(injectionSwitch.y), bool(true))))) ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))), 1u * ((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size)), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u))), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))))), ~ (~ (_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))), (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)))))))))), ((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))))) >> 0u)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), int(int(int(4))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0)) * 1)), (false ? _GLF_FUZZED(89392) : _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), int(int(int(4))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0)) * 1)), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), int(int(int(4))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0)) * 1))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), int(int(int(4))))))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 + (0))) | 0)) * 1)))))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.2)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) * 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1))), (_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1)))) | (_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(65075) : (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1))))), (_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1), ((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1), 0 | ((_GLF_IDENTITY(2, (false ? _GLF_FUZZED(70724) : 2))) / (1 | 1)))))))) | (_GLF_IDENTITY(0, ~ (~ (0))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_GLF_IDENTITY(70724, (70724) | (_GLF_IDENTITY(70724, (70724) | 0)))) : 2))) / (1 | 1)))))) + (1 ^ 1)))), _GLF_IDENTITY(clamp(uint(2), uint(2), uint(2)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u + (0u)), 0u, 0u)) | (clamp(uint(2), uint(2), uint(2)))))) | (_GLF_IDENTITY(uint(2), uint(uvec3(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), 0u, 0u))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), abs(1.0), 1.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0)), 0.0 + (float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), abs(1.0), 1.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0)))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, false || (true)))), bool(bvec3(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), false || (! ((true))))))) && true))), true, true))) && (false)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bvec2(true && (false), false), bvec2(bvec2(bvec2(true && (false), false)))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true && (! (! _GLF_IDENTITY((true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec2(true && (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) > injectionSwitch.y)))) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max((injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) > injectionSwitch.y)))) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) > injectionSwitch.y)))) && true, false || ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), max((injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) > injectionSwitch.y)))) && true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! _GLF_IDENTITY((false), ! (! ((false)))), true, false, _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), true)), ! (! (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), true && (_GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bvec4(bool(bvec2((! (false)), false)), false, false, true))))))), true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), true && (_GLF_IDENTITY(bool(bvec2((! (false)), false)), bool(bvec4(bool(_GLF_IDENTITY(bvec2((! (false)), false), bvec2(bvec2(_GLF_IDENTITY(bvec2((! (false)), false), bvec2(bvec4(bvec2((! (false)), false), true, false))))))), false, false, true))))))))), true)))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6.2)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(log(vec2(1.0, 1.0))))))) && true)))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(false, false)), _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(bool(bvec2(false, false)), _GLF_IDENTITY(true, true && (true)))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
