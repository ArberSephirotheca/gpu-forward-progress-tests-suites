#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6817.3566) : 0.0)), 1.0, 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.5) : 0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4284.0462)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) || false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) || false)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) || false))))))), false)))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, true))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) || false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))) || false)))), ! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0))))).x > injectionSwitch.y))))) || false))))))), false)))), bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((uintBitsToFloat(subgroup_size) / injectionSwitch)) : injectionSwitch)).y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), false || (_GLF_IDENTITY(! (! (! (false))), bool(bvec3(! (! (! (false))), false, false)))))))), (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0])), injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * _GLF_IDENTITY((injectionSwitch[0]), float(mat4x3((injectionSwitch[0]), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))[_GLF_IDENTITY(1, ~ (~ (1)))])))).x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(2.6), _GLF_FUZZED(-584.511)), bvec2(false, false)))).x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size))) >> 0u)) | 0u)), ~ (~ ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size)))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u) : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size))), ~ (~ ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size)))))))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_size))), ~ (~ ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec4(8.3, -73.82, 5316.6430, -17.01).g)), bool(false))) < injectionSwitch.y)) ? gl_NumWorkGroups.x : _GLF_FUZZED(atomicOr(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)), (0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) >> 0u))))))))) << 0u));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (_GLF_IDENTITY(true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED((mat2(-1.3, -3.2, -208.022, 8.7) * injectionSwitch)), vec2(0.0, 0.0) + (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED((mat2(-1.3, -3.2, -208.022, 8.7) * injectionSwitch)))))) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, false || (false)))) && true)), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false))))) && true)))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, 0u)))) | (workgroup_id));
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 1u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2(subgroup_id, 1u)), 1u)), uint(uvec4(uint(uvec2(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)), uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id))))), 1u)), 1u)), _GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u))))), 0u | (subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 1u)), _GLF_IDENTITY(uint(uvec2(uint(uvec2(subgroup_id, 1u)), 1u)), uint(uvec4(uint(uvec2(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)), uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id))))), 1u)), 1u)), _GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u))))), 0u | (subgroup_id))) << 0u) * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) * 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) | ((subgroup_id))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id))))) * 1u))))) * subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u)))), (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u))))) | (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u)))), uint(uint(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u)))))))))), clamp((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u))))), (~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u))))), _GLF_IDENTITY((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) | 0u), 0u, 0u))))), 0u | ((~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), 0u ^ ((_GLF_IDENTITY(0u, 0u | (0u))))) / 1u)))) | 0u), 0u, 0u)))))))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) - 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, ~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(99986) : 1))))))), (buf[virtual_gid] = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(~ (~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid)), ((_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid))) / 1u)))))), 0u | (~ (~ ((~ (buf[virtual_gid] = 1))))))), 0u | (_GLF_IDENTITY((~ (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1))))), (0u | 0u) | (buf[virtual_gid] = _GLF_IDENTITY(1, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1)))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1)))), 0, 1)), min(int(ivec3(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1)))), 0, 1)), int(ivec3(_GLF_IDENTITY((~ (1)), clamp((~ (1)), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1)))), 0, 1)))))))))), _GLF_IDENTITY(~ (~ ((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid))))))), 0u | (~ (~ ((~ (buf[virtual_gid] = 1)))))))))) ^ 0u)), (_GLF_IDENTITY(buf[virtual_gid] = 1, ~ _GLF_IDENTITY((~ (buf[virtual_gid] = 1)), (_GLF_IDENTITY((~ (buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) << 0), 1)), ~ _GLF_IDENTITY((~ (1)), clamp((_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec4(~ (1), 0, 0, 0)), (int(ivec4(~ (1), 0, 0, 0))) * 1))))), _GLF_IDENTITY((~ (1)), 0 ^ ((~ (1)))), (~ (1))))))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid))))), (~ (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (true ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(virtual_gid))), _GLF_FUZZED(virtual_gid)))))))) + 0u)))), (0u ^ 0u) ^ ((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid))))))))), 1u * ((~ (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid))))), (~ (~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), min(_GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (true ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(virtual_gid))), _GLF_FUZZED(virtual_gid)))))))) + 0u)))), (0u ^ 0u) ^ ((~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (true ? buf[virtual_gid] = 1 : _GLF_FUZZED(virtual_gid))))))))))), 0u | (~ (~ ((~ (buf[virtual_gid] = 1)))))))) ^ 0u))) - 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true))))))) || _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))), (_GLF_IDENTITY(false, (false) && true)) && true))), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bvec2((false), false)))) || false))) || false)), false))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))) || false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))) || false), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))) || false), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))) || false), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))) || false), false)))) || false)))) || false), false, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(uvec4(uint(0u), 1u, (0u ^ 0u), 0u)), _GLF_IDENTITY((uint(uvec4(uint(0u), 1u, (0u ^ 0u), 0u))), ~ (~ ((uint(uvec4(uint(0u), 1u, (0u ^ 0u), 0u)))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), clamp(uint(0u), uint(0u), uint(0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u))), uint(uint(_GLF_IDENTITY(uint(0u), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u), (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u)), uint(_GLF_IDENTITY(0u, max(0u, 0u))), uint(0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u), clamp(uint(_GLF_IDENTITY(0u, 0u ^ (0u))), uint(0u), uint(0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(clamp(uint(0u), uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) >> 0u)), ~ (_GLF_IDENTITY(~ (clamp(uint(0u), uint(0u), uint(0u))), 1u * (~ (clamp(uint(0u), uint(0u), uint(0u))))))))) << 0u)))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(29.18, -69.10)))))).y)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch[1])).x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) : _GLF_FUZZED(9.5), 1.0 * (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch[1])).x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) : _GLF_FUZZED(9.5), abs(0.0) + (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), max(float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), injectionSwitch[1])).x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))))) : _GLF_FUZZED(9.5))))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 1.0, 0.0)), mat2(1.0) * (vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(1.0), 1.0, 0.0))))).x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((- 30.79)), _GLF_FUZZED(-256.506)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) + 0), 1))]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], (injectionSwitch)[1])))) * vec2(1.0, 1.0)), bvec2(true, true))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((- 30.79), ((- 30.79)) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), _GLF_FUZZED(-256.506)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), true))).x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))) || ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((- 30.79), ((- 30.79)) - _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_FUZZED(-256.506)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) | 0)]), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, _GLF_IDENTITY(false, false || (false)), false))), true))).x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) || false)), false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY((true) || false, true && (_GLF_IDENTITY((true) || false, ! (! ((true) || false))))), ((true) || false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))) && true))) && (_GLF_DEAD(false)), (_GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (true && (_GLF_DEAD(false))))))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), bool(bvec2(false, true))) || (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, determinant(mat4(1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(49.29))), 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), _GLF_IDENTITY((vec2(1.0, determinant(mat4(1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(3932.1850) : length(normalize(vec3(1.0, 1.0, 1.0)))))))))) - vec2(0.0, 0.0), _GLF_IDENTITY(((vec2(1.0, determinant(mat4(1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(vec2(((vec2(1.0, determinant(mat4(1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))) - vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))))))), min(vec2(injectionSwitch.y, 1.0), vec2(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.6))), 1.0)))), min(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0)))), (float(_GLF_IDENTITY(vec2(injectionSwitch.y, 1.0), min(vec2(injectionSwitch.y, 1.0), vec2(injectionSwitch.y, 1.0))))) / 1.0))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-95964)))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, _GLF_IDENTITY(1, int(ivec2(1, 0)))))]), bvec2(true, true))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-68.49), _GLF_FUZZED(-5.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)))))), false, true, false))), false, false)))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, tan(0.0), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, sqrt(1.0))), vec2(1.0, 1.0) * (vec2(mat4x2(injectionSwitch, tan(0.0), 0.0, log(1.0), _GLF_IDENTITY(dot(vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, sqrt(1.0)))))).x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))) / vec2(1.0, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * vec2(1.0, 1.0)).y)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-6283.1513)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), bool(bvec3(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false))))) || false), _GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(_GLF_IDENTITY(! (true), ! (! (! (true)))), false, true, true))))) && ((true))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false), false, true)))))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
