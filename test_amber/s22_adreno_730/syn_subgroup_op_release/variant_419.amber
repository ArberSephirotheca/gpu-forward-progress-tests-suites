#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id;
 uvec2 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))) || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (_GLF_IDENTITY(! (false), true && (! (false))))), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x = subgroup_id;
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y = GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))))), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, false)))))))), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (! (false)), false), bvec2(bvec2(bvec2(! (! (false)), false)))), true)))))))))))))) || false), false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), _GLF_IDENTITY(true && ((! (! (false)))), true && (true && ((! (! (false)))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), ! (! ((! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))))) || false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x < injectionSwitch.y)), (false || ((injectionSwitch.x < injectionSwitch.y))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.0))) < injectionSwitch.y)), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! ((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true))))))) || false))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! ((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true))))))) || false))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! ((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true))))))) || false))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), ! (! ((! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), true && ((! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true))))))) || false))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)), false)))))))), true)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true)))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), true))))))))) && true)) && true))) || false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (! (! (false)))), false))))), true, true)))), ! (! (! (false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), bool(bvec4((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true, true, true))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false, false)))))) || _GLF_IDENTITY(false, false || (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))))), (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))))))), true, true, false))), false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))))))) || false) && true), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, true)))))), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bool((! (false))), (bool((! (false)))) && true)))))))))))) && true), false, false, true)))))))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), true)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(92.77)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))))).y)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-162.102))) > injectionSwitch.y))) || false))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false, false, false))))), true && (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true))))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(667.798)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(667.798)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(667.798)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))) && true)) || false)), false, false, false))))))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec2(_GLF_DEAD(false), true)))))) && _GLF_IDENTITY(true, ! (! (true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], float(mat4((injectionSwitch)[0], 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))) / 1.0), _GLF_FUZZED(-4878.6160)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size, (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size) - 0u)), (~ (workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) | (~ _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size), ((workgroup_base + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size)) * 1u))))) + GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), clamp(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) - 0u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) - 0u)))), 1u, 0u), (false ? _GLF_FUZZED(uvec3(64055u, 79469u, 73911u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u)))))) - 0u)))), 1u, 0u))))))), _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, workgroup_base), (_GLF_IDENTITY(max(workgroup_base, workgroup_base), ~ (~ (max(workgroup_base, workgroup_base))))) * 1u)))) + GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.y * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, min(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1, (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) | (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)), GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1))), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)) | (_GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), max((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)) ^ 0u), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)) ^ 0u)) | 0u))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), max(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1), ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)) | 0u), (GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1)))) >> 0u))) % subgroup_size, ((GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1) % subgroup_size) / 1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x = _GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid)), next_virtual_gid, next_virtual_gid));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4841.2161)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), false || _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))), _GLF_IDENTITY(bool(bool(true && _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))))), (bool(bool(true && _GLF_IDENTITY((! (! (false))), ! (! (_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))))) || false))))))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY(0u ^ (buf[virtual_gid] = 1), (_GLF_IDENTITY(true ? 0u ^ (buf[virtual_gid] = 1) : _GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(next_virtual_gid) : true ? 0u ^ (buf[virtual_gid] = 1) : _GLF_FUZZED(subgroup_id))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(GLF_merged2_0_1_11_1_1_17subgroup_idsubgroup_local_id.y + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-566.746)), bool(false)))), float(_GLF_FUZZED(float((-49467 ^ 87201)))), bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tan(874.258)) : injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged2_0_1_16_1_1_11next_virtual_gidsubgroup_id.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.1))))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.1))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.1))))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(6.1))))).x), float(_GLF_FUZZED(3.8)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(32.16), (injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.0)), bvec2(true, false))).y))) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, false, true))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_DEAD(false))), true), bvec2(bvec4(bvec2(bool(bool(_GLF_DEAD(false))), true), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), false))))))))))))))), false || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(897.182)), float(0.0), bool(true))) : _GLF_FUZZED(9.1))), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), sqrt(0.0)), transpose(transpose(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0), (mat4(0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0))), sqrt(0.0)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), sqrt(0.0)), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), sqrt(0.0)))))), (float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), sqrt(0.0)), transpose(transpose(mat4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), (false ? _GLF_FUZZED(-298.902) : _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), clamp(_GLF_IDENTITY(determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), (determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0))) - 0.0), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0)))))), sqrt(0.0))))))) / 1.0)) - 0.0))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))), injectionSwitch)).y, float(vec4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)))), injectionSwitch)).y, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))) && true), false, _GLF_IDENTITY(true, ! (! (true))))))))))) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
