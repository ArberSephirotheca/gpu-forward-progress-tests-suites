#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
         return;
        }
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true), true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true), true))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), true, true), true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(-8444.2588, 8.6))))[1], (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(vec2(-8444.2588, 8.6))))[1]) / 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / 1.0)))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))))
    return;
  }
 else
  {
  }
 GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)))) || false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
  }
 else
  {
  }
 GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
      {
       for(int _injected_loop_counter = ((0 & 68885) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)), 0 ^ ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
      {
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8155.6741), _GLF_FUZZED((293.471 + 97.99))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8155.6741), _GLF_FUZZED((293.471 + 97.99))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y))))))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
        }
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))) || false)) && true))); _injected_loop_counter ++)
    {
     return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(80161u), (true ? _GLF_FUZZED(80161u) : _GLF_FUZZED(atomicOr(subgroup_size, subgroup_local_id)))), (_GLF_IDENTITY(true ? workgroup_size : _GLF_FUZZED(80161u), 0u | (true ? workgroup_size : _GLF_IDENTITY(_GLF_FUZZED(80161u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_FUZZED(80161u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(80161u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(80161u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(80161u))))))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_FUZZED(80161u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(80161u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(80161u))))))), (uint(uint(_GLF_IDENTITY(_GLF_FUZZED(80161u), 1u * (_GLF_IDENTITY(_GLF_FUZZED(80161u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_FUZZED(80161u)))))))) ^ 0u)) >> 0u))), (false ? _GLF_FUZZED(num_workgroup) : 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(80161u), (0u | 0u) | (_GLF_IDENTITY(_GLF_FUZZED(80161u), ~ (~ (_GLF_FUZZED(80161u)))))), uint(uint(_GLF_FUZZED(80161u))))))))))) | (true ? workgroup_size : _GLF_FUZZED(80161u)))))) >> 0u), _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size), ((GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.w = workgroup_size)) * _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), uint(uvec3(_GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec3((1u), 0u, 1u), min(uvec3((1u), 0u, 1u), uvec3((1u), 0u, 1u))))), _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) + 0u) : _GLF_FUZZED(num_workgroup))), 0u)))) ^ 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), uint(uvec3(_GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec3((1u), 0u, 1u), min(uvec3((1u), 0u, _GLF_IDENTITY(1u, 0u + (1u))), uvec3((1u), 0u, 1u))))), 1u, 0u)))) ^ 0u)), ((_GLF_IDENTITY(~ (1u), (~ _GLF_IDENTITY((1u), uint(uvec3(_GLF_IDENTITY((1u), uint(_GLF_IDENTITY(uvec3((1u), 0u, 1u), min(uvec3((1u), 0u, 1u), uvec3((1u), 0u, 1u))))), 1u, 0u)))) ^ _GLF_IDENTITY(0u, (0u) | (0u))))) << 0u)) / 1u))) >> (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, 1u)), clamp(uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u)), uint(uvec2(1u, 1u))))) ^ 1u), ~ (~ ((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) * 1u), 1u)), clamp(uint(uvec2(1u, 1u)), uint(uvec2(1u, _GLF_IDENTITY(1u, (1u) + 0u))), uint(uvec2(1u, 1u))))) ^ 1u)))) ^ ((_GLF_IDENTITY(0u, 1u * (0u))) ^ 0u))) ^ _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) << uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(bool(bool(_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.z = workgroup_id;
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (false ? _GLF_FUZZED(uvec4(162860u, 114004u, 99209u, 1308u)) : _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (false ? _GLF_FUZZED(uvec4(162860u, 114004u, 99209u, 1308u)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) | (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size)), (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(1u, 1u, 1u, 1u) * (uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (false ? _GLF_FUZZED(uvec4(162860u, 114004u, 99209u, 1308u)) : _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> 0u) << 0u), 0u)), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (false ? _GLF_FUZZED(uvec4(162860u, 114004u, 99209u, 1308u)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) | uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u)) : _GLF_FUZZED(uvec4(69458u, 4740u, 189318u, 100876u)))), (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)))))).w * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) + (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), (uvec4(0u)) / uvec4(1u, 1u, 1u, 1u)))), ~ (~ ((GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) + (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(0u), _GLF_IDENTITY(uvec4(0u), (uvec4(_GLF_IDENTITY(0u, 1u * (0u)))) / _GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 1u, 1u, 1u)))))))))), (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)).z;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(72801), float(vec3(float(72801), 0.0, 0.0)))), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(72801), float(vec3(float(72801), 0.0, 0.0)))), _GLF_FUZZED(7.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) || false))));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size))), 0u, (0u >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(0u, 0u | (0u)))))), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_FUZZED(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)))), workgroup_size, workgroup_size))), 0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(_GLF_IDENTITY(uint(0u), 0u | (_GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))))), uint(0u))), _GLF_IDENTITY(uint(0u), (uint(0u)) - 0u)))))))) : _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, uint(uvec3(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)))))) << 0u) + GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (workgroup_base + subgroup_id * GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y) | 0u)) | (workgroup_base + subgroup_id * GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y)) + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size)).x, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x), 1u * (_GLF_IDENTITY(~ (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x), ~ (~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x)))))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size))) | (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size)).x, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x) >> 0u))) + 1) % GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, min((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(5u), uvec4(5u))) | (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size)).x + 1) % _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y) >> 0u), (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.x + 1) % _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, 0u ^ (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))), false), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY((bool(bvec2(false, true))) || false, false || ((bool(bvec2(false, true))) || false)))), (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true))))))), bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))))), false), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) && true)))))) || false)), (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))), false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y))))) || false)))), true))))))), true, _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(int(ivec3(int(8), (0 << _GLF_IDENTITY(int(3), int(3))), 0)), (int(ivec3(int(8), (0 << _GLF_IDENTITY(int(3), int(3))), 0))) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (8))))), 0 | ((int(_GLF_IDENTITY(8, ~ (~ (8))))))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (8))))), 0 | ((int(_GLF_IDENTITY(8, ~ (~ (8))))))) << 0)), int(int(~ (_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (8))))), 0 | ((int(_GLF_IDENTITY(8, ~ (~ (8))))))) << 0))))))), int(ivec4(_GLF_IDENTITY(int(8), _GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (8))))), 0 | ((int(_GLF_IDENTITY(8, ~ (~ (8))))))) << 0), 0, 0, 1))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(8, max(8, 8))), _GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, (8) | (8))))))), 0 | (_GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (8))))), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(8, ~ (~ (8))))), ((int(_GLF_IDENTITY(8, ~ (~ (8)))))) / 1) : _GLF_FUZZED(-68901))))) << 0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-0.9), _GLF_IDENTITY(clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), 0.0 + (_GLF_FUZZED(-0.9))), _GLF_FUZZED(-0.9)), (clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), 0.0 + (_GLF_FUZZED(-0.9))), _GLF_FUZZED(-0.9))) / 1.0)), max(_GLF_IDENTITY(_GLF_FUZZED(-0.9), _GLF_IDENTITY(clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), 0.0 + (_GLF_FUZZED(-0.9))), _GLF_FUZZED(-0.9)), (clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), 0.0 + (_GLF_FUZZED(-0.9))), _GLF_FUZZED(-0.9))) / 1.0)), _GLF_IDENTITY(_GLF_FUZZED(-0.9), _GLF_IDENTITY(clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), 0.0 + (_GLF_FUZZED(-0.9))), _GLF_FUZZED(-0.9)), (clamp(_GLF_FUZZED(-0.9), _GLF_IDENTITY(_GLF_FUZZED(-0.9), 0.0 + (_GLF_FUZZED(-0.9))), _GLF_FUZZED(-0.9))) / 1.0))))), float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).x)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(bool(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(true, bool(bvec2(true, false))), false)))))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x))) | _GLF_IDENTITY((int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1154.9984)), bool(false))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).x))), (true ? (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0)))) - sin(vec2(0.0, 0.0))))), injectionSwitch)))).x))) : _GLF_FUZZED(_injected_loop_counter))))) != (1 & 1)); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         break;
        }
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(1605.4595, float(vec3(1605.4595, log(1.0), 1.0))), 64.07)), mix(vec2((_GLF_FUZZED(vec2(1605.4595, 64.07)))[0], _GLF_FUZZED(-94.06)), vec2(_GLF_FUZZED(45.00), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(1605.4595, 64.07)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(1605.4595, 64.07)), max(_GLF_FUZZED(vec2(1605.4595, 64.07)), _GLF_FUZZED(vec2(1605.4595, 64.07)))), _GLF_FUZZED(vec2(1605.4595, 64.07)))))[_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))], (false ? _GLF_FUZZED(3828.7304) : (_GLF_FUZZED(vec2(1605.4595, 64.07)))[1]))), bvec2(false, true))) : injectionSwitch)))).x, float(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(1605.4595, float(vec3(1605.4595, log(1.0), 1.0))), 64.07)), mix(vec2((_GLF_FUZZED(vec2(1605.4595, 64.07)))[0], _GLF_FUZZED(-94.06)), vec2(_GLF_FUZZED(45.00), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(vec2(1605.4595, 64.07)), max(_GLF_IDENTITY(_GLF_FUZZED(vec2(1605.4595, 64.07)), max(_GLF_FUZZED(vec2(1605.4595, 64.07)), _GLF_FUZZED(vec2(1605.4595, 64.07)))), _GLF_FUZZED(vec2(1605.4595, 64.07)))))[_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0)))], (false ? _GLF_FUZZED(3828.7304) : (_GLF_FUZZED(vec2(1605.4595, 64.07)))[1]))), bvec2(false, true))) : injectionSwitch)))).x, 0.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))), (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
      {
       if(_GLF_DEAD(false))
        continue;
       _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) + 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) : buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) / 1)), (true ? (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (subgroup_id) >> _GLF_IDENTITY(0u, (0u) | 0u))) : buf[virtual_gid] = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) - 0), (_GLF_IDENTITY(1, max(1, 1))) / 1)) : _GLF_FUZZED(113672u))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       for(int _injected_loop_counter = ((_GLF_IDENTITY(1, max(1, 1)) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), _GLF_IDENTITY((_GLF_IDENTITY(int(6), int(6))) | 0, min((_GLF_IDENTITY(int(6), int(6))) | 0, (_GLF_IDENTITY(int(6), int(6))) | 0)))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) ^ (0 >> _GLF_IDENTITY(int(2), int(2)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), mix(vec2(_GLF_FUZZED(-7.9), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[0], _GLF_IDENTITY(_GLF_FUZZED(1847.1996), min(_GLF_IDENTITY(_GLF_FUZZED(1847.1996), float(_GLF_IDENTITY(mat2x3(_GLF_FUZZED(1847.1996), 0.0, 0.0, 0.0, 0.0, 0.0), mat2x3(mat4x3(mat2x3(_GLF_FUZZED(1847.1996), 0.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED(1847.1996)))), bvec2(true, false))).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, min(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size, GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size)).x + 1 < _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y, (GLF_merged4_0_1_17_1_1_13_2_1_12_3_1_14subgroup_local_idsubgroup_sizeworkgroup_idworkgroup_size.y) << 0u))
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, clamp(2, 2, 2))), (true ? uint(2) : _GLF_FUZZED(virtual_gid)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 4, 64, 4);
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))), 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.5) : _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(-223.349, 11.93, 326.360, 908.087)) : _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), float(mat2x4(exp(0.0), cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), exp(0.0)))))))))[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((- determinant(mat3(53.83, -402.567, 48.70, -1732.6771, 370.734, -9.9, 5.9, -573.472, -2.0)))) : injectionSwitch.x)))) > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-85.44 + 0.4))), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, true))))), vec2(injectionSwitch[0], injectionSwitch[1])).y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 1.0)))), float(_GLF_FUZZED(5573.4926)), bool(false)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)))))))[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 1.0)))), float(_GLF_FUZZED(5573.4926)), bool(false)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)))))))[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 1.0)))), float(_GLF_FUZZED(5573.4926)), bool(false)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)))))))[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, true)), ! (! (bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(759.503), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 1.0)))), float(_GLF_FUZZED(5573.4926)), bool(false)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), min(_GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch)))), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-90.98, -156.222)) : mat2(1.0) * ((injectionSwitch))))))), 0.0, 1.0, 0.0, sqrt(0.0), 1.0, round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) * 1.0), exp(0.0)))))))[0], _GLF_FUZZED(-5880.3477)), bvec2(true, false))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false, true))))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))) || false)))
              return;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(52.69) : injectionSwitch.x)) > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false)), (bool(bvec4(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false, false, false))) || false))))))), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - sin(vec2(0.0, 0.0)))))).x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true, ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true) && true), true && (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), ! (! (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))) && true, ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) * mat2(1.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true) && true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))) && true, (_GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), _GLF_IDENTITY(bool(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false)), true && (bool(bvec2((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))))), false))))) && true) && true)), false, true, false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))), false)))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))) && true)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              break;
             break;
            }
          }
        }
       do
        {
         subgroupAll(false);
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), ~ (~ (_GLF_IDENTITY(2, (2) << 0)))), 1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), (uint(2)) * 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(2))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))) ? _GLF_FUZZED(43677) : _GLF_IDENTITY(2, int(ivec4(2, 0, 0, 1)))))), clamp(uint(2), uint(_GLF_IDENTITY(2, max(2, 2))), uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), (uint(2)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) / int(_GLF_ONE(1.0, injectionSwitch.y)))) << 0)), (_GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), (_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2)))) << 0u)) + 0u), uint(2), uint(2)))) << 0u))), uint(2), uint(2))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), clamp(uint(2), uint(2), uint(2)))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), clamp(uint(2), uint(2), uint(2))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), clamp(uint(2), uint(2), uint(2)))))) * 1u))), 4, 64, 4);
       if(_GLF_DEAD(false))
        return;
       subgroupAll(true);
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec3(bool(bvec4(false, false, false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))));
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
