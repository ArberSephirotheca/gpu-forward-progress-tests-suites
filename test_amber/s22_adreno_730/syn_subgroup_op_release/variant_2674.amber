#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 uvec4 _f0;
 ivec4 _f1;
 bvec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_12 {
 vec4 _f0;
 ivec3 _f1;
 bvec3 _f2;
 bvec2 _f3;
 mat4 _f4;
 float _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 bvec3 _f1;
 _GLF_struct_13 _f2;
 float _f3;
 int _f4;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 uvec3 _f3;
 mat4x3 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 vec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2 _f1;
 mat2x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 mat4x3 _f1;
 _GLF_struct_9 _f2;
 mat4x3 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 bvec2 _f1;
 mat2 _f2;
 vec3 _f3;
 uvec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 vec2 _f1;
 mat3 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 mat2x4 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_7 _f0;
 ivec2 _f1;
 mat2x4 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_14 _f4;
 int _injected_loop_counter;
 uvec2 _f5;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 mat3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat2 _f1;
 float _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 float _f2;
 bvec2 _f3;
 _GLF_struct_1 _f4;
 vec2 _f5;
 _GLF_struct_2 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sign(injectionSwitch)))))).x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, (true) && true), true))), false)))), true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_IDENTITY(true, (true) && true), true))), false))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (false))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))), (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(int(7), int(7)), 0, 0, 1)))) << _GLF_IDENTITY(int(6), int(6))), (((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(int(7), int(7)), 0, 0, 1)))) << _GLF_IDENTITY(int(6), int(6)))) + 0), 1, 0), max(ivec4(_injected_loop_counter, ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, int(ivec2(_GLF_IDENTITY(6, (6) << 0), 1))), 6))) | (6))), (int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) | (6)))) ^ 0), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (1 ^ 1) ^ (0))) - _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 0)), (int(ivec2(0, 0))) | 0)))), ivec4(_injected_loop_counter, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1))))))) ^ 0))))))), ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (~ (_GLF_IDENTITY(7, (7) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), int(7)), (0 >> _GLF_IDENTITY(int(7), int(7))) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | (~ (_GLF_IDENTITY(int(7), (int(7)) * 1))))))) ^ 0)))))))) | (0 << _GLF_IDENTITY(int(3), int(3)))), (true ? (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec2(_GLF_IDENTITY(int(7), int(7)), 1)))) >> 0)))) ^ 0)) : _GLF_FUZZED((- -92400)))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), _GLF_IDENTITY(1, (1) / 1), 0))))), (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, _GLF_IDENTITY(((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(int(7), int(7)), 0, 0, 1)))) << _GLF_IDENTITY(int(6), int(6))), (((_GLF_IDENTITY(0, max(0, 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), int(ivec4(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(92422))), 0, 1)))) << _GLF_IDENTITY(int(6), int(6)))) + 0), 1, 0), max(ivec4(_injected_loop_counter, ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))) | (_GLF_IDENTITY(int(7), int(7))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, 0 | (6)), 6))) | (6))), (int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, clamp(6, 6, 6))) | (6)))) ^ 0), int(6))), 1, _GLF_IDENTITY(0, (0) - _GLF_IDENTITY(0, int(ivec2(0, 0))))), ivec4(_injected_loop_counter, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) >> 0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(7)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))), int(_GLF_IDENTITY(7, (7) / (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0))))) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), max((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))))) * 1), (~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), 0 | ((~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))))) << 0)))))))))), (true ? (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(int(7), int(7))))) ^ 0)) : _GLF_FUZZED((- -92400)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (17478 & 0) | (6))), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))), 0 + ((_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) >> 0) / int(_GLF_ONE(1.0, injectionSwitch.y)))), int(7)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(_injected_loop_counter))), int(_GLF_IDENTITY(7, (7) / (int(_GLF_ONE(1.0, injectionSwitch.y)) | 0))))) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), int(ivec2(~ (_GLF_IDENTITY(int(7), (int(7)) * 1)), 0)))) | _GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), clamp(_GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), max((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), (~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))))) * 1), (~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), _GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(int(7), (int(7)) * 1))), 0 | ((~ (_GLF_IDENTITY(int(7), (int(7)) * 1)))))) << 0)))))))))), (true ? (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(int(7), int(7))))) ^ 0)) : _GLF_FUZZED((- -92400)))) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (17478 & 0) | (6))), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))))), _GLF_IDENTITY(1, (1) / 1), 0)))))) ^ 0) < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, true)))) && true); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(831.264)), bool(false)))), true && ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, false || (false)))), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), true, false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, false)))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_struct_3(_GLF_struct_0(mat3x4(1.0), mat2(1.0), 1.0), mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.9)), bool(false)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-882.069)), float(1.0), bool(true))), bvec2(true), _GLF_struct_1(bvec2(true), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)), mat2x4(1.0)), _GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(-85.58, float(mat2(_GLF_IDENTITY(-85.58, (true ? -85.58 : _GLF_FUZZED(-2.3))), 1.0, 0.0, 1.0))))), vec2(_GLF_FUZZED(51.74), (vec2(1.0))[1]), bvec2(false, true))), _GLF_struct_2(_GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), vec3(mat3x4(vec3(1.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(vec3(1.0), (_GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))) * vec3(1.0, 1.0, 1.0)), vec3(1.0))), true)), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6.0))), _GLF_IDENTITY((1.0), 0.0 + ((1.0))) * _GLF_ONE(1.0, injectionSwitch.y))), bvec3(true), gl_WorkGroupSize.x);
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), 0u | (_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)))), _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)))), _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_size, 0u | (_GLF_struct_replacement_4.workgroup_size)) * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), subgroup_size)), subgroup_size))), uint(uvec2((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size))), 0u)))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), min((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))))), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), min((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))))), 0u | (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), min((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))))))) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), min((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z), 0u ^ (_GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z))) : subgroup_size))))), (true ? _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_size)), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z), 0u | (_GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z))) : subgroup_size), min((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))), (false ? _GLF_FUZZED(uvec4(113731u, _GLF_IDENTITY(18004u, (_GLF_IDENTITY(18004u, (18004u) | 0u)) >> 0u), 197657u, 109547u).z) : subgroup_size))))), 0u | (((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), min((false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, _GLF_IDENTITY(197657u, min(197657u, _GLF_IDENTITY(197657u, 0u ^ (197657u)))), 109547u).z) : subgroup_size))), (false ? _GLF_FUZZED(uvec4(113731u, 18004u, 197657u, 109547u).z) : subgroup_size))))))) : _GLF_FUZZED(num_workgroup)))) / 1u);
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0, ((_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (_GLF_IDENTITY(49388, ~ (~ (_GLF_IDENTITY(49388, int(int(49388)))))) ^ -33623))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   _GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) / 1u);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) : _GLF_FUZZED(atomicMin(num_workgroup, virtual_gid)))) + 1) >> 0u), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, (subgroup_local_id + 1) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u))) + 1, _GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(subgroup_id)))))), (subgroup_local_id + 1))) >> 0u), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u))))) < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, (true ? (subgroup_local_id + 1) >> 0u : _GLF_FUZZED(workgroup_id)))) < subgroup_size)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, true), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))), true, true), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(16593) : 2))), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
     subgroupAll(false);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   else
    {
     for(_GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_7(_GLF_struct_5(uvec3(1u), _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), vec2(mat4x3(vec2(1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0)))) - vec2(0.0, 0.0)), mat3(1.0), mat4x2(1.0), ivec2(1), mat2x4(1.0), mat3(1.0)), _GLF_struct_6(mat2x4(1.0), bvec2(true), _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), uvec4(1u), ivec4(1)), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(0, 0, 0))), ivec2(1), mat2x4(1.0), _GLF_struct_11(_GLF_struct_8(uvec4(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(67.35), _GLF_FUZZED(-5.4)), bvec2(false, false))).x)) ^ (_GLF_IDENTITY(1u, (1u) >> _GLF_IDENTITY(0u, 0u ^ (0u)))))), mat2(1.0), mat2x3(1.0), uvec4(_GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))), mat4x3(1.0), _GLF_struct_9(bvec2(true), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(4985.2853)), bool(false)))), vec3(1.0)), mat4x3(1.0), _GLF_struct_10(bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ((_GLF_IDENTITY(true, bool(bool(true))))) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bool(true)))), ((_GLF_IDENTITY(true, bool(bool(true))))) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), true, true, false)))))))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), exp(0.0) * _GLF_IDENTITY(((1.0)), (((1.0))) / 1.0)) / 1.0), 1.0))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec3(_GLF_IDENTITY(1u, (1u) ^ 0u))) * uvec3(1u, 1u, 1u)), mat4x3(1.0), uvec3(1u))), _GLF_struct_14(_GLF_struct_12(vec4(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, 1))), min(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(1, 1))), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))))), _GLF_IDENTITY(ivec3(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(clamp(ivec3(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1))))), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1))))), ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), min(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))))))), _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) + (ivec3(0, 0, 0))) | (clamp(ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), min(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))))), ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))))), ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1))))))), ivec3(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1))))), ivec3(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1)))), (ivec3(ivec3(_GLF_IDENTITY(1, min(1, 1))))) << (ivec3(0, 0, 0) & ivec3(25118, 99335, -62700))))))))))), bvec3(true), bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), false || (! (true)))) || false))) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! _GLF_IDENTITY((! (bool(bvec2(true, true)))), ((! (bool(bvec2(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))))))))) && true))))), false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), true && (true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), true, false)))))) || false)))) || false))))), true && (true)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), true && (true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), true, false)))))) || false)))) || false))))), true && (true)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), false), false, _GLF_IDENTITY(true, (true) || false)))), true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))), false), _GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))), false), _GLF_IDENTITY(true, (true) || false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! _GLF_IDENTITY((! (bool(bvec2(true, true)))), ((! (bool(bvec2(true, true))))) && true))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, false || (true)))))))), true && (true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(bvec2((true), true))), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (true)), ((! (true))) && _GLF_IDENTITY(true, false || (true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))), bool(bvec3((! (true)), true, false)))))) || false)))) || _GLF_IDENTITY(false, (false) || false)))))), true && (true)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), false), false, true))), true)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! _GLF_IDENTITY(_GLF_IDENTITY((! (bool(bvec2(true, true)))), ((! (bool(bvec2(true, true))))) && true), false || (_GLF_IDENTITY((! (bool(bvec2(true, true)))), ((! (bool(bvec2(true, true))))) && true))))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(true, false || (true))))), bool(bvec3((! (! (_GLF_IDENTITY(true, false || (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true && (true)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (true), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((true), ((true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3((! (true)), true, false)))))) || false)))) || false))))), true && (_GLF_IDENTITY(true, (true) || false))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, true && (true)), false), false, true))), _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))) || false))), mat4(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 1.0, 1.0, sqrt(1.0))))), 1.0, bvec3(true)), bvec3(true), _GLF_struct_13(uvec4(1u), ivec4(_GLF_IDENTITY(1, 1 * (1))), bvec4(true), _GLF_IDENTITY(mat2(1.0), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(mat2(88.00, 23.40, -5.4, -4420.9068)), transpose(transpose(_GLF_FUZZED(mat2(88.00, 23.40, -5.4, -4420.9068))))) : _GLF_IDENTITY(mat2(1.0), mat2(mat4(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(1.7, 6.4, 9.6, 0.8)))))))))), 1.0, _GLF_IDENTITY(1, (1) - (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) * 1), max(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) ^ 0)) * 1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) * 1), 0 ^ (_GLF_IDENTITY(int(1), (int(1)) * 1))))))))), (_GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(~ (~ ((0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75655) : ~ (~ _GLF_IDENTITY(((0)), ~ (~ (((0))))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75655) : ~ (~ _GLF_IDENTITY(((0)), ~ (~ (((0))))))), 1 * ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75655) : ~ (~ _GLF_IDENTITY(((0)), ~ (~ (((0)))))))))) >> 0), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(-75655) : ~ (~ ((0))))), ~ (~ _GLF_IDENTITY((~ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75655) : ~ (~ ((0)))))), ((~ ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-75655) : ~ (~ ((0))))))) | 0))))))) - 0) ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), min(5, _GLF_IDENTITY(5, max(5, 5))))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec4(5, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(86001))), (0) | (0)), 1))), int(ivec3(5, 0, 0)))) >> _GLF_IDENTITY(0, (0) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), ((_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(1, 1, 1) * (ivec3(5, 0, 0))))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0), (true ? ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0) : _GLF_FUZZED((-22118 & ivec3(4227, 75010, -85785))))))))))))) ^ 0))), (_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))))) << 0) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(71942)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), ((_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(1, 1, 1) * (ivec3(5, 0, 0))))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0), (true ? ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0) : _GLF_FUZZED((-22118 & ivec3(4227, 75010, -85785))))))))))))) ^ 0))), (_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))))) << 0) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(71942)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))) ^ 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, ~ (~ (5))) : _GLF_FUZZED(-96370)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))))), ~ (_GLF_IDENTITY(~ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), min(5, _GLF_IDENTITY(5, max(5, 5))))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec4(5, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(86001))), (0) | (0)), 1))), int(ivec3(5, 0, 0)))) >> _GLF_IDENTITY(0, (0) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), ((_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(1, 1, 1) * (ivec3(5, 0, 0))))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0), (true ? ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0) : _GLF_FUZZED((-22118 & ivec3(4227, 75010, -85785))))))))))))) ^ 0))), (_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))))) << 0) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(71942)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), ((_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(1, 1, 1) * (ivec3(5, 0, 0))))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0), (true ? ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0) : _GLF_FUZZED((-22118 & ivec3(4227, 75010, -85785))))))))))))) ^ 0))), (_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))))) << 0) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(71942)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))) ^ 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, ~ (~ (5))) : _GLF_FUZZED(-96370)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0))))))), (true ? ~ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, min(5, 5)), min(5, _GLF_IDENTITY(5, max(5, 5))))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec4(5, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(86001))), (0) | (0)), 1))), int(ivec3(5, 0, 0)))) >> _GLF_IDENTITY(0, (0) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), ((_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(1, 1, 1) * (ivec3(5, 0, 0))))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0), (true ? ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0) : _GLF_FUZZED((-22118 & ivec3(4227, 75010, -85785))))))))))))) ^ 0))), (_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))))) << 0) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(71942)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))) ^ 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), (_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))), ((_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, 0, 0), ivec3(1, 1, 1) * (ivec3(5, 0, 0))))), min(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), _GLF_IDENTITY(_GLF_IDENTITY(5, int(ivec3(5, 0, 0))), (0 << _GLF_IDENTITY(int(1), int(1))) ^ (_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0), (true ? ivec3(5, _GLF_IDENTITY(0, (0) - 0), 0) : _GLF_FUZZED((-22118 & ivec3(4227, 75010, -85785))))))))))))) ^ 0))), (_GLF_IDENTITY(5, int(ivec3(5, 0, 0))))))) << 0) >> 0))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(71942)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0)))) ^ 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5, ~ (~ (5))) : _GLF_FUZZED(-96370)))), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 0)))) >> 0))))))) : _GLF_FUZZED(47778))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (int(5)), min(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (int(5)), 0 ^ (0 ^ (int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(int(int(0 ^ (int(5)))), (false ? _GLF_FUZZED(-82824) : int(int(0 ^ (int(5)))))), (_GLF_IDENTITY(int(int(0 ^ (int(_GLF_IDENTITY(5, int(ivec3(_GLF_IDENTITY(5, min(5, 5)), 0, 0))))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, false, false)))) || false) ? _GLF_FUZZED(-82824) : int(int(0 ^ (int(5))))))) / 1)), _GLF_IDENTITY(0 ^ (int(5)), max(0 ^ (int(5)), 0 ^ (int(5)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-69300) : 0)) ^ (int(5)), _GLF_IDENTITY(min(_GLF_IDENTITY(0 ^ (int(5)), _GLF_IDENTITY(int(int(0 ^ (int(5)))), (false ? _GLF_FUZZED(-82824) : int(int(0 ^ (int(5))))))), _GLF_IDENTITY(0 ^ (int(5)), max(0 ^ (int(5)), 0 ^ (int(5))))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(0 ^ (int(5)), _GLF_IDENTITY(int(int(0 ^ (int(5)))), (false ? _GLF_FUZZED(-82824) : int(int(0 ^ (int(5))))))), _GLF_IDENTITY(0 ^ (int(5)), max(0 ^ (int(5)), 0 ^ (int(5))))), 0 + (min(_GLF_IDENTITY(0 ^ (int(5)), _GLF_IDENTITY(int(int(0 ^ (int(5)))), (false ? _GLF_FUZZED(-82824) : int(int(0 ^ (int(5))))))), _GLF_IDENTITY(0 ^ (int(5)), max(0 ^ (int(5)), 0 ^ (int(5))))))), min(_GLF_IDENTITY(0 ^ (int(5)), _GLF_IDENTITY(int(int(0 ^ (int(5)))), (false ? _GLF_FUZZED(-82824) : int(int(0 ^ (int(5))))))), _GLF_IDENTITY(0 ^ (int(5)), max(0 ^ (int(5)), 0 ^ (int(5))))))))) | (0 | 0)))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) + (0 | 0))) | (int(5))), 0 ^ (int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ _GLF_IDENTITY((int(5)), clamp((int(5)), _GLF_IDENTITY((int(5)), ~ (~ (_GLF_IDENTITY((int(5)), ((int(5))) << 0)))), _GLF_IDENTITY((int(5)), max((int(5)), (int(5)))))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY(5, (true ? _GLF_IDENTITY(5, max(5, 5)) : _GLF_FUZZED(-66413))))), clamp((int(5)), _GLF_IDENTITY((int(5)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((int(5)), ((int(5))) << 0))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY((int(5)), ((int(5))) << 0)), ~ (~ (~ (_GLF_IDENTITY((int(5)), (_GLF_IDENTITY((int(5)), int(int(_GLF_IDENTITY((int(5)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3320) : (int(5)))))))) << 0)))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY((int(5)), int(int((int(5))))), ((int(5))) << 0))), (~ (_GLF_IDENTITY((int(5)), ((int(5))) << 0)))))))), _GLF_IDENTITY((int(5)), max((int(5)), (int(5))))))))) / 1), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((_GLF_IDENTITY(2758, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((2758), int(ivec3((2758), 1, 0))), 0 | (~ (2758)))))))))), 0 ^ (int(5))), (_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_GLF_IDENTITY((2758), min((2758), (2758))))))), 0 ^ (int(5)))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, clamp(5, 5, 5)), (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(5))))))), (clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(0, 0 + (0)) ^ (int(5)))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(0, 0 + (0)) ^ (int(5))))) / 1), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED(_GLF_IDENTITY((2758), _GLF_IDENTITY(((2758)) - 0, max(((2758)) - 0, _GLF_IDENTITY(((2758)) - 0, 1 * (((2758)) - 0))))))))), 0 ^ (_GLF_IDENTITY(int(5), clamp(int(5), int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5)))))))))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((2758))))))), 0 ^ (int(5))))), (true ? clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) << 0)), int(ivec3(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, _GLF_IDENTITY(0, (0) | int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(0.0, 0.0, 1.0)), clamp(float(vec3(0.0, 0.0, 1.0)), float(vec3(0.0, 0.0, 1.0)), float(vec3(0.0, 0.0, 1.0)))))), float(_GLF_FUZZED(9180.6782)), bool(false))), injectionSwitch.x))), 0), max(ivec4(_GLF_IDENTITY(int(5), (int(5)) | _GLF_IDENTITY((int(5)), ((int(5))) | 0)), 0, 0, 0), ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0))))), 0, 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec2(5, 1)), clamp(_GLF_IDENTITY(int(ivec2(5, 1)), (int(ivec2(5, 1))) << 0), int(ivec2(5, 1)), int(ivec2(5, 1)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0), max(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0), ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0))))), 0, 1))), 1 * (_GLF_IDENTITY(int(5), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec2(5, 1)), clamp(_GLF_IDENTITY(int(ivec2(5, 1)), (int(ivec2(5, 1))) << 0), int(ivec2(5, 1)), int(ivec2(5, 1)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0), max(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) ^ 0), (int(5)) | (int(5))), 0, 0, 0))))), 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), _GLF_IDENTITY(int(5), int(ivec3(_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), 0, 0, 0), max(ivec4(_GLF_IDENTITY(int(5), (int(5)) | (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)), (_GLF_IDENTITY((int(5)), ((int(5))) | (_GLF_IDENTITY((int(5)), int(ivec4((int(5)), 1, 1, 0)))))) - (0 | 0)) ^ 0))), 0, 0, 0), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) << 0), (int(5)) | (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, max(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(92889) : 5)), 5))) >> 0)))), 0, _GLF_IDENTITY(0, clamp(0, 0, 0)), 0))))), 0, 1))))), 0 ^ (_GLF_IDENTITY(int(5), int(_GLF_IDENTITY(ivec3(int(5), 0, 0), min(ivec3(int(5), 0, 0), ivec3(int(5), 0, 0)))))))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 ^ (int(5))), (_GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), (int(5)) - 0), int(5)))))) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(_GLF_IDENTITY(5, max(5, 5)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(_GLF_IDENTITY(5, max(5, 5)))))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(_GLF_IDENTITY(5, max(5, 5))))))) + 0) : _GLF_FUZZED(ivec4(-59056, 20300, 78468, -7666)[2])))) : _GLF_FUZZED(-14326))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), 0 + (_GLF_IDENTITY(0, 0 ^ (0)))) ^ (int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((true ? 49970 : -66001)))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))))) ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(5)))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) ^ 0)) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((true ? 49970 : -66001)))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bool(_GLF_IDENTITY(true, ! (! (true))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false))))))), ! (! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3((! (true)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))) ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(5)))))))) + 0, (0 | 0) | ((clamp(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (int(5)))), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(15035) : 5))), _GLF_IDENTITY(0, 0 + (0)) ^ (int(5)))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((true ? 49970 : -66001)))), (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (_GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), int(ivec2(int(5), 1)))) << 0)))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (true ? 5 : _GLF_FUZZED((true ? 49970 : -66001)))), (true ? 5 : _GLF_FUZZED((2758))))), 0 ^ (int(5))))) << (0 >> _GLF_IDENTITY(int(3), int(3)))))) + 0)))) / 1)))), uvec2(1u)); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_15._injected_loop_counter < 1); _GLF_struct_replacement_15._injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 | (1 | _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (max(1, 1)) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(ivec2(34063, -32522).y))))), ~ (_GLF_IDENTITY(~ ((1 | (1 | _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y)))))), (true ? _GLF_IDENTITY(~ ((1 | (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y))), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y))), 0), min(ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y))), 0), ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y))), 0)))) | ivec2(0, 0))))))), min(_GLF_IDENTITY(~ ((1 | (1 | _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y)))))), (~ _GLF_IDENTITY(((1 | (1 | _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))) : _GLF_FUZZED(ivec2(34063, -32522).y)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : ((1 | (1 | _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, 0 | (1)))) : _GLF_FUZZED(ivec2(34063, -32522).y))))))))) >> 0), ~ ((1 | (1 | _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(ivec2(34063, -32522).y)))))))) : _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), (_GLF_FUZZED(_injected_loop_counter)) | (_GLF_FUZZED(_injected_loop_counter)))) - 0))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)) && true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((true ? next_virtual_gid : _GLF_FUZZED(num_workgroup)), uint(uvec3((true ? next_virtual_gid : _GLF_FUZZED(num_workgroup)), 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(4u), uint(4u)))))))))))], uint(2), 4, 64, _GLF_IDENTITY(4, (4) - 0));
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     subgroupAll(_GLF_IDENTITY(true, (true) || false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 barrier();
                }
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) < 1, _GLF_IDENTITY(false, bool(bool(false))) || _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec2(_injected_loop_counter < 1, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_injected_loop_counter < 1, bool(bvec2(_injected_loop_counter < 1, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))))))))); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))));
      }
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
