#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat2x4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 int _f1;
 uint workgroup_base;
 uvec2 _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 bvec2 _f1;
 uvec4 _f2;
 bvec4 _f3;
 ivec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_1 {
 uint _f0;
 mat2x4 _f1;
 bvec3 _f2;
 mat3 _f3;
 uint _f4;
 ivec4 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 vec4 _f1;
 ivec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 vec3 _f1;
 uvec3 _f2;
 ivec4 _f3;
 _GLF_struct_5 _f4;
 mat4x2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), (float(_GLF_FUZZED(-7.2))) / 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), mix(float(_GLF_FUZZED(80.39)), float(float(_GLF_FUZZED(-7.2))), bool(true))))), float(injectionSwitch.y), bool(true))), (true ? _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), (float(_GLF_FUZZED(-7.2))) / 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-7.2)), mix(float(_GLF_FUZZED(80.39)), float(float(_GLF_FUZZED(-7.2))), bool(true))))), float(injectionSwitch.y), bool(true))) : _GLF_FUZZED(0.9))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))), clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true)))))))))))))) || false), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.2)), float(injectionSwitch.y), bool(true)))))))))) || false), true, false))) || false))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-7035.6952), _GLF_FUZZED(9092.2913)), vec2(((injectionSwitch))[0], ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED((false ? -2.2 : -8.9))), bvec2(false, false)))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-7035.6952), _GLF_FUZZED(9092.2913)), vec2(_GLF_IDENTITY(((injectionSwitch))[0], float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(((injectionSwitch))[0], float(vec4(((injectionSwitch))[0], 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0), (true ? mat2(_GLF_IDENTITY(((injectionSwitch))[0], float(vec4(((injectionSwitch))[0], 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2(3.2, 7814.3138, 199.161, -2.5)))))), ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED((false ? -2.2 : -8.9))), bvec2(false, false)))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) * _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0))), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))), 0.0, 1.0), (vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))), 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0)), (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))), 0.0, 1.0), (vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))), 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0)), (dot(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))), 0.0, 1.0), (vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), _GLF_IDENTITY(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), (float(_GLF_IDENTITY(0.0, 0.0 + (0.0)))) + 0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))))), 0.0, 1.0)) / vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 1.0))) - 0.0)) * 1.0), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), exp(0.0) * (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (false ? _GLF_FUZZED(vec3(7.2, -809.388, 672.642)) : vec3(0.0, 0.0, 1.0)))), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(75.31)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))))), (dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) + tan(0.0))))))), (_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(773.265)), (true ? float(_GLF_FUZZED(773.265)) : _GLF_FUZZED(-19.49))), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))) / 1.0)), float(_GLF_FUZZED(-8259.3076)), bool(false))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (0.0) + tan(sin(0.0))), 1.0)), exp(0.0) * (_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3(_GLF_FUZZED(-3.3), _GLF_FUZZED((-800.375 * (1515.5153 * -967.632))), _GLF_FUZZED(5366.0377)), vec3((vec3(0.0, 0.0, 1.0))[0], (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(true, true, true)))), clamp(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), min(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), (dot(vec3(0.0, 0.0, 1.0), vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))) + tan(0.0)))))))) / 1.0), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(87.57)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77))))), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)))))) * mat3(1.0), mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)))), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77))))), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)))))) * mat3(1.0), mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(clamp(-4.9, 8.2, -35.77), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(clamp(-4.9, 8.2, -35.77), (clamp(-4.9, 8.2, -35.77)) * 1.0), 0.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(_GLF_IDENTITY(clamp(-4.9, 8.2, -35.77), (clamp(-4.9, 8.2, -35.77)) * 1.0), 0.0, 1.0) : _GLF_FUZZED(vec3(-721.175, -2.8, 978.253)))))))))), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)))))) * mat3(1.0), mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)))), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77))))), _GLF_IDENTITY((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)))))) * mat3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)), _GLF_IDENTITY(vec3(mat4x3(mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), mix(vec3((vec3(mat4x3(mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))[0], (vec3(mat4x3(mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))[1], _GLF_FUZZED((false ? -31.44 : 4033.7763))), vec3(_GLF_FUZZED(211.788), _GLF_FUZZED(-83.58), (vec3(mat4x3(mat3(1.0) * ((vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), float(mat2x3(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))) * mat3(1.0)), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))[2]), bvec3(false, false, true)))))))), vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(39.86) : 0.0)), 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(mat4x2(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, abs(0.0) + (0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), bool(true)))), float(_GLF_FUZZED(-8259.3076)), bool(false)), (mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(773.265)), float(0.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, true)))))), float(_GLF_FUZZED(-8259.3076)), bool(false))) / 1.0)))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), exp(0.0) * (dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0)), vec3(0.0, 0.0, 1.0))))), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(clamp(-4.9, 8.2, -35.77))))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, 0.0, 1.0))), 0.0 + (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), clamp(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), ((0.0)) + tan(0.0)) * 1.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((3674.7669 - 3.2))), bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), 1.0)))), (true ? dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((3674.7669 - 3.2))), bool(false))), 1.0)))) : _GLF_FUZZED(-9.5))), min(_GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) * 1.0)), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), (dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))) - 0.0), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0)) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat4x2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), exp(0.0), 0.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))))))))), injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.1)), bool(false))), 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / cos(0.0)), 0.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, float(float(0.0))), _GLF_IDENTITY(1.0, round(length(normalize(vec2(1.0, 1.0)))) * (1.0)))), mix(float(dot(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(752.063)), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))))), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), float(_GLF_FUZZED(50.03)), bool(false)))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) || false)), true, false)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) || false), true, false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))) || false))) || false), true, false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), ((_GLF_IDENTITY(! (true), false || (! (true))))) || false)))), true))), (injectionSwitch.x > injectionSwitch.y))) || false)), true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), ((_GLF_IDENTITY(! (true), false || (! (true))))) || false)))), true)), (bool(bvec4(false, false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), ((_GLF_IDENTITY(! (true), false || (! (true))))) || false)))), true))) || false)), (injectionSwitch.x > injectionSwitch.y))) || false)), true, false)))))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-34.36, -55.98)) : injectionSwitch)).y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(45.19)), float(injectionSwitch.y), bool(true))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bool(true))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (! _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), ! (! ((true))))))), bool(_GLF_IDENTITY(bvec3(false || (! (true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(false || (! (true)), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(false || (! (true)), false, false))))))))))), false || ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (! (true)), bool(_GLF_IDENTITY(bvec3(false || (! (true)), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(false || (! (true)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false || (! (true)), false, false))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false || (! (true)), false, false)))))))))))))), true))), (injectionSwitch.x > injectionSwitch.y))) || false)), true, false))))), _GLF_IDENTITY(false, (false) && true), true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (injectionSwitch.x > injectionSwitch.y))) || false, true && ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false))))))), true))))), true, false))))), _GLF_IDENTITY(false, (false) && true), true, false))) || false))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bool(bool(bvec3(false, true, true)))))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true, false)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), false || (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) && true), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ((! (_GLF_DEAD(false)))) && true)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), true))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), true))), false))))))))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-541.243)), float(_GLF_IDENTITY(float(mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), max(float(mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0)), float(mat4x3(injectionSwitch.y, 0.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 0.0, 1.0))))), bool(true)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false), true))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), float(_GLF_FUZZED((495.065 * -5.5))), bool(false))), injectionSwitch.x, injectionSwitch.x)), max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * exp(log(_GLF_IDENTITY(1.0, (1.0) - 0.0))), mix(float((injectionSwitch.x) * exp(log(1.0))), float(_GLF_FUZZED(-416.273)), bool(false)))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).x : _GLF_FUZZED(sign(0.3)))), max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(log(1.0))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x, injectionSwitch.x))) - 0.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), 0.0 + (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-27.02, -588.193)))).x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) * exp(log(1.0))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(log(1.0))))), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(log(1.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, exp(0.0), 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) * exp(log(1.0))))))), 0.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)), mix(float(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), _GLF_IDENTITY(dot(vec3(log(1.0), 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(log(1.0), 0.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, log(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)))), vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0))), tan(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, tan(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(log(1.0))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))), float(_GLF_FUZZED(-2.7)), bool(false)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true, true, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.2)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0))) > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(_GLF_FUZZED(0.8), _GLF_FUZZED(-4.2)), bvec2(false, false))))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.8), _GLF_FUZZED(-4.2)), bvec2(false, false))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_ONE(1.0, injectionSwitch.y))) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0)) * (injectionSwitch)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9710.4387)), vec2(_GLF_FUZZED(6.9), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.8), _GLF_FUZZED(-4.2)), bvec2(false, false))))).x > injectionSwitch.y))) || false)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (true ? injectionSwitch.y : _GLF_FUZZED(-6912.7133)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-4.7))), float(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(56.21)), vec2(_GLF_FUZZED(-2.3), (injectionSwitch)[1]), bvec2(false, true))))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(726.664)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true)))) + (injectionSwitch)).y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, (false) && true))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_IDENTITY(false, (false) && true)))))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY(false, bool(bool(false))), true, false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, log(1.0))))), float(_GLF_FUZZED(-4.0)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), true && (injectionSwitch.x > injectionSwitch.y)))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mat2(1.0) * (min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0)), min(injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_3(_GLF_struct_0(uvec4(1u), vec4(1.0), ivec3(1), bvec4(true)), _GLF_struct_1(1u, mat2x4(1.0), bvec3(true), mat3(1.0), 1u, ivec4(1), mat4x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(mat4(float(vec4(1.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(60676))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0)), (true ? float(mat4(float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), min(vec4(1.0, 0.0, 0.0, 1.0), vec4(1.0, 0.0, 0.0, 1.0)))), sqrt(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, exp(0.0), 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-328.640), (_GLF_IDENTITY(_GLF_FUZZED(-328.640), min(_GLF_FUZZED(-328.640), _GLF_FUZZED(-328.640)))) - 0.0))))))))))), _GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), min(_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)), _GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0)))), bvec2(true), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))), (false ? _GLF_FUZZED(uvec4(169442u, 154058u, 46705u, 18881u)) : uvec4(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))))), ivec3(1), mat4x3(1.0))), vec3(1.0), uvec3(1u), _GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), min(ivec4(1), ivec4(1)))) | ivec4(0, 0, 0, 0)), _GLF_struct_5(_GLF_struct_4(mat2x4(1.0), mat3x4(1.0)), 1, workgroup_size * workgroup_id, uvec2(1u)), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(4.6)), float((1.0) / 1.0), bool(true))), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(-8564.6436) : (1.0) / 1.0)))), (1.0) / 1.0)))) - 0.0))) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(4.6)), float((1.0) / 1.0), bool(true))), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(-8564.6436) : (1.0) / 1.0)))), (1.0) / 1.0)))) - 0.0))) - 0.0, (true ? (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(4.6)), float((1.0) / 1.0), bool(true))), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(-8564.6436) : (1.0) / 1.0)))), (1.0) / 1.0)))) - 0.0))) - 0.0 : _GLF_FUZZED(7348.1853))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(4.6)), float((1.0) / 1.0), bool(true))), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(-8564.6436) : (1.0) / 1.0)))), (1.0) / 1.0)))) - 0.0))) - 0.0, (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0, 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, clamp(_GLF_IDENTITY((1.0) / 1.0, mix(float(_GLF_FUZZED(4.6)), float((1.0) / 1.0), bool(true))), _GLF_IDENTITY((1.0) / 1.0, max((1.0) / 1.0, _GLF_IDENTITY((1.0) / 1.0, (false ? _GLF_FUZZED(-8564.6436) : (1.0) / 1.0)))), (1.0) / 1.0)))) - 0.0))) - 0.0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_6._f4.workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(vec2(-91.09, 3326.7869)) : ((injectionSwitch))))[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(-814.241)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)))))[_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (0), ((0) | (0)) | ((0) | (0))))], _GLF_FUZZED((-1.6))), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)))), vec2(1.0, 1.0) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(5.4), _GLF_FUZZED(-814.241)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), (injectionSwitch.x > injectionSwitch.y)))))[0], _GLF_FUZZED((-1.6))), vec2(_GLF_FUZZED(-5.2), (injectionSwitch)[1]), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)))))) / sqrt(vec2(1.0, 1.0))).y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_6._f4.workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))), min(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), clamp(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), clamp(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), max(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))))), subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u) : _GLF_FUZZED(num_workgroup))))))), ~ (~ (subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup)))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))))))) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 | ((1))) + 0))), int(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) + 0))), int(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1)))) - 0)), (1) | (1))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) + 0))), int(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1)))), (1) | (1))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) << 0), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) << 0), 0, _GLF_IDENTITY(1, (1) | (1)), 0))))), int(_GLF_IDENTITY(ivec3(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), ~ (~ (_GLF_IDENTITY(1, (1) + 0))))) >> 0))), 0, 1), (false ? _GLF_FUZZED(ivec3(-15535, -68926, 58841)) : ivec3(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), ~ (~ (_GLF_IDENTITY(1, (1) + 0))))) >> 0))), 0, 1)))))), (1) | (1))) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) + 0))), int(_GLF_IDENTITY(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1), min(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1), ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1)))))), (1) | (1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) + 0))), int(ivec3(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) + 0))), 0, 1)))), (1) | (1))) % subgroup_size)) * 1u)), ~ (~ ((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) + 0))), int(_GLF_IDENTITY(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1), min(ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1), ivec3(int(int(_GLF_IDENTITY(1, (1) + 0))), 0, 1)))))), (1) | (1))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, (1) + 0))), int(ivec3(int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) + 0))), 0, 1)))), (1) | (1))) % subgroup_size)) * 1u))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), max(((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) + 0)))) % subgroup_size)))));
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), ! (! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))), ~ (~ ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))))))))), false || (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) * 1) < _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))))), (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) | _GLF_IDENTITY((subgroup_size), (true ? _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size))) : _GLF_FUZZED(workgroup_size)))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (1) | (1))], float(mat4x3((injectionSwitch)[1], 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sqrt(1.0))))), vec2(_GLF_FUZZED(float(49439u)), _GLF_FUZZED(12.92)), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(uint(2), uint(2), uint(2))), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || false)), false, false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), false || ((! (_GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec2((! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), false || ((! (_GLF_IDENTITY(true, ! (! (true)))))))), false))))), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (1.0) / 1.0), sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-5874.5769 / -1.4))), float(0.0), bool(true))), 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(329.109)), float(1.0), bool(true))))))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), false || ((! (_GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-764.085))))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, sin(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), (dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) - 0.0), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), vec2(length(vec3(0.0, 0.0, 0.0)), 1.0))), length(vec2(0.0, 0.0)), tan(0.0), 1.0))) > injectionSwitch.y)))) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), false || ((! (_GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), false))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec4(false || (false), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false))), true && (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (false ? _GLF_FUZZED(-6348.2300) : min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))), _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1407.1696)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
