#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(_GLF_IDENTITY(-4323.9360, mix(float(_GLF_IDENTITY(-4323.9360, (-4323.9360) + 0.0)), float(_GLF_FUZZED(5641.1262)), bool(false))), _GLF_IDENTITY(-4323.9360, (false ? _GLF_FUZZED(-24.44) : _GLF_IDENTITY(-4323.9360, clamp(-4323.9360, -4323.9360, -4323.9360)))))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(-4323.9360, (-4323.9360) - 0.0))), 42.40).r, -8544.7606)))), 0.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? 0.0 : _GLF_FUZZED(dot(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-39.01)), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(float(35862))), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))))), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-39.01)), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(float(35862))), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-39.01)), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(float(35862))), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(-1.9), _GLF_FUZZED(-39.01)), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40), mix(vec2(_GLF_FUZZED(7.5), _GLF_FUZZED(float(35862))), vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[0], (vec2(_GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, clamp(_GLF_IDENTITY(-4323.9360, max(-4323.9360, -4323.9360)), -4323.9360, _GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)))), clamp(-4323.9360, -4323.9360, _GLF_IDENTITY(_GLF_IDENTITY(-4323.9360, min(-4323.9360, -4323.9360)), (-4323.9360) - 0.0))), 42.40))[1]), bvec2(true, true))))))).r, -8544.7606)))), 0.0)))) / _GLF_IDENTITY(dot(vec4(0.0, 1.0, sqrt(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, sqrt(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(_GLF_IDENTITY(normalize(1.0), (normalize(1.0)) - 0.0))))), 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.6)), bool(false))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, sqrt(1.0), 0.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true)), float(vec2(mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true)), 1.0)))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, float(float(1.0))), 0.0))), 1.0, sqrt(1.0), 0.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0))))))) > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (1 | 0) * (0))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true)))))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 >> _GLF_IDENTITY(int(7), int(7)))))), ~ (~ (1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), 1 * (~ (_GLF_IDENTITY(1, ~ (~ (1))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, (0 >> _GLF_IDENTITY(int(7), int(7)))))), ~ (~ (1))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, ~ (~ (1)))), 1 * (~ (_GLF_IDENTITY(1, ~ (~ (1)))))))))))))), int(ivec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 ^ (_GLF_IDENTITY(1, ~ (~ (1))))))))))), 0, 0)))))); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (true), true && (_GLF_IDENTITY(true && (true), true && (true && (true)))))))))), true && (! (_GLF_IDENTITY(true, true && (true)))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ((_GLF_IDENTITY(true, ! (! (true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), ! (! (true && (true)))), true && (_GLF_IDENTITY(true && (true), true && (true && (true)))))))))), true && (! (_GLF_IDENTITY(true, true && (true))))))) && true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 0 + (1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(_GLF_IDENTITY(7, (7) | (7)), _GLF_IDENTITY(7, max(7, 7))))), int(7)))); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           else
            {
            }
          }
         else
          {
           return;
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0), (mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(134.389))), 1.0, 1.0, 0.0, 1.0, 1.0))), determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 0.0)), 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(574.744)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0))), (float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0), (mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) * 1.0)), injectionSwitch.y))))))
    {
     do
      {
       for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, abs(0.0), abs(1.0), 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3347.9675) : injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) * 1u), gl_NumWorkGroups.x));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u)) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) | 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), max(0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u ^ (subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) + _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) | (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (~ (8u)))))))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))) ? _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) : _GLF_FUZZED(27213u))), _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id) << 0u), false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u)))) | (0u ^ 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup), _GLF_FUZZED(num_workgroup)))) ^ 0u) : subgroup_local_id)), 0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))))) | (0u ^ 0u)) : _GLF_FUZZED(subgroup_size))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, _GLF_IDENTITY(0u, (0u) + 0u)))) + _GLF_IDENTITY(1, max(1, 1)), 0u ^ (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))) + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), _GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u))) + 1) >> 0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))) + _GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(158897u))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)), 0 | (_GLF_IDENTITY(1, (1) / 1))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))), (0u + (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))) >> (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))), 1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))) | (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))) | ((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 1u * (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u)))))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))))), 0u | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))), uint(uvec3(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))), 0u, 0u))))))))))), (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u), ~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), 0u + ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), 0u + ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))))))) / 1u)), 0u, 0u, 0u))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))) | 0u))))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))))), 0u ^ (1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_local_id)), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))))))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))))) + 1), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), 0u + (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))))))), 1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicExchange(workgroup_id, num_workgroup)))), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) << 0u)) ^ 0u)), 0u, 0u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))) ^ 0u), 0u, 0u, _GLF_IDENTITY(0u, uint(uint(0u)))))), (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), _GLF_IDENTITY(((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))), (((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))) << 0u))), (uint(uint(_GLF_IDENTITY(((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))), (((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))) << 0u)))) * 1u)) | ((uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))) | ((_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u)), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u)), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)) | ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u, 0u, 0u))))) - 0u)))))))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))) ^ 0u)) | 0u), 0u, 0u, 0u))))))))))), (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) / 1u), ~ (subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ~ (~ (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), 0u + ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))))))), 0u, 0u, 0u))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), 0u + (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))), ((~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), 0u + (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))) * 1u)))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))))), 0u ^ (1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))))))))) : _GLF_FUZZED(subgroup_local_id))))), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), 0u + (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ~ (~ ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))))))), 1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))), 1u * (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), 0u, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))), ((_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))) | ((_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))), (_GLF_IDENTITY((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))), ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))) | ((uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))))))), 0u | _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))), ~ (~ ((uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)))))))))))))), (true ? _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), max(_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / 1u), ~ (subgroup_local_id))))), (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))) || false) ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), 0u + ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)))), 0u | ((_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id), 0u + ((false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id))))))))), 0u, 0u, 0u))))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u + (0u)), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) | 0u))))))))))))))), 0u ^ (1u * (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))))))), 0u | (uint(uint(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id) ^ ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), 0u, 0u, 0u))))))))))))) : _GLF_FUZZED(subgroup_local_id))))))) + 1)) / _GLF_IDENTITY(1u, 1u * (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))) ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), _GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), 0u, 0u, 0u))) + 1) >> 0u)))))) % subgroup_size);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_WRAPPED_IF_FALSE(false)))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))); _injected_loop_counter ++)
        {
         return;
        }
      }
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7))), _GLF_IDENTITY((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ~ (~ ((int(7)) | (int(7)))))))) >> _GLF_IDENTITY(int(7), int(7))), (((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))) - 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ~ (~ ((int(7)) | (int(7)))))))) >> _GLF_IDENTITY(int(7), int(7))), (((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))) - 0)), ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ~ (~ ((int(7)) | (int(7)))))))) >> _GLF_IDENTITY(int(7), int(7))), (((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))) - 0))) / 1), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ~ (~ ((int(7)) | (int(7)))))))) >> _GLF_IDENTITY(int(7), int(7))), (((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))) - 0)), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | (int(7)), ~ (~ ((int(7)) | (int(7)))))))) >> _GLF_IDENTITY(int(7), int(7))), (((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))) - 0)))) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), mix(float(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), float(_GLF_FUZZED(-803.493)), bool(false)))), 0.0, 0.0)), 1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-379.492)), float(float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0))), bool(true)), max(mix(float(_GLF_FUZZED(-379.492)), float(float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0))), bool(true)), mix(float(_GLF_FUZZED(-379.492)), float(float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0))), bool(true)))))), injectionSwitch.x))), min((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), clamp(determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)))), 1.0, 1.0)), mix(float(_GLF_FUZZED(-379.492)), float(float(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) * 1.0), 0.0, 0.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0))), 0.0, 0.0)), 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0))), bool(true)))), injectionSwitch.x))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(725.958) : 0.0)), 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0)), mix(float(_GLF_FUZZED(-379.492)), float(float(mat3x2(injectionSwitch.x, 0.0, 0.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat2(1.0, sin(0.0), 1.0, 1.0))), 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0)), 1.0, 1.0))), bool(true)))), injectionSwitch.x))))) / 1.0) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
      continue;
     buf[virtual_gid] = 1;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), true)))))
    continue;
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), (false ? _GLF_FUZZED(_GLF_IDENTITY(atan(-209.884, -3.5), (_GLF_IDENTITY(atan(-209.884, -3.5), clamp(atan(-209.884, -3.5), atan(-209.884, -3.5), _GLF_IDENTITY(atan(-209.884, -3.5), min(atan(-209.884, -3.5), atan(-209.884, -3.5)))))) / 1.0)) : min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))))), true, false), false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))), ! (! (true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true))))), ! (! ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))) || false))))), true, false), true))), false))))))), bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0))), 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0))), 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))), ((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0))), 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0), mat3x4(mat4(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), abs(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 0.0))), 1.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), true && (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false, true, true))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(! _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false, true, true))))), true, false)))))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              return;
             continue;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(-75.41)), vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], float(vec4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), 0.0, 1.0)), min(vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), 0.0, 1.0)), vec2(mat2x3(injectionSwitch, 0.0, exp(0.0), 0.0, 1.0))))).y))))).x, float(mat4x2(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, 0.0)), cos(0.0), log(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.5) : 0.0)), 0.0))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(175.209)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true, false, true)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(175.209)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) || false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(175.209), max(_GLF_FUZZED(175.209), _GLF_FUZZED(175.209)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(atan(vec2(-4.6, 96.45), exp2(vec2(1317.3807, -21.43)))))).x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(cos(0.0)), 0.0, 1.0))))))))))) && true))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5730.5443), _GLF_FUZZED((719.481 + 130.786))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6251.7897) : 0.0)), 1.0, 0.0, sin(0.0), abs(0.0), 0.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, sin(0.0), abs(0.0), 0.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), abs(_GLF_IDENTITY(1.0, (1.0) / _GLF_ONE(1.0, injectionSwitch.y))) * (sin(_GLF_IDENTITY(0.0, (0.0) * 1.0)))), abs(0.0), 0.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6422.1616) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6422.1616) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6422.1616) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))).y)))))), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))) / determinant(mat2(1.0, 0.0, sqrt(0.0), 1.0))), abs(0.0), 0.0, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))), true)))))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
            break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, abs(1.0), 1.0, tan(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat4(1.0) * (mat2x4(injectionSwitch, abs(1.0), 1.0, tan(0.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
              return;
             break;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0 * (injectionSwitch.y), clamp(1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y), 1.0 * (injectionSwitch.y))), mix(float(1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).y) / 1.0), injectionSwitch.y, injectionSwitch.y))))), mix(float(_GLF_FUZZED(6.4)), float((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, 1.0))))).y) / 1.0), injectionSwitch.y, injectionSwitch.y)))))), bool(true)))), float(_GLF_FUZZED(5743.1338)), bool(false)))))) && true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, ! (! (true)))))))) && ((injectionSwitch.x > injectionSwitch.y))))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7.4, max(7.4, 7.4)))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.0, 6.3)))).y))))) > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               break;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false), (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false)) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false), (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false)) && true))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               continue;
               if(_GLF_DEAD(false))
                break;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size)
              {
               atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), min(vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, 0.0))))).x)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))), int(_GLF_IDENTITY(6, max(6, 6)))))) / (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(25803)))) >> 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(25803)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(25803)), max((true ? 1 : _GLF_FUZZED(25803)), (true ? 1 : _GLF_FUZZED(25803)))), (true ? 1 : _GLF_FUZZED(25803)))))) >> 0)))) ^ 0))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))), int(_GLF_IDENTITY(6, max(6, 6)))))) / (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(25803)))) >> 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(25803)), max(_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(25803)), max((true ? 1 : _GLF_FUZZED(25803)), (true ? 1 : _GLF_FUZZED(25803)))), (true ? 1 : _GLF_FUZZED(25803)))))) >> 0)))) ^ 0))))), _GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) * 1), clamp(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))), int(6)))) / (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) - 0))), 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(25803), (true ? 1 : _GLF_FUZZED(25803)) << 0)))) >> 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(25803)))) >> 0)))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6)))) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6)))))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) * 1), clamp(int(6), _GLF_IDENTITY(int(6), min(int(6), int(6))), int(6)))) / (1 | _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) - 0))), 1))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(25803), (true ? 1 : _GLF_FUZZED(25803)) << 0)))) >> 0))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(25803)))) >> 0)))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6)))) | (_GLF_IDENTITY(int(6), _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(6), int(6))) | (0)) ^ (int(6))))))))) << 0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, sqrt(1.0)))).y)), false, false))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               return;
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))) / vec2(1.0, 1.0)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)), (true ? _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)), clamp(mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false)))))) : _GLF_FUZZED(vec2(-1153.9719, 1.4))))), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(716.130) : 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))) / vec2(1.0, 1.0)))).x), (true ? _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), _GLF_IDENTITY(length(0.0), clamp(_GLF_IDENTITY(length(0.0), max(length(0.0), length(0.0))), length(0.0), _GLF_IDENTITY(length(0.0), (length(0.0)) - 0.0))))))) / vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))), min((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))))) / vec2(1.0, 1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(true, false))), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), length(0.0))))) / vec2(1.0, 1.0)))).x) : _GLF_FUZZED(cos((7.4 / 2275.9154)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(_injected_loop_counter) : int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0), (true ? _injected_loop_counter ++ : _GLF_FUZZED(74009))))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true, false)))))
                            continue;
                           if(_GLF_DEAD(false))
                            break;
                           return;
                          }
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                   subgroupAll(false);
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))))), true, true)))))) && true)))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                    return;
                   continue;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                      return;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 continue;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, -9.1)))).y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, -9.1)))).y))), true, false, _GLF_IDENTITY(true, (true) && true))), false || _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, -9.1)))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.0, -9.1), vec2(mat3x2(_GLF_IDENTITY(vec2(-7.0, -9.1), (true ? vec2(-7.0, -9.1) : _GLF_FUZZED(vec2(20.13, 56.33)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec2(0.0, 0.0)))))))) : _GLF_FUZZED(vec2(-488.954, 0.9)))).y))), true, false, true))), false || (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, -9.1)))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.0, -9.1), vec2(mat3x2(_GLF_IDENTITY(vec2(-7.0, -9.1), (true ? vec2(-7.0, -9.1) : _GLF_FUZZED(vec2(20.13, 56.33)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec2(0.0, 0.0)))))))) : _GLF_FUZZED(vec2(-488.954, 0.9)))).y))), true, false, true))), bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.0, -9.1)))), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-7.0, -9.1), vec2(mat3x2(_GLF_IDENTITY(vec2(-7.0, -9.1), (true ? vec2(-7.0, -9.1) : _GLF_FUZZED(vec2(20.13, 56.33)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec2(0.0, 0.0)))))))) : _GLF_FUZZED(vec2(-488.954, 0.9)))).y))), true, false, true))), false, true, false))))))))
                  continue;
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY(false || _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (! (_GLF_IDENTITY(false || (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0), (mat3x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (injectionSwitch.x) - length(vec2(0.0, 0.0))) > injectionSwitch.y))))), (false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))), true, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.1)), float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(true, (true) || false)))))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(bvec3(false, false, true), false))))), true)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) || false))) && true))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)))).x > injectionSwitch.y)))))) || false)))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), ! (! (bool(bvec4((! (false)), true, false, false))))))))))))))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 break;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 return;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, true))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) && true)))))))))
                    return;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(findMSB(_injected_loop_counter))))); _injected_loop_counter --)
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) || false)) || false))))))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)), false || (_GLF_WRAPPED_IF_TRUE(true))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         do
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                            continue;
                           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ((false) && true) && true))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) && true)))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) && _GLF_IDENTITY(true, false || (true)))) && true))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (false) && true)))))) && true)) || false))
                            return;
                           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                            break;
                          }
                         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_LOOP(false))));
                         return;
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           continue;
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                          return;
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           if(_GLF_DEAD(false))
                            continue;
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   if(_GLF_DEAD(false))
                                    return;
                                  }
                                 return;
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) + length(vec2(0.0, 0.0)), mix(float(_GLF_IDENTITY((injectionSwitch.y), (true ? (injectionSwitch.y) : _GLF_FUZZED(640.539))) + length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (0.0))) * 1.0)) - 0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))))), float(_GLF_FUZZED(-397.739)), bool(false)))), _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.4)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)))))), min(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)))))), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)))))))), float(_GLF_FUZZED(-7.6)), bool(false))))), 0.0)))))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y) + length(vec2(0.0, 0.0)), float(mat3x2(_GLF_IDENTITY((injectionSwitch.y) + length(vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(float(false))), float((injectionSwitch.y) + length(vec2(0.0, 0.0))), bool(true))), 1.0, sqrt(1.0), 1.0, sqrt(0.0), abs(1.0)))), mix(float((injectionSwitch.y) + length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.9)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0))))))), float(_GLF_FUZZED(-397.739)), bool(false)))), _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.4)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(6853.5882)), float(0.0), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-7.6, mix(float(-7.6), float(_GLF_FUZZED((-78.56 - 8.0))), bool(false))))), bool(false))))), 0.0))))))) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (! (true))))))) || false), bool(bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), bool(bvec3(! (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), ! (! (! (true))))))) || false)))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + length(vec2(0.0, 0.0)))) && true)) && true))))))))))))
                                return;
                               if(_GLF_DEAD(false))
                                continue;
                               if(_GLF_DEAD(false))
                                continue;
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, true)))))))
                                continue;
                               if(_GLF_DEAD(false))
                                continue;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if(_GLF_DEAD(false))
                                break;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               break;
                              }
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                break;
                               do
                                {
                                 return;
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))));
                              }
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))))))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                     return;
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_IDENTITY((false) && true, bool(bvec4((false) && true, false, true, false)))))), false, false, false)))))))
                              continue;
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(false))
                                  return;
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                break;
                               if(_GLF_DEAD(false))
                                continue;
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                continue;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))
                            break;
                           return;
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           break;
                          }
                        }
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         continue;
                        }
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                    return;
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(9.4), _GLF_FUZZED(8.1)), bvec2(false, false))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y))) || false)))
                  return;
                 continue;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-4.9, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (true ? max(1.0, 1.0) : _GLF_FUZZED(-7732.7879)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-8253.0604))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), 0.0, 0.0, 1.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.0)), float(0.0), bool(true)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), max(1.0, 1.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))), float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(exp(0.0), float(vec4(exp(0.0), 1.0, cos(0.0), round(length(normalize(1.0)))))), (exp(0.0)) + 0.0), _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), 0.0, 0.0, 1.0, 0.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, min(-4.9, -4.9)), clamp(-4.9, -4.9, -4.9)), 0.0, exp(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), (mat3(1.0) * (vec3(1.0, 0.0, 0.0))) * mat3(1.0))))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 0.0, 1.0, 0.0))))) * _GLF_IDENTITY(-7871.2109, mix(float(-7871.2109), float(_GLF_FUZZED(1.0)), bool(false)))))), bool(false))) > injectionSwitch.y) && true))))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-4.9, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(800.615) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-49.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.0)), float(0.0), bool(true)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), max(1.0 * (1.0), 1.0 * (1.0)))), max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(55.99)), bool(false)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), mix(float(_GLF_FUZZED(vec4(391.425, -9439.4169, -3926.9402, -4570.6464).p)), float(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), float(vec3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 1.0, 0.0)))), bool(true))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(8.5)))) + 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(29.48) : exp(0.0))), exp(0.0)))) + 0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.1)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), min(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), _GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)))), 0.0, exp(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), (mat3(1.0) * (vec3(1.0, 0.0, 0.0))) * mat3(1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))) * -7871.2109))), bool(false))) > injectionSwitch.y) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-4.9, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(800.615) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-49.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.0)), float(0.0), bool(true)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), max(1.0 * (1.0), 1.0 * (1.0)))), max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(55.99)), bool(false)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), mix(float(_GLF_FUZZED(vec4(391.425, -9439.4169, -3926.9402, -4570.6464).p)), float(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), float(vec3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 1.0, 0.0)))), bool(true))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(8.5)))) + 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(29.48) : exp(0.0))), exp(0.0)))) + 0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.1)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), min(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), _GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)))), 0.0, exp(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), (mat3(1.0) * (vec3(1.0, 0.0, 0.0))) * mat3(1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))) * -7871.2109))), bool(false))) > injectionSwitch.y) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(-4.9, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (false ? _GLF_FUZZED(800.615) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), float(_GLF_FUZZED(-49.16)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0)), clamp(float(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.0)), float(0.0), bool(true)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), max(1.0 * (1.0), 1.0 * (1.0)))), max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(55.99)), bool(false)))) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), mix(float(_GLF_FUZZED(vec4(391.425, -9439.4169, -3926.9402, -4570.6464).p)), float(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), float(vec3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 1.0, 0.0)))), bool(true))), 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) + 0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(8.5)))) + 0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0), (mat3(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), 0.0, _GLF_IDENTITY(exp(0.0), (_GLF_IDENTITY(exp(0.0), min(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(29.48) : exp(0.0))), exp(0.0)))) + 0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.1)), float(1.0), bool(true))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), 0.0, 0.0, 1.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), min(_GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)), _GLF_IDENTITY(-4.9, clamp(-4.9, -4.9, -4.9)))), 0.0, exp(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), (mat3(1.0) * (vec3(1.0, 0.0, 0.0))) * mat3(1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0))))) * -7871.2109))), bool(false))) > injectionSwitch.y) && true)))))) || false)))))), _GLF_IDENTITY(true, true && (true)), false))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    return;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))), false))))))))))
                    return;
                   continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
                  {
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_FALSE(false))), ! (! (bool(bool(_GLF_WRAPPED_IF_FALSE(false))))))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                   continue;
                  }
                 continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                    continue;
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), min(uint(2), uint(2))), _GLF_IDENTITY(uint(uvec4(uint(2), 0u, 1u, (0u ^ 0u))), (uint(uvec4(uint(2), 0u, 1u, (0u ^ 0u)))) / 1u)), _GLF_IDENTITY(4, (4) | (4)), 64, 4);
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
                  {
                  }
                 else
                  {
                   return;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.6))), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), vec2(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))) + vec2(0.0, 0.0))).x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((7.6), (true ? (7.6) : _GLF_FUZZED(-7.8))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) && true)), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7.6))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) || false))), injectionSwitch.y)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY((7.6), max((7.6), (7.6))))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), ! _GLF_IDENTITY((! (! (bool(true)))), ! (_GLF_IDENTITY(! ((! (! (bool(true))))), bool(bvec4(_GLF_IDENTITY(! ((! (! (bool(true))))), true && (! ((! (! (bool(true))))))), false, false, true)))))))))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y) && true))))))))))
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(_GLF_IDENTITY(6, (6) | (6)), (_GLF_IDENTITY(6, (_GLF_IDENTITY(6, max(6, 6))) | (6))) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-59.55)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))))) / 1.0), injectionSwitch.x))))))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) ^ (0 ^ 0), (false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), int(ivec2(_GLF_FUZZED(_injected_loop_counter), 1))) : _GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), 0 | (~ ((1)))))) ^ (_GLF_IDENTITY(0 ^ 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0 ^ 0))))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((1) ^ (0 ^ 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                            {
                             subgroupAll(true);
                            }
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                      }
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                          continue;
                         do
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                              continue;
                             continue;
                            }
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              return;
                             return;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       else
                        {
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     return;
                    }
                   break;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, true && (true)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false))))))
                      break;
                     continue;
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), abs(1.0))))))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                          {
                          }
                         else
                          {
                           return;
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
              }
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                }
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
             break;
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), false, false, false)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1])), exp(0.0), tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.9) : 1.0)), 1.0, 1.0))))).y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0)))), false || (injectionSwitch.x > injectionSwitch.y)))) || false)) && true))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), (_GLF_IDENTITY(! (false), true && (! (false)))) && true)))) || false, ! _GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), true && (! (false)))) || false)), (_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), true && (! (false)))) || false)), true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), true && (! (false)))) || false)), ((! ((_GLF_IDENTITY(! (false), true && (! (false)))) || false))) || false)))) && true)))))))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
              continue;
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0), (mat3x4(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 1.0, 0.0, 0.0)) * mat3(1.0)))).x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-20.57))) > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), max(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))), _GLF_IDENTITY(0, max(0, 0)) ^ ((1 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * (4), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)) * (4), int(_GLF_ONE(1.0, injectionSwitch.y)) * (4), int(_GLF_ONE(1.0, injectionSwitch.y)) * (4))))))))))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(_GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(87119)))) | 0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 + (int(_GLF_IDENTITY(0, 0 ^ (0))))), int(0)))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), (_GLF_IDENTITY(~ (_injected_loop_counter ++), (~ (_injected_loop_counter ++)) >> 0)) >> _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-32672) : 0)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter ++), ((_injected_loop_counter ++)) + 0), (~ (_GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), _GLF_IDENTITY((~ (_injected_loop_counter ++)), ((~ (_injected_loop_counter ++))) | 0) << 0))))) >> 0))) - 0)))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0)), vec2(1.0, 1.0) * (vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), 0.0))))), mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(38224u), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(29.84) : float(_GLF_IDENTITY(38224u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38224u : _GLF_FUZZED(subgroup_size))))), ((false ? _GLF_FUZZED(29.84) : float(_GLF_IDENTITY(38224u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38224u : _GLF_FUZZED(subgroup_size)))))) / 1.0), (_GLF_IDENTITY((false ? _GLF_FUZZED(29.84) : float(_GLF_IDENTITY(38224u, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? 38224u : _GLF_FUZZED(subgroup_size))))), ((false ? _GLF_FUZZED(29.84) : float(_GLF_IDENTITY(38224u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 38224u : _GLF_FUZZED(subgroup_size)))))) / 1.0)) - 0.0)))), bvec2(true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8.2), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1], _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(6629.9352)), bool(false))), injectionSwitch[1])))[1], max((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) + vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))), (vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0)))) + vec2(0.0, 0.0)))), 1.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0))))))))[1], (false ? _GLF_FUZZED(_GLF_IDENTITY(4434.9654, float(float(4434.9654)))) : _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])))))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2x4(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0)) / 1.0), (true ? _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0)) / 1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-69.79)), min(float(_GLF_FUZZED(-69.79)), float(_GLF_FUZZED(-69.79)))), float((_GLF_IDENTITY(log(1.0), _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0, float(vec2(_GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0, mix(float((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0), float(_GLF_FUZZED(9329.2546)), bool(false))), 1.0))))) / 1.0), bool(true)))) : _GLF_FUZZED(9.2))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- 5.2)) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(mat2x4(vec4(0.0, 1.0, 1.0, 1.0), 1.0, 0.0, log(1.0), 0.0), (false ? _GLF_FUZZED(mat2x4(8.0, 5.1, -5.0, -6983.0882, -8.5, -7204.8381, -4.6, 8298.9180)) : mat2x4(vec4(0.0, 1.0, 1.0, 1.0), 1.0, 0.0, log(1.0), 0.0))) : _GLF_FUZZED(matrixCompMult(mat2x4(4668.0051, 283.504, -4.2, -9.8, -190.167, 5461.6519, -5.1, -735.398), mat2x4(-3.5, -86.53, -8050.2268, 16.65, _GLF_IDENTITY(-6.4, (false ? _GLF_FUZZED(vec2(53.66, -4.3)[0]) : -6.4)), 6.2, 75.36, -1.9)))))), (false ? _GLF_FUZZED(vec4(2638.2905, 8.4, -467.189, 638.117)) : vec4(_GLF_IDENTITY(mat2x4(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(1.0, (1.0) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0)) / 1.0), (true ? _GLF_IDENTITY(log(1.0), _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0)) / 1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-69.79)), min(float(_GLF_FUZZED(-69.79)), float(_GLF_FUZZED(-69.79)))), float((_GLF_IDENTITY(log(1.0), _GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0, float(vec2(_GLF_IDENTITY((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0, mix(float((_GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(9352.0307)), float(log(1.0)), bool(true)))) - 0.0), float(_GLF_FUZZED(9329.2546)), bool(false))), 1.0))))) / 1.0), bool(true)))) : _GLF_FUZZED(9.2))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED((- 5.2)) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), (true ? _GLF_IDENTITY(mat2x4(vec4(0.0, 1.0, 1.0, 1.0), 1.0, 0.0, log(1.0), 0.0), (false ? _GLF_FUZZED(mat2x4(8.0, 5.1, -5.0, -6983.0882, -8.5, -7204.8381, -4.6, 8298.9180)) : mat2x4(vec4(0.0, 1.0, 1.0, 1.0), 1.0, 0.0, log(1.0), 0.0))) : _GLF_FUZZED(matrixCompMult(mat2x4(4668.0051, 283.504, -4.2, -9.8, -190.167, 5461.6519, -5.1, -735.398), mat2x4(-3.5, -86.53, -8050.2268, 16.65, _GLF_IDENTITY(-6.4, (false ? _GLF_FUZZED(vec2(53.66, -4.3)[0]) : -6.4)), 6.2, 75.36, -1.9))))))))), vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, tan(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))))), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0, tan(0.0), 0.0, 0.0)), float(mat2x3(float(mat4x2(_GLF_IDENTITY((injectionSwitch)[1], max((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) << 0)], _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(4434.9654) : (injectionSwitch)[1])))), 0.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), max(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, tan(0.0)), max(vec4(1.0, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, tan(0.0)), (vec4(1.0, 0.0, 0.0, tan(0.0))) * vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0)), vec4(mat3(vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, tan(0.0)), max(vec4(1.0, 0.0, 0.0, tan(0.0)), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0)))))))), (vec4(1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))) * vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), 1.0, 1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0))))), dot(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, determinant(mat4(_GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), float(mat2x3(abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), length(0.0), 1.0, log(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0))))), mix(float(float(mat3x2(0.0, determinant(mat4(abs(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(0.0), 1.0)), 0.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), length(0.0), 1.0, log(1.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0)))))), float(_GLF_FUZZED(-4.1)), bool(false)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), sqrt(_GLF_IDENTITY(1.0, min(1.0, 1.0))), cos(0.0), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0)), transpose(_GLF_IDENTITY(transpose(mat4(_GLF_IDENTITY(1.0, float(mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0)))), injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), sqrt(1.0), cos(0.0), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0))), transpose(transpose(transpose(mat4(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0)), mix(float(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED((-7672.4575 + -7.9)), max(_GLF_FUZZED((-7672.4575 + -7.9)), _GLF_FUZZED((-7672.4575 + -7.9))))), bool(false))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), sqrt(1.0), cos(0.0), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), _GLF_IDENTITY(float(float(sin(0.0))), clamp(_GLF_IDENTITY(float(float(sin(0.0))), max(float(float(sin(0.0))), float(float(sin(0.0))))), float(float(sin(0.0))), float(float(sin(0.0)))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), cos(0.0)))))))))), 1.0), vec4(1.0, 0.0, 0.0, tan(0.0)))), 1.0, tan(0.0), 0.0, 0.0)), sqrt(0.0), 1.0, 0.0, 1.0, 0.0))))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(_GLF_IDENTITY(float(38224u), max(float(38224u), float(38224u))))), bvec2(true, false))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), max(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(1, (1) / 1)))))]), vec2(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), exp(vec2(0.0, 0.0)) * ((injectionSwitch))) : _GLF_FUZZED(vec2(-50.73, 7.5))))[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec3(_GLF_IDENTITY((! (true)), false || ((! (true)))), true, true)))), false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(float(38224u)), clamp(_GLF_FUZZED(float(38224u)), _GLF_IDENTITY(_GLF_FUZZED(float(38224u)), min(_GLF_IDENTITY(_GLF_FUZZED(float(38224u)), max(_GLF_FUZZED(float(38224u)), _GLF_FUZZED(float(38224u)))), _GLF_FUZZED(float(38224u)))), _GLF_FUZZED(float(38224u))))), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)))[0], mix(float(_GLF_IDENTITY((mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.2), (_GLF_FUZZED(8.2)) - 0.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), mix(vec2(_GLF_FUZZED(2.8), _GLF_FUZZED(44.47)), vec2(_GLF_IDENTITY(((mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.2), (_GLF_FUZZED(8.2)) - 0.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))))[0], float(vec3(_GLF_IDENTITY(((mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.2), (_GLF_FUZZED(8.2)) - 0.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))))[0], mix(float(_GLF_FUZZED(-22.76)), float(((mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.2), (_GLF_FUZZED(8.2)) - 0.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))))[0]), bool(true))), 1.0, 0.0))), ((mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(8.2), (_GLF_FUZZED(8.2)) - 0.0), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1])) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))))[1]), bvec2(true, true)))[0]), _GLF_IDENTITY(float(_GLF_FUZZED(-965.750)), _GLF_IDENTITY(float(float(float(_GLF_FUZZED(-965.750)))), max(float(float(float(_GLF_FUZZED(-965.750)))), float(float(float(_GLF_FUZZED(-965.750))))))), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, 1.0, 1.0, 1.0, 0.0))) + (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), (_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u)))))) + vec2(0.0, 0.0)))), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, false, false))), false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(-4.9)), vec2((_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(-8.8), _GLF_FUZZED(8.6)), vec2((mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))[0], (mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), min(vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))[_GLF_IDENTITY(0, 0 + (0))], (mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(float(int(-0.8))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(float(int(-0.8))), max(_GLF_FUZZED(float(int(-0.8))), _GLF_IDENTITY(_GLF_FUZZED(float(int(-0.8))), max(_GLF_FUZZED(float(int(-0.8))), _GLF_FUZZED(float(int(-0.8))))))), (_GLF_FUZZED(float(int(-0.8)))) - 0.0), _GLF_FUZZED(float(int(-0.8))))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), _GLF_IDENTITY(float(_GLF_FUZZED(-965.750)), clamp(float(_GLF_FUZZED(-965.750)), float(_GLF_FUZZED(-965.750)), float(_GLF_FUZZED(-965.750)))), bool(false))), _GLF_FUZZED(5.8)), _GLF_IDENTITY(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(88.39), _GLF_FUZZED(-5873.1405)), bvec2(false, false)))).x < injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(-22421))), _GLF_IDENTITY(1, (1) / 1)))]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)), _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, float(mat3(8.2, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(8.2, (true ? 8.2 : _GLF_FUZZED(15.33)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), min((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-9484.7895, -8.4)))), 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), max(mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, float(mat3(8.2, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(8.2, (true ? 8.2 : _GLF_FUZZED(15.33)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), min((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-9484.7895, -8.4)))), 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, min(8.2, _GLF_IDENTITY(8.2, float(mat3(8.2, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(8.2, (true ? 8.2 : _GLF_FUZZED(15.33)))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), min((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-9484.7895, -8.4)))), 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat3(vec2(0.0, 0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-4.8))), 1.0, 1.0, 1.0, 0.0))) + (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(int(-0.8)), max(float(int(-0.8)), float(int(-0.8)))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(int(-0.8)), max(float(int(-0.8)), float(int(-0.8)))), (_GLF_IDENTITY(float(int(-0.8)), max(float(int(-0.8)), float(int(-0.8))))) * 1.0), _GLF_IDENTITY(float(int(-0.8)), max(float(int(-0.8)), float(int(-0.8))))))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(_GLF_IDENTITY(38224u, 0u + (38224u))))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(785.175), _GLF_FUZZED(-4484.6166)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2(_GLF_FUZZED(0.4), (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], _GLF_FUZZED(vec3(40.14, 64.82, 8.1).p)), bvec2(true, false))), bvec2(true, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), _GLF_IDENTITY(bvec2(true, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec3(bvec3(bvec2(true, false), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), false), bvec3(bvec3(bvec3(bvec2(true, false), false))))))))))))))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(_GLF_FUZZED((-2070.9180 * -7074.2859))), float(((injectionSwitch))[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(782.819), _GLF_FUZZED(545.836)), bvec2(false, false))), (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(_GLF_FUZZED((-2070.9180 * -7074.2859))), float(((injectionSwitch))[0]), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((injectionSwitch))[1]), vec2(_GLF_FUZZED(782.819), _GLF_FUZZED(545.836)), bvec2(false, false)))) - vec2(0.0, 0.0))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(float(38224u), mix(float(float(38224u)), float(_GLF_FUZZED((+ 3.7))), bool(false))))), bvec2(true, false)))[0]), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))) - 0.0) < injectionSwitch.y)), false)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(6.2), float(mat3(_GLF_FUZZED(6.2), 1.0, 0.0, 1.0, sqrt(1.0), abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0))), _GLF_FUZZED(-4.9)), vec2((_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))) | (0))], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]), float(_GLF_FUZZED(_GLF_IDENTITY(-965.750, max(-965.750, -965.750)))), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(5.8, mix(float(5.8), float(_GLF_FUZZED(0.0)), bool(false))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false)))), true)))), false)))))), (mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | (0))))) | (0))], _GLF_FUZZED(float(_GLF_IDENTITY(38224u, uint(uvec4(38224u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))), bvec2(true, false)))[0]), float(_GLF_FUZZED(_GLF_IDENTITY(-965.750, max(-965.750, -965.750)))), bool(false))), _GLF_FUZZED(_GLF_IDENTITY(5.8, mix(float(5.8), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED((- 6.1))), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(0.0), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_FUZZED(0.0)))), (false ? _GLF_FUZZED(43.56) : float(_GLF_IDENTITY(_GLF_FUZZED(0.0), clamp(_GLF_IDENTITY(_GLF_FUZZED(0.0), mix(float(_GLF_FUZZED(0.0)), float(_GLF_FUZZED((- 6.1))), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(0.0), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_FUZZED(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))))), _GLF_FUZZED(0.0)))))), bool(false))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y))))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))))), false || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), true, false))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, true && (false)) || ((injectionSwitch.x > injectionSwitch.y))))))), false))), false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))))), false))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), sin(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 0.0))) < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false))), false)))), true)))), false))))))) + vec2(0.0, 0.0)))[0], (mix(vec2(_GLF_FUZZED(float(int(-0.8))), (mix(vec2(_GLF_FUZZED(8.2), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[1]), vec2(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(8.2), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], mix(float(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], clamp(_GLF_IDENTITY((mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], clamp((mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0])), (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0], (mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(8.2, min(_GLF_IDENTITY(8.2, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(float(subgroup_id)) : 1.0)) * (8.2)), 8.2))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(38224u))), bvec2(true, false)))[0]))), float(_GLF_FUZZED(-965.750)), bool(false))), _GLF_FUZZED(5.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))).y))))));
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
