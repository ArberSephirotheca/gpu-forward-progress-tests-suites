#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * cos(0.0), ((injectionSwitch.x) * cos(0.0)) - _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, true, true))) || false)), false, false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), bool(bvec4((bool(bool(false))), false, false, false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), bool(bvec4((bool(bool(false))), false, false, false))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), bool(bvec4((bool(bool(false))), false, false, false))) || false)), true, true, true)), bool(bvec2(bool(bvec4(! (_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY((bool(bool(false))), bool(bvec4((bool(bool(false))), false, false, false))) || false)), true, true, true)), false)))))))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))))))) || _GLF_IDENTITY(false, ! (! (false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, (false) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))) || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), true)))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), true))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(778.493) : injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(778.493) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(778.493) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(778.493) : injectionSwitch.x)))), 0.0))), injectionSwitch.x)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, clamp(_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ~ (~ (_GLF_IDENTITY((subgroup_id * subgroup_size) << 0u, ((subgroup_id * subgroup_size) << 0u) ^ 0u)))), (subgroup_id * subgroup_size) << 0u, (subgroup_id * subgroup_size) << 0u))) + subgroup_local_id, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u) + subgroup_local_id)), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id))))), subgroup_id)) * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id), uint(_GLF_IDENTITY(uint(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u)) ^ 0u)) | _GLF_IDENTITY((subgroup_id), (false ? _GLF_FUZZED(136511u) : (subgroup_id)))), uint(uint(subgroup_id))), subgroup_id)), (false ? _GLF_FUZZED(181147u) : _GLF_IDENTITY(uint(max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)), ~ (~ (uint(max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)))))))))) * subgroup_size))), (subgroup_id * subgroup_size) << 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)))) * _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (1u & 1u)))), (subgroup_id * subgroup_size) << 0u))), (false ? _GLF_FUZZED(workgroup_size) : (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), subgroup_id)) * subgroup_size, (subgroup_id * subgroup_size) << 0u))))))) << 0u) + subgroup_local_id) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (_GLF_IDENTITY(bool((false)), true && (bool((false)))))))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED(workgroup_id))));
 buf[virtual_gid] = _GLF_IDENTITY(1, ~ (~ (1)));
 if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1u, 0u), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1u, 0u), (uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1u, 0u)) ^ uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), clamp(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))), 0u ^ ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u) >> 0u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))))), (~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u)))))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u)) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), _GLF_IDENTITY(1u, (1u) / 1u), 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), clamp(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / _GLF_IDENTITY(1u, (1u) >> 0u), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))))), (~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true) ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u)))))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))), 1u, 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))), 1u, 0u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))))), 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), clamp(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) * 1u)))) - 0u)))) / 1u) >> 0u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))))), (~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u)))))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), ((false ? _GLF_FUZZED(num_workgroup) : subgroup_size)) * 1u)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), _GLF_IDENTITY(uint(uvec4((false ? _GLF_FUZZED(num_workgroup) : subgroup_size), 1u, _GLF_IDENTITY(1u, (1u) + (0u ^ 0u)), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), vec2(vec3(_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), max(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), exp(0.0)))))).y)))), 0u ^ (uint(uvec4((false ? _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), uint(_GLF_IDENTITY(uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec4(_GLF_FUZZED(num_workgroup), 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) : subgroup_size), 1u, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uint(uint(_GLF_ONE(1.0, injectionSwitch.y))))))))))))), 1u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) - 0u)) / 1u) >> 0u)))))), clamp(~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))))), ~ (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))) / _GLF_IDENTITY(1u, max(1u, 1u)), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))) / _GLF_IDENTITY(1u, max(1u, 1u)), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))) / _GLF_IDENTITY(1u, max(1u, 1u)), ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u) >> 0u))))))) * 1u))), ~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u, ((_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), min(_GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, (0u) - 0u)))))) / 1u) >> 0u)))))))), (~ (~ (uint(uvec3(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, clamp(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, max(false ? _GLF_FUZZED(num_workgroup) : subgroup_size, false ? _GLF_FUZZED(num_workgroup) : subgroup_size)), false ? _GLF_FUZZED(num_workgroup) : subgroup_size)))), 1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) - 0u)))) / 1u)))))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))) + 0u))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.9))) > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bool((! (false)))))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) - 0) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), min(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY(4, (4) << 0)))) + (0 | 0))))), max((_GLF_IDENTITY(4, (4) << 0)), (_GLF_IDENTITY(4, (4) << 0)))) ^ 0), 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), true && (! (! ((false))))))), ! (! ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec3(bvec3((false), false, false))))))))))))), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! _GLF_IDENTITY((false), ! (! ((false))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))))), false || (((! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), ! (! (((false))))))))))) && true))))))), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, abs(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y)))), _GLF_IDENTITY(! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y)), ! (! (! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, length(vec3(0.0, 0.0, 0.0)), exp(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 0.0), transpose(transpose(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec3(-1092.9838, -4.0, 4013.6736)[0]) : 0.0))) + 0.0), 0.0, 0.0)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (injectionSwitch.y), max(_GLF_IDENTITY(1.0 * (injectionSwitch.y), min(1.0 * _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0), 1.0 * (injectionSwitch.y))), 1.0 * (injectionSwitch.y))))))) && _GLF_IDENTITY(true, (true) || false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y)) * (uint(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 0 + (~ (0))))))), int(ivec3(2, 1, 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(_GLF_IDENTITY(ivec3(2, 1, 0), ~ (~ (ivec3(2, 1, 0))))), int(ivec3(2, 1, 0)))), 0 + (_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, 0)), int(ivec3(2, 1, 0)))))), ~ (~ (_GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) / 1))), max(int(ivec3(2, 1, 0)), int(_GLF_IDENTITY(ivec3(2, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-60669) : 1)), 0), ~ (_GLF_IDENTITY(~ (ivec3(2, _GLF_IDENTITY(1, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-60669) : 1)), _GLF_IDENTITY(0, max(0, 0)))), (~ (ivec3(2, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-60669) : 1)), 0))) ^ _GLF_IDENTITY(ivec3(0, 0, 0), (true ? ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(26831, -6075, 56004))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, 0)), _GLF_IDENTITY(int(ivec3(2, 1, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) + 0))), 0, 0))))), int(_GLF_IDENTITY(ivec4(int(ivec3(2, 1, 0)), 0, 0, 1), (_GLF_IDENTITY(ivec4(int(ivec3(2, 1, 0)), 0, 0, 1), (ivec4(int(ivec3(2, 1, 0)), 0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), 0, 0)), 1)) - ivec4(0, 0, 0, 0))) | ivec4(0, 0, 0, 0)))))), int(ivec3(_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, 0)), _GLF_IDENTITY(int(ivec3(2, 1, 0)), int(_GLF_IDENTITY(ivec4(int(ivec3(2, 1, 0)), 0, 0, 1), (_GLF_IDENTITY(ivec4(int(ivec3(2, 1, 0)), 0, 0, 1), (ivec4(int(ivec3(2, _GLF_IDENTITY(1, (1) | (1)), 0)), 0, 0, 1)) - ivec4(0, 0, 0, 0))) | ivec4(0, 0, 0, 0)))))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, 0)), int(ivec3(2, 1, 0)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, 0)), int(ivec3(2, 1, 0)))), (true ? _GLF_IDENTITY(int(ivec3(2, 1, 0)), max(int(ivec3(2, 1, 0)), int(ivec3(2, 1, 0)))) : _GLF_FUZZED(-80044))))))))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) && true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(400.443), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(400.443), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(400.443), _GLF_FUZZED(9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))).x, injectionSwitch.x)), 0.0, 0.0))))) > injectionSwitch.y)))))))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), ! (! (! (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7909.8273)), bool(false))), 0.0, 0.0)), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)), min(float(mat4(injectionSwitch.x, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.x, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)), float(mat4(injectionSwitch.x, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(335.198) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.3)), float(0.0), bool(true))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), log(1.0) + (clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(vec3(float(mat3x4(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0)))), float(_GLF_FUZZED((-3886.2358 + -4.0))), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(float(0.0), float(0.0), float(0.0))))), clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0))))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.7), float(_GLF_IDENTITY(float(_GLF_FUZZED(-9.7)), min(float(_GLF_FUZZED(-9.7)), float(_GLF_FUZZED(-9.7))))))), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), clamp(_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), abs(1.0), abs(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-518.107))), 0.0)), 1.0, 0.0, 0.0)), min(float(mat4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(faceforward(-689.667, 1.9, 2359.7818)) : abs(1.0))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- 12.73))), float(0.0), bool(true))), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), mix(float(_GLF_FUZZED(-98.87)), float(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), (determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))) + log(1.0))), bool(true)))), transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), (false ? _GLF_FUZZED(mat2x3(7.5, 9.8, -67.27, 902.597, -6.1, 9472.9987)) : mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))))))), 0.0 + (_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), (false ? _GLF_FUZZED(mat2x3(7.5, 9.8, -67.27, 902.597, -6.1, 9472.9987)) : mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))))))), max(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), (false ? _GLF_FUZZED(mat2x3(7.5, 9.8, -67.27, 902.597, -6.1, 9472.9987)) : mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), clamp(tan(0.0), tan(0.0), tan(0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), transpose(transpose(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8595.7354))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0)))), (false ? _GLF_FUZZED(mat2x3(7.5, 9.8, -67.27, 902.597, -6.1, 9472.9987)) : mat2x3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))), 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))))))))))))))))), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(923.685) : 0.0)), 0.0)), 0.0))))), 0.0, 1.0, 0.0, 0.0)), max(float(mat4(injectionSwitch.x, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(102007u))), float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) * 1.0), mix(float(_GLF_IDENTITY(0.0, (0.0) * 1.0)), float(_GLF_FUZZED(993.196)), bool(false))), 1.0, 1.0))) : _GLF_FUZZED(8.9))), 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)), float(float(float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))) : _GLF_FUZZED(2999.9842)))), 0.0, 1.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.3)), bool(false))), float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0), mat4(1.0) * (mat4(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0)))), 1.0, abs(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0)))))))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7993.1809, -9.1)))).y)), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x < injectionSwitch.y))), (! (! ((injectionSwitch.x < injectionSwitch.y)))) || false))), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x < injectionSwitch.y))), (! (! ((injectionSwitch.x < injectionSwitch.y)))) || false)))) || false) && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, cos(0.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bvec4(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, false, false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(_GLF_ZERO(0.0, injectionSwitch.x))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), true && (false || ((injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (false) && true) || ((injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false)))), mix(float((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))))))), float(_GLF_FUZZED(vec2(-9909.0492, 7.4).g)), bool(false)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false)))), mix(float((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))))), float(_GLF_FUZZED(vec2(-9909.0492, 7.4).g)), bool(false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false)))), mix(float((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), float(_GLF_IDENTITY(mat2(-912.691, 0.0, 1.0, 0.0), (true ? mat2(-912.691, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(-0.7, -2.4, -3.4, -57.79))))))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))))), float(_GLF_FUZZED(vec2(-9909.0492, 7.4).g)), bool(false))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false)))), mix(float((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (false ? _GLF_FUZZED(-2.8) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, 0.0)), float(_GLF_IDENTITY(mat2(-912.691, 0.0, 1.0, 0.0), (true ? mat2(-912.691, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2(-0.7, -2.4, -3.4, -57.79))))))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))))), float(_GLF_FUZZED(vec2(-9909.0492, 7.4).g)), bool(false)))))) && true)), true, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, 0.0)), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false)))), mix(float((true ? _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))))) * 1.0), 0.0)) + (injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-912.691, min(-912.691, _GLF_IDENTITY(-912.691, _GLF_IDENTITY(float(mat2(-912.691, 0.0, 1.0, 0.0)), min(float(mat2(-912.691, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), bool(true))))), float(mat2(-912.691, 0.0, 1.0, 0.0)))))))), mix(float(_GLF_FUZZED(-912.691)), float(_GLF_FUZZED((98.77 / -4.9))), bool(false))))), float(_GLF_FUZZED(vec2(-9909.0492, 7.4).g)), bool(false)))))), true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((! (false))), ! (! (((! (false))))))), ! (! (! (_GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7062.1950)))), bool(true))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
