#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1.0))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))), (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.0) : injectionSwitch.x)) > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))) && true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))), ! (! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))) && true)), (_GLF_DEAD(false)) && true))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), true))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), true))), false, false)), false || (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), true))), false, false))))) && true)), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec3((false) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)) || false), (false) && true), false)))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)) || false), (false) && true), false)))) || false), true), false))))), false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))), false, false)), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true))), false, false)))))) && true), false || (bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false))), ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(false, (false) && true), false)))) || false), true))), false, false))))) && true)))))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), uvec4(0u, 0u, 0u, 0u) | (uvec4(gl_NumWorkGroups, (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ _GLF_IDENTITY((~ (uvec3(0u, 0u, 0u))), max((~ (uvec3(0u, 0u, 0u))), (~ (uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) * uvec3(1u, _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), 1u), min((gl_WorkGroupSize) * uvec3(1u, 1u, 1u), (gl_WorkGroupSize) * uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), min(~ (1u), ~ (1u))))), _GLF_IDENTITY(1u, min(1u, 1u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), uvec3(uvec3(_GLF_IDENTITY((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u), ((gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))))).x, 1u * (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, true, false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(false, true, true, false))), true), true, true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))) + 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u))))))), (uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))) + 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u)))))))) | (uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))) + 0u), 0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u)))))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u))))), 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) | (uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) >> 0u))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) | (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * 1u), 0u, 0u)))), uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))) >> 0u))))) : subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) >> 0u)))), ((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(0u, (0u) >> 0u), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | (1u)), 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 0u), (_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 0u), (_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 0u), (uvec4(subgroup_local_id, 1u, 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u))))))), max((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), uint(uvec2(false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (true ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(virtual_gid))) : uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (1u) | (1u)), 0u, 0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u | ((0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))))))))) : subgroup_size))) | 0u)), (((subgroup_local_id + _GLF_IDENTITY(1, 0 + (1))) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))), 0u | (_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) << (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))), (subgroup_size)))))))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u, 0u, 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) | (uint(uvec4(subgroup_local_id, 1u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))), uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) | (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * 1u), 0u, 0u)))), uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))) >> 0u))))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u, 0u, 0u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(8u), uvec4(8u))) | (uvec4(subgroup_local_id, 1u, 0u, 0u)))), max(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) | (uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))), uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), clamp(_GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid), _GLF_FUZZED(virtual_gid))) : _GLF_IDENTITY(uint(uvec4(subgroup_local_id, 1u, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) - 0u))))), 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u ^ 0u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), (1u) - 0u) : _GLF_FUZZED(subgroup_size)))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (0u ^ 0u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))), (1u) - 0u) : _GLF_FUZZED(subgroup_size))))))), 0u, 0u)), (uint(uvec4(subgroup_local_id, 1u, 0u, 0u))) | (uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * 1u, ((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) * 1u) >> 0u)), 0u, 0u)))), uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(0u, max(0u, 0u)), 0u))))) >> 0u)))))) - 0u) : subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u)))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 1u))), subgroup_size))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ 0u)) | (((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u), (uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30151u) : 1u)), min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))))) : subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u), (uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(30151u) : 1u)), min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))))) : subgroup_size) | 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (0u ^ (subgroup_size)) | (0u ^ (subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u)))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), max((subgroup_size), (subgroup_size)))), 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 0u))))), 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u), uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), min(uvec4(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 1u, 1u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), 0u ^ (subgroup_size)), 1u, 1u, 1u)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) | (5u)), 5u, 5u))))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))), (((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u)))) ^ 0u)) | (((_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))) | (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, 0u), max(uvec4(subgroup_local_id, 1u, 0u, 0u), uvec4(subgroup_local_id, 1u, 0u, 0u))), uvec4(subgroup_local_id, 1u, 0u, 0u), uvec4(subgroup_local_id, 1u, 0u, 0u))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u), (uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))), (false ? _GLF_FUZZED((subgroup_size)) : min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u) : _GLF_FUZZED(uvec4(122289u, 8322u, 42028u, 10195u)))), (uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(0u, (0u) | 0u), 0u)) << uvec4(0u, 0u, 0u, 0u))), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)), 0u, 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))) | 0u), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), clamp(_GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(subgroup_id))), min(1u, 1u), min(1u, 1u)))), _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))))))) : subgroup_size)))) | 0u) | 0u))) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.7)), float(1.0), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0)), (vec2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))))), 1.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))) / vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(319.312), (injectionSwitch)[1]), bvec2(false, true))), sqrt(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(319.312, max(_GLF_IDENTITY(319.312, (319.312) - _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 319.312))), _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch)))[1]), bvec2(false, true))))))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(num_workgroup) : buf[virtual_gid] = 1))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true)))), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && (false)), false), false, true)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec4(false || (_GLF_DEAD(false)), false, true, _GLF_IDENTITY(false, (false) || false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), bool(bvec4(false || (_GLF_DEAD(false)), false, true, false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), bool(bvec4(false || (_GLF_DEAD(false)), false, true, false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), bool(bvec4(false || (_GLF_DEAD(false)), false, true, false))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), bool(bvec4(false || (_GLF_DEAD(false)), false, true, false))), true, false)))), false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(bitfieldReverse(min(-82564, 79021))) : 1)), subgroup_local_id + _GLF_IDENTITY(1, (1) << 0))), (subgroup_local_id + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(71655u)) : 1)), min(_GLF_IDENTITY(1, (1) | (1)), 1))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 | 1) * (1)), (false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldReverse(min(-82564, 79021)), (bitfieldReverse(min(-82564, 79021))) * 1)) : 1)), subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1, (1) << 0)) ^ 0))), (subgroup_local_id + _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(findMSB(71655u)) : 1)), min(_GLF_IDENTITY(1, (1) | (1)), 1))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) < subgroup_size) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), false))))), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), bool(bvec2(bool((false)), false)))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))) && true), false, true))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))) && true), false, true))), true, false, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-1.4))) : _GLF_FUZZED(4387.0564))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))) || (injectionSwitch.x > injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.3, mix(float(2.3), float(_GLF_FUZZED(7352.8031)), bool(false)))), _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(5.4)), float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_FUZZED(3.5)))), vec2(mat2x3(vec2(_GLF_FUZZED(_GLF_IDENTITY(2.3, mix(float(2.3), float(_GLF_FUZZED(7352.8031)), bool(false)))), _GLF_IDENTITY(_GLF_FUZZED(3.5), min(_GLF_IDENTITY(_GLF_FUZZED(3.5), mix(float(_GLF_FUZZED(5.4)), float(_GLF_FUZZED(3.5)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))), _GLF_FUZZED(3.5)))), 1.0, 0.0, 0.0, 1.0))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))).y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (! (false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))))))))) || (false))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false)))))))))) || (false)))))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))))))), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))))))), false), true))))))))
      barrier();
     return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u), next_virtual_gid)), next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, uint(uvec4(next_virtual_gid, 1u, 0u, 1u)))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), ! (! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true))))))), bvec3(bvec4(bvec3(false, false, false), true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec4(bvec3(bvec3(false, false, false)), true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! _GLF_IDENTITY((bool(bvec2(true, false))), bool(bvec3((bool(bvec2(true, false))), true, true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false))))))))))), true)))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! _GLF_IDENTITY((bool(bvec2(true, false))), bool(bvec3((bool(bvec2(true, false))), true, true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false))))))))))), true)))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), true && (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, (false) && true), false)))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! _GLF_IDENTITY((bool(bvec2(true, false))), bool(bvec3((bool(bvec2(true, false))), true, true)))))))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, false, false))), true)))), false))))))))))), true)))))), false, true, false))))) && true)), false, true)))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, false, true))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9782.5569)))) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))))), false, false, true)))) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), false, true, true))))))))), ! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), true && ((false))))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), true, true), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), true, true)))))))), false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6.2))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))).y, false, true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))), ! (! (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y, false, true, false)), true && (bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) * mat2(1.0))) / abs(vec2(1.0, 1.0))), injectionSwitch)).y, false, true, false))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), (bool(false)) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u)) << 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u))) ^ 0u), uint(uvec4((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)), 1u, 0u, 1u))))))) >> 0u) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-12.32)), bool(false))), (injectionSwitch.x) + 0.0))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-12.32)), bool(false))), (injectionSwitch.x) + 0.0))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-12.32)), bool(false))), (injectionSwitch.x) + 0.0))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))), (float(_GLF_IDENTITY(mat4x2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-12.32)), bool(false))), (injectionSwitch.x) + 0.0))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), mat4x2(mat4x3(mat4x2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-12.32)), bool(false))), (injectionSwitch.x) + 0.0))), (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(1.0, 1.0)))), sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))) / 1.0)))), 0u + (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) << 0u, _GLF_IDENTITY(_GLF_IDENTITY(((next_virtual_gid) << 0u) ^ 0u, ((_GLF_IDENTITY((next_virtual_gid) << 0u, clamp((next_virtual_gid) << 0u, _GLF_IDENTITY((next_virtual_gid) << 0u, ((next_virtual_gid) << 0u) >> (0u & 87817u)), (next_virtual_gid) << 0u))) ^ 0u) / 1u), clamp((_GLF_IDENTITY((next_virtual_gid), clamp((next_virtual_gid), (next_virtual_gid), (next_virtual_gid))) << 0u) ^ 0u, ((next_virtual_gid) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) ^ 0u, _GLF_IDENTITY(((next_virtual_gid) << 0u) ^ 0u, (((next_virtual_gid) << 0u) ^ 0u) | 0u)))))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(uint(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 0.0, 1.0, 0.0, 1.0, 1.0))))))))))), (true ? next_virtual_gid : _GLF_FUZZED(subgroup_local_id)))], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), min(int(ivec2(4, 0)), int(ivec2(4, 0))))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
