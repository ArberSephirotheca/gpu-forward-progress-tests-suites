#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size), 1u * (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (subgroup_local_id + 1))) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)))) << 0u)) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) >> 0u)), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), (~ (_GLF_IDENTITY(1, (1) | (1)))) >> 0)))) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))))) ^ _GLF_IDENTITY(0u, (0u) << 0u))));
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_IDENTITY(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0))
    {
     case 82:
     vec2 _GLF_SWITCH_0_0v[20], _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
     case 76:
     if((uvec2(129230u, _GLF_IDENTITY(114052u, (_GLF_IDENTITY(114052u, (_GLF_IDENTITY(114052u, (114052u) >> 0u)) | 0u)) | (114052u))) == uvec2(61915u, 187884u)))
      {
       for(int _GLF_SWITCH_0_3v[26], _GLF_SWITCH_0_4v[21]; true; mat3(-163.667, -617.162, -1.0, 9.6, 2.7, -6.1, -423.003, 2.0, _GLF_IDENTITY(-9864.1348, min(-9864.1348, -9864.1348))))
        {
         if(false)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           ivec2 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v[72];
           bitfieldExtract(uvec3(97047u, 191014u, 85292u), -7310, _GLF_IDENTITY(28015, max(28015, 28015)));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_injected_loop_counter)) != (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, 6))), int(6)))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           bvec4 _GLF_SWITCH_0_7v[92], _GLF_SWITCH_0_8v;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             (_GLF_IDENTITY(~ ivec4(59938, 25640, -47545, 91337), (true ? _GLF_IDENTITY(~ ivec4(59938, 25640, -47545, 91337), (~ ivec4(59938, 25640, -47545, 91337)) + (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(3), ivec4(3)))) : _GLF_FUZZED(ivec4(-89298, 95099, -11095, -81540)))));
            }
           else
            {
            }
           mat4x2(5.6, _GLF_IDENTITY(-3.4, (-3.4) / _GLF_IDENTITY(round(length(normalize(1.0))), abs(0.0) + (round(length(normalize(1.0)))))), -410.569, -1922.5695, 339.182, _GLF_IDENTITY(-681.204, 0.0 + (-681.204)), 887.653, -57.31);
           ;
           ;
           mat4x3 _GLF_SWITCH_0_9v, _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v;
          }
         else
          {
           (~ ivec3(-60429, 12664, -38004));
           sign(ivec3(71377, -66937, 28609));
           if(_GLF_DEAD(false))
            barrier();
           (_GLF_IDENTITY(-1.5 - vec3(69.42, -8.9, -2.3), max(-1.5 - vec3(69.42, -8.9, -2.3), -1.5 - vec3(69.42, -8.9, -2.3))));
           (-5.9 + mat2x3(74.58, 92.60, -9.5, -639.158, -541.327, -6224.0304));
           mat2(-3.8, -7660.6987, 2.2, _GLF_IDENTITY(-9.2, max(-9.2, -9.2)));
           mat4x2(95.54, 86.90, 8.5, -3.7, -39.83, 2.0, -651.485, _GLF_IDENTITY(4.4, float(mat4x2(4.4, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mix(vec3(_GLF_FUZZED(-208.958), _GLF_FUZZED(-4.0), _GLF_FUZZED(-6.3)), vec3(_GLF_IDENTITY((vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), vec3(mat4x2((vec3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 1.0, tan(0.0), 0.0, log(1.0), 1.0)))[0], (vec3(0.0, 0.0, 0.0))[1], (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * mat3(1.0)))[2]), bvec3(true, true, true)))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), log(1.0), 0.0, sqrt(0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0))))));
           equal(vec2(-91.43, -1727.9870), injectionSwitch);
          }
         uvec3 _GLF_SWITCH_0_12v[34], _GLF_SWITCH_0_13v;
         for(         clamp(_GLF_IDENTITY(uvec4(134904u, 56082u, 77676u, 156307u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec4(49810u, 131631u, 153389u, 153522u)) : uvec4(134904u, 56082u, 77676u, 156307u))).w, _GLF_IDENTITY(workgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), workgroup_id);
 false; ivec3(81218, -75356, -48613))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            {
             ;
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             ;
             if(_GLF_DEAD(false))
              barrier();
            }
           mat2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))))))
              {
              }
             else
              {
               _GLF_SWITCH_0_13v;
              }
            }
           (+ _GLF_IDENTITY(_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))), max(~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(72915u, (72915u) * 1u), _GLF_IDENTITY(148890u, (_GLF_IDENTITY(_GLF_IDENTITY(148890u, max(148890u, 148890u)), clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u)), (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) + 0u)) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (_GLF_IDENTITY(63501u, (63501u) | 0u)))), 71478u) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))), (false ? _GLF_FUZZED(uvec4(54998u, 144349u, 79401u, 147189u)) : ~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), _GLF_IDENTITY(71478u, (71478u) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))))))))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, _GLF_IDENTITY((_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u, (false ? _GLF_FUZZED(packHalf2x16(_GLF_SWITCH_0_1v)) : (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(63501u, ~ (~ (63501u))), (_GLF_IDENTITY(63501u, ~ (~ (63501u)))) + (0u ^ 0u)), 71478u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))), max(~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(63501u, ~ (~ (63501u))), (true ? _GLF_IDENTITY(63501u, ~ (~ (63501u))) : _GLF_FUZZED(24368u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(_GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, (148890u) | (148890u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(clamp(148890u, 148890u, 148890u), (false ? _GLF_FUZZED((workgroup_size - workgroup_id)) : clamp(148890u, 148890u, 148890u))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(63501u, 0u | (63501u)), ~ _GLF_IDENTITY((~ (63501u)), (_GLF_IDENTITY((~ (63501u)), min((~ (63501u)), (~ (63501u))))) | 0u)), _GLF_IDENTITY(71478u, (true ? 71478u : _GLF_FUZZED(subgroup_size)))) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, _GLF_IDENTITY(148890u, 0u ^ (148890u)), 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, 115978u))))), (false ? _GLF_FUZZED(uvec4(_GLF_IDENTITY(54998u, (54998u) | (54998u)), 144349u, 79401u, 147189u)) : ~ (_GLF_IDENTITY(uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, 148890u, 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u), (true ? uvec4(72915u, _GLF_IDENTITY(148890u, (_GLF_IDENTITY(148890u, clamp(148890u, _GLF_IDENTITY(148890u, uint(uvec3(148890u, 0u, 0u))), 148890u))) | 0u), _GLF_IDENTITY(63501u, ~ (~ (63501u))), 71478u) : _GLF_FUZZED(uvec4(160837u, 45930u, 95949u, _GLF_IDENTITY(115978u, 0u ^ (115978u))))))))))))))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           (85.48 / mat3x2(mat3x4(-61.01, -598.924, 1590.7568, -4.5, _GLF_IDENTITY(-36.91, (true ? _GLF_IDENTITY(-36.91, max(_GLF_IDENTITY(-36.91, _GLF_IDENTITY(min(-36.91, -36.91), (_GLF_IDENTITY(min(-36.91, -36.91), (false ? _GLF_FUZZED(607.277) : min(_GLF_IDENTITY(-36.91, mix(float(-36.91), float(_GLF_FUZZED(923.557)), bool(false))), -36.91)))) - _GLF_ZERO(0.0, injectionSwitch.x))), -36.91)) : _GLF_FUZZED(vec4(98.72, 4.5, -4300.6791, 715.651)[2]))), -6072.3360, 9.1, -1158.3407, -817.243, -1296.3396, 0.3, 8.5)));
           (mat3x2(14.52, _GLF_IDENTITY(-4.7, clamp(_GLF_IDENTITY(-4.7, (false ? _GLF_FUZZED(-718.664) : -4.7)), -4.7, -4.7)), 9.6, _GLF_IDENTITY(-7.8, max(_GLF_IDENTITY(-7.8, clamp(-7.8, -7.8, -7.8)), _GLF_IDENTITY(-7.8, min(-7.8, -7.8)))), 1.7, _GLF_IDENTITY(-7.4, mix(float(-7.4), float(_GLF_FUZZED(-8.3)), bool(false)))) - -9701.7935);
          }
         length(sign(vec3(75.41, -529.341, _GLF_IDENTITY(-60.97, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-1.9) : -60.97)))));
        }
      }
     else
      {
       min(ivec2(_GLF_IDENTITY(52310, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((52310), (false ? _GLF_FUZZED(bitCount(workgroup_base)) : _GLF_IDENTITY((52310), max((52310), (52310)))))), clamp((~ (52310)), (_GLF_IDENTITY(~ (52310), ~ (~ (~ (52310))))), (~ (52310))))), -80265), (- ivec2(76922, -37231)));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(false)
        {
         do
          {
           for(           _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, (true) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-6.4))), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true)));
 bvec2(false, true)[1]; 387.860)
            {
             ivec4 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
             mat4x3(1339.8360, 181.058, -4055.6262, 5.7, 6687.6652, -994.113, -8.9, -4.0, 2.3, 1.3, 8.7, -206.050);
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         {
          mat3 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
           {
            if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), ! (! (_GLF_DEAD(false)))))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                barrier();
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          else
           {
           }
          mat2 _GLF_SWITCH_0_22v[91], _GLF_SWITCH_0_23v;
          ;
          (76.58 / mat4(_GLF_IDENTITY(-1691.6647, clamp(-1691.6647, _GLF_IDENTITY(-1691.6647, (-1691.6647) - 0.0), -1691.6647)), 40.97, 77.18, _GLF_IDENTITY(741.479, mix(float(_GLF_IDENTITY(741.479, 1.0 * (_GLF_IDENTITY(741.479, clamp(741.479, 741.479, 741.479))))), float(_GLF_FUZZED(5.3)), bool(false))), 635.482, 7.6, -8.5, 4.7, 8.3, -6.8, 95.12, 855.834, 516.938, -736.514, _GLF_IDENTITY(2.1, mix(float(_GLF_IDENTITY(2.1, clamp(2.1, 2.1, 2.1))), float(_GLF_FUZZED(5229.5754)), bool(false))), 2.8));
          mat4x3 _GLF_SWITCH_0_24v;
          bvec3(true, true, true);
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            ;
           }
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            _GLF_IDENTITY(greaterThanEqual((uvec3(184765u, 194551u, _GLF_IDENTITY(89140u, (89140u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) & uvec3(156676u, _GLF_IDENTITY(163848u, clamp(163848u, _GLF_IDENTITY(163848u, uint(uvec3(163848u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), 163848u)), 51144u)), (uvec3(166100u, 110567u, 131786u) - next_virtual_gid).zyy), bvec3(bvec3(greaterThanEqual((uvec3(184765u, 194551u, _GLF_IDENTITY(89140u, (89140u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) & uvec3(156676u, _GLF_IDENTITY(163848u, clamp(163848u, _GLF_IDENTITY(163848u, uint(uvec3(163848u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), 163848u)), 51144u)), (uvec3(166100u, 110567u, 131786u) - next_virtual_gid).zyy))));
           }
          if(_GLF_DEAD(false))
           barrier();
         }
         ;
         while((inverse(mat3(-9.2, 772.824, 988.666, -3276.3791, -3.7, -7.9, -8.3, -1.8, 1.4)) != (+ mat3(278.041, -4.0, -9952.1202, 5936.9180, 2144.7249, -2.4, -4544.1229, 84.21, -6.6))))
          {
           switch(_GLF_SWITCH((0 & 33321)))
            {
             case 0:
             case 37:
             case 46:
             case 36:
             case 31:
             case 6:
             case 49:
             (_GLF_SWITCH_0_2v == sign(tanh(_GLF_SWITCH_0_2v)));
             break;
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while((_GLF_IDENTITY(mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2], (_GLF_IDENTITY(false ? _GLF_FUZZED(log2(vec4(-342.577, 472.280, -8.9, _GLF_IDENTITY(88.57, (_GLF_IDENTITY(88.57, clamp(88.57, _GLF_IDENTITY(88.57, mix(float(_GLF_FUZZED(-43.85)), float(88.57), bool(true))), 88.57))) / 1.0)))) : _GLF_IDENTITY(mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2], mix(vec4(_GLF_FUZZED(2.2), _GLF_FUZZED(-5.1), _GLF_FUZZED(732.280), (mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[3]), vec4((mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[0], (mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, _GLF_IDENTITY(13.62, mix(float(_GLF_FUZZED(-455.030)), float(13.62), bool(true))), -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[1], (mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[2], _GLF_FUZZED(48.04)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (false ? _GLF_FUZZED(vec4(6859.2080, -94.54, -386.194, 1248.9458)) : false ? _GLF_FUZZED(log2(vec4(-342.577, 472.280, -8.9, _GLF_IDENTITY(88.57, (_GLF_IDENTITY(88.57, clamp(88.57, _GLF_IDENTITY(88.57, mix(float(_GLF_FUZZED(-43.85)), float(88.57), bool(true))), 88.57))) / 1.0)))) : _GLF_IDENTITY(mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2], mix(vec4(_GLF_FUZZED(2.2), _GLF_FUZZED(-5.1), _GLF_FUZZED(732.280), (mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[3]), vec4((mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[0], (mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, _GLF_IDENTITY(13.62, mix(float(_GLF_FUZZED(-455.030)), float(13.62), bool(true))), -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[1], (mat4(-6.5, -2.4, 6.8, 71.26, 5001.8230, 49.52, -5684.8961, 13.62, -603.607, -8.8, -8129.3587, 7.8, 817.943, 9916.3353, -2739.8474, 8255.1646)[2])[2], _GLF_FUZZED(48.04)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))) != vec4(127.093, -336.773, 15.72, _GLF_IDENTITY(-5.4, clamp(-5.4, -5.4, -5.4)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           ((subgroup_local_id / subgroup_id) - _GLF_IDENTITY((false ? (uvec2(197610u, 104654u) % workgroup_base) : uvec2(150481u, 168244u)), (true ? _GLF_IDENTITY((false ? (uvec2(197610u, 104654u) % workgroup_base) : uvec2(150481u, 168244u)), ((false ? (uvec2(197610u, 104654u) % workgroup_base) : uvec2(150481u, 168244u))) | ((false ? (uvec2(197610u, 104654u) % workgroup_base) : uvec2(150481u, 168244u)))) : _GLF_FUZZED(uvec2(24962u, 174385u)))));
          }
         if(all(mix(bvec4(true, false, false, false), bvec4(false, false, true, true), bvec4(true, false, false, false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.2)), float(injectionSwitch.y), bool(true)))))) && true)))
            barrier();
           atan(step((_GLF_IDENTITY(- 87.44, float(float(_GLF_IDENTITY(- 87.44, _GLF_IDENTITY(mix(float(_GLF_FUZZED(340.133)), float(- 87.44), bool(true)), float(mat3(mix(float(_GLF_FUZZED(340.133)), float(- 87.44), bool(true)), 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0)))))))), -916.357), 45.57);
           mat4x3 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v;
          }
         while((mat4x2(-358.882, 6156.0168, -5397.7869, -9.8, _GLF_IDENTITY(6510.3618, mix(float(_GLF_FUZZED(-381.312)), float(6510.3618), bool(true))), 1579.7621, _GLF_IDENTITY(_GLF_IDENTITY(-18.36, clamp(-18.36, -18.36, -18.36)), (false ? _GLF_FUZZED(-2.1) : _GLF_IDENTITY(-18.36, clamp(-18.36, -18.36, -18.36)))), 9.2) == mat4x2(737.132, 70.63, -25.64, -8671.5540, 57.72, _GLF_IDENTITY(-342.816, max(-342.816, -342.816)), -9.6, 717.994)))
          {
           _GLF_IDENTITY(mat4(1115.9122, 5.1, 4.9, _GLF_IDENTITY(-8.0, (-8.0) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) / 1.0))), _GLF_IDENTITY(-6.6, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0)), mix(float(_GLF_FUZZED(1.1)), float(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0))), bool(true))), float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0))))), -831.715, 49.69, 2.1, -2.5, 905.420, -866.223, -762.602, 8.5, 5.9, -9829.0984, -1473.8486), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1115.9122, 5.1, 4.9, _GLF_IDENTITY(-8.0, (-8.0) + _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), (dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))) / 1.0))), _GLF_IDENTITY(-6.6, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0)), clamp(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0)), mix(float(_GLF_FUZZED(1.1)), float(float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0))), bool(true))), float(mat2x3(_GLF_IDENTITY(-6.6, 0.0 + (-6.6)), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 1.0))), 0.0))))), -831.715, 49.69, 2.1, -2.5, 905.420, -866.223, -762.602, 8.5, 5.9, -9829.0984, -1473.8486)));
           vec2(-8.4, 71.74);
           mat4x3(vec3(97.85, 37.68, -0.5), vec3(57.70, 8858.3538, 3293.9131), _GLF_IDENTITY(vec3(7.2, _GLF_IDENTITY(80.19, (_GLF_IDENTITY(80.19, min(80.19, 80.19))) - 0.0), -4.0), min(vec3(7.2, _GLF_IDENTITY(80.19, (_GLF_IDENTITY(80.19, min(80.19, 80.19))) - 0.0), -4.0), vec3(7.2, _GLF_IDENTITY(80.19, (_GLF_IDENTITY(80.19, min(80.19, 80.19))) - 0.0), -4.0))), _GLF_IDENTITY(vec3(-6222.8376, 97.52, -31.91), mix(vec3((vec3(-6222.8376, 97.52, -31.91))[0], _GLF_FUZZED(-48.24), (vec3(-6222.8376, 97.52, -31.91))[2]), vec3(_GLF_FUZZED(-5.8), _GLF_IDENTITY((vec3(-6222.8376, 97.52, -31.91)), vec3(0.0, 0.0, 0.0) + ((vec3(-6222.8376, 97.52, -31.91))))[1], _GLF_FUZZED(2.0)), bvec3(false, true, false))));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         if((log(-851.836) < 94.16))
          {
          }
        }
       if(true)
        {
         if(_GLF_DEAD(false))
          barrier();
         ivec2 _GLF_SWITCH_0_28v;
         mat3x4((mat2x4(81.01, 2.4, _GLF_IDENTITY(5763.0717, (5763.0717) - length(vec3(0.0, 0.0, 0.0))), 300.955, -51.55, -2.5, 534.126, 9.0) + mat2x4(-3341.0787, -9.9, 0.2, -67.04, -8.3, 7.2, 19.01, _GLF_IDENTITY(-9.0, min(-9.0, -9.0)))));
         bvec2 _GLF_SWITCH_0_29v[11];
         do
          {
           for(vec4 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v; (mat2x3(18.22, 9.0, 8943.0954, 830.627, 9536.1305, -2.2) == mat2x3(21.16, 0.4, 8.6, 703.020, -9.9, 14.29)); mat2x4(-97.97, 3.9, -8.6, -29.32, -4396.6834, _GLF_IDENTITY(_GLF_IDENTITY(-17.03, (-17.03) + _GLF_IDENTITY(dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(0.0, 1.0, 1.0)))), float(mat3(_GLF_IDENTITY(-17.03, (true ? -17.03 : _GLF_FUZZED(-5.4))), 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), 5.4, -8.4))
            {
             inversesqrt(vec3(8350.5711, 65.71, 7926.2076));
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false)), false || (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, true && (false)))))))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (false ? _GLF_IDENTITY(_GLF_FUZZED(7.0), (true ? _GLF_FUZZED(7.0) : _GLF_FUZZED(3179.2968))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) ^ (1 ^ 1))], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(vec2(_GLF_FUZZED(-4.5), _GLF_FUZZED((2.6 * -9733.0576))), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(8846.0246)), bool(false)))))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(49.86), _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))) / 1.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(407.272)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, round(length(normalize(1.0))), sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), max(float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, round(length(normalize(1.0))), sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, round(length(normalize(1.0))), sqrt(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))))))).x)))) > injectionSwitch.y))) && true)));
         mat2(-2.9, 440.692, _GLF_IDENTITY(_GLF_IDENTITY(-7.5, (-7.5) / 1.0), 1.0 * (_GLF_IDENTITY(-7.5, (-7.5) / 1.0))), -7.8);
         vec4 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v, _GLF_SWITCH_0_34v;
        }
       else
        {
         for(         32073;
 (uvec4(154898u, 40606u, 126586u, 47375u) != (uvec4(104182u, 53553u, 40103u, 93073u) / uvec4(_GLF_IDENTITY(14829u, ~ (_GLF_IDENTITY(~ (14829u), _GLF_IDENTITY(max(~ (14829u), ~ (14829u)), (max(~ (14829u), ~ (14829u))) * 1u)))), 54343u, 16188u, 99089u))); workgroup_base)
          {
           if(_GLF_DEAD(false))
            barrier();
           vec2 _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
           lessThan(vec3(-3.9, -41.78, 156.411), vec3(9849.0172, 49.28, 0.1));
           (+ mat3x4(75.06, 1130.0065, 29.86, -3.5, -610.171, 5633.8303, -10.01, -669.851, -7.1, -1.6, 7113.2805, -5.3));
           bvec3 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v[85];
           int _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
           ivec3(-1017, -69886, 51834);
           (ivec4(-23837, _GLF_IDENTITY(-1286, min(-1286, -1286)), _GLF_IDENTITY(-49563, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(-49563, int(ivec3(-49563, 0, 0))))), min(~ (~ (_GLF_IDENTITY(-49563, int(ivec3(-49563, 0, 0))))), ~ (~ (_GLF_IDENTITY(-49563, int(ivec3(-49563, 0, 0)))))))), -65657) >> (ivec2(-96032, -78645) % _GLF_IDENTITY(ivec2(96375, -11470), (ivec2(96375, -11470)) | ivec2(0, 0)))[0]);
           mat2x4 _GLF_SWITCH_0_42v;
           mat4 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[96];
          }
         true;
         mat2x4(-9408.8987, 8.1, -64.01, -9715.7484, -0.3, -31.19, -192.805, 756.529);
         while((mat3x2(-2.8, -336.408, _GLF_IDENTITY(-8011.9550, clamp(-8011.9550, _GLF_IDENTITY(-8011.9550, clamp(-8011.9550, -8011.9550, -8011.9550)), _GLF_IDENTITY(-8011.9550, max(_GLF_IDENTITY(-8011.9550, (false ? _GLF_FUZZED(709.781) : -8011.9550)), -8011.9550)))), -48.39, -7.0, 158.822) == mat3x2(-0.2, 6307.9294, 7.6, 59.52, 8.9, 3.8)))
          {
           switch(_GLF_SWITCH((46133 & 0)))
            {
             case 74:
             mat3x4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
             case 0:
             case 29:
             case 33:
             mod(vec4(-7.8, -9.7, 9.5, 993.950), _GLF_IDENTITY(vec4(2.0, 888.418, 24.16, -8296.5527), max(vec4(2.0, 888.418, 24.16, -8296.5527), vec4(2.0, 888.418, 24.16, -8296.5527))));
             step(7.4, vec3(6808.7286, 3.4, -45.51));
             case 8:
             ;
             mat3x4 _GLF_SWITCH_0_45v[57], _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v[17];
             break;
             case 52:
             mat2x3 _GLF_SWITCH_1_2v[1];
             case 38:
             uvec2(159510u, 188165u);
             default:
             1;
            }
          }
         if(false)
          {
           bvec2 _GLF_SWITCH_0_48v[8], _GLF_SWITCH_0_49v;
          }
         uvec2 _GLF_SWITCH_0_50v;
         lessThan(vec3(-3.4, 7940.4925, 0.2), _GLF_IDENTITY(vec3(-791.184, 99.35, 9010.8092), _GLF_IDENTITY(mat3(1.0) * (vec3(-791.184, 99.35, 9010.8092)), mix(vec3((mat3(1.0) * (vec3(-791.184, 99.35, 9010.8092)))[0], _GLF_FUZZED((-9.5)), (mat3(1.0) * (vec3(_GLF_IDENTITY(_GLF_IDENTITY(-791.184, (-791.184) + 0.0), min(-791.184, -791.184)), 99.35, _GLF_IDENTITY(9010.8092, (9010.8092) * 1.0))))[2]), vec3(_GLF_FUZZED(-64.67), (mat3(1.0) * (vec3(-791.184, 99.35, 9010.8092)))[1], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-85.43, (-85.43) + 0.0), min(-85.43, -85.43)))), bvec3(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))));
         mat4x2 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v;
        }
      }
     case 0:
     atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (64), 0 | (~ (64))))), 4);
     case 26:
     case 37:
     subgroupAll(false);
     break;
     default:
     1;
    }
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, 0 ^ (2))), 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
