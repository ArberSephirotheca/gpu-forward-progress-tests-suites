#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(atan(injectionSwitch, vec2(-222.866, -3885.1166))))) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), bool(bool(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))))) && true)))) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 4073.2060))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-88.73)))), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) && true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))), bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))))) || false)), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))) || false)))))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y = subgroup_local_id, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y = subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3((false) || false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0)))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))) || false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))) || false))), bool(bvec2(! (! (_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, true, false)))) || false))), _GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))))))))))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) / uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), min(subgroup_local_id, subgroup_local_id))), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), ~ (~ (max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))))), (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.w = workgroup_size) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(-35.68, 93.14)) : min(injectionSwitch, injectionSwitch))))), min(injectionSwitch, injectionSwitch)))).x)), uint(uvec4(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-35.68, 93.14)) : min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-35.68, 93.14)) : min(injectionSwitch, injectionSwitch), vec2(vec4(false ? _GLF_FUZZED(vec2(-35.68, 93.14)) : min(injectionSwitch, injectionSwitch), cos(0.0), 0.0))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-35.68, 93.14)) : min(injectionSwitch, injectionSwitch), vec2(mat2x4(false ? _GLF_FUZZED(vec2(-35.68, 93.14)) : min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0))))))))), min(injectionSwitch, injectionSwitch)))).x)), 0u, 0u, (1u ^ 1u)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false)), true))))))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))) && true))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.w * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), (workgroup_id))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(679.759) : 0.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-37.31)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0))) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, true, false))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true)))))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))) && true)), bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-37.31)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-37.31)), bool(false)))), float(_GLF_FUZZED(vec4(579.388, 48.89, -9053.6856, -8062.9127).a)), bool(false))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 1.0))) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))), true, true, false))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true)))))))))))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))))))))))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * subgroup_size + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size)), GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size)).y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), (_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, min(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, max(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, 0u ^ (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1))))))) % subgroup_size), ~ (~ (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size))))) | 0u)) | (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_size)))))), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) / 1u), clamp(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) | (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size))), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) / 1u), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * subgroup_size, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), (uvec3(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)) | uvec3(0u, 0u, 0u)))) + _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) | ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size) | uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)).y + 1), ~ (~ (_GLF_IDENTITY((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, max(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size)), GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size)).y + 1)))))) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) / 1u), _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size)).x * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) | (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size))), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).y + 1), max(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).y + 1), ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).y + 1)) | 0u), (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size) ^ uvec4(0u, 0u, 0u, 0u)).y + 1))) % subgroup_size)) | _GLF_IDENTITY((((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)), (true ? (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) : _GLF_FUZZED(workgroup_size)))), (((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, clamp(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1, GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1))) % subgroup_size)) / 1u)) / 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.z + GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.x * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), subgroup_size)) + _GLF_IDENTITY(_GLF_IDENTITY(((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size), _GLF_IDENTITY((((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) | (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)), (true ? (((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y, (GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y) | (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y, (false ? _GLF_FUZZED(subgroup_id) : GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y)))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) : _GLF_FUZZED(virtual_gid)))), (((GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size)) / 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.0, -3346.5308)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.0, -3346.5308))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, true && (true)) ? injectionSwitch : _GLF_FUZZED(vec2(6.0, -3346.5308))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(ldexp(injectionSwitch, ivec2(-61624, -98979))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))) / vec2(1.0, 1.0))).y, (injectionSwitch.y) + 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), (true ? _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), (true ? vec2(length(vec2(0.0, 0.0)), 1.0) : _GLF_FUZZED(vec2(3.3, -5652.7455)))) : _GLF_FUZZED(vec2(601.867, -6559.0429))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(5.8) : length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(-60.53)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), min(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0)), 1.0)), float(mat2x4(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), tan(0.0), 1.0, 1.0, 1.0))))), max(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0)), 0.0 + (float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-6.4) : _GLF_IDENTITY((injectionSwitch.y), sin(0.0) + ((injectionSwitch.y))))) + 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), _GLF_IDENTITY(min(length(vec2(0.0, 0.0)), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0))))), max(min(length(vec2(0.0, 0.0)), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0))))), min(length(vec2(0.0, 0.0)), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))))), 1.0)), max(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), (false ? _GLF_FUZZED(-790.896) : dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))))), 0.0, 0.0, 1.0)))))), _GLF_IDENTITY(false, false || (false)) || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.0, -3346.5308)))).y, (injectionSwitch.y) + 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-32.78)), bool(false))))), _GLF_IDENTITY(1.0, float(float(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), min(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7096.2405) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), float(mat2x4(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0))))), float(mat4x3(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), min(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-7096.2405) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), float(mat2x4(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), 1.0, 0.0, 1.0, tan(0.0), 1.0, 1.0, 1.0))))), 0.0, sqrt(1.0), 0.0, 0.0, log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-356.453) : 0.0)), 0.0, tan(0.0), 0.0, 0.0, sin(0.0)))), max(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), 1.0))))), 0.0, 0.0, 1.0)), 0.0 + (float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), float(float(length(vec2(0.0, 0.0))))), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) + 0.0), min(length(vec2(0.0, 0.0)), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) + 0.0), min(length(vec2(0.0, 0.0)), _GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0))))))) - 0.0), 1.0)), max(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), 0.0, 0.0, 1.0)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, exp(0.0)), min(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, exp(0.0)), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, exp(0.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))) || false, (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false))))) || false, ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), false || (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))))) && true)))) || false))) || false)) || false) && true), _GLF_IDENTITY(false, bool(bvec2(false, false))), true, false)))) && true), true && ((! (_GLF_IDENTITY(false, (false) || false))) || false))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, false)))))), true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), _GLF_IDENTITY(false, false || (false)))), false))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), true, true), false))), false)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), true, true), false)), false))), true))), false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))))), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x < injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), true))))))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), true)))))))) && true, ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(injectionSwitch.x < injectionSwitch.y, true), true)))))))) && true, false || ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(442.211), _GLF_FUZZED(float(true))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, true && (true))))).x < injectionSwitch.y, true), true)))))))) && true)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-341.807), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(8819.3540)), bvec2(true, false))).y)))) && (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), true && ((! (false)))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, cos(0.0), 1.0), (true ? mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat4x3(9.6, -5.6, -8.0, -0.7, 0.1, 675.778, -8.9, 1.0, 9.2, 5.9, 3105.5745, -841.209)))))).y))), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)))))), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)))))), true))) && true)))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, cos(0.0), 1.0), (true ? mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sqrt(1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, cos(0.0), 1.0) : _GLF_FUZZED(mat4x3(9.6, -5.6, -8.0, -0.7, 0.1, 675.778, -8.9, 1.0, 9.2, 5.9, 3105.5745, -841.209)))))).y))), true)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)))))), true)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4894.9477)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, false || (false)))))), true))) && true)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(buf[virtual_gid] = 1, 0u + (buf[virtual_gid] = 1));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size, (true ? GLF_merged4_0_1_11_1_1_17_2_1_14_3_1_14subgroup_idsubgroup_local_idworkgroup_baseworkgroup_size : _GLF_FUZZED((uvec4(84422u, 65484u, 26374u, 180665u) % workgroup_base)))).y + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) ^ _GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY((1) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)) ^ 0, (false ? _GLF_FUZZED(18603) : (1) ^ 0))) ^ 0)) / 1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(int(1)))), _GLF_IDENTITY(0, max(0, 0)) | (~ _GLF_IDENTITY((1), ((1)) ^ 0))), clamp(_GLF_IDENTITY(~ (1), 0 | (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-11941) : ~ (1))))), _GLF_IDENTITY(~ (1), 0 | _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1))))))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(0 | (~ (1)), 0 + (0 | (~ (1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, int(int(1)))), _GLF_IDENTITY(0, max(0, 0)) | (~ _GLF_IDENTITY((1), ((1)) ^ 0))), clamp(_GLF_IDENTITY(~ (1), 0 | (_GLF_IDENTITY(~ (1), (false ? _GLF_FUZZED(-11941) : ~ (1))))), _GLF_IDENTITY(~ (1), 0 | _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), _GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1))))))), _GLF_IDENTITY(~ (1), _GLF_IDENTITY(0 | (~ (1)), 0 + (0 | (~ (1)))))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-795.648)), vec2(_GLF_FUZZED(-0.3), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), true, false)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.7), (false ? _GLF_FUZZED(-9904.5712) : _GLF_FUZZED(-2.7))), _GLF_FUZZED(-9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.7), _GLF_FUZZED(-9.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y), false))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(-481.255, -1.9)) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) - 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.51) : 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(474.620) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.51) : 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.51) : 0.0)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(474.620) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.51) : 0.0))))) + length(vec2(0.0, 0.0))), injectionSwitch.x)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(83237))), vec2(_GLF_FUZZED(-9.2), (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), bvec2(false, true))), clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), max(mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * (clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (false ? _GLF_FUZZED(vec2(-481.255, _GLF_IDENTITY(-1.9, clamp(_GLF_IDENTITY(-1.9, mix(float(_GLF_FUZZED(2.6)), float(-1.9), bool(true))), _GLF_IDENTITY(-1.9, (-1.9) - 0.0), -1.9)))) : clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) - 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.51) : 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(474.620) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-72.51) : 0.0)))), injectionSwitch.x)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(false), (float(false)) + 0.0)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(true, true))).y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(false), (float(false)) + 0.0)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(true, true))).y))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(false), (float(false)) + 0.0)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(true, true))).y))))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(false), (float(false)) + 0.0)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(-74.07)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))[1]), bvec2(true, true))).y))))), true), true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - (152575u & 0u)), (next_virtual_gid) | (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec2(next_virtual_gid, 0u)), (_GLF_IDENTITY(uint(uvec2(next_virtual_gid, 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(next_virtual_gid, 0u)), (true ? uint(uvec2(next_virtual_gid, 0u)) : _GLF_FUZZED(next_virtual_gid)))))) << 0u))) | _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)), (true ? (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)) : _GLF_FUZZED(atomicAdd(next_virtual_gid, subgroup_id)))))))], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(3986.2785)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))))) - abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-2370.2275), (false ? _GLF_FUZZED(5459.6733) : _GLF_FUZZED(-2370.2275))) : 0.0), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-2370.2275), (false ? _GLF_FUZZED(_GLF_IDENTITY(5459.6733, (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(5459.6733, max(5459.6733, _GLF_IDENTITY(5459.6733, (5459.6733) / 1.0)))))) : _GLF_FUZZED(-2370.2275))) : _GLF_IDENTITY(0.0, max(0.0, 0.0))), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-2370.2275), (false ? _GLF_FUZZED(_GLF_IDENTITY(5459.6733, (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(5459.6733, max(5459.6733, _GLF_IDENTITY(5459.6733, (5459.6733) / 1.0)))))) : _GLF_FUZZED(-2370.2275))) : _GLF_IDENTITY(0.0, max(0.0, 0.0))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-2370.2275), (false ? _GLF_FUZZED(_GLF_IDENTITY(5459.6733, (false ? _GLF_FUZZED(3.2) : _GLF_IDENTITY(5459.6733, max(5459.6733, _GLF_IDENTITY(5459.6733, (5459.6733) / 1.0)))))) : _GLF_FUZZED(-2370.2275))) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) / 1.0)), 0.0, 0.0))))) | (2))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-43468) : 4), min((false ? _GLF_FUZZED(-43468) : 4), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-43468, (-43468) << 0)) : 4)))), (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(-43468, 0 ^ (-43468))) : 4), min((false ? _GLF_FUZZED(-43468) : 4), (false ? _GLF_FUZZED(_GLF_IDENTITY(-43468, min(_GLF_IDENTITY(-43468, 0 + (-43468)), _GLF_IDENTITY(-43468, int(ivec2(-43468, 1)))))) : 4))))) + (0 & 95600)))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-43468) : 4), min((false ? _GLF_FUZZED(-43468) : 4), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-43468) : 4)))))), clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-43468) : 4), min((false ? _GLF_FUZZED(-43468) : 4), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-43468) : 4)))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-43468) : 4), min((false ? _GLF_FUZZED(-43468) : 4), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-43468) : 4)))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-43468) : 4), min((false ? _GLF_FUZZED(-43468) : 4), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-43468) : 4)))))))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 1, 1, 1))), _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(-43468) : 4), min((false ? _GLF_FUZZED(-43468) : _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(30197))), 4)), min(4, 4))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-43468) : 4, (false ? _GLF_FUZZED(-43468) : 4) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) | (0))))))))))), _GLF_IDENTITY(4, 0 + (4)))), 64, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(0 | (int(int(4))), _GLF_IDENTITY((0 | (int(int(4)))) | (0 | (int(int(4)))), 0 ^ ((0 | _GLF_IDENTITY((int(int(4))), clamp((int(int(4))), (int(int(4))), (int(int(4)))))) | (0 | (int(int(4)))))))))) ^ 0, int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(int(int(4)), 0 | (int(int(4))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(int(int(4)), 0 | (int(int(4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(int(int(4)), 0 | (int(int(4))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(int(int(4)), 0 | (int(int(4)))))))) ^ 0), int(int(int((_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 | (_GLF_IDENTITY(int(int(4)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), 0 ^ (int(4)))) | (int(4)))))), 1)), min(int(ivec2(_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), int(int(4)))), 1)), int(ivec2(_GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), int(int(4)))), 1))))))))) ^ 0))))))), 4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(asin(3593.1599)) : 1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1677.3277)), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, log(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.0)), float(float(mat2(0.0, log(1.0), 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(5351.3106)), float(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, log(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.0)), float(float(mat2(0.0, log(1.0), 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(5351.3106)), float(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, log(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.0)), float(float(mat2(0.0, log(1.0), 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(5351.3106)), float(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))), 1.0, 1.0, length(sqrt(vec2(0.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), float(mat3(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, log(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.0)), float(float(mat2(0.0, log(1.0), 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(5351.3106)), float(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))), (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, log(1.0), 1.0, 1.0)), mix(float(_GLF_FUZZED(0.0)), float(float(mat2(0.0, log(1.0), 1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (0.0) - 0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (false ? _GLF_FUZZED(4.1) : _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), mix(float(_GLF_FUZZED(5351.3106)), float(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), max(_GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0))))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))))))), 1.0, 1.0, length(sqrt(vec2(0.0, 0.0))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), abs(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, exp(0.0))))), 0.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-29.96), _GLF_IDENTITY(_GLF_FUZZED(-3.3), (_GLF_FUZZED(-3.3)) - 0.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5176.8784)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
