#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), false || ((! _GLF_IDENTITY((false), true && ((false)))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(6.4)), bool(false)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)), clamp(true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)), _GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)), mix(float(true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9))), float(_GLF_FUZZED(9325.4526)), bool(false))), true ? injectionSwitch.y : _GLF_FUZZED(atan(-1009.7991, -6.9)))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(faceforward(0.8, -384.688, -433.758)))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8615.8492)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y)))))))) && true), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch : _GLF_FUZZED(sign(vec2(-7564.2389, -1266.5622))))).x > injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) && true), false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(115191u, 106199u, 17672u)) : _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(step(1.7, 184.509)) : injectionSwitch[0])), injectionSwitch[1])).y)) && (_GLF_IDENTITY(false, false || (false)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3((false), false, false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3((false), false, false)))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (false))), false, _GLF_IDENTITY(false, (false) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3((false), false, false))))))))) && true)))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0))), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), float(mat2(1.0 * (injectionSwitch.y), 1.0, 1.0, 1.0)))))), injectionSwitch.y))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) - 0u) * subgroup_size, (subgroup_id * subgroup_size) << _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((0u & 64672u) & uvec3(186696u, 103831u, 129863u).t)))), _GLF_IDENTITY(uint(2u), (uint(2u)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))) ^ 0u)))), uint(uvec4((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), ((0u & 64672u) & uvec3(186696u, 103831u, 129863u).t)))), _GLF_IDENTITY(uint(2u), (uint(2u)) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u))), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))) ^ 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))))), 0u | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))), uint(2u)), _GLF_IDENTITY(~ (~ (max(uint(2u), uint(2u)))), ~ (_GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((max(uint(2u), uint(2u))), max(_GLF_IDENTITY((max(uint(2u), uint(2u))), (true ? (max(uint(2u), uint(2u))) : _GLF_FUZZED(137427u))), (max(uint(2u), uint(2u))))))), (~ (~ (~ (max(uint(2u), uint(2u)))))) | 0u))))), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) * _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), clamp(1u, 1u, 1u))))), (0u | 0u) | (max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(0u, (0u) | (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (_GLF_IDENTITY(clamp(1u, 1u, 1u), 0u | (clamp(1u, 1u, 1u)))) << 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (_GLF_IDENTITY(1u, (1u) - 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u ^ ((1u))) - 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, uint(uint((1u) - 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, uint(uint((1u) - 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), (max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))) / 1u)), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))) - 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))), clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) - 0u)))))), ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, uint(uint((1u) - 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, uint(uint((1u) - 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), (max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))) / 1u)), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))) - 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))), clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) - 0u))))))) | ((false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, uint(uint((1u) - 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, uint(uint((1u) - 0u)))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), (max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))) / 1u)), (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))) - 0u), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))), clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, (1u) - 0u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (1u) - 0u))))))))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY(uint(0u), clamp(uint(0u), uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) * 1u)) - _GLF_IDENTITY(0u, 0u | (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u + (1u)), (1u) - 0u)), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), (true ? max(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)) : _GLF_FUZZED((workgroup_size)))), (max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))) >> 0u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))))) - 0u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, (1u) - 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), 1u, 1u, 1u)))), clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), 1u, 1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), 1u, 1u, 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), 1u, 1u, 1u)))))))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))))))), uint(0u))))) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u))), 0u | (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u))), ~ (~ (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u)))))))), ((_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), max((1u), (1u))) - 0u)), clamp(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_IDENTITY(max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), (max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))) >> 0u), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)))))) - 0u))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(1u, (1u) - 0u)))), (min(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? 1u : _GLF_FUZZED(subgroup_size)), ((true ? 1u : _GLF_FUZZED(subgroup_size))) | ((true ? 1u : _GLF_FUZZED(subgroup_size)))))) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) - 0u))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), uint(uvec4(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) - 0u)), 1u, 1u, 1u)))))) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(6u, 6u))), uint(6u)))) >> 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false))) ? workgroup_base : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (subgroup_id)), subgroup_id)) * subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id) : _GLF_FUZZED(subgroup_size)))) * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), clamp(_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), (subgroup_id))), (subgroup_id), (subgroup_id)))), subgroup_id)) * subgroup_size)))))) << (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, (2u) * 1u))) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED((86762u ^ 33356u)) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) / 1u))))), 1u, 1u), (clamp(1u, 1u, 1u)) | (clamp(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) | (uint(uvec3(1u, 0u, 0u)))), min(_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) >> 0u), uint(uvec3(1u, 0u, 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(_GLF_IDENTITY(uvec3(1u, 0u, _GLF_IDENTITY(0u, (0u) | 0u)), ~ (~ (uvec3(1u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))))))) ^ 0u))))), 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, clamp((1u) - 0u, _GLF_IDENTITY((1u) - 0u, clamp((1u) - 0u, (1u) - 0u, (1u) - 0u)), (1u) - 0u))))))))), max(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), ((0u)) / 1u)), (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((num_workgroup << 7209u), 0u ^ ((num_workgroup << 7209u)))), (_GLF_FUZZED(_GLF_IDENTITY((num_workgroup << 7209u), 0u ^ ((num_workgroup << 7209u))))) >> 0u))), 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(37688u) : (1u))) - 0u)))))), _GLF_IDENTITY(1u, (1u) | 0u) * ((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (0u)), 0u))), uint(uint((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (0u)), 0u)))))))) | 0u)))), clamp(uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u | (0u), (0u | (0u)) | (0u | (0u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) | 0u, ((_GLF_IDENTITY(0u, 0u | (0u))) | 0u) ^ 0u)) | ((_GLF_IDENTITY(0u, 0u | (0u))) | 0u)))))), uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | _GLF_IDENTITY((0u), clamp((0u), (0u), (0u)))), (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)))), uint(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, 0u | (0u))) | 0u)))))))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY((num_workgroup << 7209u), 0u ^ ((num_workgroup << 7209u)))))), 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (false ? _GLF_FUZZED(37688u) : (1u))) - 0u))))))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + 0.0, ((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5.5)))) + 0.0) + 0.0)))).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(-5.0)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(floatBitsToUint(-5.0)), (_GLF_FUZZED(floatBitsToUint(-5.0))) >> (0u | 0u)), 0u + (_GLF_FUZZED(floatBitsToUint(-5.0)))))) : subgroup_size))) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, min(2u, 2u))) - 0u), 2u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(uint(uvec3(0u | (uint(2u)), 0u, 0u)), _GLF_IDENTITY((uint(uvec3(0u | (uint(2u)), 0u, 0u))), (true ? (uint(uvec3(0u | (uint(2u)), 0u, 0u))) : _GLF_FUZZED(subgroup_size))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u | (uint(2u)), 0u, 0u), (_GLF_IDENTITY(uvec3(0u | (uint(2u)), 0u, 0u), (uvec3(0u | (uint(2u)), 0u, 0u)) | (uvec3(0u | (uint(2u)), 0u, 0u)))) | (uvec3(0u | (uint(2u)), 0u, 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec3(0u | (uint(2u)), 0u, 0u), (_GLF_IDENTITY(uvec3(0u | (uint(2u)), 0u, 0u), (uvec3(0u | (uint(2u)), 0u, 0u)) | (uvec3(0u | (uint(2u)), 0u, 0u)))) | (uvec3(0u | (uint(2u)), 0u, 0u)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(2u)), min(_GLF_IDENTITY((uint(2u)), min((_GLF_IDENTITY(uint(2u), clamp(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), uint(2u), uint(2u)))), (uint(2u)))), (uint(2u)))) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(floatBitsToUint(312.071)) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u, 1u)) - 0u)), _GLF_IDENTITY(1u, (1u) - 0u))), (true ? (uint(2u)) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, ((1u) - 0u) / 1u)))) : _GLF_FUZZED(subgroup_local_id))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(0u | (uint(2u)), _GLF_IDENTITY(uint(uvec3(0u | (uint(2u)), 0u, 0u)), _GLF_IDENTITY((uint(uvec3(0u | (uint(2u)), 0u, 0u))), (true ? (uint(uvec3(0u | (uint(2u)), 0u, 0u))) : _GLF_FUZZED(subgroup_size))) | (uint(uvec3(0u | (uint(2u)), 0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(2u)), min(_GLF_IDENTITY((uint(2u)), min((uint(2u)), (uint(2u)))), (uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) | (2u))) | (2u)))))) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(floatBitsToUint(312.071)) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u, 1u)) - 0u)), _GLF_IDENTITY(1u, (1u) - 0u))), (true ? (uint(2u)) * _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (true ? clamp(1u, 1u, 1u) : _GLF_FUZZED(workgroup_size)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) - 0u, ((1u) - 0u) / 1u)))) : _GLF_FUZZED(subgroup_local_id)))))))))))) / 1u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))), true, true))))) && ((false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(false, false, false)), false)), ! (! (bool(bvec2(bool(bvec3(false, false, false)), false)))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size), (_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) | 0u))) >> 0u))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(clamp(subgroup_id, subgroup_id, subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), max(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id))))))) | 0u))))) * subgroup_size)) ^ _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))))))) - _GLF_IDENTITY(0u, min(0u, 0u))))) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) / 1), 0, 1, 1))), (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(1, 1))))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) >> 0u, ((subgroup_size) >> 0u) / 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) - 0u))))))), ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), clamp(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), ~ (~ (subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))))), subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, 0u ^ (0u))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, 0u ^ (0u)))))) / 1u), (_GLF_IDENTITY((((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), ((0u)) >> 0u)))))))), ((((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, 0u ^ (0u)))))) / 1u)) >> 0u))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), 0u | (subgroup_size)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u, 0u, 0u)) >> uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)))), ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), max(_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (max(subgroup_size, subgroup_size))), max(subgroup_size, subgroup_size)))))), ~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ (0u | 0u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (subgroup_size))))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))))) ^ 0)) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))) ? _GLF_FUZZED(max(_GLF_IDENTITY(-75671, ~ (~ (_GLF_IDENTITY(-75671, max(-75671, -75671))))), -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), uint(uvec3(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size)), 0u | (subgroup_size)), 1u, 0u, 0u), (uvec4(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 1u, 0u, 0u)) >> uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)))), ~ (~ (workgroup_base + subgroup_id * subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), max(_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (max(subgroup_size, subgroup_size))), max(subgroup_size, subgroup_size)))))), ~ (~ (_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ (0u | 0u)))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (subgroup_size))))) + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1)))), 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(max(-75671, -91075)) : _GLF_IDENTITY(1, max(1, 1))))))) ^ 0)) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bool(bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))))) ? _GLF_FUZZED(max(_GLF_IDENTITY(-75671, ~ (~ (_GLF_IDENTITY(-75671, max(-75671, -75671))))), -91075)) : _GLF_IDENTITY(1, max(1, 1))))) % subgroup_size)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 buf[virtual_gid] = _GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), ((1)) | ((1))) : _GLF_FUZZED(98904))), (1))) >> _GLF_IDENTITY(0, (0) >> 0)), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec4(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (subgroup_local_id + 1 < subgroup_size) || false), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (subgroup_local_id + 1 < subgroup_size) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(149589u))), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(149589u)))) && true)), bool(bvec3((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ~ (_GLF_IDENTITY(~ ((1) - 0), (~ (_GLF_IDENTITY((1), 0 ^ ((1))) - 0)) * 1)))) < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(149589u)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true, false, true)))))) && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))))))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(81042), (_GLF_IDENTITY(_GLF_FUZZED(81042), (_GLF_FUZZED(81042)) << 0)) | (_GLF_FUZZED(81042))) : 64)))), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, 0 | (4)), 4)));
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, false)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))) && true), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))), bool(bool((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)))))))) && true)) || false)))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         return;
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true && (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true))))))))), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false), false, true))))))))), true))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(0.7, 9.4)) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, sin(0.0), sin(0.0), 1.0, 0.0, 0.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, sin(0.0), sin(0.0), 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, sin(0.0), sin(0.0), 1.0, 0.0, 0.0)))))), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))))))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x3(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))))), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch))), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 1.0, 1.0, sin(0.0), sin(0.0), 1.0, 0.0, 0.0)), max(vec2(mat3(injectionSwitch, 1.0, 1.0, sin(0.0), sin(0.0), 1.0, 0.0, 0.0)), vec2(mat3(injectionSwitch, 1.0, 1.0, sin(0.0), sin(0.0), 1.0, 0.0, 0.0)))))), mat2(1.0) * (injectionSwitch)))).y), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false))))))) || false)) && true)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false))))))), ! (! (true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(96631))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-68.66)), vec2(_GLF_FUZZED(-726.435), (injectionSwitch)[1]), bvec2(false, true))).x, min(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-68.66)), vec2(_GLF_FUZZED(-726.435), (injectionSwitch)[1]), bvec2(false, true))).x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, tan(0.0), 0.0, 0.0, 1.0, abs(1.0), 0.0, 1.0, log(1.0), 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false))))))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) && true))), false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.3, 9.9))))))).y)), false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((+ injectionSwitch)) : injectionSwitch)).x > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), determinant(mat3(1.0, abs(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y)), false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 0.0))))))))))), false))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4765.5193, 0.3)) : injectionSwitch)).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_IDENTITY(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true && (false || (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true))))))))))))) || false))), true)))))), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))))), bool(bool(false)))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (true ? (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(25938))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(25938))), (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(25938)))) * 1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(25938)))))))) : _GLF_FUZZED(33505)))) * int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_IDENTITY(_GLF_FUZZED(1.5), 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(1.5), (false ? _GLF_FUZZED(fma(83.46, -1.2, 774.955)) : _GLF_FUZZED(1.5)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(1.5), (false ? _GLF_FUZZED(fma(83.46, -1.2, 774.955)) : _GLF_FUZZED(1.5)))), min((_GLF_IDENTITY(_GLF_FUZZED(1.5), (false ? _GLF_FUZZED(fma(83.46, -1.2, 774.955)) : _GLF_FUZZED(1.5)))), (_GLF_IDENTITY(_GLF_FUZZED(1.5), (false ? _GLF_FUZZED(fma(83.46, -1.2, 774.955)) : _GLF_FUZZED(1.5))))))) - 0.0))), bool(false)))))), 64, 4);
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
