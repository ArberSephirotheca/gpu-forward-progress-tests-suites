#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
              barrier();
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y))), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)), min(vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0, 0.0))))).y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y)))), false || (bool(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0)), vec2(_GLF_FUZZED(21.52), _GLF_FUZZED(-1.2)), bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(18.85))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true)) && true))))))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))) && true)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) || false)))), (bool(bool(false))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY(mix(float(_GLF_FUZZED(503.511)), float(injectionSwitch[0]), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(503.511)), float(injectionSwitch[0]), bool(true)), (false ? _GLF_FUZZED(-7027.7570) : mix(float(_GLF_FUZZED(503.511)), float(injectionSwitch[0]), bool(true))))) + 0.0)), injectionSwitch[1])).x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (0 ^ 0) + (1)))), int(ivec4(1 << _GLF_IDENTITY(int(1), int(1)), ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), 1, 0)))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, false)))))))))
                  barrier();
                }
               else
                {
                }
              }
             else
              {
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) && true))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) - (0 << _GLF_IDENTITY(int(1), int(1))))])))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((false ? _GLF_FUZZED(packHalf2x16(vec2(-1.8, -2448.5138))) : gl_NumWorkGroups.x), ((false ? _GLF_FUZZED(packHalf2x16(vec2(-1.8, -2448.5138))) : gl_NumWorkGroups.x)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(packHalf2x16(vec2(-1.8, -2448.5138))) : gl_NumWorkGroups.x), ((false ? _GLF_FUZZED(packHalf2x16(vec2(-1.8, -2448.5138))) : _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))) << 0u))))) | _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), gl_NumWorkGroups.x))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (true ? (gl_NumWorkGroups.x) : _GLF_FUZZED(subgroup_local_id))), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups.x)), ~ (~ _GLF_IDENTITY((~ ((gl_NumWorkGroups.x))), ((~ ((gl_NumWorkGroups.x)))) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), max((gl_NumWorkGroups.x), _GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))).x))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
  {
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) % _GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), min(_GLF_IDENTITY((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) >> 0u), (0u ^ 0u) + (_GLF_IDENTITY((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, clamp(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, 4u, 4u))) / 1u), 4u, 4u))))), _GLF_IDENTITY(((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? ((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))) : _GLF_FUZZED(virtual_gid))) >> 0u))), 1u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), ((subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, 4u))), min(uint(_GLF_IDENTITY(4u, max(4u, 4u))), uint(_GLF_IDENTITY(4u, max(4u, 4u)))))) | (uint(_GLF_IDENTITY(4u, max(4u, 4u)))))))))) >> 0u), 1u, 1u, 0u))) - 0u)), (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))))))));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   do
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(_GLF_IDENTITY(0 | (0 | 0), min(0 | (0 | 0), 0 | (0 | 0))), int(ivec2(_GLF_IDENTITY(0 | (0 | _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0)) | 0), min((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, max(0, 0)))) | 0), (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), 0)) | 0))), (0 | (0 | _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)))))) * 1), 0 | (0 | 0), 0 | (0 | 0)), (true ? clamp(_GLF_IDENTITY(0 | (0 | 0), (0 | (0 | 0)) * 1), 0 | (_GLF_IDENTITY(0 | 0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0))), (~ (_GLF_IDENTITY(0 | 0, 0 ^ (0 | 0)))) + 0)))), 0 | (0 | 0)) : _GLF_FUZZED(44332)))), 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (_GLF_IDENTITY(~ (7), (true ? ~ (7) : _GLF_FUZZED(7694)))) | (~ (7)))))), int(7))) >> _GLF_IDENTITY(int(7), int(7))))); _injected_loop_counter ++)
      {
       _GLF_IDENTITY(buf[virtual_gid] = 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) >> 0u)) >> 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) >> 0u)) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) >> 0u)) >> 0u))) * 1u)) << 0u)));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) && true))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(vec2(20.86, -596.839))))).y, injectionSwitch.y, injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(9.5)), bvec2(true, false))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(false, bool(bool(false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && _GLF_IDENTITY((bool(bool(false))), (_GLF_IDENTITY((bool(bool(false))), _GLF_IDENTITY(bool(bool((bool(bool(false))))), ! (! (bool(bool((bool(bool(false)))))))))) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y))); _injected_loop_counter ++)
                {
                 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2((_GLF_DEAD(false)), false)), ! (! (bool(bvec2((_GLF_DEAD(false)), false)))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       barrier();
                      }
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, length(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), float(vec3(float(mat2x4(injectionSwitch.y, 1.0, length(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(872.863))), mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(4533.6934)), clamp(float(_GLF_FUZZED(4533.6934)), float(_GLF_FUZZED(4533.6934)), float(_GLF_FUZZED(4533.6934)))), bool(false)))))))))))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (_GLF_IDENTITY(false, false || (false)))), false || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec2(! (true), false))))), (injectionSwitch.x < injectionSwitch.y))) || (false))))), false, true))))))))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                        barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter))) * 1) != (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 1)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(true, (true) && true) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))))), bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))))))))), false, false, true))))))), ! _GLF_IDENTITY((! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))), true, false, false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), (_GLF_DEAD(false)) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), (_GLF_DEAD(false)) && true))) && true), true, false), false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))) && true), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))) && true), true, false), false)), true))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))))))), bool(bvec3((! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), true, false, false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_DEAD(false)) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), (_GLF_DEAD(false)) && true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))) && true), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_DEAD(false)) && true))) && true), true, false), false)))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))))))))), true, false)))))))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                    }
                   else
                    {
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << int(_GLF_ZERO(0.0, injectionSwitch.x))) != 0), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), ! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           barrier();
                          }
                        }
                      }
                    }
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, int(ivec3(0, 0, 1)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) < 1)) && true); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) && true))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))));
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(181.388), _GLF_FUZZED((- 13.54))), bvec2(false, false))).x > injectionSwitch.y))))
                    barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))))))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))))))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1603.3049) : injectionSwitch.x)))) > injectionSwitch.y))))
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              barrier();
                            }
                           else
                            {
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))));
                         do
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))).x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 barrier();
                }
               else
                {
                }
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), ~ (~ (_GLF_IDENTITY(int(5), int(5)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(-1048.0460), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), clamp(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0], mix(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) + 0.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0]), (true ? float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) + 0.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0]) : _GLF_FUZZED(-4.5))), float(_GLF_FUZZED(145.583)), bool(false))), _GLF_FUZZED(169.001)), bvec2(true, false))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(-1048.0460), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), clamp(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0], mix(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) + 0.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0]), (true ? float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) + 0.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0]) : _GLF_FUZZED(-4.5))), float(_GLF_FUZZED(145.583)), bool(false))), _GLF_FUZZED(169.001)), bvec2(true, false))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))), mix(vec2(_GLF_FUZZED(-1048.0460), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), clamp(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))) - vec2(0.0, 0.0)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))[1]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4x3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0], mix(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) + 0.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0]), (true ? float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(7.0), (_GLF_FUZZED(7.0)) + 0.0)), bool(false)))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))[0]) : _GLF_FUZZED(-4.5))), float(_GLF_FUZZED(145.583)), bool(false))), _GLF_FUZZED(169.001)), bvec2(true, false))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x)) > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(154.748) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.1)), bool(false))))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                      }
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), mat4x3(mat4(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))) * 1.0), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) * 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x, _GLF_IDENTITY((injectionSwitch.x), mix(float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), float(_GLF_IDENTITY(_GLF_FUZZED(-1.6), clamp(_GLF_FUZZED(-1.6), _GLF_IDENTITY(_GLF_FUZZED(-1.6), mix(float(_GLF_FUZZED(-1.6)), float(_GLF_FUZZED(7.4)), bool(false))), _GLF_IDENTITY(_GLF_FUZZED(-1.6), min(_GLF_FUZZED(-1.6), _GLF_FUZZED(-1.6)))))), bool(false))) * 1.0) > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_FUZZED(-1.6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-579.073) : _GLF_FUZZED(-1.6)))), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))), false, true)))))))) * 1.0) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_FUZZED(-1.6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-579.073) : _GLF_FUZZED(-1.6)))), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))), false, true)))))))) * 1.0) > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_IDENTITY(_GLF_FUZZED(-1.6), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-579.073) : _GLF_FUZZED(-1.6)))), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(_GLF_IDENTITY(bool(false), bool(bvec4(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true, false, true))), true, true))), false, true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))), false, true)))))))) * 1.0) > injectionSwitch.y))))))))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(582.038)), bool(false))), (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-90.50)))), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))))))))))), bool(bvec4(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(582.038)), bool(false))), (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-90.50)))), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0, min(_GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-90.50)))), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0, _GLF_IDENTITY((injectionSwitch.x), mix(float(_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(-90.50)))), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0))) > injectionSwitch.y)))))))))))), false, false, true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), true, true, true)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), true, true, true)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), true, true, true)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), bool(bvec4(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) * 1.0, ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))) + 0.0), 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), _GLF_IDENTITY(vec4(0.0, 0.0, 1.0, 0.0), mat4(1.0) * (vec4(0.0, 0.0, 1.0, 0.0)))), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3698.8134)), bool(false))), injectionSwitch.y), 0.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.7)), float(1.0), bool(true))))), 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0), vec4(0.0, 0.0, 1.0, 0.0))), cos(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) / 1.0)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y)))) && true))), true))))))))))), true, true, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bvec2(bvec4(bvec2(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-1.6)), bool(false))) * 1.0) > injectionSwitch.y))))))))))))))), false), true, true))))))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))), 0 | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1)))))), _GLF_IDENTITY(1, (1) ^ 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), uint(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1), (0u | (subgroup_local_id + 1)) / _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), clamp(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), max(((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))), 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), (0u | (_GLF_IDENTITY(subgroup_local_id + 1, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (subgroup_local_id + 1)))) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) - 0u), 5u, 5u))), uint(5u)))))), 0u, 0u), 1u)), (uvec3(uvec4(uvec3(~ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u | (subgroup_local_id + 1), (0u | (subgroup_local_id + 1)) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), 0u, 0u), 1u))) / uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))), uint(uvec3(~ (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ((1) >> 0) ^ 0))))), int(ivec4(~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0)))))), 1, 0, 1)))))))), 0u, 0u)))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) < subgroup_size)
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), (_GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))), ~ (~ ((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))))) / 1u)) / _GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, ~ _GLF_IDENTITY((~ (next_virtual_gid)), clamp(_GLF_IDENTITY((~ (next_virtual_gid)), clamp(_GLF_IDENTITY((~ (next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY((~ _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid)))), ((~ _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))) | (_GLF_IDENTITY((~ _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid)))), ((~ _GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid))))) - 0u))), (_GLF_IDENTITY((~ (next_virtual_gid)), min((~ (next_virtual_gid)), (~ (next_virtual_gid))))) << 0u)) / 1u), (~ (next_virtual_gid)), (~ (next_virtual_gid)))), (~ (next_virtual_gid)), (~ (next_virtual_gid))))))) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u, 0u ^ (((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u ^ 1u), 1u), ~ (~ (uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u, 0u ^ (((_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), min(_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ (0u >> _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(clamp(subgroup_id, next_virtual_gid, subgroup_local_id)) : uint(0u)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ~ (_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(clamp(subgroup_id, next_virtual_gid, subgroup_local_id)) : uint(0u)))) : _GLF_FUZZED(num_workgroup)))))))), (next_virtual_gid))))))) * 1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u ^ 1u), 1u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u, 0u ^ (((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u)))))), (1u ^ 1u), 1u), ~ (~ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u, 0u ^ (((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u)), 0u + (_GLF_IDENTITY(((_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), ((0u >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) | (_GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) * 1u, 0u ^ (((_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))) * 1u)))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))), (1u ^ 1u), 1u)))))) >> 0u))) + 0u)], uint(2), 4, 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((((1 & 1) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       subgroupAll(false);
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(37875)))), 0 | (1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(37875))))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), bvec2(bvec4(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), true, false))))))), (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) < injectionSwitch.y))))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))) || (_GLF_IDENTITY(false, (false) || false))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(int(6), ~ (~ (int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, (false ? _GLF_FUZZED(74391) : 6))), (true ? ~ (_GLF_IDENTITY(6, (false ? _GLF_FUZZED(74391) : 6))) : _GLF_FUZZED(48334)))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), ~ (~ (_GLF_IDENTITY(int(6), ~ (~ (int(6)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(false ? _GLF_FUZZED(23183) : 6, (_GLF_IDENTITY(false ? _GLF_FUZZED(23183) : 6, min(false ? _GLF_FUZZED(23183) : 6, false ? _GLF_FUZZED(23183) : 6))) ^ 0)))), _GLF_IDENTITY(int(6), ~ (~ (int(6))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), int(_GLF_IDENTITY(ivec2((int(6)), 1), (ivec2((int(6)), 1)) + ivec2(0, 0))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), ~ (~ (_GLF_IDENTITY(int(6), ~ (~ (int(6)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(int(6), ~ (~ (int(6))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), int(_GLF_IDENTITY(ivec2((int(6)), 1), (ivec2((int(6)), 1)) + _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) * ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(6), ivec2(6))) >> _GLF_IDENTITY(ivec2(6), ivec2(6))))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), ~ (~ (_GLF_IDENTITY(int(6), ~ (~ (int(6)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY((false ? _GLF_FUZZED(23183) : 6), ((false ? _GLF_FUZZED(23183) : 6)) / 1))), _GLF_IDENTITY(int(6), ~ (~ (int(6))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(int(6), ~ (~ _GLF_IDENTITY((int(6)), int(_GLF_IDENTITY(ivec2((int(6)), 1), (ivec2((int(6)), 1)) + ivec2(0, 0))))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(23183) : 6))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, max(6, 6))) | (6))), ~ (~ (int(6)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 ^ (int(7))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, 0 + (7))), (0 >> _GLF_IDENTITY(int(3), int(3))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(7, 0 + (7)), (_GLF_IDENTITY(7, 0 + (7))) | 0))))))), (int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, 0 + (7))), (0 >> _GLF_IDENTITY(int(3), int(3))) | (~ (_GLF_IDENTITY(7, 0 + (7))))))))) - 0), int(7))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0)), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | 0))) - 0))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) || false))), true && (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))) || false)))
            barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), max(_GLF_IDENTITY(~ (2), (~ (2)) | (~ (2))), ~ (2)))))))) >> 0)), 4, 64, 4);
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
             do
              {
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            barrier();
           subgroupAll(true);
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | 1)); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_DEAD(false)) && true))))
                barrier();
              }
             else
              {
              }
            }
           else
            {
            }
           barrier();
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))) || false, (((! (false))) || false) && true)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
