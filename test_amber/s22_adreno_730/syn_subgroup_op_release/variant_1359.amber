#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)) && true, ((_GLF_IDENTITY(false, (false) && true)) && true) || false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8)))))))), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(765.934)) : 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(1.0, min(1.0, 1.0)), log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), 0.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(log(1.0)), 0.0, 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_id)) : injectionSwitch))[0], injectionSwitch[1]), 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), false, false, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8)))))))), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, log(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(765.934)) : 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(1.0, min(1.0, 1.0)), log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), 0.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(log(1.0)), 0.0, 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_id)) : injectionSwitch))[0], injectionSwitch[1]), 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), false, false, false)))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3(injectionSwitch[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(mat4(_GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8)))), (mat4(_GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (mat3(_GLF_IDENTITY(mat4(_GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8)))), (mat4(_GLF_FUZZED(mat3(mat2x3(-1988.6601, 3489.4636, -4384.2418, 59.82, 6.8, 2.8))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), vec2(mat3x4(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) * 1)], injectionSwitch[1]), 1.0, log(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))) ? _GLF_FUZZED(round(765.934)) : 0.0)), 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), max(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), 0.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, sqrt(log(1.0)), 0.0, 1.0)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(subgroup_id)) : injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))), 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-78.34)), bool(false))))))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(mat3x4(vec2(injectionSwitch[0], injectionSwitch[1]), 1.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), false, false, false))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, _GLF_IDENTITY((6) | _GLF_IDENTITY((6), min(_GLF_IDENTITY((6), ((6)) << 0), (6))), 1 * (_GLF_IDENTITY((6) | (6), int(ivec2((6) | (6), 1))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), (false ? _GLF_IDENTITY(_GLF_FUZZED(99705), (_GLF_FUZZED(99705)) << 0) : _GLF_IDENTITY(int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (6), (~ (6)) | (~ (6)))))), (int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(~ (6), (~ (6)) | (~ (6))))))) + 0))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(6, ~ (~ (6)))), (~ (_GLF_IDENTITY(6, ~ (~ (6))))) | 0), 0, 1, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(6, ~ (~ (6)))), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(6, ~ (~ (6)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(6, ~ (~ (6))), max(_GLF_IDENTITY(_GLF_IDENTITY(6, ~ (~ (6))), (_GLF_IDENTITY(6, ~ (~ (6)))) | 0), _GLF_IDENTITY(6, ~ (~ (6))))))) | 0), 0, 1, 0)))) * (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, true, true, false)))); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3348.6882)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))));
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), false), true)))))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))) || false)), true && (bool(_GLF_IDENTITY(bool((false)), (_GLF_IDENTITY(bool((false)), ! (! (bool((false)))))) || false))))))))
      barrier();
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false || (false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
        return;
      }
     else
      {
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))))))) || false)))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-820.319, -8391.3155, -4048.7213, -0.1, 3761.2979, -8049.7080, -5.1, 5.6, 77.72)) : mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-820.319, -8391.3155, -4048.7213, -0.1, 3761.2979, -8049.7080, -5.1, 5.6, 77.72)) : mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-820.319, -8391.3155, -4048.7213, -0.1, 3761.2979, -8049.7080, -5.1, 5.6, 77.72)) : mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) + vec2(0.0, 0.0))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), abs(1.0)))).x > injectionSwitch.y)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(31.84)), bool(false)))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(31.84)), bool(false)))))), bool(bvec2((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(31.84)), bool(false)))))), true))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = _GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) << 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 do
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-12085)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))), ! (! (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
       GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y)))))))))))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), true))))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, false))))), true, true, false)))))))))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      break;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), _GLF_IDENTITY(false, true && (false)) || (false))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true), false || (false))), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, false || (false))), true && (true && (_GLF_IDENTITY(false, false || (false))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      break;
     barrier();
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(0.0), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), bool(true))), cos(0.0), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(0.0), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-8.5, 6.6, -318.679, 864.656, 106.969, -44.51, 9786.5087, 295.492)) : mat2x4(0.0, 1.0, 0.0, log(1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), abs(1.0), 0.0, 1.0)))))), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))), 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.6) : mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))))), cos(0.0), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))))), 1.0, 1.0, 0.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(0.0), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, cos(0.0), 1.0), mix(vec3(_GLF_FUZZED(775.574), _GLF_FUZZED(-8876.2134), (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, cos(0.0), 1.0))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, cos(0.0), 1.0))[0], (vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, cos(0.0), 1.0))[1], _GLF_FUZZED(-518.046)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(0.0), 1.0), vec3(injectionSwitch.x, cos(0.0), 1.0))))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), cos(0.0), 1.0), clamp(vec3(injectionSwitch.x, cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), cos(0.0), 1.0))))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, cos(0.0), 1.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), cos(0.0), 1.0), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(true))), cos(0.0), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y))), float(mat2x3(float(mat3x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 0.0, 0.0, 0.0, 1.0))))), vec3(injectionSwitch.x, cos(0.0), 1.0))))))), 1.0, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))]))))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), clamp(0u, 0u, 0u)))), 0u) | (gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize)))) * uvec3(1u, 1u, 1u)), 1u))).x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-704.294), _GLF_FUZZED(471.926)), bvec2(false, false))))), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-704.294), _GLF_FUZZED(471.926)), bvec2(false, false))))), injectionSwitch)).y : _GLF_FUZZED(6750.3570))))) || (true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), true && ((false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[0], float(mat2x4(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(950.860, 5.8, 3.7, -1.4, -5.0, -9.3, -7669.9273, 89.56)))))), log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED((40.40 * -7.5))), vec2(mat3x4(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[0], float(mat2x4(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2x4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat2x4((injectionSwitch)[0], 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat2x4(950.860, 5.8, 3.7, -1.4, -5.0, -9.3, -7669.9273, 89.56)))))), log(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_FUZZED((40.40 * -7.5))), 0.0, cos(0.0), 1.0, 1.0, sqrt(exp(0.0)), 1.0, sqrt(1.0), 1.0, 0.0, 0.0))), vec2(_GLF_FUZZED(-3.7), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(65.27)), bool(false))))) : _GLF_FUZZED(-2.9))))).y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.7)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y)))) && true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (injectionSwitch)).y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(atanh(vec2(-3729.1729, -7172.4190).g)))) > injectionSwitch.y))))
                    return;
                   barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   barrier();
                  }
                }
               else
                {
                 return;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true)) && true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
              return;
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      continue;
     barrier();
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) >> 0u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u))) + subgroup_local_id, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) >> 0u), clamp(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) >> 0u), workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) >> 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) >> 0u), ~ (~ (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) >> 0u)))))) + subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 1u, 0u, 1u), (uvec4(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (false ? _GLF_FUZZED(33851u) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) + subgroup_local_id, 1u, 0u, 1u)) | (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u) + subgroup_local_id))), 1u, 0u, 1u)))), (uint(_GLF_IDENTITY(uvec4(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 1u, 0u, 1u), (uvec4(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (false ? _GLF_FUZZED(33851u) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) + subgroup_local_id, 1u, 0u, 1u)) | (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u) + subgroup_local_id))), 1u, 0u, 1u))))) | (uint(_GLF_IDENTITY(uvec4(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 1u, 0u, 1u), (uvec4(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)), (false ? _GLF_FUZZED(33851u) : _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)))) + subgroup_local_id, 1u, 0u, 1u)) | (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u) + subgroup_local_id, uint(uint(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y) - 0u) + subgroup_local_id))), 1u, 0u, 1u))))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u))) + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id)), 1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) | (1u)), (1u) >> 0u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, _GLF_IDENTITY((1u), min((1u), (1u))) >> 0u)))) << 0u)), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (false ? _GLF_FUZZED(163691u) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-56.29)), bool(false)))))))), 0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id)), 1u, 1u, 1u)) * _GLF_IDENTITY(uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, 0u ^ (1u))), (uvec4(1u, 1u, 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))) << uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u)), clamp((uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u)), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u)), ((uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u))) | ((uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u)))), (uvec4(_GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | _GLF_IDENTITY((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id), ~ (~ ((workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))).y + subgroup_local_id))))), 1u, 1u, 1u))))))) * uvec4(1u, 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) << 0u), 1u)), 1u)), ~ (~ (((uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id, 0u | (workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + subgroup_local_id)), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 0u ^ (1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | _GLF_IDENTITY((uint(1u)), ((uint(1u))) | (_GLF_IDENTITY((uint(1u)), ~ (~ ((uint(1u)))))))))), 0u))))) * uvec4(1u, 1u, 1u, 1u))))) | uvec4(0u, 0u, 0u, 0u)))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u, 1u), (uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(1u, (1u) | 0u), 1u)) >> uvec4(0u, 0u, 0u, 0u))), uvec2(_GLF_IDENTITY(1u, (1u) << 0u), 1u) * (uvec2(_GLF_IDENTITY(uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u, 1u), (uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))).y, (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), uvec2(uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 0u, 1u))).x, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(uvec4(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, 0u, 1u))).x) / 1u), clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, _GLF_IDENTITY(clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, (false ? _GLF_FUZZED(workgroup_size) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x))), (clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)) << 0u)), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x)) * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id & 94823u), (_GLF_IDENTITY((subgroup_local_id & 94823u), ((subgroup_local_id & 94823u)) << 0u)) * 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id & 94823u), (_GLF_IDENTITY((subgroup_local_id & 94823u), _GLF_IDENTITY(((subgroup_local_id & 94823u)), 0u | (((subgroup_local_id & 94823u)))) << 0u)) * 1u), uint(uint(_GLF_IDENTITY((subgroup_local_id & 94823u), (_GLF_IDENTITY((subgroup_local_id & 94823u), ((subgroup_local_id & 94823u)) << _GLF_IDENTITY(0u, (0u) << 0u))) * 1u))))))) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y))) | (workgroup_base + _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y, (false ? _GLF_FUZZED(subgroup_local_id) : GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).y)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) ^ _GLF_IDENTITY((uvec2(127068u, 20111u) & uvec2(0u, 0u)), uvec2(0u, 0u) ^ ((uvec2(127068u, 20111u) & uvec2(0u, 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) ^ _GLF_IDENTITY((uvec2(127068u, 20111u) & uvec2(0u, 0u)), uvec2(0u, 0u) ^ ((uvec2(127068u, 20111u) & uvec2(0u, 0u))))), uvec2(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) ^ _GLF_IDENTITY((uvec2(127068u, 20111u) & uvec2(0u, 0u)), uvec2(0u, 0u) ^ ((uvec2(127068u, 20111u) & uvec2(0u, 0u)))))))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))), (false ? _GLF_FUZZED(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) : (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))) ^ _GLF_IDENTITY((uvec2(127068u, 20111u) & uvec2(0u, 0u)), uvec2(0u, 0u) ^ ((uvec2(127068u, 20111u) & uvec2(0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, max(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(0u, 0u) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) ^ _GLF_IDENTITY((uvec2(127068u, 20111u) & uvec2(0u, 0u)), uvec2(0u, 0u) ^ ((uvec2(127068u, 20111u) & uvec2(0u, 0u)))))))) | uvec2(0u, 0u)), (true ? GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))).y);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u)) | 0u), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(workgroup_size))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u)) | 0u), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u)) | 0u), (_GLF_IDENTITY(true, bool(bvec2(true, true))) ? buf[virtual_gid] = 1 : _GLF_FUZZED(workgroup_size)))) + 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (buf[virtual_gid] = 1) - 0u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), false || (! (! (true)))))))), bool(bvec2(true, true))) ? buf[virtual_gid] = _GLF_IDENTITY(1, (1) | 0) : _GLF_FUZZED(workgroup_size))) : _GLF_FUZZED(virtual_gid)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u) < GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y)
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) / 1))), 4);
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)) && true))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
            continue;
           barrier();
          }
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         break;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.5)), float(injectionSwitch.y), bool(true)))))))
              continue;
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, true))))
        barrier();
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(false)), ((_GLF_WRAPPED_LOOP(false))) && true))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) && true))))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) >> 0)) ^ 0), max(6, 6))), ~ (~ (int(6)))), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(-9058)))))); _GLF_IDENTITY(_injected_loop_counter --, ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) - 0)), _GLF_IDENTITY(0 | (_GLF_IDENTITY(int(7), (int(7)) + 0)), _GLF_IDENTITY(int(ivec2(0 | (_GLF_IDENTITY(int(7), (int(7)) + 0)), 0)), 0 | (int(ivec2(0 | (_GLF_IDENTITY(int(7), (int(7)) + 0)), 0)))))))) << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 | (6))))) >> _GLF_IDENTITY(int(6), int(6))) * (_injected_loop_counter --)))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) | 0), 0 ^ (int(6))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(30011) : int(6))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter != 0))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, sqrt(1.0), sin(sqrt(0.0)), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))) && true))), true)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0) * (injectionSwitch))))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), ((vec2(1.0, 1.0)) * mat2(1.0)) / vec2(1.0, 1.0)))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, sqrt(1.0), sin(sqrt(0.0)), round(length(normalize(1.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-151.828)), bool(false)))), vec3(0.0, 0.0, 1.0))))))) && true))), true)))), bool(bvec4(bool(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), sqrt(1.0), sin(sqrt(0.0)), _GLF_IDENTITY(round(length(normalize(1.0))), 1.0 * (_GLF_IDENTITY(round(length(normalize(1.0))), float(vec3(round(length(normalize(1.0))), 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))) && true))), true)))), true, true, false)))))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        continue;
       if(_GLF_DEAD(false))
        break;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         break;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec3(bool(false), true, true)), true && (bool(bvec3(bool(false), true, true))))))))), false)), (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), false))) && true), true))))))
      return;
    }
   else
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / 1)), clamp(uint(_GLF_IDENTITY(2, (2) / 1)), uint(_GLF_IDENTITY(2, (2) / 1)), uint(_GLF_IDENTITY(2, (2) / 1)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, 0 + (4)), (1 | 1), ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (false ? _GLF_FUZZED(-15247) : int(2))))) >> _GLF_IDENTITY(int(2), int(2))), 1))), (4) | 0));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       return;
      }
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))));
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, _GLF_IDENTITY(true, (true) && true))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       return;
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! _GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), (((_GLF_WRAPPED_IF_FALSE(false)))) || false))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), (((_GLF_WRAPPED_IF_FALSE(false)))) || false))))), (bool(bool((! (_GLF_IDENTITY(((_GLF_WRAPPED_IF_FALSE(false))), (((_GLF_WRAPPED_IF_FALSE(false)))) || false)))))) && true))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false)))))) || (_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7676.2457)), bool(false))), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), true && (! (true))))), (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec3(! (true), false, false)), true && (bool(bvec3(! (true), false, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat2(109.444, 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))))) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(109.444, mix(float(_GLF_FUZZED(33.95)), float(109.444), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat2(109.444, 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))))) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(109.444, mix(float(_GLF_FUZZED(33.95)), float(109.444), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat2(109.444, 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))))) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(109.444, mix(float(_GLF_FUZZED(33.95)), float(109.444), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat2(109.444, 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))), mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat2(109.444, 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0))))))))) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (injectionSwitch.x > injectionSwitch.y) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(float(mat3(1.0 * (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(9458.8753)), float(float(mat3(1.0 * (_GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, sin(0.0), 0.0, cos(0.0), 1.0, 0.0))), bool(true))))), 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat3x2(mat2(1.0))), (mat2(mat3x2(mat2(1.0)))) - mat2(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(109.444, mix(float(_GLF_FUZZED(33.95)), float(109.444), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 736.372, 5.1, -9.1)) : _GLF_IDENTITY(mat2(1.0), mat2(mat3x2(mat2(1.0)))))) * (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)) && true)) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))) && true)) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
         do
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2(vec2(1.0, 1.0), 0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))));
        }
       if(_GLF_DEAD(false))
        return;
      }
     do
      {
       subgroupAll(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false)))))))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) || false), false)))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))));
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), min(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))) - sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), min(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))) - sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), min(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))) - sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)))) > injectionSwitch.y)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-87.32) : injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), min(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (length(vec4(0.0, 0.0, 0.0, 0.0))) / 1.0), 0.0))))))) - sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp(_GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), ((0.0)) - sin(0.0))) * 1.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((_GLF_IDENTITY(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) + (0.0))) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, abs(exp(0.0)), 0.0)), (false ? _GLF_FUZZED(-6.8) : float(vec4(injectionSwitch.x, 1.0, abs(exp(0.0)), 0.0))))), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(abs(vec2(7.8, 4.8))) : injectionSwitch)).x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), (float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))) / 1.0), float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))) - _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0))), (true ? sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)), min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0))))) : _GLF_FUZZED(-5.8)))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-54.62) : injectionSwitch.x)), _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), min(float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0)), float(vec4(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))))))) - sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-25.74))), min(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-174.959)), float(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY((0.0) / 1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3(_GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / 1.0, (0.0) / 1.0, _GLF_IDENTITY((0.0) / 1.0, clamp((0.0) / 1.0, _GLF_IDENTITY((0.0) / 1.0, 0.0 + ((0.0) / 1.0)), (0.0) / 1.0)))), 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), max(float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), (false ? _GLF_FUZZED(vec3(596.834, 9695.5595, 7560.1279)) : _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3(mat4x3(vec3((0.0) / 1.0, 0.0, log(1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))))), _GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), clamp(vec3((_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.8)), bool(false)))) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0))))))), float(_GLF_IDENTITY(vec3((0.0) / 1.0, 0.0, log(1.0)), min(vec3((0.0) / 1.0, 0.0, log(1.0)), _GLF_IDENTITY(vec3((_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))) * 1.0)) / 1.0, 0.0, log(1.0)), clamp(vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)), vec3((0.0) / 1.0, 0.0, log(1.0)))))))))), (0.0) / 1.0)), (0.0) / 1.0))), 0.0)))) > injectionSwitch.y)))))))))))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)))) || false), false)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false)))))))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true)))) || false))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
