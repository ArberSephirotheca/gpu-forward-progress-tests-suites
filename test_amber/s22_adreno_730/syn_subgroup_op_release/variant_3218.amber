#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 uvec3 _f0;
 int _f1;
 ivec4 _f2;
 mat4x2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 uvec4 _f1;
 ivec2 _f2;
 mat3x2 _f3;
 vec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_10 {
 uvec3 _f0;
 mat4x2 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 mat3x2 _f1;
 ivec4 _f2;
 vec3 _f3;
 uvec2 _f4;
 float _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_9 _f0;
 bool _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 mat3x4 _f5;
 uint _f6;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
} ;

struct _GLF_struct_6 {
 int _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_5 {
 bvec4 _f0;
 mat2x4 _f1;
 ivec3 _f2;
 uvec4 _f3;
 bool _f4;
 ivec2 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 uvec4 _f1;
 _GLF_struct_6 _f2;
 mat2x3 _f3;
 _GLF_struct_7 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 vec2 _f1;
 ivec2 _f2;
 mat2x4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 mat2x4 _f0;
 mat3x4 _f1;
 mat2 _f2;
 uint _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat4x2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 float _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_0 {
 uint _f0;
 mat4 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_0 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_13 _f3;
 vec3 _f4;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, true))), false, false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) && true)))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_0(1u, mat4(1.0)), _GLF_struct_4(_GLF_struct_1(vec2(1.0), mat4x2(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3(0.0, 1.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), transpose(transpose(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0), transpose(transpose(mat3(0.0, 1.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0)))))))))), vec2(1.0, 0.0))), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(5181.0252)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), 0.0, 0.0)))) - 0.0)), 0.0), (_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0), (mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3x2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), (true ? 0.0 : _GLF_FUZZED(-8066.0904))), 0.0)), 0.0, 0.0, 0.0))))), (true ? mat4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(0.0, 1.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0), transpose(transpose(mat3(0.0, 1.0, cos(0.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), tan(0.0), 0.0, 1.0)))))))))), vec2(1.0, 0.0))), _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(5181.0252)), _GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true))))), 0.0, 0.0)))) - 0.0)), 0.0), (_GLF_IDENTITY(mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0), (mat3x2(1.0, 1.0, 0.0, 1.0, tan(0.0), 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + mat3x2(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8066.0904))), 0.0)), 0.0, 0.0, 0.0))))) : _GLF_FUZZED(mat4(-997.611, 81.55, -619.709, 5197.2643, -1.3, _GLF_IDENTITY(-857.700, clamp(_GLF_IDENTITY(-857.700, float(vec2(-857.700, 0.0))), _GLF_IDENTITY(-857.700, mix(float(-857.700), float(_GLF_FUZZED(-64.92)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(-857.700, (true ? -857.700 : _GLF_IDENTITY(_GLF_FUZZED(faceforward(1064.0531, 125.307, 5.3)), clamp(_GLF_IDENTITY(_GLF_FUZZED(faceforward(1064.0531, 125.307, 5.3)), mix(float(_GLF_FUZZED(faceforward(1064.0531, 125.307, 5.3))), float(_GLF_FUZZED(84.38)), bool(false))), _GLF_FUZZED(faceforward(1064.0531, 125.307, 5.3)), _GLF_FUZZED(faceforward(1064.0531, 125.307, 5.3)))))))), -9661.0182, 992.276, -658.368, 0.9, 0.4, -7.7, 329.205, -5.9, 6197.8633, -5.0))))), _GLF_struct_2(mat2x4(1.0), mat3x4(1.0), mat2(1.0), 1u, uvec2(_GLF_IDENTITY(1u, (1u) | (1u)))), 1.0, _GLF_struct_3(_GLF_IDENTITY(uvec2(1u), min(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), _GLF_IDENTITY(uvec2(1u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(164572u, 18848u)) : _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))))), (true ? _GLF_IDENTITY(uvec2(1u), (false ? _GLF_FUZZED(uvec2(164572u, 18848u)) : _GLF_IDENTITY(uvec2(1u), uvec2(1u, 1u) * (uvec2(1u))))) : _GLF_FUZZED(uvec2(44077u, 189879u)))), uvec2(1u))))), _GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))))), vec2(1.0), ivec2(1), mat2x4(1.0), ivec2(_GLF_IDENTITY(1, (1) / 1)))), _GLF_struct_8(_GLF_struct_5(bvec4(_GLF_IDENTITY(true, (true) || false)), mat2x4(1.0), ivec3(1), uvec4(1u), true, ivec2(1), mat3x2(1.0)), uvec4(1u), _GLF_struct_6(1, _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u)))) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(23229u, min(23229u, 23229u)), 199290u, 182679u)) : uvec3(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), 0u)))))) << uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), uvec2(uvec2(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u))))), 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(23229u, 199290u, 182679u), (false ? _GLF_FUZZED(uvec3(55178u, 141757u, 57591u)) : uvec3(23229u, 199290u, 182679u)))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))), (uvec2(1u)) + uvec2(0u, 0u)), 0u)))))) << uvec2(0u, 0u), uvec2(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) << uvec2(0u, 0u))) + uvec2(0u, 0u)), 0u), (false ? _GLF_FUZZED(uvec3(23229u, 199290u, 182679u)) : uvec3(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)) + uvec2(0u, 0u), max((uvec2(1u)) + uvec2(0u, 0u), _GLF_IDENTITY((uvec2(1u)) + uvec2(0u, 0u), ((uvec2(1u)) + uvec2(0u, 0u)) << uvec2(0u, 0u))))), 0u)))))) << uvec2(0u, 0u))))), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(23229u, 199290u, 182679u)), uvec3(uvec3(_GLF_FUZZED(uvec3(23229u, _GLF_IDENTITY(199290u, (_GLF_IDENTITY(199290u, (false ? _GLF_FUZZED(subgroup_id) : 199290u))) | (_GLF_IDENTITY(199290u, ~ (~ (199290u))))), 182679u))))) : uvec3(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), 0u)))))) << uvec2(0u, 0u), uvec2(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))))), (uvec2(1u)) + uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u))) | (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)))), 0u), (false ? _GLF_FUZZED(uvec3(23229u, 199290u, 182679u)) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), uvec2(_GLF_IDENTITY(uvec2(uvec2(1u)), min(uvec2(uvec2(1u)), uvec2(uvec2(1u)))))), (uvec2(1u)) + uvec2(0u, 0u)), 0u)))))) << uvec2(0u, 0u)))))))))))) | (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u))))), mat2(1.0)), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), (min(1.0, 1.0)) * 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), (false ? _GLF_FUZZED(7.5) : float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(-402.080) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.1)), bool(false))) > injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), float(mat3(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), false || (bool(true))))), ((! (_GLF_IDENTITY(bool(true), false || (bool(true)))))) && true)))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), sin(0.0)), min(vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), float(mat3(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-23.43), max(_GLF_FUZZED(-23.43), _GLF_FUZZED(-23.43)))), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), sin(0.0)), vec2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))) - 0.0))) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, sqrt(1.0), 0.0), mat2(mat2x3(mat2(1.0, 0.0, sqrt(1.0), 0.0)))))))), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), float(mat3(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))) && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(-23.43)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), float(_GLF_FUZZED(2.4)), bool(false))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(44.48) : 0.0)), 0.0, 0.0, 1.0))), sin(0.0)))))))), _GLF_struct_7(mat3x4(1.0)), mat4(1.0)), _GLF_struct_13(_GLF_struct_9(mat3x4(1.0), mat3x2(1.0), ivec4(1), vec3(1.0), uvec2(1u), 1.0), true, _GLF_struct_10(uvec3(1u), mat4x2(1.0), mat2x3(1.0)), _GLF_struct_11(mat4x3(1.0), uvec4(1u), ivec2(1), mat3x2(1.0), vec2(1.0), vec4(1.0)), _GLF_struct_12(uvec3(1u), 1, ivec4(1), mat4x2(1.0), mat3(1.0)), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, length(log(1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, 1.0, exp(0.0), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0))), min(1.0, _GLF_IDENTITY(1.0, (1.0) * cos(0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(6.9))), 1.0)), mix(float(_GLF_FUZZED(-1618.2079)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))), 1u), vec3(1.0), gl_SubgroupInvocationID);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) << 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) << 0u)), (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u))) << 0u))) | (~ (_GLF_IDENTITY(~ (gl_NumWorkGroups.x), (~ (gl_NumWorkGroups.x)) << 0u))))) ^ 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), tan(0.0), 1.0, abs(1.0), 1.0, abs(1.0), 1.0, 1.0, sqrt(1.0), 1.0, sin(0.0), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), 0.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0)) * mat3(1.0))), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0)) * mat3(1.0)))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u))) | (uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)))), min(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(103512u, 144958u, 66259u, 62245u), (uvec4(103512u, 144958u, 66259u, 62245u)) | uvec4(0u, 0u, 0u, 0u)).a) : _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), (uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true) ? _GLF_FUZZED(((mat3x4(5433.9110, -8.2, -9699.1384, 701.045, -22.86, _GLF_IDENTITY(5.0, (5.0) - 0.0), 2710.5821, 9.0, -5066.7447, 0.7, -933.932, 204.030) * mat2x3(-3.3, 5.3, -5.2, _GLF_IDENTITY(_GLF_IDENTITY(2.5, max(2.5, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)))), (_GLF_IDENTITY(2.5, max(2.5, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5))))) + 0.0), 3.2, 37.75)) , num_workgroup)) : _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_size * workgroup_id)), 1u, 0u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true) ? _GLF_FUZZED(((mat3x4(5433.9110, -8.2, -9699.1384, 701.045, -22.86, _GLF_IDENTITY(5.0, (5.0) - 0.0), 2710.5821, 9.0, -5066.7447, 0.7, -933.932, 204.030) * mat2x3(-3.3, 5.3, -5.2, _GLF_IDENTITY(_GLF_IDENTITY(2.5, max(2.5, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)))), (_GLF_IDENTITY(2.5, max(2.5, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5))))) + 0.0), 3.2, 37.75)) , num_workgroup)) : _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_size * workgroup_id)), 1u, 0u)))))), 0u | (~ (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && true) ? _GLF_FUZZED(((mat3x4(5433.9110, -8.2, -9699.1384, 701.045, -22.86, _GLF_IDENTITY(5.0, (5.0) - 0.0), 2710.5821, 9.0, -5066.7447, 0.7, -933.932, 204.030) * mat2x3(-3.3, 5.3, -5.2, _GLF_IDENTITY(_GLF_IDENTITY(2.5, max(2.5, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5)))), (_GLF_IDENTITY(2.5, max(2.5, _GLF_IDENTITY(2.5, clamp(2.5, 2.5, 2.5))))) + 0.0), 3.2, 37.75)) , num_workgroup)) : _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, 0u)), min(uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), 1u, _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u, (0u) | (0u)) | (workgroup_size * workgroup_id)), 1u, 0u))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)), max(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))))) ^ 0u), ~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))), (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))) | (_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))))))) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) >> 0u)) / 1u) : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), 0u + (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u))))), (~ ((_GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_size : _GLF_FUZZED(79710u)))))) ^ 0u))))) | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))) + _GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u)), ~ (~ (~ (uvec4(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u))))))))))), (_GLF_IDENTITY(subgroup_id, (0u | 0u) + (subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, (1u) | (1u)), 0u)), ~ (~ (~ (uvec4(subgroup_size, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 0.0, 1.0))), injectionSwitch)).y)), 1u, 0u)))))))))))) | 0u) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u) + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_14.subgroup_local_id + 1)), _GLF_struct_replacement_14.subgroup_local_id + 1, _GLF_struct_replacement_14.subgroup_local_id + 1))))) % subgroup_size), uint(_GLF_IDENTITY(uvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_14.subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_14.subgroup_local_id), 0u + ((_GLF_struct_replacement_14.subgroup_local_id)))), ((_GLF_IDENTITY((_GLF_struct_replacement_14.subgroup_local_id), _GLF_IDENTITY(0u + ((_GLF_struct_replacement_14.subgroup_local_id)), uint(uvec3(0u + ((_GLF_struct_replacement_14.subgroup_local_id)), 0u, 0u)))))) >> 0u) - 0u) >> 0u) + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(uvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u) + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size), 1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)) << _GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), clamp(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) | 0u))) ^ 0u), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(1u), uint(1u))), 0u ^ ((1u << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), uvec3(0u, 0u, 0u) + (uvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u) + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(virtual_gid)))), uint(1u))), uint(1u))))))))))), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size, ((_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size) << (0u & 338u))), _GLF_IDENTITY(uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1)), (false ? _GLF_FUZZED(atomicAdd(workgroup_id, 101490u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1)), (true ? _GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, _GLF_IDENTITY(0u | (_GLF_struct_replacement_14.subgroup_local_id + 1), (_GLF_IDENTITY(0u | (_GLF_struct_replacement_14.subgroup_local_id + 1), 0u | (0u | (_GLF_struct_replacement_14.subgroup_local_id + 1)))) >> 0u)) : _GLF_FUZZED(uvec3(92380u, _GLF_IDENTITY(55911u, max(55911u, 55911u)), 102489u)[0])))))) % subgroup_size), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) - 0u), 0u, 0u, 1u), min(uvec4(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), 0u, 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), clamp(_GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, (1u) - 0u), _GLF_IDENTITY(1u, (1u) - 0u))), 0u, 0u, 1u))))), 0u)), clamp(uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), _GLF_IDENTITY(max(subgroup_size, subgroup_size), min(max(subgroup_size, subgroup_size), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size), 1u, 0u)), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u) + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_14.subgroup_local_id) >> 0u, min(_GLF_IDENTITY((_GLF_struct_replacement_14.subgroup_local_id) >> 0u, ((_GLF_struct_replacement_14.subgroup_local_id) >> 0u) | ((_GLF_struct_replacement_14.subgroup_local_id) >> 0u)), (_GLF_struct_replacement_14.subgroup_local_id) >> 0u))) + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u) + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1)))) - 0u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id, (_GLF_struct_replacement_14.subgroup_local_id) >> 0u) + _GLF_IDENTITY(1, (1) * 1), 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))))) % subgroup_size), 1u, 0u)), uint(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size), (((_GLF_IDENTITY(_GLF_struct_replacement_14.subgroup_local_id + 1, 0u | (_GLF_struct_replacement_14.subgroup_local_id + 1))) % subgroup_size)) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 0u + (1u))), 0u | (uint(1u)))), min(_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u ^ (uint(1u))), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))), (false ? _GLF_FUZZED(subgroup_size) : 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))))), _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u)))), 0u + (1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), 0u | (uint(1u))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))))), 1u, 0u)))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(true, (true) || false), false)))) && true, true && ((false) && true)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.76), _GLF_FUZZED(6.0)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))))[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_struct_replacement_14.subgroup_local_id + 1 < subgroup_size)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 0), (ivec2(2, 0)) | (ivec2(2, 0)))), clamp(int(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | (2)), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (1 | 1) * (0))), int(int(~ (_GLF_IDENTITY(0, (1 | 1) * (0)))))))))), int(ivec2(2, 0)), int(ivec2(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(7582))), 2)), 0)))))) ^ 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(false, true && (false)))))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (_GLF_IDENTITY(false, true && (false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (((injectionSwitch.x > injectionSwitch.y)))) || false, bool(bvec4(((injectionSwitch.x > injectionSwitch.y)) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec3(false, false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) - 0), 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) && true))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
