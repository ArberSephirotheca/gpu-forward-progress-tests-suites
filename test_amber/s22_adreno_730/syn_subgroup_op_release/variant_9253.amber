#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / cos(vec2(0.0, 0.0))).y))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) || false))))), ! (! (! (! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false))), ! (! (! (! (! (false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-469.937)), bvec2(false, false))).x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false))), ! (! (! (! (! (false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-469.937)), bvec2(false, false))).x < injectionSwitch.y)), false), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false))), ! (! (! (! (! (false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-469.937)), bvec2(false, false))).x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)), false))), ! (! (! (! (! (false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(9.1), _GLF_FUZZED(-469.937)), bvec2(false, false))).x < injectionSwitch.y)), false), true)))))), false, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(625.722, 5.7)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), true && (bool(bvec4(false, false, true, true)))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true)), false, true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, false, true))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-30.32)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-30.32)), float(injectionSwitch.y), bool(true))) - 0.0)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(470.729, mix(float(_GLF_FUZZED(-7.0)), float(470.729), bool(true))))), bool(false))), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), _GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) - 0.0)) - 0.0), dot(vec3(tan(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.8)), bool(false))))))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat4x2(-9.6, 8.5, -80.04, 3.3, -2.0, _GLF_IDENTITY(-5702.7701, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(-5702.7701, (-5702.7701) - 0.0)), bool(true))), 3.3, 6.9)) : mat4x2(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), 1.0 * (tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY((tan(0.0)) / 1.0, 0.0 + ((tan(0.0)) / 1.0)))) * 1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(tan(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(90.07)), bool(false)))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (1.0) / cos(0.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-74.84))))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, abs(0.0), determinant(mat2(0.0, _GLF_IDENTITY(abs(0.0), float(mat4x3(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, tan(0.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, abs(1.0)))), 0.0, 0.0)), 0.0, 0.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(720.751, -0.8)))).y, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / sqrt(round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))))))))))), 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-2973.0940) : abs(0.0))), determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-959.324, -5689.8175, 8964.5963, -5976.9519, -9791.5779, -52.16, 7285.1884, -8559.9944, -6376.7668, 3.2, 152.799, -6.0)))))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-30.32)), float(injectionSwitch.y), bool(true)), (mix(float(_GLF_FUZZED(-30.32)), float(injectionSwitch.y), bool(true))) - 0.0)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(470.729, mix(float(_GLF_FUZZED(-7.0)), float(470.729), bool(true))))), bool(false))), injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), _GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (_GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))) - 0.0)) - 0.0), dot(vec3(tan(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3.8)), bool(_GLF_IDENTITY(false, ! (! (false)))))))))), 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat4x2(-9.6, 8.5, -80.04, 3.3, -2.0, _GLF_IDENTITY(-5702.7701, mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(-5702.7701, max(_GLF_IDENTITY(-5702.7701, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(-5702.7701, mix(float(_GLF_FUZZED(2.4)), float(-5702.7701), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(-5702.7701, mix(float(_GLF_FUZZED(2.4)), float(-5702.7701), bool(true))), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), -5702.7701)), (-5702.7701) - 0.0)), bool(true))), 3.3, 6.9)) : mat4x2(_GLF_IDENTITY(sqrt(0.0), 0.0 + (sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), (tan(0.0)) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(tan(0.0), 1.0 * (tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY((tan(0.0)) / 1.0, 0.0 + ((tan(0.0)) / 1.0)))) * 1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(tan(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(tan(0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(90.07)), bool(false)))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))))))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, (1.0) / cos(0.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, length(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + (0.0)) : _GLF_FUZZED(-74.84))))))), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, abs(0.0), determinant(mat2(0.0, _GLF_IDENTITY(abs(0.0), float(mat4x3(_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), abs(0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, tan(0.0))), dot(vec3(0.0, 1.0, log(1.0)), vec3(0.0, 1.0, tan(0.0)))), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, abs(1.0)))), 0.0, 0.0)), 0.0, 0.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(720.751, -0.8)))).y, 1.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / sqrt(round(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), _GLF_IDENTITY(length(normalize(1.0)), min(length(normalize(1.0)), length(normalize(1.0))))))))))))), 1.0, _GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-2973.0940) : abs(0.0))), determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0) : _GLF_FUZZED(mat3x4(-959.324, -5689.8175, 8964.5963, -5976.9519, -9791.5779, -52.16, 7285.1884, -8559.9944, -6376.7668, 3.2, 152.799, -6.0))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(9.1))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.42)), float(0.0), bool(true))))), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.42)), float(0.0), bool(true))))), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, mix(float(_GLF_FUZZED(83.25)), float(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.42)), float(0.0), bool(true))))), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y), bool(true))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(36.42)), float(0.0), bool(true))))), 1.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), max(normalize(vec3(1.0, 1.0, 1.0)), normalize(vec3(1.0, 1.0, 1.0)))))), 0.0, 0.0, abs(0.0), 1.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-3.7) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), mix(float(_GLF_IDENTITY(float(vec3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-3.7) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), float(mat4x2(float(vec3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(-3.7) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED((8.1 - -46.45))), bool(false))))), bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED((+ 751.655))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))) > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), true), false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))), false, true, true)))), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0)), 1.0))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(_GLF_ZERO(0.0, injectionSwitch.x)), abs(1.0), 1.0, 1.0)))))).x > injectionSwitch.y))), true, false)), ! (! (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(280.762))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)), injectionSwitch), (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (false ? _GLF_FUZZED(vec2(-8412.8950, 7.5)) : _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) + vec2(0.0, 0.0)), injectionSwitch)) * vec2(1.0, 1.0))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) || false)), ! (! (! (_GLF_IDENTITY((false), ((false)) || _GLF_IDENTITY(false, true && (false)))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, true, true), false)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-855.804)), vec2(_GLF_FUZZED(-8.9), (injectionSwitch)[1]), bvec2(false, true))))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bool(true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))))))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && _GLF_IDENTITY(true, bool(bool(true))), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && _GLF_IDENTITY(true, bool(bool(true)))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) && true), false))))))) || false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)) && true)), false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)) || false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, abs(0.0), 0.0)), (float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0))) - 0.0)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) + vec2(0.0, 0.0))).y))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(subgroup_id * subgroup_size))) + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u), ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), min((~ (subgroup_local_id + 1)), _GLF_IDENTITY((~ (subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), (78778u & 0u), 0u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)))) - 0u), (78778u & 0u), 0u)), 1u, 0u))))))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) | (subgroup_local_id)) + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_local_id + 1, 0u))))) | (uint(uvec2(subgroup_local_id + 1, 0u))))), ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), clamp(~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), uint(uint(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))))))))) % subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), sin(0.0), 0.0)), (float(mat4x2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), cos(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), sin(0.0), 0.0))) + 0.0))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), min((~ (subgroup_local_id + 1)), _GLF_IDENTITY((~ (subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), (78778u & 0u), 0u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)))) - 0u), (78778u & 0u), 0u)), 1u, 0u))))))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (uint(uvec2(subgroup_local_id + 1, 0u))) | (uint(uvec2(subgroup_local_id + 1, 0u))))), ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), clamp(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))), (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), 0u ^ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))) / 1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ _GLF_IDENTITY((~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))), ((~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))) >> 0u)))))))) % subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), min((~ (subgroup_local_id + 1)), _GLF_IDENTITY((~ (subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), clamp(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), _GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u))), (78778u & 0u), 0u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) >> 0) | 0), 1)))) - 0u), (78778u & 0u), 0u)), 1u, 0u))))))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), _GLF_IDENTITY((uint(uvec2(subgroup_local_id + 1, 0u))) | (uint(uvec2(subgroup_local_id + 1, 0u))), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(num_workgroup) : (uint(uvec2(subgroup_local_id + 1, 0u))) | (uint(uvec2(subgroup_local_id + 1, 0u))))))), ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), clamp(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (~ (subgroup_local_id + 1)), (~ (~ (subgroup_local_id + 1))) ^ 0u))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))))))))) % subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ _GLF_IDENTITY((~ (subgroup_local_id + 1)), min((~ (subgroup_local_id + 1)), _GLF_IDENTITY((~ (subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(~ (subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + 1)) - 0u), (78778u & 0u), 0u)), uint(uvec3(uint(uvec3(_GLF_IDENTITY(~ (subgroup_local_id + 1), (~ (subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1)))) - 0u), (78778u & 0u), 0u)), 1u, 0u))))))))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uvec2(subgroup_local_id + 1, 0u)), (uint(uvec2(subgroup_local_id + 1, 0u))) | (uint(uvec2(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), 0u))))), ~ (~ (subgroup_local_id + 1)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), clamp(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), 1u, 0u)), uint(uvec3(uint(uvec3((_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))))))))), 1u, 0u)), 0u, 1u)))) : _GLF_FUZZED(subgroup_id))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), ~ (_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))), ~ (~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), max((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))))))))))))))) % subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(! (subgroup_local_id + 1 < subgroup_size), true && (! (subgroup_local_id + 1 < subgroup_size)))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) | (64)), 64)), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(8.7, 1.1, -5.2).r), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(9584.5605, 6043.7104).r)), bvec2(true, false))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((53.29)), _GLF_FUZZED(881.022)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false, false))), true)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((53.29)), _GLF_FUZZED(881.022)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bool(bvec4(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false, false, false))), true)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec4((false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (! (false))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), cos(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), 0.0 + (float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
