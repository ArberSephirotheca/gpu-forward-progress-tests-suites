#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 vec4 _f0;
} ;

struct _GLF_struct_8 {
 bool _f0;
 bvec3 _f1;
 mat4 _f2;
 mat3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_7 {
 ivec2 _f0;
 bvec4 _f1;
 mat4 _f2;
 vec2 _f3;
 vec3 _f4;
 vec2 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_10 {
 _GLF_struct_7 _f0;
 bool _f1;
 _GLF_struct_8 _f2;
 ivec4 _f3;
 uvec3 _f4;
 _GLF_struct_9 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_5 {
 int _f0;
 bvec2 _f1;
 mat2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
 uvec2 _f1;
 float _f2;
 float _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 vec2 _f1;
 uint workgroup_id;
 uvec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
 uvec4 _f4;
 mat4x3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 ivec4 _f1;
 bvec4 _f2;
 _GLF_struct_6 _f3;
 vec4 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (false))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(false, false || (false)), false)))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7245.0809) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7245.0809) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), true)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7245.0809) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), true))) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(injectionSwitch, vec2(77.60, 828.635))))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))), bool(bvec3(_GLF_DEAD(false), true, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))))), bool(bvec3(_GLF_DEAD(false), true, false))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))) || false)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) << 0u);
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_0(ivec2(1), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), true && (true)), false || (_GLF_IDENTITY(true, true && (true)))) ? 1.0 : _GLF_FUZZED(672.361), float(_GLF_IDENTITY(float(_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(672.361)), (_GLF_IDENTITY(float(_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(672.361)), (float(_GLF_IDENTITY(true, true && (true)) ? 1.0 : _GLF_FUZZED(672.361))) / 1.0)) - 0.0)))))), gl_WorkGroupID.x, uvec4(1u), _GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), _GLF_struct_1(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), true, false)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (! (bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), ! (! (bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), false)))), bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, false))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false, true)))))))), (bool(bvec3(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true))), true, false))) && true))), uvec4(1u), mat2x3(1.0), uvec3(1u), uvec2(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) - 0u)), max(~ (_GLF_IDENTITY(1u, (1u) - 0u)), ~ (_GLF_IDENTITY(1u, (1u) - 0u)))))))), _GLF_struct_2(mat3x2(1.0)), vec2(1.0), uvec4(1u), mat4x3(1.0), _GLF_struct_3(ivec3(1))), ivec4(1), bvec4(true), _GLF_struct_6(_GLF_struct_5(1, bvec2(true), mat2(1.0), uvec3(1u)), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(4418u, 164308u)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-992.848)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true))), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true)))), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true))))) && true)))), true && (bool(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true))), ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true)))), (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (injectionSwitch.y))), bool(true))))) && true))))))))))))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(171400u)))) - 0u), min(1u, 1u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), 1u * ((_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_FUZZED(_GLF_IDENTITY(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size), (atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)) * 1u))), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))), ((_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u))))) / 1u), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (1u ^ 0u)))))))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(58631u) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 0u ^ ((false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(58631u) : _GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))), 1u * (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u))), ~ (~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), clamp(_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), uint(uvec3(min(1u, 1u), 1u, 0u)))) ^ 0u), _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) * 1u), min(1u, 1u))), (min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)) | (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u))) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), ~ (_GLF_IDENTITY(~ (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size)))) - 0u) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 1u * (~ (false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)) | 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), 0u | ((subgroup_size))) + 0u)) / 1u)))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | 0u)) | 0u)))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), clamp(_GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), uint(uvec3(min(1u, 1u), 1u, 0u)))) ^ 0u), _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) * 1u), min(1u, 1u))), (min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec4(uvec3(0u, 0u, 0u), 0u))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) | (_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) ^ 0u)))))), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | (6u))))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec2(118699u, 60521u).s) : 0u)), 0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), (0u) | (0u)))) | 0u))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, (0u) | (0u))), clamp(min(0u, _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, (0u) | (0u))), (min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))) | (min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))), min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))))), (0u) | (0u)))) | 0u))) : _GLF_IDENTITY(min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)), 0u | (~ (min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))))))) + 0u), ~ (~ ((false ? _GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), subgroup_size)))) | _GLF_IDENTITY(0u, (0u) | (0u)))) | 0u)), 0u ^ (~ (_GLF_IDENTITY(~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | _GLF_IDENTITY(0u, (0u) | (0u)))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)), (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size))) + (0u << _GLF_IDENTITY(uint(6u), uint(6u))))), (~ (_GLF_FUZZED(atomicCompSwap(subgroup_local_id, workgroup_size, subgroup_size)))) | _GLF_IDENTITY(0u, (0u) | (0u))))) + 0u)) << 0u) | 0u))))) : min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY((min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))), clamp((min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY((min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))), ~ (_GLF_IDENTITY(~ ((min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), 0u | (~ ((min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))), (min(1u, 1u)) | (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))))))))), vec4(1.0), _GLF_struct_10(_GLF_struct_7(ivec2(1), bvec4(true), mat4(1.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-22.91)), float(1.0), bool(true)))), vec3(1.0), vec2(1.0), bvec2(true)), true, _GLF_struct_8(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))))))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4((true) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4((true) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))))) && (true))))))))), ! (! (_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4((true) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4((true) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))))) && (true))))))))), ! (! ((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec4((true) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4((true) && true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, false))))) && (true)))))))))))))))) && true) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false))))), bool(bvec4(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true && ((! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false), (true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false)) || false))))))), true, false, true)))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false))))), bool(bvec4(_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))), ! (! (_GLF_IDENTITY(true, true && _GLF_IDENTITY(_GLF_IDENTITY((true), bool(bvec3((true), true, false))), (_GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false)))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))), true && ((! (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false), (true && _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), true && (bool((true))))))) || false)) || false))))))), true, false, true)))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (true)))), true && ((bool(_GLF_IDENTITY(true, true && (true)))))) || false), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (true)))), true && ((bool(_GLF_IDENTITY(true, true && (true)))))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), true && ((bool(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))))))) || false, true && (_GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (true)))), true && ((bool(_GLF_IDENTITY(true, true && (true)))))) || false, (_GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(true && ((bool(_GLF_IDENTITY(true, true && (true))))), false || (true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (true)))))))) || false) || false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) && true))))), true && ((bool(_GLF_IDENTITY(true, true && (true)))))) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true)) || false)))))))) || false))), bool(bvec3(bool((_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) || _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))) && true))))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(true, true && (true))))), false, true))))))) || false))), true, false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false, ((_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)) || false) && true))))), true && _GLF_IDENTITY((true), bool(bvec3((true), true, true))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, true && (true)), false, false)))))))), true))))))), ! (! (_GLF_IDENTITY(true, true && (true))))))) || false))) && true), true, true, true)))))), true, false, true)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)))) || false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (_GLF_IDENTITY(true && (true), (_GLF_IDENTITY(_GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), ! (! (_GLF_IDENTITY(true && (true), bool(bvec4(true && (true), false, false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))) || false)))))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true && (true)))) || false, ((bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true && (true)))) || false) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (true), (! (true)) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), false, false, true))))), (! (true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))) && true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))) || false))) && true), false, true, false))) || false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(bvec4(! ((true)), false, false, true))))), (! (true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)) && true, ((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))) && true) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (true), (! (true)) && true), false, true, false)), (bool(bvec4(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, false))))))) || false))) && true), false, true, false))) || false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))))) && true)), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), bool(bvec3(true && (true), false, false)))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), true && (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && (true)))))))))))) || _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (! (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), false))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (true), true, true, true)), (bool(bvec4(! (true), true, true, true))) && true), (bool(bvec4(! (true), true, true, true))) || false)))))))) || false))) && true)))), _GLF_IDENTITY(true, ! (! (true))), false, true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(bool(bool(false)), (bool(bool(_GLF_IDENTITY(false, false || (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) && true) && (true)))) || _GLF_IDENTITY(false, bool(bool(false)))))) && true), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))), (bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), false, false)), (bool(bvec3((true), false, false))) && true)), (true && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), false, false)), (bool(bvec3((true), false, _GLF_IDENTITY(false, (false) && true)))) && true))) || false)))) || _GLF_IDENTITY(false, (false) && true))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true)), (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (true))) && true))))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))) && true)))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true) && (true)))), ((bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true) && (true))))) && true) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (true)))), ((bool(_GLF_IDENTITY(true, true && (true))))) && true) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))) && true)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (! (true))) && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, true && (true)))), ((bool(_GLF_IDENTITY(true, true && (true))))) && true) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), (bool(_GLF_IDENTITY(true, true && (true)))) || false))) && true))))) || false), true, false, true)))))))) && true), bvec3(true), mat4(1.0), mat3(1.0), ivec2(1)), ivec4(1), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) << 0u)), (uvec3(1u)) >> uvec3(0u, 0u, 0u)), _GLF_struct_9(vec4(1.0)), uvec4(1u)));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) << 0u, max((_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) << 0u, (workgroup_size) << 0u))) * _GLF_IDENTITY(_GLF_struct_replacement_11._f0._f0.workgroup_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_11._f0._f0.workgroup_id, _GLF_IDENTITY(uint(uint(_GLF_struct_replacement_11._f0._f0.workgroup_id)), clamp(uint(uint(_GLF_struct_replacement_11._f0._f0.workgroup_id)), uint(uint(_GLF_struct_replacement_11._f0._f0.workgroup_id)), uint(uint(_GLF_struct_replacement_11._f0._f0.workgroup_id))))), (_GLF_struct_replacement_11._f0._f0.workgroup_id) / 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, false, true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), subgroup_size)), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u), subgroup_size)))), (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 buf[virtual_gid] = 1;
 if(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), 0 | _GLF_IDENTITY((min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1)), ((min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1))) | (_GLF_IDENTITY((min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1)), clamp((min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1)), _GLF_IDENTITY((min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1)), ~ (~ ((min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1))))), (min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, 1)), min(int(ivec3(1, 1, 1)), int(ivec3(1, 1, 1))))), 1)))))))), 1)), subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) << 0u, (_GLF_IDENTITY((subgroup_size) << 0u, clamp((subgroup_size) << 0u, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) << 0u, _GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) | (_GLF_IDENTITY((subgroup_size) << 0u, max(_GLF_IDENTITY((subgroup_size) << 0u, ((subgroup_size) << 0u) | ((subgroup_size) << 0u)), (subgroup_size) << 0u))))))) * 1u)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) * (1u | 1u)), 4, 64, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, (4) | (4)))), 1 * ((~ (_GLF_IDENTITY(4, (4) | (4))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3((false), false, true))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3((false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3((false), false, true))), false))))), true)))), ! (! (false || _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), false || (bool(true))))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (bool(bvec4(true, false, false, false))) || false))), false || (bool(true)))))) || false))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false)), false, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))) - 0.0) > injectionSwitch.y))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
