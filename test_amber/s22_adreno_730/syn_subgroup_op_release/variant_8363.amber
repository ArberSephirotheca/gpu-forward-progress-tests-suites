#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 bool _f0;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_5 _f0;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 vec3 _f1;
 uint _f2;
 mat4x2 _f3;
 mat4 _f4;
 uvec4 _f5;
 float _f6;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 ivec3 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 ivec4 _f1;
 float _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 bvec2 _f3;
 uvec3 _f4;
 mat3 _f5;
 _GLF_struct_3 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_6 _f1;
 bvec3 _f2;
 _GLF_struct_7 _f3;
 uint workgroup_size;
 mat4 _f4;
 mat3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bool(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), false), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), bool(bvec4(_GLF_IDENTITY(((! (false))), ! (! (((! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), bool(bvec4(_GLF_IDENTITY(((! (false))), ! (! (((! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) && true))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), bool(bvec4(_GLF_IDENTITY(((! (false))), ! (! (((! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true))), (! (_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true))), (! (_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, true))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true)) && true))), (! (_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(_GLF_IDENTITY(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(true))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))))))), bool(bvec2((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), bool(bvec2((false), true)))))))))))), false))) && true))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false))))), ! (! (bool(bool(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))))))))) && true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), false || (bool(bool(_GLF_IDENTITY(true, bool(bool(true))))))))))))))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), bool(bool((_GLF_IDENTITY(false, ! (! (false))))))) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) && true))), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec2(bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false)))) && true))), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false, true)), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), false, true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))) && true))), false, true)), false))))))), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))) && true)))))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)))))), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))))), false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), _GLF_IDENTITY(! (! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))))))) && true))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))))))))))))))))) || false))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))) / 1.0), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))), true && (! (_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-442.172)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), false)), (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-442.172)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), false))) || false)))))), false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))) && true)), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))) && true)))))) || false)), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(float(24804))), bvec2(false, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(-455.900)), vec2((vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(4099.0273, 9.7))))).y))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(float(24804))), bvec2(false, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(-455.900)), vec2((vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(4099.0273, 9.7))))).y)))))) && true))))))))))))))) || false)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))) / 1.0), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), false, false, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, false, false))), true && (! (_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-442.172)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), false)), (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-442.172)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true)))))), false))) || false)))))), false, _GLF_IDENTITY(false, (false) || false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))) && true)), (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))) && true)), ! (! ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true)))))))))) && true)))))) || false)), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), false || (! (! (injectionSwitch.x > injectionSwitch.y))))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(float(24804))), bvec2(false, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(-455.900)), vec2((vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(4099.0273, 9.7))))).y))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(float(24804))), bvec2(false, false))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), (true ? _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(0.9), _GLF_FUZZED(-455.900)), vec2((vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[0], (vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec2(4099.0273, 9.7))))).y)))))) && true))))))))))))))) || false))) || false))))))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(uvec3(17206u, 20039u, 104632u)) : gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, (false) || false)) && true)))), true, true, true)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_4(_GLF_struct_0(vec3(1.0), ivec4(1), 1.0, mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7.0), clamp(_GLF_FUZZED(-7.0), _GLF_FUZZED(-7.0), _GLF_FUZZED(-7.0)))), bool(false))), 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))))))) : _GLF_FUZZED(402.138))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), _GLF_IDENTITY(bool(false), (bool(false)) && true))), 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-7.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(-7.0), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-24.86, -1.4, -7.3, -3115.6693, 6229.3601, -7.6, 605.323, 4.4)) : mat2x4(_GLF_FUZZED(-7.0), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0)))), (false ? _GLF_FUZZED(5463.5174) : float(_GLF_IDENTITY(mat2x4(_GLF_FUZZED(-7.0), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x4(-24.86, -1.4, -7.3, -3115.6693, 6229.3601, -7.6, 605.323, 4.4)) : mat2x4(_GLF_FUZZED(-7.0), 0.0, 0.0, 0.0, log(1.0), 1.0, 1.0, 0.0)))))))), bool(false))))))) : _GLF_FUZZED(402.138))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))), 0.0 + (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7.0)), bool(false))))))) : _GLF_FUZZED(402.138))))), 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-82.20, max(-82.20, _GLF_IDENTITY(-82.20, clamp(_GLF_IDENTITY(-82.20, (-82.20) - 0.0), -82.20, -82.20))))) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), _GLF_struct_1(ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, int(ivec4(1, 1, _GLF_IDENTITY(0, 0 ^ (0)), 1)))))), ivec3(1), uvec3(1u), mat2x3(1.0), 1.0), _GLF_struct_2(mat2x3(1.0)), bvec2(true), uvec3(1u), mat3(1.0), _GLF_struct_3(mat3(1.0), _GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(67.90), _GLF_FUZZED(8.7), _GLF_FUZZED(-4.5)), vec3((vec3(1.0))[0], (vec3(1.0))[1], (vec3(1.0))[2]), bvec3(true, true, true))), 1u, mat4x2(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6.6) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), uvec4(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) | (uvec2(1u, 1u))))))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), max(_GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) | (max(0u, 0u))), max(0u, 0u)))))))), 1.0)), _GLF_struct_6(_GLF_struct_5(mat4x2(1.0), mat4x2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, false || (true))))))))), _GLF_struct_7(_GLF_IDENTITY(true, (true) || false)), gl_WorkGroupSize.x, _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.2) : 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, 6859.4391, 128.137, -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, _GLF_IDENTITY(-4.1, min(-4.1, -4.1)), -9.1)), _GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), (_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137))) - _GLF_ZERO(0.0, injectionSwitch.x)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, _GLF_IDENTITY(9654.0408, max(9654.0408, 9654.0408)), -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1))), ((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, _GLF_IDENTITY(-2.5, clamp(_GLF_IDENTITY(-2.5, (true ? -2.5 : _GLF_FUZZED(-84.68))), _GLF_IDENTITY(-2.5, (true ? -2.5 : _GLF_FUZZED(40.64))), -2.5)), -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1)))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(0.2, 97.74, -2739.4305, 5.6, -754.120, -37.24, 212.902, 31.86, -3635.0048, 8211.8240, 6.5, 7.3, 6.3, 7.7, 537.257, 767.091)) : _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-94.39, 20.09, 8.1, -194.089, -674.083, -7854.6010, 36.89, -182.709, 344.451, 75.66, 3.4, 94.32, 9009.4306, 9633.3736, 24.93, -860.507)) : mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(mat4(-9176.1275, 872.169, -25.23, 9.6, 1961.5927, -8.9, -2.3, -762.851, 657.724, 5442.2573, -1255.8437, -684.487, 27.05, -5105.8506, -8507.2088, -448.364)) : transpose(_GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, _GLF_IDENTITY(-4.1, (-4.1) - 0.0), -9.1))), ((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), max(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)))))), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) / mat4(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(814.876)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, abs(1.0), 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(5.6)), float(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), clamp(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0))) / 1.0), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (true ? float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)) : _GLF_FUZZED(7.9)))))), bool(_GLF_IDENTITY(true, (true) && true))))))) : mat4(1.0)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, 6859.4391, 128.137, -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, _GLF_IDENTITY(-4.1, min(-4.1, -4.1)), -9.1)), _GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), (_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137))) - _GLF_ZERO(0.0, injectionSwitch.x)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, _GLF_IDENTITY(9654.0408, max(9654.0408, 9654.0408)), -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1))), ((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, _GLF_IDENTITY(-2.5, clamp(_GLF_IDENTITY(-2.5, (true ? -2.5 : _GLF_FUZZED(-84.68))), _GLF_IDENTITY(-2.5, (true ? -2.5 : _GLF_FUZZED(40.64))), -2.5)), -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1)))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(0.2, 97.74, -2739.4305, 5.6, -754.120, -37.24, 212.902, 31.86, -3635.0048, 8211.8240, 6.5, 7.3, 6.3, 7.7, 537.257, 767.091)) : _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-94.39, 20.09, 8.1, -194.089, -674.083, -7854.6010, 36.89, -182.709, 344.451, 75.66, 3.4, 94.32, 9009.4306, 9633.3736, 24.93, -860.507)) : mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(mat4(-9176.1275, 872.169, -25.23, 9.6, 1961.5927, -8.9, -2.3, -762.851, 657.724, 5442.2573, -1255.8437, -684.487, 27.05, -5105.8506, -8507.2088, -448.364)) : transpose(_GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, _GLF_IDENTITY(-4.1, (-4.1) - 0.0), -9.1))), ((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), max(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)))))), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) / mat4(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(814.876)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, abs(1.0), 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(5.6)), float(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), clamp(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0))) / 1.0), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (true ? float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)) : _GLF_FUZZED(7.9)))))), bool(_GLF_IDENTITY(true, (true) && true))))))) : mat4(1.0)), transpose(transpose((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (true))) ? _GLF_IDENTITY(_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, 6859.4391, 128.137, -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, _GLF_IDENTITY(-4.1, min(-4.1, -4.1)), -9.1)), _GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), (_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137))) - _GLF_ZERO(0.0, injectionSwitch.x)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, _GLF_IDENTITY(9654.0408, max(9654.0408, 9654.0408)), -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1))), ((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, _GLF_IDENTITY(-2.5, clamp(_GLF_IDENTITY(-2.5, (true ? -2.5 : _GLF_FUZZED(-84.68))), _GLF_IDENTITY(-2.5, (true ? -2.5 : _GLF_FUZZED(40.64))), -2.5)), -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1)))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(0.2, 97.74, -2739.4305, 5.6, -754.120, -37.24, 212.902, 31.86, -3635.0048, 8211.8240, 6.5, 7.3, 6.3, 7.7, 537.257, 767.091)) : _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(-94.39, 20.09, 8.1, -194.089, -674.083, -7854.6010, 36.89, -182.709, 344.451, 75.66, 3.4, 94.32, 9009.4306, 9633.3736, 24.93, -860.507)) : mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))), (false ? _GLF_FUZZED(mat4(-9176.1275, 872.169, -25.23, 9.6, 1961.5927, -8.9, -2.3, -762.851, 657.724, 5442.2573, -1255.8437, -684.487, 27.05, -5105.8506, -8507.2088, -448.364)) : transpose(_GLF_IDENTITY((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, _GLF_IDENTITY(-4.1, (-4.1) - 0.0), -9.1))), ((_GLF_FUZZED(mat4(-5.6, 964.640, 77.83, -2.5, -859.811, 17.65, _GLF_IDENTITY(6859.4391, (true ? 6859.4391 : _GLF_FUZZED(5.7))), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), max(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)), _GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, clamp(_GLF_IDENTITY(128.137, (128.137) / 1.0), 128.137, 128.137)), 128.137, 128.137)))))), -2.1, 9654.0408, -3.5, 981.798, -1.3, -2632.9867, -4.1, -9.1)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) / mat4(1.0, _GLF_IDENTITY(1.0, float(float(1.0))), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(814.876)), float(1.0), bool(true))), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, abs(1.0), 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(5.6)), float(_GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), clamp(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0))) / 1.0), _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)), (true ? float(mat2x4(1.0, 0.0, 0.0, 0.0, abs(1.0), 1.0, 1.0, 1.0)) : _GLF_FUZZED(7.9)))))), bool(_GLF_IDENTITY(true, (true) && true))))))) : mat4(1.0)))))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(mat3(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.2, 1.3, -117.391, -89.84, -4.4, -29.15, 1.1, 5937.5251, 9.9)))) : _GLF_FUZZED(mat3(-0.1, 4407.4381, 4.5, 0.2, 7.6, 2472.1709, _GLF_IDENTITY(6369.4234, max(6369.4234, 6369.4234)), 6577.4232, 7005.9103))), mat3(_GLF_IDENTITY(mat3x4((true ? _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.2, 1.3, -117.391, -89.84, -4.4, -29.15, 1.1, 5937.5251, 9.9)))) : _GLF_FUZZED(mat3(-0.1, 4407.4381, 4.5, 0.2, 7.6, 2472.1709, _GLF_IDENTITY(6369.4234, max(6369.4234, 6369.4234)), 6577.4232, 7005.9103)))), (true ? mat3x4((true ? _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(0.2, 1.3, -117.391, -89.84, -4.4, -29.15, 1.1, 5937.5251, 9.9)))) : _GLF_FUZZED(mat3(-0.1, 4407.4381, 4.5, 0.2, 7.6, 2472.1709, _GLF_IDENTITY(6369.4234, max(6369.4234, 6369.4234)), 6577.4232, 7005.9103)))) : _GLF_FUZZED(mat3x4(-7.6, -8733.2639, -51.50, -3978.8998, -94.88, -61.23, -602.491, 4.0, 38.25, -8546.3867, -30.60, 5930.3457))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))) && true)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), bool(bvec2(bool(false), false))))) && true)))), true && (false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size * _GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_local_id))), workgroup_id)), min(_GLF_IDENTITY(_GLF_struct_replacement_8.workgroup_size, (_GLF_struct_replacement_8.workgroup_size) | (_GLF_struct_replacement_8.workgroup_size)) * workgroup_id, _GLF_struct_replacement_8.workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 0u, 0u))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (subgroup_id)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))))) << 0u), subgroup_id)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), subgroup_id)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) | (subgroup_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), 0u | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))) << 0u))), subgroup_id)), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size))) * 1u), (subgroup_size) - 0u), subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true))) || false))))
  barrier();
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1, _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), subgroup_local_id, subgroup_local_id)) + 1))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(virtual_gid))), max(subgroup_local_id + 1, subgroup_local_id + 1))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), subgroup_local_id + 1)))))) * 1u) - 0u), min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))) - 0u, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))), (ivec3(1, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), min(1 << _GLF_IDENTITY(int(1), int(1)), 1 << _GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))))) >> ivec3(_GLF_IDENTITY(0, int(_GLF_ONE(1.0, injectionSwitch.y)) * (0)), 0, 0)))), max(subgroup_local_id + 1, subgroup_local_id + 1))) - 0u) >> 0u)), _GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED((subgroup_id << num_workgroup)) : subgroup_local_id + 1)), subgroup_local_id + 1)), max(subgroup_local_id + 1, subgroup_local_id + 1))) / 1u), 0u | (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) - 0u)))) << _GLF_IDENTITY(0u, min(0u, 0u))) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(99.26, _GLF_IDENTITY(float(float(99.26)), float(vec4(float(float(99.26)), 0.0, 1.0, 1.0))))), _GLF_FUZZED(4.5)), bvec2(false, false)), mix(vec2((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(99.26, _GLF_IDENTITY(float(float(99.26)), float(vec4(float(float(99.26)), 0.0, 1.0, 1.0))))), _GLF_FUZZED(4.5)), bvec2(false, false)))[0], (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), (vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1])) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(99.26, _GLF_IDENTITY(float(float(99.26)), float(vec4(float(float(99.26)), 0.0, 1.0, 1.0))))), _GLF_FUZZED(4.5)), bvec2(false, false)))[1]), vec2(_GLF_FUZZED((true ? -3.0 : 2.7)), _GLF_FUZZED(7.8)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) | _GLF_IDENTITY(_GLF_IDENTITY(((2)), (_GLF_IDENTITY(((2)), clamp(((2)), _GLF_IDENTITY(((2)), (((2))) | (((2)))), ((2))))) * 1), (((2))) - 0)))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u & 1u)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * (1u & 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) * (1u & 1u))), min(~ (_GLF_IDENTITY(0u, (0u) * (1u & 1u))), ~ (_GLF_IDENTITY(0u, (0u) * (1u & 1u)))))))))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2((4) / 1, 1), (ivec2((4) / 1, 1)) | (ivec2((4) / 1, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2((4) / 1, 1), (ivec2((4) / 1, 1)) | (ivec2((4) / 1, 1)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(ivec2((4) / 1, 1), (ivec2((4) / 1, 1)) | (ivec2((4) / 1, 1)))), max(~ (_GLF_IDENTITY(ivec2((4) / 1, 1), (ivec2((4) / 1, 1)) | (ivec2((4) / 1, 1)))), ~ (_GLF_IDENTITY(ivec2((4) / 1, 1), (ivec2((4) / 1, 1)) | (ivec2((4) / 1, 1))))))) ^ ivec2(0, 0))))))), 4)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
