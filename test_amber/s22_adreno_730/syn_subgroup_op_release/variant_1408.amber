#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-492.467)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(1.8, (false ? _GLF_FUZZED(7.5) : 1.8)))))), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-492.467)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(1.8, (false ? _GLF_FUZZED(7.5) : 1.8)))))), injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(2.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-492.467)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(1.8, (false ? _GLF_FUZZED(7.5) : 1.8)))))), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), float(mat3x2(max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x), 1.0, 1.0, 1.0, 0.0, sqrt(1.0))))) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-492.467)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(length(_GLF_IDENTITY(1.8, (false ? _GLF_FUZZED(7.5) : 1.8)))))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) || false)) || false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))), true, true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, false)), bool(bool(bool(bvec3((false), true, false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))))), clamp(float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), tan(0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))))), float(vec3(float(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(tan(0.0), 1.0 * (tan(0.0))))))), 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))) / vec2(1.0, 1.0)).x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), max(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0)))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (true ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-2981.6915))), tan(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)))))), _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(8.6))), tan(0.0))))))))) / 1.0)), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), max(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0)))))), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), (true ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-2981.6915))), tan(0.0)))), _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(8.6))), tan(0.0))))))))) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), max(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0)))))), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (true ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-2981.6915))), tan(0.0)))), _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(8.6))), tan(0.0))))))))) / 1.0)), (float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.2)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0)), 0.0, 0.0)), tan(0.0))), max(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(round(6.8)) : 0.0)))))))), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (true ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-2981.6915))), tan(0.0)))), _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(8.6))), tan(0.0))))))))) / 1.0))) * 1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), tan(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), max(float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0))), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), tan(0.0)))))), max(_GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (true ? determinant(mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(-2981.6915))), tan(0.0)))), _GLF_IDENTITY(float(injectionSwitch.x), float(mat4x2(float(injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(tan(0.0), min(_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(8.6))), tan(0.0))))))))) / 1.0))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))) || false))))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(39640)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-669.891), mix(float(_GLF_FUZZED(5511.0001)), float(_GLF_FUZZED(-669.891)), bool(true))), (false ? _GLF_FUZZED(-2659.3655) : _GLF_IDENTITY(_GLF_FUZZED(-669.891), mix(float(_GLF_FUZZED(_GLF_IDENTITY(5511.0001, clamp(5511.0001, 5511.0001, 5511.0001)))), float(_GLF_FUZZED(-669.891)), bool(true)))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3.8), _GLF_FUZZED(7.2)), bvec2(false, false))), injectionSwitch)).y))))
              barrier();
             barrier();
            }
           return;
          }
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, abs(1.0))), (true ? float(vec4(injectionSwitch.y, 1.0, 0.0, abs(1.0))) : _GLF_FUZZED(-1317.4202))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 1.0, 0.0, abs(1.0))), (true ? float(vec4(injectionSwitch.y, 1.0, 0.0, abs(1.0))) : _GLF_FUZZED(-1317.4202)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, false))))))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))), true, false))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, bool(bool((_GLF_IDENTITY(false, false || (false))) && true))), true, true, true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-7.5)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(fract(vec2(-9.6, -5.3))))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y), true))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))) * subgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))) * subgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u))))))))) * subgroup_size, 0u | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size)))) >> 0u), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size, subgroup_id * subgroup_size)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)))))))))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)))))))))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), min(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) - 0u)))))))))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))), 0u + (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) >> 0u)), ~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, subgroup_id * subgroup_size), 0u | (max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, subgroup_id * subgroup_size)))) | (max(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, subgroup_id * subgroup_size))))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (119129u & 0u)), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)), subgroup_size)), subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(virtual_gid))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) | (119129u & 0u))) >> _GLF_IDENTITY(0u, uint(uvec4(0u, (1u ^ 1u), 1u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 0u + ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 0u + ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 0u + ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))) * (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))))))))))))))) | (subgroup_id * subgroup_size)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (_GLF_IDENTITY(~ (clamp(subgroup_id, subgroup_id, subgroup_id)), uint(uvec3(~ (clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 0u)))))) + 0u)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), uint(_GLF_IDENTITY(uvec3(max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), 0u, 0u), (uvec3(max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), 0u, 0u)) | uvec3(0u, 0u, 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), 0u ^ (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))), 0u | (_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))))) * subgroup_size, subgroup_id * subgroup_size)) * 1u))))) | (subgroup_id * subgroup_size)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (_GLF_IDENTITY(~ (clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), subgroup_id)), uint(uvec3(~ (clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 0u)))))) + 0u)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size)) * 1u))))) | (subgroup_id * subgroup_size)))), 0u ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (_GLF_IDENTITY(~ (clamp(subgroup_id, subgroup_id, subgroup_id)), uint(uvec3(~ (clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, 0u)))))) + 0u)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) ? _GLF_FUZZED(subgroup_local_id) : max(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))), 0u ^ (~ (~ (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))))))) * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) + 0u)) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) : max(_GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_id))))) * subgroup_size, subgroup_id * subgroup_size)) * 1u))))) | (subgroup_id * subgroup_size))))))) * 1u), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) | (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)) * subgroup_size))))))) + ((subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u) | (subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (1u | 1u)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u ^ 0u)) : _GLF_FUZZED(atomicMin(workgroup_id, subgroup_local_id)))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))) | 0u))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))), 0u, (1u | 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u))), 1u), (true ? uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (1u | 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size))), ((subgroup_id * subgroup_size)) | 0u))), 1u) : _GLF_FUZZED(uvec2(91199u, 75819u)))))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))))))) ^ 0u)))) | (subgroup_id * subgroup_size)))))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size))))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)), subgroup_id)), ~ (~ (subgroup_id))) * subgroup_size))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u) | (subgroup_id * subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (1u | 1u)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / (1u ^ 0u)) : _GLF_FUZZED(atomicMin(workgroup_id, subgroup_local_id)))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u))) | 0u))), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))))), 0u, (1u | 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | 0u))), 1u), (true ? uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, (1u | 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size))), ((subgroup_id * subgroup_size)) | 0u))), 1u) : _GLF_FUZZED(uvec2(91199u, 75819u)))))), 0u + (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), 0u + (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)))))))) ^ 0u)))) | (subgroup_id * subgroup_size)))))))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) << (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)))))))) | 0u) + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) / (0u | 1u))) * (subgroup_local_id)))), subgroup_local_id)))) + 1) % subgroup_size), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))) * subgroup_size))) | (subgroup_id * subgroup_size)))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size))), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (clamp(subgroup_id, subgroup_id, subgroup_id)))) - 0u)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)))) ^ 0u))))))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))) * subgroup_size))) | (subgroup_id * subgroup_size)))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size))), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)), subgroup_id, subgroup_id), ~ _GLF_IDENTITY((~ (clamp(subgroup_id, subgroup_id, subgroup_id))), (true ? (~ (clamp(subgroup_id, subgroup_id, subgroup_id))) : _GLF_FUZZED((mix(subgroup_size, num_workgroup, true))))))) | (clamp(subgroup_id, subgroup_id, subgroup_id)))) - 0u)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)))) ^ 0u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))) * subgroup_size))) | (subgroup_id * subgroup_size)))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size))), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size), 0u + ((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), 0u + (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) | 0u))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) * 1u)), uint(1u))) + (subgroup_id * subgroup_size))), _GLF_IDENTITY(0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id))))))))) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (clamp(subgroup_id, subgroup_id, subgroup_id)) - 0u), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), min(clamp(subgroup_id, subgroup_id, subgroup_id), clamp(subgroup_id, subgroup_id, subgroup_id)))))))) - 0u)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)))) ^ 0u))))))), _GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 0u, 1u))) * subgroup_size))) | (subgroup_id * subgroup_size)))), max((~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size))), max(_GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size))), (max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size)))) >> 0u), max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) + (subgroup_id * subgroup_size)))))) >> 0u), 0u + (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))) / 1u), (false ? _GLF_FUZZED(subgroup_local_id) : max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))) | (subgroup_id * subgroup_size)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), (_GLF_IDENTITY(clamp(subgroup_id, subgroup_id, subgroup_id), ~ (~ (clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u)))))) | (clamp(subgroup_id, subgroup_id, subgroup_id)))) - 0u)) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))), ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size)))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) | (uvec3(subgroup_id, 0u, 1u)))), max(uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) | (uvec3(subgroup_id, 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(subgroup_id, 0u, 1u), (uvec3(subgroup_id, 0u, 1u)) | (uvec3(subgroup_id, 0u, 1u))))))) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) + (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) : subgroup_size)))) ^ 0u))))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(_GLF_IDENTITY(uint(((subgroup_local_id + 1) % subgroup_size)), max(uint(((subgroup_local_id + 1) % subgroup_size)), uint(((subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), (true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false), true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))), false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) < subgroup_size, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1, _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1)) < subgroup_size), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) / 1u) | (subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, (1) - 0) < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u | 0u)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1 < subgroup_size), true, true, true)))), bool(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u), _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | 0u, ((0u) | 0u) | ((0u) | 0u))) | (subgroup_local_id)), subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 1u, 0u))), subgroup_local_id)))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), max((_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u)), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) * 1u))))), ((~ ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) >> 0u, ((0u) >> 0u) * 1u)))))) / (1u & 1u))), (_GLF_IDENTITY(0u, (0u) >> 0u)))))) | 0u) | (subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(48958))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(48958)))) + 0), 1)), (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ (_GLF_IDENTITY((0u), ~ (~ ((0u))))))) | 0u) | (subgroup_local_id)), subgroup_local_id)) + 1) - 0u)) * 1u)) - _GLF_IDENTITY(0u, min(0u, 0u))) < subgroup_size), true, true, true)))), false)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), (0u) | 0u) | (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(uvec2(89974u, 145381u)[1]), ~ (~ (_GLF_FUZZED(uvec2(89974u, 145381u)[1])))))), (0u) | 0u) | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u)) | ((subgroup_local_id)))) / 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id), min(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(72.92)), bool(false))), 1.0, 1.0))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, 0u)), 0u)), (0u) | 0u) | (subgroup_local_id), (true ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) >> 0u), uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))), 0u, (1u ^ 0u), 1u), (uvec4(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) >> 0u), uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))), 0u, (1u ^ 0u), 1u)) + uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(subgroup_size)), max((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) >> 0u), uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))), 0u, (1u ^ 0u), 1u), (uvec4(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) >> 0u), uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))), 0u, (1u ^ 0u), 1u)) + uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(subgroup_size)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) >> 0u), uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))), 0u, (1u ^ 0u), 1u), (uvec4(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) >> 0u), uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)))), 0u, (1u ^ 0u), 1u)) + uvec4(0u, 0u, 0u, 0u)))))) : _GLF_FUZZED(subgroup_size)))))))), subgroup_local_id), min(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)) ^ 0u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 1u))) : _GLF_FUZZED(next_virtual_gid))) : _GLF_FUZZED(workgroup_id)))))) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, length(tan(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0))), 1.0, 1.0))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))))), ((_GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false))))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u)), (uint(uvec4(subgroup_local_id, (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u), 0u, 0u))) | 0u))) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id), min(min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_id)))))) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, 1.0, 1.0))))).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, 1.0, 1.0))))).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 1.0, 1.0, 1.0, 1.0))))).x < injectionSwitch.y))))))) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))), subgroup_local_id), min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (true ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size))))), (false ? _GLF_FUZZED(uint(false)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) ^ 0u)))) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id) : _GLF_FUZZED(subgroup_size)))))))), subgroup_local_id))))) >> 0u))) - 0u)) + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size), true, true, true)))), bool(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id)))), subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : 0u)), 0u))) | 0u) | (subgroup_local_id)), subgroup_local_id)) : _GLF_FUZZED(subgroup_local_id)))) | 0u) + 1 < subgroup_size), bool(bvec4(! (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) | 0u) | (subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0) < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size))), true, true, true)))), false))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true, false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 1.0, 0.0, 1.0, 0.0)))))))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), next_virtual_gid))))), clamp(_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), next_virtual_gid, next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)))), next_virtual_gid))))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))), _GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), min(next_virtual_gid, next_virtual_gid)))))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-552.727), _GLF_FUZZED(0.3)), bvec2(false, false))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true && (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), false, _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) && true)), bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) && true)), true, false, false)))) || false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)), bvec3(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true && (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(false)) && true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), false || (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), ! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)), bvec3(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true && (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))))))) || false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)), bvec3(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))))))))))), true && (bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true)))), true && (bool(_GLF_IDENTITY(bool(false), true && (_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, (false) && true))) && true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))))))))))))))))), true, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.8, 5430.5114)))).x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false)), true))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, true && (false))))), false || (! (! ((_GLF_IDENTITY(false, true && (false))))))))), true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))))), false || (! (! ((_GLF_IDENTITY(false, true && (false)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), ! (! (true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, false))) && (false))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(true && (false), ! (! (true && (false)))), false, true)))))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), ! (! (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y)))), float(float(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))) || false)))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, false)))) || false)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
