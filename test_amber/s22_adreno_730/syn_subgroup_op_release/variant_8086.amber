#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  return;
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.4) : injectionSwitch.y))), float(_GLF_FUZZED(-88.19)), bool(_GLF_IDENTITY(false, true && (false))))), max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) * mat3(1.0))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))) && true))))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (false))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_IDENTITY((! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))) || false, ! (! ((! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))) || false))))))))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)) > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(9.2, -102.142))))) * mat2(1.0), mix(vec2(((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-80.24)), vec2(_GLF_FUZZED(-8008.4481), (_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), (true ? (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))) / vec2(1.0, 1.0))))) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))[1]), bvec2(false, true))), max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), mix(vec2(((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-80.24)), vec2(_GLF_FUZZED(-8008.4481), ((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))) * mat2(1.0))[1]), bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))))), true))), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), mix(vec2(((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-80.24)), vec2(_GLF_FUZZED(-8008.4481), ((mat2(1.0) * (injectionSwitch)) * mat2(1.0))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
   return;
  }
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z = _GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), uint(6u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false || (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size) << uvec4(0u, 0u, 0u, 0u)).z), ((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z)) | 0u) >> 0u, 0u ^ (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z) >> 0u, (_GLF_IDENTITY((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ _GLF_IDENTITY(((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z)), (((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.z))) - 0u)) >> 0u) + 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6349.2999)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))), ! (! ((false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), true && (true && (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))))), false))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_local_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.y = subgroup_local_id))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true), false, false))), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true), false, false))), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) && true), false, false))), bool(bvec2(_GLF_IDENTITY(true, true && (true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true)))))), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1.0)), float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, round(length(normalize(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], (vec4(1.0, 1.0, 1.0, 1.0))[1], (vec4(1.0, 1.0, 1.0, 1.0))[2], (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4(_GLF_FUZZED(57.59), _GLF_FUZZED(-2.9), _GLF_FUZZED(173.069), _GLF_FUZZED(-3.5)), bvec4(false, false, false, false)))))) * (injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), bool(bvec3(false || (! (false)), true, true))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x3(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? transpose(mat4x3(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat3x4(-6207.5017, 17.14, -3551.5005, 4.0, -4.7, 8.1, -2.5, 8.6, -7.6, 6.9, -362.557, 630.801))))))), float(mat2(float(_GLF_IDENTITY(mat4x3(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4x3(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (true ? transpose(mat4x3(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(mat3x4(-6207.5017, 17.14, -3551.5005, 4.0, -4.7, 8.1, -2.5, 8.6, -7.6, 6.9, -362.557, 630.801))))))), 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(-7780.3289)), bool(false)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, 0.0), transpose(transpose(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(exp(vec2(0.0, 0.0))))), (round(length(normalize(exp(vec2(0.0, 0.0)))))) + determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 0.0)))))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, round(length(normalize(exp(vec2(0.0, 0.0))))), 1.0, 0.0), transpose(transpose(mat3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(exp(vec2(0.0, 0.0))))), (round(length(normalize(exp(vec2(0.0, 0.0)))))) + determinant(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 1.0, 0.0))))))) - 0.0) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.x = GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | _GLF_IDENTITY((gl_WorkGroupSize.x), _GLF_IDENTITY(uint(uint((gl_WorkGroupSize.x))), (uint(uint((gl_WorkGroupSize.x)))) - 0u))), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(true, bool(bvec2(true, true)))))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true), false)))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), _GLF_IDENTITY(true, bool(bool(true))), false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size) / (uvec4(1u, 1u, 1u, 1u) & uvec4(1u, 1u, 1u, 1u))).w)), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, _GLF_IDENTITY(clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size, (true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size : _GLF_FUZZED(uvec4(20946u, 188361u, 140085u, 158471u)))).w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w), max(clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size, (true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size : _GLF_FUZZED(uvec4(20946u, 188361u, 140085u, 158471u)))).w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w), clamp(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size, (true ? GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size : _GLF_FUZZED(uvec4(20946u, 188361u, 140085u, 158471u)))).w, GLF_merged4_0_1_13_1_1_17_2_1_13_3_1_14num_workgroupsubgroup_local_idsubgroup_sizeworkgroup_size.w))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (false) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)))), 0.0), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((vec2(-4.5, -6.4) + 57.37)))), max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch)))), 0.0)) + vec3(0.0, 0.0, 0.0)), (vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.7, -3.4)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)), exp(tan(vec2(0.0, 0.0))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.7, -3.4)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)), mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((603.960 * 6.4))), bool(false)))) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-9.7, -3.4)) : injectionSwitch)), max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(94.14))), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(6.8, 620.915)) : (injectionSwitch)))[1]), vec2(_GLF_FUZZED(412.629), _GLF_IDENTITY(_GLF_FUZZED(1.1), max(_GLF_IDENTITY(_GLF_FUZZED(1.1), mix(float(_GLF_FUZZED(-7.2)), float(_GLF_FUZZED(1.1)), bool(true))), _GLF_FUZZED(1.1)))), bvec2(false, false))), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch))) / cos(vec2(0.0, 0.0))))), 0.0)) * mat3(1.0)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (injectionSwitch.x > injectionSwitch.y), (true && (injectionSwitch.x > injectionSwitch.y)) && true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)) : _GLF_FUZZED(subgroup_id))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))) >> 0u)))), 1u))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, 0u ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w), clamp((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w)))) : _GLF_FUZZED(subgroup_local_id))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w)) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z), max(clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z), clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)))))), 1u))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w, 0u ^ _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w), clamp((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w)))) : _GLF_FUZZED(subgroup_local_id))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w)) * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY(clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z), max(clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z), clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)))))), 1u))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (~ (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.w * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, uint(uvec2(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) - uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size)).z, clamp(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.z)))), 1u))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size)))).z)))) >> (_GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) << _GLF_IDENTITY(uint(3u), uint(3u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), exp(0.0), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (_GLF_IDENTITY(false, true && (false))), true, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) >> 0u), _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))))) : GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base))), ~ (~ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) >> 0u), _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | (_GLF_FUZZED(subgroup_id))))) : GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base)))))) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && true))))
  return;
 uint virtual_gid = GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z + GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size), min((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size)))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size), uvec4(0u, 0u, 0u, 0u) ^ (clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size), min((GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size), (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size) | (GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size)))), GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size, GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size)))).y + subgroup_id * GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z + ((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 0))), min(1, _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) / int(_GLF_ONE(1.0, injectionSwitch.y))))))), 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.z);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0))))))), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x = _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? next_virtual_gid : _GLF_FUZZED(84941u))), ~ (~ (_GLF_IDENTITY(next_virtual_gid, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) ? next_virtual_gid : _GLF_FUZZED(84941u))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1204.6728), _GLF_FUZZED(979.236)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, true && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.5)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))), true && (bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))))))), false, true, false)), _GLF_IDENTITY(false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), (false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), ((injectionSwitch) - vec2(0.0, 0.0)) * mat2(1.0)))) * vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(vec3(-97.88, 3.7, 95.82), vec3(-2110.5986, -4069.5928, -5.5))))), 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0)), mix(float(_GLF_FUZZED(-4322.6558)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -6712.0301)))), mix(vec2(_GLF_FUZZED(169.535), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-1917.1258)), bvec2(true, false))).y), bool(true)))), false, true, false)))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4((injectionSwitch) * mat2(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))), injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
    return;
  }
 _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, (1) * 1), (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ 0u))))) + 0u, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, (0u & 70489u)))), max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))), ((_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / _GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, 1u, (0u & 70489u)))), max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1)))) - 0u) | 0u), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 1 * (1)), 1))))) | _GLF_IDENTITY(0u, (0u) ^ 0u))))) + _GLF_IDENTITY(0u, (0u) * 1u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) | (_GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), clamp(_GLF_FUZZED((+ subgroup_size)), _GLF_IDENTITY(_GLF_FUZZED((+ subgroup_size)), (_GLF_FUZZED((+ subgroup_size))) >> 0u), _GLF_FUZZED((+ subgroup_size)))))) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ 0u))))) + 0u) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u) / _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(virtual_gid)))) * 1u), max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (0u)))))) | (0u ^ 0u))), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_IDENTITY(_GLF_FUZZED((next_virtual_gid / workgroup_id)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_FUZZED((next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(next_virtual_gid / _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 0u, 0u)), min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 0u, 0u)), ~ (~ (uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 0u, 0u))))), uint(uvec3(_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u), 0u, 0u))))) + 0u), 0u ^ (uint(uvec3(workgroup_id, 0u, 0u))))), next_virtual_gid / workgroup_id)))) : _GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((workgroup_size ++)) : buf[virtual_gid] = 1))))) | 0u), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, max(1, 1)), (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u + ((_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, max(1, 1)), (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))))))))) + 0u, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1)), (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED(_GLF_IDENTITY((next_virtual_gid / workgroup_id), _GLF_IDENTITY(uint(uvec4((next_virtual_gid / workgroup_id), 0u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u))), clamp(_GLF_IDENTITY(uint(uvec4((next_virtual_gid / workgroup_id), 0u, 1u, 1u)), min(uint(uvec4((next_virtual_gid / workgroup_id), 0u, 1u, 1u)), uint(uvec4((next_virtual_gid / workgroup_id), 0u, 1u, 1u)))), uint(uvec4((next_virtual_gid / workgroup_id), 0u, 1u, 1u)), uint(uvec4((next_virtual_gid / workgroup_id), 0u, 1u, 1u)))))) : buf[virtual_gid] = 1))) >> 0u)) | _GLF_IDENTITY(0u, (0u) ^ 0u))))) + 0u) ^ _GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(next_virtual_gid / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u), (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(buf[virtual_gid] = _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) >> 0))), (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ 0u))))) + 0u), (((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((_GLF_IDENTITY(next_virtual_gid / workgroup_id, max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)) / workgroup_id, next_virtual_gid / workgroup_id)))) : buf[virtual_gid] = 1))) | 0u), (_GLF_IDENTITY(false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) ^ ((0u >> _GLF_IDENTITY(uint(0u), uint(0u))) | 0u)) ^ 0u)), 0u ^ (false ? _GLF_FUZZED((+ subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ 0u)), 0u | (_GLF_IDENTITY(buf[virtual_gid] = 1, (_GLF_IDENTITY(buf[virtual_gid] = 1, (false ? _GLF_FUZZED((next_virtual_gid / workgroup_id)) : buf[virtual_gid] = 1))) | _GLF_IDENTITY(0u, (0u) ^ 0u))))))))) + 0u)) + 0u) ^ 0u) * 1u)))) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bool(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, true))) && _GLF_IDENTITY(true, ! (! (true))))))))), ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, true))) && _GLF_IDENTITY(true, ! (! (true)))))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED((333.482 - 1.1)) : injectionSwitch[0])), injectionSwitch[1])).y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, true))) && _GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED((333.482 - 1.1)) : injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(1, (0 ^ 0) | (_GLF_IDENTITY(1, int(ivec2(1, 0)))))])).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, true)))), bool(bvec2(! ((bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true, false, true)))), true))))) && _GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED((333.482 - 1.1)) : injectionSwitch[_GLF_IDENTITY(0, 0 + (0))])), injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size.y + 1, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size, (false ? _GLF_FUZZED((GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size + uvec3(165292u, 127955u, 121883u))) : GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size))) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size, (GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u)))))).y + 1) | _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (0u) - 0u) : _GLF_FUZZED(subgroup_size)))) < _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size, (GLF_merged3_0_1_13_1_1_17_2_1_13num_workgroupsubgroup_local_idsubgroup_size) - uvec3(0u, 0u, 0u)).z)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x], uint(2), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (clamp(64, _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(64, ~ (~ (64)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (clamp(64, _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(64, ~ (~ (64))))))), 0 ^ (~ (_GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64)))), 1 * (clamp(64, _GLF_IDENTITY(64, int(ivec2(_GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) >> 0))), int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(64, ~ (~ (64))))))))))), (true ? _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) << _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0, clamp(0, 0, 0)) : _GLF_FUZZED(ivec3(49058, 96519, 9522).z)))), ivec3(0, 0, 0) ^ (ivec3(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) ^ 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) - 0)) ^ 0)) >> 0), 0)))))))), _GLF_IDENTITY(~ (~ (64)), _GLF_IDENTITY((~ (~ (64))) | (~ (~ (64))), 0 + ((~ (~ (64))) | (~ (~ (64)))))))), 1 * (clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (64)))))) : _GLF_FUZZED(_GLF_IDENTITY(-1148, ~ (~ (-1148))))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), ! (! (! (false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], float(mat4x3(injectionSwitch[0], 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0))), injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(false)))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), bool(bvec2((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && true)) || false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_DEAD(false))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))))))) || false), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2242.3267), _GLF_FUZZED(9973.0804)), bvec2(false, false))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))))))))))
      return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_14_2_1_12_3_1_14next_virtual_gidworkgroup_baseworkgroup_idworkgroup_size.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), false || (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(_GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))))))))))), ! (! (! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))))) && true))))), ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))) || false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(_GLF_DEAD(false), false, true, false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec4((_GLF_IDENTITY(! (false), false || (! (false)))), true, false, false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-3011.7916)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[1], clamp(((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1], ((injectionSwitch) * mat2(1.0))[1]))), vec2(_GLF_FUZZED(-4562.4461), _GLF_FUZZED(-233.880)), bvec2(false, false)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, float(vec2(injectionSwitch.x, 0.0)))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) || false)))) || false))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6103.9547), _GLF_FUZZED(float(11381u))), bvec2(false, false))).y))))
            return;
          }
         return;
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
