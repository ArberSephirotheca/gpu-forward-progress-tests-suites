#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-83.98)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true, true)))))))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, 0.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0)), max(float(mat4x3(injectionSwitch.x, 0.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0)), float(mat4x3(injectionSwitch.x, 0.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0), vec2(1.0, 0.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(0.3)), bvec2(false, false))).x > injectionSwitch.y)))))))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (float(mat2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) / 1.0)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))), (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(true, true && (true)), false, true)), true, true)))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), true))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false, true)))))) && true))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))).x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))) && true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false)))), (! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) && true))))))), true)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, uint(uint(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_id))))))))) * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u)) | 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec2((! (false)), false), bvec2(bvec2(bvec2((! (false)), false))))))))))), (bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true, false)), (bool(bvec4(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), true, false))) && true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(9559.2194)), bvec2(false, false))))).y)))), true, false))))) && true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), true, true)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), true, true)))))), false, true)), false || (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true), true, true)))))), false, true)))))), true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), min(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(ivec3(1, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(int(1 << _GLF_IDENTITY(int(5), int(5)))))) / 1)) >> _GLF_IDENTITY(int(5), int(5))))))), (_GLF_IDENTITY(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), min(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(ivec3(1, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), int(int(1 << _GLF_IDENTITY(int(5), int(5)))))) / 1)) >> _GLF_IDENTITY(int(5), int(5)))))))) | 0))) * 1), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), min(int(ivec3(1, 1, ((_GLF_IDENTITY(1, (1) >> 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) / 1)))))))) * 1), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), min(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | 0)))), int(_GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (true ? _GLF_IDENTITY(5, int(ivec4(_GLF_IDENTITY(5, 0 ^ (5)), 0, ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), 1))) : _GLF_FUZZED(60410)))))) >> _GLF_IDENTITY(int(5), int(5)))), max(_GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (true ? ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) : _GLF_FUZZED(ivec3(86618, -76715, -83483)))), _GLF_IDENTITY(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), int(ivec2(int(5), 0)))) << 0))) >> _GLF_IDENTITY(int(5), int(5)))), max(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ivec3(1, _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) * 1))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))))))) * 1), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ 0u, uint(uvec2(_GLF_IDENTITY((subgroup_local_id) ^ 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) ^ 0u, max(_GLF_IDENTITY((subgroup_local_id) ^ 0u, ((subgroup_local_id) ^ 0u) - 0u), (subgroup_local_id) ^ 0u)), ((subgroup_local_id) ^ 0u) + 0u), (subgroup_local_id) ^ 0u, (subgroup_local_id) ^ 0u)), 0u)))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-31526))))) >> _GLF_IDENTITY(int(5), int(5)), max(_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) | (0 << _GLF_IDENTITY(int(8), int(8))))) >> _GLF_IDENTITY(int(5), int(5)), 0 ^ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(int(5), int(5)), 0, (1 & 1)), (ivec3(_GLF_IDENTITY(int(5), int(5)), 0, (1 & 1))) | (ivec3(_GLF_IDENTITY(int(5), int(5)), 0, (1 & 1))))))) >> _GLF_IDENTITY(int(5), int(5)))), (1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(min(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) | (_GLF_IDENTITY(5, ~ (~ (5)))))))) >> _GLF_IDENTITY(int(5), int(5)))))), ~ (~ (min(int(ivec3(1, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(int(5), int(5))))))), int(ivec3(1, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))))))))))) * 1)) + 0u)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y))))))) || false)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED((- 2.0))), float(vec4(float(_GLF_FUZZED((- 2.0))), 1.0, 1.0, 1.0))), float(injectionSwitch.y), bool(true)))))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, _GLF_IDENTITY(true, (true) && true), false))), false)))) ? _GLF_FUZZED(vec2(-679.487, -239.124)) : injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.5), _GLF_FUZZED(-2.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(intBitsToFloat(68746)) : injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     return;
    }
   barrier();
  }
 buf[virtual_gid] = 1;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 | (1))))) < subgroup_size, bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-65953) : _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1)))) < subgroup_size, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1124.5849)), bool(false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)), 0.0, abs(0.0), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 ^ (2))) / 1), (2) / (0 ^ 1))), 0u | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((_GLF_IDENTITY(uint(2), (uint(2)) >> 0u))) / _GLF_IDENTITY(1u, ~ (~ (1u)))) | (uint(2))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) / (0 ^ 1))), 0u | (_GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((_GLF_IDENTITY(uint(2), (uint(2)) >> 0u))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) - 0u) : _GLF_FUZZED(workgroup_id))) : _GLF_FUZZED(workgroup_id))), ~ (~ (1u)))) | (uint(2))))) : _GLF_FUZZED(atomicAdd(next_virtual_gid, 101335u)))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false, false)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)))))) + _GLF_IDENTITY((mat2(5625.1603, -401.093, 5.4, 8705.7237)), (true ? (mat2(5625.1603, -401.093, 5.4, 8705.7237)) : _GLF_FUZZED(mat2(-6.1, -4.2, 3.5, -52.12)))))))))) - mat2(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY((true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, _GLF_IDENTITY(-401.093, mix(float(-401.093), float(_GLF_FUZZED(2008.0758)), bool(false))), 5.4, 8705.7237), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))) - mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose((true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(_GLF_IDENTITY(5625.1603, min(_GLF_IDENTITY(5625.1603, max(5625.1603, 5625.1603)), 5625.1603)), -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))) - mat2(0.0, 0.0, 0.0, 0.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)))).x, mix(float(_GLF_FUZZED(29.70)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).x, (false ? _GLF_FUZZED(2.1) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0), ((_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))).x : _GLF_FUZZED(-85.96))))), exp(0.0), 1.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true, (true) || false) ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (false ? _GLF_FUZZED(mat2(851.264, 4.4, 3.4, -876.202)) : _GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat2(6246.9034, -9425.0793, -2.6, -2204.3229)) : _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-0.4))), 1.0)))) + mat2(0.0, 0.0, 0.0, 0.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, _GLF_IDENTITY(5.4, (_GLF_IDENTITY(5.4, (5.4) - 0.0)) - 0.0), 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(-401.093, -401.093)), 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(3.2, -5.0, 4.9, -1297.5376)) : mat2(1.0))), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), mat2(mat4x3(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), (true ? mat2(5625.1603, -401.093, 5.4, 8705.7237) : _GLF_FUZZED(mat2(7.6, 48.35, 6.2, -3.9)))))))), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), transpose(_GLF_IDENTITY(transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237))) + mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(mat2x4(_GLF_IDENTITY((true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), transpose(_GLF_IDENTITY(transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237))) + mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))), mat2(_GLF_IDENTITY(mat4x2((true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), transpose(_GLF_IDENTITY(transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237))) + mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)))), mat4x2(mat4(mat4x2((true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), transpose(_GLF_IDENTITY(transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (transpose(mat2(5625.1603, -401.093, 5.4, 8705.7237))) + mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), (true ? (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(406.396, 7.5, 5630.5464, -73.20))))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), transpose(transpose(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), mat2(mat3x4(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(_GLF_IDENTITY(-401.093, clamp(-401.093, -401.093, -401.093)), -401.093)), 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, float(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(_GLF_IDENTITY(-401.093, clamp(-401.093, -401.093, -401.093)), -401.093)), 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(29.70)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))), (transpose(transpose(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, 1.0 * (-401.093)), 5.4, 8705.7237))))) - mat2(0.0, 0.0, 0.0, 0.0)))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))) ? mat2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, _GLF_IDENTITY(5.4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(5.4, min(5.4, 5.4)) : _GLF_FUZZED(vec4(-59.92, 8336.4207, 1.8, -619.797).w))), 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))), _GLF_IDENTITY(mat2(mat2(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(mat2(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237))))))))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x))), bool(true))), (false ? _GLF_FUZZED(178.225) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(true, (true) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, false, true)))) ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, mix(float(_GLF_FUZZED(29.70)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, _GLF_IDENTITY(_GLF_IDENTITY(8705.7237, clamp(_GLF_IDENTITY(8705.7237, mix(float(8705.7237), float(_GLF_FUZZED(468.986)), bool(false))), _GLF_IDENTITY(8705.7237, max(8705.7237, 8705.7237)), _GLF_IDENTITY(8705.7237, clamp(8705.7237, 8705.7237, 8705.7237)))), mix(float(_GLF_IDENTITY(8705.7237, clamp(_GLF_IDENTITY(8705.7237, mix(float(8705.7237), float(_GLF_FUZZED(468.986)), bool(false))), _GLF_IDENTITY(8705.7237, max(8705.7237, 8705.7237)), _GLF_IDENTITY(8705.7237, clamp(8705.7237, 8705.7237, 8705.7237))))), float(_GLF_FUZZED(-5.1)), bool(false))))), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, _GLF_IDENTITY(8705.7237, (8705.7237) / 1.0))), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? 3.4 : -3.6))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))).x))), bool(true))))) > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(-401.093, -401.093)), 5.4, 8705.7237), transpose(transpose(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(-401.093, -401.093)), 5.4, 8705.7237))))))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, mix(float(_GLF_FUZZED(29.70)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), _GLF_IDENTITY(mat2(mat4x3(mat2(5625.1603, -401.093, 5.4, 8705.7237))), mat2(mat2(mat2(mat4x3(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, _GLF_IDENTITY(8705.7237, max(8705.7237, 8705.7237)))), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)), transpose(transpose(true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, -401.093, 5.4, 8705.7237), _GLF_IDENTITY(mat2(mat4x3(mat2(5625.1603, -401.093, 5.4, 8705.7237))), mat2(mat2(mat2(mat4x3(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, _GLF_IDENTITY(8705.7237, max(8705.7237, 8705.7237)))), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(_GLF_IDENTITY(5625.1603, clamp(5625.1603, 5625.1603, _GLF_IDENTITY(5625.1603, (false ? _GLF_FUZZED(-9719.0483) : 5625.1603)))), -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x))), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(-401.093, -401.093)), 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0)), mat2(1.0) * (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, _GLF_IDENTITY(8705.7237, (8705.7237) / exp(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, max(-401.093, -401.093)), 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))))).x, mix(float(_GLF_FUZZED(29.70)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(mat2(5625.1603, _GLF_IDENTITY(-401.093, (_GLF_IDENTITY(-401.093, min(-401.093, -401.093))) - 0.0), 5.4, 8705.7237), _GLF_IDENTITY(mat2(mat4x3(mat2(5625.1603, -401.093, 5.4, 8705.7237))), mat2(mat2(mat2(mat4x3(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))), (false ? _GLF_FUZZED(mat2(464.277, 0.1, 0.0, 978.961)) : _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))), (transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237))))) - mat2(0.0, 0.0, 0.0, 0.0))))), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))), (false ? _GLF_FUZZED(mat2(464.277, 0.1, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))), float(_GLF_FUZZED(-529.257)), bool(false))), 978.961)) : _GLF_IDENTITY(transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))), (transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237))))) - mat2(0.0, 0.0, 0.0, 0.0)))))) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(7421.1712, 70.46, -916.762, -24.15, 93.41, 7.6, 8489.2374, -71.26)) : mat4x2(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, _GLF_IDENTITY(-401.093, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2.4) : -401.093)), 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat2(_GLF_IDENTITY(5625.1603, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.0)), float(5625.1603), bool(true)), max(mix(float(_GLF_FUZZED(8.0)), float(5625.1603), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.0)), float(5625.1603), bool(true)), max(mix(float(_GLF_FUZZED(8.0)), float(5625.1603), bool(true)), mix(float(_GLF_FUZZED(8.0)), float(5625.1603), bool(true))))))), -401.093, 5.4, 8705.7237)), (_GLF_IDENTITY(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)), transpose(transpose(_GLF_FUZZED(mat2(5625.1603, -401.093, 5.4, 8705.7237)))))) - mat2(0.0, 0.0, 0.0, 0.0))))).x))), bool(true))) > injectionSwitch.y) || false)))))))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec3(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) : _GLF_FUZZED(uvec3(11111u, 41956u, 93863u))))))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ! (! (true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! ((false) && true), ! (! (! ((false) && true)))), ! (_GLF_IDENTITY(! (! ((false) && true)), false || (! (! ((false) && true)))))), bool(bvec3(! ((false) && true), false, true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(39.82)), bool(false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true)))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(39.82)), bool(false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) && true))))))))) || false), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (bool((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), true, false)))))), false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), true, false)), true && (bool(bvec3(true, true, false))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, (false) && true)))), ! _GLF_IDENTITY((! (true)), ! (! ((! (true)))))), _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0))), dot(vec2(1.0, 1.0), vec2(0.0, sin(0.0)))), cos(0.0), 1.0)))))))))), false))), false || ((bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))))), true && (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))), false, true, false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))))), false, true, false)))))), false), false, _GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), bool(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), false, false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (! (bool(bvec3(true, true, false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))), true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), bool(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(bvec3(true, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true)))))))), true, false))))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, false))))))) || false), false, true, false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, true && (true)), false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)))))), false), false, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false, true, false)))))), false), false, true)))), true, true)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(mat2x4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(-6.3), _GLF_FUZZED(563.183)), vec3(_GLF_FUZZED(-6784.9138), (vec3(0.0, 1.0, 0.0))[1], (vec3(0.0, 1.0, 0.0))[2]), bvec3(false, true, true)))), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0)), clamp(vec2(mat2x4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0)), vec2(mat2x4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0)), dot(vec2(1.0, 0.0), vec2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 0.0))), 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0)), vec2(mat2x4(vec2(0.0, 0.0), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(log(1.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, tan(0.0), 0.0)))))).x < injectionSwitch.y)) && (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), false || (bool(bvec3(true, true, false))))), false))), false || ((bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (! (false))))))))))))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
