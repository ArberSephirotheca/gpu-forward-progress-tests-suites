#!amber

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x2 _f0;
 bool _f1;
 uint _f2;
 bool _f3;
 vec4 _f4;
 uint workgroup_base;
 bool _f5;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 uint _f1;
 mat2x3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_2 {
 mat2 _f0;
 ivec2 _f1;
 vec2 _f2;
 uvec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 ivec3 _f4;
 mat4x2 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 uvec4 _f1;
 _GLF_struct_5 _f2;
 bvec4 _f3;
 ivec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_0 {
 vec3 _f0;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), true, true))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), true, true))))))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true))) || false)))) && true), true), true))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true), true))), true, true))))))), false)))))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))) && true))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(_GLF_IDENTITY(inversesqrt(-823.775), min(_GLF_IDENTITY(inversesqrt(-823.775), min(inversesqrt(-823.775), inversesqrt(-823.775))), inversesqrt(-823.775)))) : 0.0)), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(-823.775)) : 0.0)), injectionSwitch.x), min(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-626.266) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(-823.775, (-823.775) + log(1.0)))) : 0.0), (false ? _GLF_FUZZED(6019.2763) : _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-626.266) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(-823.775, (-823.775) + log(1.0)))) : 0.0), clamp((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-626.266) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(-823.775, (-823.775) + log(1.0)))) : 0.0), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-626.266) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(-823.775, (-823.775) + log(1.0)))) : 0.0), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-626.266) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(-6573.8489, (-6573.8489) - 0.0) * 7.3))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * 1.0))) > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(_GLF_IDENTITY(-823.775, (-823.775) + log(1.0)))) : 0.0)))))), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(inversesqrt(-823.775)) : 0.0)), injectionSwitch.x))), _GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(inversesqrt(-823.775)) : 0.0, mix(float(_GLF_FUZZED(-0.6)), float(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(inversesqrt(-823.775)) : 0.0), bool(true))))), injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0))))), injectionSwitch.x), max(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-9914.0316)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + _GLF_IDENTITY(_GLF_IDENTITY(0.0, abs(_GLF_ONE(1.0, injectionSwitch.y)) * (0.0)), (false ? _GLF_FUZZED(8485.4494) : 0.0))))))), injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(-8.6, 3.6, 3.6, 3.2).x)), bool(false))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0))), 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0)), max(_GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0)), _GLF_IDENTITY(_GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0)), max(_GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0)), _GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((0.0) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0))))))))), injectionSwitch.x), float(mat3x4(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + 0.0, clamp((0.0) + 0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, min(0.0, 0.0))) + 0.0, ((0.0) + 0.0) / 1.0), (0.0) + 0.0))))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-31.77)), bool(false))), 0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u) | (uvec3(gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(748.482)), bool(false))), 1.0))), gl_WorkGroupID.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(mat4x2(1.0), uvec4(1u), _GLF_struct_5(uvec2(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), uint(uvec2(~ (1u), 1u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), 0u ^ ((_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), uint(uvec2(~ (1u), 1u)))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))), _GLF_struct_1(bvec2(true), ivec4(1)), _GLF_struct_2(mat2(1.0), ivec2(1), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) + vec2(0.0, 0.0)))), uvec3(1u), ivec4(1)), _GLF_struct_3(mat4x3(1.0), 1u, mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-33.38)), bool(_GLF_IDENTITY(false, ! (! (false)))))))), ivec3(1), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, bool(bvec2(false, true))) ? _GLF_FUZZED(sqrt(_GLF_IDENTITY(-45.04, float(vec4(-45.04, 0.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 0.0, 0.0))))))) : 1.0))), _GLF_struct_4(mat3x2(1.0), true, 1u, true, vec4(1.0), workgroup_size * _GLF_struct_replacement_0.workgroup_id, true)), bvec4(true), ivec2(1), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(-7.6)), bool(false)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec4(-9997.9172, 8171.3659, 287.567, 611.423), clamp(vec4(-9997.9172, 8171.3659, 287.567, 611.423), vec4(-9997.9172, 8171.3659, 287.567, 611.423), _GLF_IDENTITY(vec4(-9997.9172, 8171.3659, 287.567, 611.423), mix(vec4(_GLF_FUZZED(float(67059u)), _GLF_FUZZED(-7219.5913), (vec4(-9997.9172, 8171.3659, 287.567, 611.423))[2], (vec4(-9997.9172, 8171.3659, 287.567, 611.423))[3]), vec4((vec4(-9997.9172, 8171.3659, 287.567, 611.423))[0], (vec4(-9997.9172, 8171.3659, 287.567, 611.423))[1], _GLF_FUZZED(553.696), _GLF_FUZZED(-875.685)), bvec4(true, true, false, false))))).x, min(vec4(-9997.9172, 8171.3659, 287.567, 611.423).x, vec4(_GLF_IDENTITY(-9997.9172, clamp(-9997.9172, _GLF_IDENTITY(-9997.9172, mix(float(-9997.9172), float(_GLF_FUZZED(-411.234)), bool(false))), -9997.9172)), 8171.3659, 287.567, 611.423).x)))), float(mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-7.6)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-7.6)), min(float(_GLF_FUZZED(-7.6)), float(_GLF_FUZZED(-7.6)))), float(_GLF_FUZZED(-7.6)))), bool(false))), bool(true))))) - 0.0)));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_6._f2._f6.workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), 0u, 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> _GLF_IDENTITY(0u, 1u * (0u)), ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat2(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))) - mat2(0.0, 0.0, 0.0, 0.0))).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)))), (min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) + 0u)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)))), (min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) + 0u)) + subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u)))), (min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) + 0u)) + subgroup_id * subgroup_size) >> 0u)) << 0u)), max(~ (_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_6._f2._f6.workgroup_base, 1u, 0u, 0u), ~ (~ (uvec4(_GLF_struct_replacement_6._f2._f6.workgroup_base, 1u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(uvec3(13891u, 114184u, 72452u)[2])))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_6._f2._f6.workgroup_base, 1u, 0u, 0u), ~ (~ (uvec4(_GLF_struct_replacement_6._f2._f6.workgroup_base, 1u, 0u, 0u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_6._f2._f6.workgroup_base, 1u, 0u, 0u), ~ (~ (uvec4(_GLF_struct_replacement_6._f2._f6.workgroup_base, 1u, 0u, 0u)))))))), uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))), ((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u)))) / uvec2(1u, 1u)) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0))).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) + subgroup_id * subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) * uvec2(1u, 1u)), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 1.0, 0.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch) * mat2(1.0))), 1.0, 0.0)), (vec2(vec4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 1.0, 0.0, 1.0, 0.0))), vec2(mat4x2((injectionSwitch) * mat2(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), (injectionSwitch) * mat2(1.0))), 1.0, 0.0))) * vec2(1.0, 1.0)))).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))) + subgroup_id * subgroup_size), ~ (~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, min(_GLF_struct_replacement_6._f2._f6.workgroup_base, _GLF_struct_replacement_6._f2._f6.workgroup_base))) / 1u), uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u), min(((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u), ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u))) : _GLF_FUZZED(virtual_gid))) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(mix(-3.7, normalize(4.9), false)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u), max(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u), 0u + (((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), min(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))))))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))), ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_6._f2._f6.workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u), (uvec2(_GLF_struct_replacement_6._f2._f6.workgroup_base, 0u)) ^ uvec2(0u, 0u))) + uvec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)) * vec2(1.0, 1.0))))).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u))))))) + subgroup_id * subgroup_size)))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uint(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (((subgroup_local_id + 1) % subgroup_size))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = 1;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, (4) + 0), 1))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), ((next_virtual_gid)) ^ 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))))) | (next_virtual_gid))], uint(2), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0)))) + vec2(0.0, 0.0)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y))) && true)), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false))), 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false))), 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.9)), bool(false))), 0.0)))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))) && true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0, 0.0))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
