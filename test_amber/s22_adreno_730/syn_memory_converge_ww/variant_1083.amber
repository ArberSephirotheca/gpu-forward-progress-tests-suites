#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), ! (! (bool(bvec4(false, true, false, true))))))))) || false)))
  barrier();
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.x = subgroup_id, (GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.x = subgroup_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u) ^ (GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.x = subgroup_id), (_GLF_IDENTITY(0u, (0u) / 1u) ^ (GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.x = subgroup_id)) ^ 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.x = GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.y = _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))), false, true, false))), true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false)), (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))) || false)), false, true, false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (gl_WorkGroupSize)).x, (gl_WorkGroupSize.x) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.w * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(_GLF_IDENTITY(0u, max(0u, 0u)), 0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), (uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | (uint(uvec2(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) + 0u), (_GLF_IDENTITY(0u, (0u) + 0u)) ^ 0u)) / 1u)))))).w, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) : ~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u)))), ((false ? _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) : ~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))) | ((false ? _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) : ~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) << uvec4(0u, 0u, 0u, 0u))))))))).w) >> 0u) * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.w * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y, (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y) ^ 0u)));
 GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))) || false), true)))))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true))), false)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)), true, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)), true, false)), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), true)), true, false)), true, true)), false))))))), false, false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y = GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(true && (false), true, false)))))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bool(true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base, (GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base) / uvec2(1u, 1u)).x * _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.y, uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size) | (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size))) | (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size)))).y, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.y))), 1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), clamp(_GLF_IDENTITY(1u, (1u) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + 0u), (_GLF_IDENTITY(1u, (1u) + 0u)) | (_GLF_IDENTITY(1u, (1u) + 0u))), _GLF_IDENTITY(1u, (1u) + 0u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w = subgroup_base;
 uint virtual_gid = _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, max(GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y, GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_base.y)) + _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base, min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base)).w, _GLF_IDENTITY(min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ (min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w)))), (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w))) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, _GLF_IDENTITY(min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w), (_GLF_IDENTITY(min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w), (min(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w)) - (0u & 61206u))) - 0u)))), GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w, GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.w)) + GLF_merged4_0_1_17_1_1_13_2_1_14_3_1_14subgroup_local_idsubgroup_sizeworkgroup_baseworkgroup_size.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))))
  return;
 _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, (0u & 14330u) | (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x, 0u ^ (GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y = GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x))));
 atomicStore(write_val, _GLF_IDENTITY(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), clamp(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), _GLF_IDENTITY(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), (uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y)) | 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y, (_GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y, 0u | (GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), uint(uint(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y)))), (true ? _GLF_IDENTITY(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), uint(uint(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y)))) : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), min(uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y), uint(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) / vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))) && true), _GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), false || ((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), bool(bvec4((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(69.23, -4.9)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, sqrt(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(69.23, -4.9)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 0.0, sqrt(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)) + mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))) && true))), (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))) && true)))) || false))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), (false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (false ? _GLF_FUZZED(-951.664) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false || ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))))))))) || false))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * mat2(1.0)).y))))), false)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true))))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), max(vec3(injectionSwitch, sqrt(1.0)), vec3(injectionSwitch, sqrt(1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (mat4x2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) - vec2(0.0, 0.0)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), tan(sin(vec2(0.0, 0.0))) + (vec2(1.0, 0.0))), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).y)), (false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(310.509, 32.98)))) : _GLF_FUZZED(vec2(-109.490, -1.1)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), (vec3(injectionSwitch, sqrt(1.0))) * vec3(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), max(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)))))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))), injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(1.0) * (mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), (vec3(injectionSwitch, sqrt(1.0))) * vec3(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), max(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)))))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))), injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(1.0) * (mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), (vec3(injectionSwitch, sqrt(1.0))) * vec3(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), max(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)))))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))), injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(1.0) * (mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y))), true, false))), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), (false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(734.399))) < injectionSwitch.y))) || false) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(310.509, 32.98)))) : _GLF_FUZZED(vec2(-109.490, -1.1)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) && true))), ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), (vec3(injectionSwitch, sqrt(1.0))) * vec3(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), max(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)))))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))), injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(1.0) * (mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), (vec3(injectionSwitch, sqrt(1.0))) * vec3(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), max(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)))))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))), injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(1.0) * (mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(vec3(injectionSwitch, sqrt(1.0)), (vec3(injectionSwitch, sqrt(1.0))) * vec3(1.0, 1.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(16.49)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0), mat2(1.0) * (mat4x2(vec3(injectionSwitch, sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), _GLF_IDENTITY(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), max(float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)), float(mat4(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)), 1.0, 0.0)))))), 1.0)))), vec3(mat2x4(vec3(_GLF_IDENTITY(mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(1.0, 1.0) * (vec2(vec2(injectionSwitch))))), injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, _GLF_IDENTITY(1.0, log(1.0) + (_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0), mat2(1.0) * (mat4x2(vec3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))))) / vec2(1.0, 1.0)).y))), true, false))), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, abs(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), (false || ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(734.399))) < injectionSwitch.y))) || false) ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? injectionSwitch : _GLF_FUZZED(vec2(310.509, 32.98)))) : _GLF_FUZZED(vec2(-109.490, -1.1)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) && true)))) || false)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0), (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), vec2(mat4x3(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), 0.0, cos(0.0), exp(0.0), round(length(normalize(1.0))), sin(0.0), 1.0, 0.0, exp(0.0), abs(0.0), 1.0)))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat4(vec2(1.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, round(length(normalize(1.0))), tan(length(vec2(0.0, 0.0))), sin(0.0), 1.0)))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))).y)))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y)))), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))), (bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y)))))) && true))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))) || false)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(transpose(transpose(mat2(1.0))))))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-215.496) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(912.627)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))) || false)), true))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
  }
 uint read_val = atomicLoad(write_val, _GLF_IDENTITY(4, max(4, 4)), 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (0) - 0)) + 0), _GLF_IDENTITY(~ (~ (0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), min((0), (0)))), (~ (~ _GLF_IDENTITY((0), min((0), (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(10167) : _GLF_IDENTITY(0, (0) | 0)))))))) * 1), (true ? ~ (~ (0)) : _GLF_FUZZED(-14151)))) ^ _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))), ~ (_GLF_IDENTITY(~ ((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))), int(int(~ ((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))))))))), max((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))), clamp(_GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1)))), _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, clamp(1, 1, 1))))))))))), _GLF_IDENTITY(0, clamp(0, 0, 0)), 0)));
 _GLF_IDENTITY(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.z = read_val, 0u ^ (GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.z = read_val));
 _GLF_IDENTITY(buf[GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y] = uint(subgroupAllEqual(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.z)), _GLF_IDENTITY((buf[GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y] = uint(subgroupAllEqual(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.z))), (_GLF_IDENTITY((buf[GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y] = uint(subgroupAllEqual(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.z))), 1u * ((buf[GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.xy.y] = uint(subgroupAllEqual(GLF_merged3_0_2_47_2_1_8_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidread_valsubgroup_base.z)))))) << 0u) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
