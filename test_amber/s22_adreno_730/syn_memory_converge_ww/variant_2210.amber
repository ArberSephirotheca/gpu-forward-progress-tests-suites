#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 mat2x3 _f0;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_6 {
 mat2 _f0;
 mat2x4 _f1;
 bvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_5 {
 bvec3 _f0;
 uvec4 _f1;
 uint _f2;
 mat2x3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 mat2x3 _f1;
 _GLF_struct_6 _f2;
 bvec2 _f3;
 _GLF_struct_7 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 uint subgroup_base;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 int _f1;
 uint workgroup_id;
} ;

struct _GLF_struct_1 {
 bool _f0;
 float _f1;
 vec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 _GLF_struct_1 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_4 {
 int _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 vec2 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), false), false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, true && (false)))))), (_GLF_IDENTITY((! (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (injectionSwitch.y))) - tan(0.0)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), ! (_GLF_IDENTITY(! ((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), true && (! ((! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))))))) || (injectionSwitch.x > injectionSwitch.y))), false, false, _GLF_IDENTITY(false, true && (false)))))), ((! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))), false, true, true))))))))) && true)) || false)))) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat2(injectionSwitch, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(61.05) : _GLF_IDENTITY(1.0, (1.0) * 1.0))))), 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), max(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0), (mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(49.82))))))) * mat2(1.0))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))) ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), (mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(_GLF_IDENTITY(0.0, float(mat2x4(0.0, sqrt(0.0), 0.0, log(1.0), 0.0, 1.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0))), (vec2(_GLF_IDENTITY(mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0), _GLF_IDENTITY((mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(49.82)))), transpose(transpose(_GLF_IDENTITY((mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(49.82)))), mat2(mat2x3(_GLF_IDENTITY((mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(49.82)))), mat2(mat4x2((mat2(injectionSwitch, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0)) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(49.82)))))))))))))))) * mat2(1.0))))) * vec2(1.0, 1.0))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), false, _GLF_IDENTITY(true, false || (true)))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (false)), false || (false)), true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), ! (! (bool(bvec3(_GLF_DEAD(false), true, true)))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y)))))) && true))) || (false))))), bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), clamp(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((true) && true, ! (! ((true) && true))), false || (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))), vec2(0.0, 0.0) + (mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), clamp(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), clamp(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796))))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.3, -2535.8550)) : injectionSwitch))), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, true && (_GLF_IDENTITY(_GLF_IDENTITY((true) && true, ! (! ((true) && true))), false || (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))))))), (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-10.17)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, abs(1.0) * (injectionSwitch.x)) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || false) ? mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, 1)))], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(degrees(vec2(998.106, 21.74)))), (false ? _GLF_FUZZED(vec2(9450.1172, -6.1)) : _GLF_FUZZED(degrees(degrees(vec2(998.106, 21.74)))))), min(true ? mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(3593.6324) : _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[_GLF_IDENTITY(0, min(0, 0))], (injectionSwitch)[0])))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(230.650)), vec2(_GLF_FUZZED(-345.565), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0), mat2x3(mat4(mat2x3(_GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) - 0.0), 1.0, 0.0, 0.0, 0.0, 1.0)))))))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (false ? _GLF_FUZZED(vec3(-13.57, 7.1, 2.2).b) : (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))), injectionSwitch.x)) < injectionSwitch.y)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(degrees(vec2(998.106, 21.74)))), (false ? _GLF_FUZZED(vec2(9450.1172, -6.1)) : _GLF_FUZZED(degrees(degrees(vec2(998.106, 21.74)))))), true ? mix(vec2(_GLF_FUZZED(-8.3), _GLF_FUZZED(-4163.6796)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))) : _GLF_IDENTITY(_GLF_FUZZED(degrees(degrees(vec2(998.106, 21.74)))), (false ? _GLF_FUZZED(vec2(9450.1172, -6.1)) : _GLF_FUZZED(degrees(degrees(vec2(998.106, 21.74)))))))))))) - abs(tan(vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), (bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))) && true), true))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) | (gl_WorkGroupSize), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), max(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)) << uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u)) | (gl_WorkGroupSize), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))), _GLF_IDENTITY((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u), ((uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))))) | (gl_WorkGroupSize)) * uvec3(1u, 1u, 1u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(mat4x2(-6521.3561, -4472.1451, 3.6, 4.6, -218.816, -8.7, 1.3, 3527.7250)[1])), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(mat4x2(-6521.3561, -4472.1451, 3.6, 4.6, -218.816, -8.7, 1.3, 3527.7250)[1])), mat2(1.0) * ((true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(mat4x2(-6521.3561, -4472.1451, 3.6, 4.6, -218.816, -8.7, 1.3, 3527.7250)[1])))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(mat4x2(-6521.3561, -4472.1451, 3.6, 4.6, -218.816, -8.7, 1.3, 3527.7250)[1])), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0) * (injectionSwitch)))) : _GLF_FUZZED(mat4x2(-6521.3561, -4472.1451, 3.6, 4.6, -218.816, -8.7, 1.3, 3527.7250)[1]))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1, _GLF_struct_2(_GLF_struct_0(uvec3(1u)), ivec3(1), _GLF_struct_1(true, 1.0, _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0))), _GLF_IDENTITY(vec4(mat2x4(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-2.4), (true ? _GLF_FUZZED(-2.4) : _GLF_FUZZED(-107.840))), (vec4(1.0))[_GLF_IDENTITY(_GLF_IDENTITY(2, (2) - 0), (0 ^ 0) + (2))], (vec4(1.0))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec4(mat2x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), (mat2(1.0, 1.0, 0.0, 1.0)) + _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(89.13, -99.58, -82.02, -0.3)) : mat2(0.0, 0.0, 0.0, 0.0))))))), mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))), (vec4(1.0))[2], (vec4(1.0))[_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, 1 * (3)))), 0), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(3, 0 ^ (_GLF_IDENTITY(3, 1 * (3)))), 0)))))]), bvec4(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(7251.6471)), bool(false))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(28.25, 9.8)) : injectionSwitch)).y)) ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(61.02), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)), min(float(vec4(_GLF_FUZZED(61.02), 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)), float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)))))), max(float(_GLF_IDENTITY(_GLF_FUZZED(61.02), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)), min(float(vec4(_GLF_IDENTITY(_GLF_FUZZED(61.02), (true ? _GLF_FUZZED(61.02) : _GLF_FUZZED(floor(-5.2)))), _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0)), float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(61.02), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)), min(float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)), float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)))))), (true ? float(_GLF_IDENTITY(_GLF_FUZZED(61.02), _GLF_IDENTITY(float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)), min(float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)), float(vec4(_GLF_FUZZED(61.02), 0.0, 1.0, 0.0)))))) : _GLF_FUZZED(-8.1))))), bool(false)))), _GLF_ZERO(0.0, injectionSwitch.x))), vec4(_GLF_IDENTITY(mat3x4(vec4(mat2x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), (mat2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-8365.9677) : 1.0)), 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(1.0))[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))), clamp(_GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))), _GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))), _GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))))))), (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(4196.4461))))))))))))), 1.0, 0.0, round(_GLF_IDENTITY(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(61.02)), bool(false))), (false ? _GLF_FUZZED(7.1) : _GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(61.02)), bool(false)))))), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-9549.2282))), 1.0))), 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), exp(0.0)), mat3x4(mat4(mat3x4(vec4(mat2x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), (mat2(1.0, 1.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))), mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(-2.4), max(_GLF_FUZZED(-2.4), _GLF_FUZZED(-2.4))), (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), false), false, true)))), true && (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8205.8911)), bvec2(true, false))), injectionSwitch)).y)), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), float(_GLF_IDENTITY(mat4x3(max(injectionSwitch.y, injectionSwitch.y), length(0.0), 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), (false ? _GLF_FUZZED(mat4x3(-7253.0933, -934.150, 62.96, -973.177, 9049.8756, -92.10, 2985.8206, 8.5, -3839.0079, 987.625, -2.6, -674.167)) : mat4x3(max(injectionSwitch.y, injectionSwitch.y), length(0.0), 1.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))))))) - 0.0))))))))))), 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), mix(float(length(normalize(vec3(1.0, 1.0, 1.0)))), float(_GLF_FUZZED(61.02)), bool(false)))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), float(_GLF_FUZZED(-9.8)), bool(false))))), 0.0, 1.0, 1.0, abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-8.8)), float(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(-896.579)), float(dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), bool(true)))), bool(true)))), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))), 0.0, sqrt(0.0), exp(0.0))))))), (vec4(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), vec4(1.0), vec4(1.0))), _GLF_IDENTITY(mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(1.0))[0], _GLF_FUZZED(-2.4), (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), mat4(1.0) * (mix(_GLF_IDENTITY(vec4(_GLF_FUZZED(-1.3), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat2(vec4(1.0)))), vec4(1.0)))), max((vec4(1.0)), _GLF_IDENTITY((vec4(1.0)), max(_GLF_IDENTITY((vec4(1.0)), mat4(1.0) * ((vec4(1.0)))), (vec4(1.0))))))[_GLF_IDENTITY(1, int(ivec2(1, int(_GLF_ZERO(0.0, injectionSwitch.x)))))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), mix(vec4(_GLF_FUZZED(-3.7), _GLF_FUZZED((-8.4 - 7.7)), _GLF_FUZZED((_GLF_IDENTITY(-5.9 - 828.737, (-5.9 - 828.737) * 1.0))), _GLF_FUZZED(-162.154)), vec4(_GLF_IDENTITY((vec4(_GLF_IDENTITY(_GLF_FUZZED(-1.3), _GLF_IDENTITY(float(mat2(_GLF_FUZZED(-1.3), 1.0, exp(0.0), 1.0)), clamp(float(mat2(_GLF_FUZZED(-1.3), 1.0, exp(0.0), 1.0)), float(mat2(_GLF_FUZZED(-1.3), 1.0, exp(0.0), 1.0)), float(mat2(_GLF_FUZZED(-1.3), 1.0, exp(0.0), 1.0))))), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5))), clamp((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5))), (vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5))), (vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))))[0], (vec4(_GLF_FUZZED(-1.3), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[1], (vec4(_GLF_FUZZED(-1.3), (_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), vec4(1.0))))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[2], _GLF_IDENTITY(_GLF_IDENTITY((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], max((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], (vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3])), max(_GLF_IDENTITY((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], max((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], (vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3])), _GLF_IDENTITY(_GLF_IDENTITY((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], max((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], (vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3])), (_GLF_IDENTITY((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], max((vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3], (vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), 0 ^ (~ (1)))))) | (1))], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)))[3]))) + 0.0)))), bvec4(true, true, true, true))), vec4((vec4(1.0))[0], _GLF_FUZZED(-2.4), (vec4(1.0))[2], (vec4(1.0))[3]), bvec4(true, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 0.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(vec4(-6.9, -6.3, 917.379, 1.1).x), _GLF_FUZZED(-8.4), _GLF_FUZZED(645.015)), bvec3(false, false, false))))), float(float(round(length(_GLF_IDENTITY(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(vec4(-6.9, -6.3, 917.379, 1.1).x), _GLF_FUZZED(-8.4), _GLF_FUZZED(645.015)), bvec3(false, false, false))), (_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), mix(vec3((normalize(vec3(1.0, 1.0, 1.0)))[0], (normalize(vec3(1.0, 1.0, 1.0)))[1], (normalize(vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_FUZZED(vec4(-6.9, -6.3, 917.379, 1.1).x), _GLF_FUZZED(_GLF_IDENTITY(-8.4, 1.0 * (-8.4))), _GLF_FUZZED(645.015)), bvec3(false, false, false)))) + vec3(0.0, 0.0, 0.0))))))), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.7)), float(0.0), bool(true)), max(mix(float(_GLF_FUZZED(5.7)), float(0.0), bool(true)), mix(float(_GLF_FUZZED(5.7)), float(0.0), bool(true))))), injectionSwitch.x)))) * mat4(1.0)), vec4(mat2x4(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-1.3), _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)))[1], ((vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0)))[1]) / 1.0), _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(40957, int(ivec2(40957, 0)))))), 0))], _GLF_FUZZED(-2.4), (vec4(1.0))[2], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), mat4(1.0) * (vec4(1.0)))), ((vec4(1.0))) / vec4(1.0, 1.0, 1.0, 1.0))[_GLF_IDENTITY(3, max(_GLF_IDENTITY(_GLF_IDENTITY(3, 0 + (3)), (3) >> _GLF_IDENTITY(0, ~ (~ (0)))), 3))]), bvec4(true, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, 0.0 + (1.0)))))))), 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-7.7, float(vec4(_GLF_IDENTITY(-7.7, (-7.7) / 1.0), round(length(normalize(exp(0.0)))), 1.0, 0.0))), 6.4, -4.2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-7.7, float(vec4(_GLF_IDENTITY(-7.7, (-7.7) / 1.0), round(length(normalize(exp(0.0)))), 1.0, 0.0))), 6.4, -4.2)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-7.7, float(vec4(_GLF_IDENTITY(-7.7, (-7.7) / 1.0), round(length(normalize(exp(0.0)))), 1.0, 0.0))), 6.4, -4.2)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), min(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (vec3(1.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(_GLF_IDENTITY(-7.7, float(vec4(_GLF_IDENTITY(-7.7, (-7.7) / 1.0), round(length(normalize(exp(0.0)))), 1.0, 0.0))), 6.4, -4.2))))))))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(vec4(mat2x4(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4((vec4(1.0))[0], _GLF_FUZZED(-2.4), (vec4(1.0))[2], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]), bvec4(true, _GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(smoothstep(length(vec3(348.873, 666.544, 215.908)), -6.5, vec3(5.5, -5.2, -262.242)))))))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x))), (vec4(mat2x4(_GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_FUZZED(-1.3), (vec4(1.0))[1], _GLF_FUZZED(8201.6651), _GLF_FUZZED(-9.5)), vec4(_GLF_IDENTITY((vec4(1.0))[0], _GLF_IDENTITY(min((vec4(1.0))[0], (vec4(1.0))[0]), (min((vec4(1.0))[0], (vec4(1.0))[0])) * abs(1.0))), _GLF_FUZZED(-2.4), (vec4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))))[2], _GLF_IDENTITY((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3], max((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3], _GLF_IDENTITY((_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), clamp(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1.5)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))[3], max((vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3], (vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))))[3]))))), bvec4(true, false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, sqrt(1.0), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) < injectionSwitch.y))))), 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x)))) * vec4(1.0, 1.0, 1.0, 1.0))))), bvec3(true)), bvec2(true)), _GLF_struct_3(bvec4(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))), 1, gl_WorkGroupID.x), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0)), (float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 1.0))) - 0.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))), injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f2.workgroup_id, (_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f2.workgroup_id, (_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_4._f2.workgroup_id, _GLF_IDENTITY((_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id), clamp((_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id), (_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id), (_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id))))) | (_GLF_IDENTITY(_GLF_struct_replacement_4._f2.workgroup_id, (_GLF_struct_replacement_4._f2.workgroup_id) | (_GLF_struct_replacement_4._f2.workgroup_id))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_8(_GLF_struct_5(bvec3(true), uvec4(1u), 1u, mat2x3(1.0), mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)))), mat2x3(1.0), _GLF_struct_6(mat2(1.0), mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), _GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))))))))))))))), ivec3(1)), bvec2(true), _GLF_struct_7(mat3(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u, ((_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u) ^ _GLF_IDENTITY(0u, (0u) | 0u)))), (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u), max(1u, 1u))) ^ 0u, ((_GLF_IDENTITY(1u, max(1u, 1u))) ^ 0u) ^ 0u)))) - uvec4(0u, 0u, 0u, 0u)))), subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << 0u), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) * (_GLF_IDENTITY((_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY((false ? _GLF_FUZZED(write_val) : uint(2u)), ((_GLF_IDENTITY(false ? _GLF_FUZZED(write_val) : uint(2u), (false ? _GLF_FUZZED(write_val) : uint(2u)) + 0u))) / 1u)), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, ~ (~ (2u))))) - 0u)))), _GLF_IDENTITY(0u ^ _GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec2(uint(2u), 1u))), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), (clamp(uint(2u), uint(2u), uint(2u))) >> 0u))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))))), 0u + (_GLF_IDENTITY(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))))), uint(_GLF_IDENTITY(uint(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))))), ~ (~ (uint(~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))))))))))))), (~ (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(uint(2u), uint(2u), uint(2u)))))), uint(2u)), 0u ^ (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(clamp(uint(2u), uint(2u), uint(2u)), ~ (~ (clamp(_GLF_IDENTITY(uint(2u), (uint(2u)) | 0u), uint(2u), uint(2u)))))), uint(2u))))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))))) | 0u))), (_GLF_IDENTITY(0u ^ ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))), uint(uint(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u)) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), uint(uvec4(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), 1u, 0u, 1u)))) + 0u), _GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, (2u) + 0u))) - 0u)))), 0u + (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(_GLF_IDENTITY(2u, 0u ^ (2u)))) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u)) : _GLF_FUZZED(num_workgroup)))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((2u), (_GLF_IDENTITY((2u), ((2u)) ^ 0u)) << 0u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))) >> 0u))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u))), uint(2u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) - 0u)), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> _GLF_IDENTITY(0u, 0u ^ (0u)))), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u)))), max(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(2u)) - _GLF_IDENTITY(0u, min(0u, 0u)))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (uint(_GLF_IDENTITY(2u, max(2u, 2u)))) - 0u)))))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), ~ (~ (uint(_GLF_IDENTITY(2u, (2u) >> 0u))))), _GLF_IDENTITY(uint(2u), (uint(2u)) - 0u))))))) / 1u)))))) ^ 0u)))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(_GLF_IDENTITY(2u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u) ^ (_GLF_IDENTITY(2u, _GLF_IDENTITY(uint(uvec3(2u, 1u, 1u)), (uint(uvec3(2u, 1u, 1u))) << 0u))))), uint(2u))), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), ~ (~ (uint(2u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uint(2u), ~ (~ _GLF_IDENTITY((uint(2u)), max(_GLF_IDENTITY((uint(2u)), min((_GLF_IDENTITY(uint(2u), ~ (~ (_GLF_IDENTITY(uint(2u), ~ (_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u))))))), (uint(_GLF_IDENTITY(2u, (2u) - 0u))))), (uint(2u)))))))), ((~ (_GLF_IDENTITY(uint(2u), ~ (~ _GLF_IDENTITY((uint(2u)), max(_GLF_IDENTITY((uint(2u)), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u | (uint(2u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u), uint(uvec2(_GLF_IDENTITY(~ (uint(2u)), (~ (uint(2u))) | 0u), 1u))))))))), (uint(_GLF_IDENTITY(2u, (2u) - 0u))))), (uint(2u))))))))) << 0u)), min(uint(_GLF_IDENTITY(2u, (2u) >> 0u)), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (true ? uint(2u) : _GLF_FUZZED(workgroup_base)))) - 0u))))))) << 0u), 0u))), _GLF_struct_9(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), (false ? _GLF_FUZZED(1.8) : _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), ! (_GLF_IDENTITY(! ((bool(false))), (! ((bool(false)))) || false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))) || (bool(bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / sqrt(vec2(1.0, 1.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(25.22) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.6)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true), false)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true), false))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), ~ (~ (_GLF_IDENTITY(uint(virtual_gid), max(uint(virtual_gid), uint(virtual_gid)))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 & -45886) | (4)), max(_GLF_IDENTITY(4, (0 & -45886) | (4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (0 & -45886) | (4)), 1 * (_GLF_IDENTITY(4, (0 & -45886) | (4)))))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(sqrt(vec2(1.0, 1.0)))).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), clamp((injectionSwitch) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))) / vec2(1.0, 1.0)) / vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(0.0, 0.0) + ((injectionSwitch) / vec2(1.0, 1.0)))))).x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.5, 1541.7661)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))))), ! (! (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.5, 1541.7661)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)))))))), false || ((! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.5, 1541.7661)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), true && ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, ! (! (false))) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), mix(float(0.0 + (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(6.7)), bool(false)))) > injectionSwitch.y)) && true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val)))), (false ? _GLF_FUZZED(num_workgroup) : uint(subgroupAllEqual(_GLF_IDENTITY(read_val, min(read_val, read_val))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (_GLF_IDENTITY(injectionSwitch, sin(vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7)))), clamp((_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7)))), (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.7)))))) * 1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(318.654))))), 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, 1))]))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-995.001)), vec2(_GLF_FUZZED(-0.0), (injectionSwitch)[1]), bvec2(false, true)))[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0))], injectionSwitch[1])))))).y) * 1.0), _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])))[0], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) - 0)], injectionSwitch[1])))[1]), vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(2.7)), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))
      return;
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
