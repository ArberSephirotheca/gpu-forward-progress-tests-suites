#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), true, false))))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)))).x, 0u | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u)))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), bool(bool(! (_GLF_IDENTITY(false, false || (false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7.0) : injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true)))))))))) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true)))))))))), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true))))))))))) && true) && true) || false, ((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true)))))))))), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, ! (! (true))))))), false))))))) && true) && true) || false) && true)))), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(! (false), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec2(bvec2(! (false), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true)))))))))), ((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(! (false), true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false))))), false || (bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)))))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)))))))), bvec2(bvec3(bvec2(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), false || ((true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)))))))), false))), false, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)))))))), bvec2(bvec3(bvec2(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, false, false))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(! (! (true)), false || (_GLF_IDENTITY(! (! (true)), bool(bvec4(_GLF_IDENTITY(! (! (true)), bool(bvec2(_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, false))), false))), true, false, false))))), false, false)))))))), false))), false, false)))))))))))) && true) && true) || false))), true && (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, false || (true))), bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), false || ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))) || false))))), (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size, (subgroup_id * subgroup_size) - 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) || (false), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(9404.9665, -0.3), min(vec2(9404.9665, -0.3), vec2(9404.9665, -0.3)))) : injectionSwitch)).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-5.2)), bool(false)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-26.98, (-26.98) - 0.0), (false ? _GLF_FUZZED(-1.2) : -26.98)), (false ? _GLF_FUZZED(-9.3) : -26.98)))))) * (mat2x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 1.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6148.9698))), 0.0), mat4(1.0) * (mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))) / 1.0), clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), clamp(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6148.9698))), 0.0), mat4(1.0) * (mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))) / 1.0), clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6148.9698))), 0.0), mat4(1.0) * (mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))) / 1.0), clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, float(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6148.9698))), 0.0), mat4(1.0) * (mat2x4(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat4x2(1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0))))) / 1.0), clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))) : _GLF_FUZZED(-5.4))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0)), (false ? _GLF_FUZZED(33.42) : float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0)))))), bool(true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)], clamp((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) << 0)))) >> 0)], _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)], _GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)]) - tan(0.0), clamp(((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)]) - tan(0.0), _GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)]) - tan(0.0), (_GLF_IDENTITY(((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)]), mix(float(_GLF_FUZZED(8.2)), float(((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)])), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) - tan(0.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0))), ((injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) * 1) << 0)))) >> 0)]) - tan(0.0)))), (injectionSwitch)[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) >> 0)])), _GLF_FUZZED(1401.3142)), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), false)))) / vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(8.6), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]))), _GLF_IDENTITY((vec2(_GLF_FUZZED(8.6), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp(_GLF_IDENTITY((vec2(_GLF_FUZZED(8.6), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2x3((vec2(_GLF_FUZZED(8.6), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_FUZZED(8.6), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (vec2(_GLF_FUZZED(8.6), _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.2)), bvec2(true, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, abs(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + 0.0), 1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch.x, abs(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(133.841, -0.1, -95.37, -7.6, -313.378, _GLF_IDENTITY(8.7, min(8.7, 8.7)), 3542.4120, 7.5, 56.18, 5964.8813, -1009.3023, 1.2)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), float(mat2(float(float(injectionSwitch.y)), 0.0, 1.0, 1.0))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + vec2(0.0, 0.0))).x > injectionSwitch.y)))), bool(bool(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), uint(uint(uint(uint(1u)))))) * (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)) + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base)), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), 1u * (workgroup_base + subgroup_base)))), (false ? _GLF_FUZZED(atomicXor(subgroup_base, subgroup_local_id)) : ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), 1u * (workgroup_base + subgroup_base))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) + subgroup_base))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) + (0u | 0u)) + subgroup_base, 1u * (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base))) << 0u)))) >> 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u)), (uint(_GLF_IDENTITY(uvec4((workgroup_base + subgroup_base) ^ (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)))))), 0u, 1u, 0u), (false ? _GLF_FUZZED(uvec4(58769u, 70603u, 37243u, 7861u)) : uvec4((workgroup_base + subgroup_base) ^ (_GLF_IDENTITY(0u, 0u ^ (0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u)))))), 0u, 1u, 0u))))) << 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u)), (uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u))) << 0u)), 1u * (_GLF_IDENTITY((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u)), (uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u))) << 0u)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u)), (uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u))) << 0u)), uint(uint(_GLF_IDENTITY((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u)), (uint(uvec4((workgroup_base + subgroup_base) ^ (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, 5u))), uint(5u))), 0u, 1u, 0u))) << 0u)))))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << 0u) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 0, 0)), ~ (_GLF_IDENTITY(~ (int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 0, 0))), clamp(~ (int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 0, 0))), ~ (int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 0, 0))), ~ (int(ivec3(_GLF_IDENTITY(4, (4) >> 0), 0, 0)))))))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if((subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, ~ (~ (2)))))) - 0)) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, 0.0, cos(0.0))), (true ? float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), cos(0.0))) : _GLF_FUZZED(-355.321)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false)), mix(float(mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false))), float(_GLF_FUZZED(486.163)), bool(false)))))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false))))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false))))).y, 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false))))).y))), false || ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), cos(0.0))), (true ? float(vec4(injectionSwitch.x, 1.0, 0.0, cos(0.0))) : _GLF_FUZZED(-355.321)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-1.7)), bool(false))))).y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false))) || _GLF_IDENTITY(false, true && (false))))) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) && true), true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (_GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(false, true, true)))), bool(bvec2(bool(bool(bool(bvec3(false, true, true)))), false))))))), true))), true, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false))) || false))) || false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))), false))) || false)), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false))) || false))) || false))), false, false)))))), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec4(bvec3(bvec3(false, true, true)), false)))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), false))), true))))), true, true, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), bool(bvec2((! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true))), false || ((! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), true, true))))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)))))) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), true), false, false))))) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), false)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))), true, true, false)))), ! (! (! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true)))), true)))))))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true))))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false))) || false))) || false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)))))) || false), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)))))) || false), ! (! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))))), true, false)), (bool(bvec3(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))))), true, false))) && true))) || false)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (false)), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), true))))))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), bvec3(bvec4(bvec3(false, true, true), true)))))))), true))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false, true))), true)))))), true, true, false))) || false)), (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && true), true))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true))))))))), true, true, false))) || false))) || false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || (bool(bvec4(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))), _GLF_IDENTITY(false, true && (false)) || ((bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(false, true, true)))), true))))), true, true, false))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true, false || (true)) && (true))) || false)))))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true))))))))))), true, true, false))), false || ((bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false)))))) || false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1.8)), bool(false)))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (_GLF_IDENTITY(! (bool(bvec2(true, true))), true && (! (bool(bvec2(true, true)))))))), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true, false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, true && (false)), false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, abs(1.0), abs(1.0), abs(0.0)))), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, 1.0, 1.0, abs(1.0), abs(1.0), abs(0.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 0.0)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, false), true))))), true)))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))), false))))), _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, ! (! (((false)) || false))))))) || false)), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)), bvec2(bvec2(bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false))))), true, true)), false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(false, false || (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-268.357))), float(injectionSwitch.y), bool(true))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))) && true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))) && true, bool(bool((! ((injectionSwitch.x < injectionSwitch.y))) && true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((injectionSwitch.x < injectionSwitch.y))) && true)), bool(bool((! ((injectionSwitch.x < injectionSwitch.y))) && true))), true, false), false))))))))))), true)))), false, true)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false)))), ((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(ldexp(vec2(96.76, -1.7), ivec2(-40559, 92714))))).x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | 0u), (_GLF_IDENTITY(uint(2), (uint(2)) | 0u)) | (_GLF_IDENTITY(uint(2), (uint(2)) | 0u))), _GLF_IDENTITY(uint(2), (uint(2)) | 0u))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-6.2, -8.3))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), false, true, false))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), true, true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
