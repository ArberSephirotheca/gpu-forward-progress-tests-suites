#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))) && true))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), bool(bool(false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) / 1u) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)).x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, clamp((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u))))) / 1u))))), min(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))) << (uvec3(144048u, 128047u, 185907u) & uvec3(0u, 0u, 0u))).x, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), 0u | ((_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x) ^ 0u))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u, max((~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u, (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u))))))), uint(uvec2(~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x))) ^ 0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), ~ (~ ((gl_NumWorkGroups.x))))) | 0u) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), _GLF_IDENTITY(min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u))))))), 0u | (min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), min((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u)), (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, 0u + (_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))))) / 1u))))))))))))), 0u)))) + _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | (0u))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, min((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))) | 0u)))), max((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u)))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, min((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))) | 0u)))), max((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u)))), min(~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, min((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))) | 0u)))), max((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u)))), ~ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, min((gl_NumWorkGroups.x) ^ _GLF_IDENTITY(0u, (0u) * 1u), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)), (0u ^ 0u) + (uint(_GLF_IDENTITY((gl_NumWorkGroups.x) ^ 0u, ((gl_NumWorkGroups.x) ^ 0u) / 1u)))))) | 0u)))), max((gl_NumWorkGroups.x) ^ 0u, (gl_NumWorkGroups.x) ^ 0u)))), (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u))) / 1u)))))))))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))))), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))), bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))), ((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))))) || false), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (_GLF_IDENTITY(false || ((false)), bool(bool(false || ((false)))))))))))), ! (! (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || ((false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false))))))))))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-54.02)), (float(_GLF_FUZZED(-54.02))) + 0.0), (float(_GLF_FUZZED(-54.02))) - 0.0), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) | (0u))), (min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u, (0u) / 1u) ^ (_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec4(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-54.02)), (float(_GLF_FUZZED(-54.02))) + 0.0), (float(_GLF_FUZZED(-54.02))) - 0.0), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)), mix(float(_GLF_FUZZED(-50.11)), float(_GLF_IDENTITY(mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-54.02)), (float(_GLF_FUZZED(-54.02))) + 0.0), (float(_GLF_FUZZED(-54.02))) - 0.0), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true)), mix(float(mix(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-54.02)), (float(_GLF_FUZZED(-54.02))) + 0.0), (float(_GLF_FUZZED(-54.02))) - 0.0), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(true))), float(_GLF_FUZZED(-5110.1286)), bool(false)))), bool(true))))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) | (0u)))) * (0u ^ 1u)))) | (0u)), 0u, 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(123199u, 110742u, 197135u), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(123199u, 110742u, 197135u), uvec3(_GLF_IDENTITY(uvec3(uvec3(123199u, 110742u, 197135u)), (uvec3(uvec3(123199u, 110742u, 197135u))) / uvec3(1u, 1u, 1u))))), uvec3(uvec3((_GLF_IDENTITY(uvec3(123199u, 110742u, 197135u), uvec3(_GLF_IDENTITY(uvec3(uvec3(123199u, 110742u, 197135u)), (uvec3(uvec3(123199u, 110742u, 197135u))) / uvec3(1u, 1u, 1u)))))))) | (_GLF_IDENTITY(uvec3(123199u, 110742u, 197135u), (uvec3(123199u, 110742u, 197135u)) | uvec3(0u, 0u, 0u))))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (0u))) | (0u ^ 0u)))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (0u))))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))), 0u ^ ((0u)))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | (0u)))), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))) | (0u))))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) | _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u + (0u))), 0u ^ ((0u))))) + _GLF_IDENTITY(0u, min(0u, 0u))), 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (0u))))), ~ (~ (uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(52.59)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))))))) | (0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.4 + -9.1))), float(injectionSwitch.x), bool(true)))), _GLF_IDENTITY(float(mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.4 + -9.1))), float(injectionSwitch.x), bool(true)))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, log(1.0))), clamp(float(mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.4 + -9.1))), float(injectionSwitch.x), bool(true)))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, log(1.0))), float(mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.4 + -9.1))), float(injectionSwitch.x), bool(true)))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, log(1.0))), float(mat4x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((3.4 + -9.1))), float(injectionSwitch.x), bool(true)))), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0, 1.0, 0.0, length(log(vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0, log(1.0)))))))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u)), ((_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u))) >> (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) | (uint(6u)))))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(8.2) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(17.36))))), injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u))), (uvec2(uvec2(uvec2(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u)))) << uvec2(0u, 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u), _GLF_IDENTITY(uvec2(uvec2(uvec2(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u))), (uvec2(uvec2(uvec2(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), 1u)))) << uvec2(0u, 0u))))) + 0u)), uint(uint(uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) * 1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (0u)))))))) | (_GLF_IDENTITY(0u, max(0u, 0u)))), 0u, 0u)))))) | (gl_WorkGroupID)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))[2])), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))), min((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u))))) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) >> 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY((false ? _GLF_FUZZED(bitfieldReverse(uvec3(14788u, 162347u, 41336u))) : (gl_WorkGroupID)), ((false ? _GLF_FUZZED(bitfieldReverse(uvec3(14788u, 162347u, 41336u))) : (gl_WorkGroupID))) | ((false ? _GLF_FUZZED(bitfieldReverse(uvec3(14788u, 162347u, 41336u))) : (gl_WorkGroupID))))) / uvec3(1u, 1u, 1u)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), false)))))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(packSnorm4x8(vec4(659.609, -58.12, -4.6, -1343.0654))) : subgroup_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.7) : injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 1.0, 0.0), (true ? vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), 1.0, 0.0) : _GLF_FUZZED((vec3(-1.6, 9921.0867, -0.6) - vec3(7.0, 6.6, 6.7))))), vec3(mat2x4(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4198.7526)), bool(false))), 0.0)))))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), clamp(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(679.065, 637.697)) : _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)))).x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(679.065, 637.697)) : _GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)))).x)) - log(1.0))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))) << _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((_GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id)))) ^ 0u)), min(((subgroup_id)), _GLF_IDENTITY(((subgroup_id)), (_GLF_IDENTITY(((subgroup_id)), (((subgroup_id))) >> 0u)) | (((subgroup_id))))))) - 0u)) | (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), _GLF_IDENTITY(min(uvec3(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), (min(uvec3(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u), uvec3(subgroup_local_id, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_base))), 0u, 1u))))), subgroup_local_id))) / _GLF_IDENTITY(1u, (1u) ^ 0u))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 0u ^ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)), 1u * ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))) * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) ^ 0u) / 1u))) | (_GLF_IDENTITY(1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), (true ? (subgroup_local_id) : _GLF_FUZZED(workgroup_base))) / 1u)), clamp(1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u)), 1u * (_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, ~ (~ ((subgroup_local_id) / 1u))), min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u))))), clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u)), 1u * (_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, ~ (~ ((subgroup_local_id) / 1u))), min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u)), 1u * (_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, ~ (~ ((subgroup_local_id) / 1u))), min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u))))), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u)), 1u * (_GLF_IDENTITY((subgroup_local_id) / 1u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) / 1u, ~ (~ ((subgroup_local_id) / 1u))), min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u, ((_GLF_IDENTITY((subgroup_local_id) / 1u, min((subgroup_local_id) / 1u, (subgroup_local_id) / 1u))) << 0u) * 1u)))))))), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), 1u * (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) ^ 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) ^ 0u)), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id))) ^ 0u))))))) / 1u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))), false), bvec2(bvec4(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, true))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false)))), false), true, true)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), true))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), mix(float(_GLF_FUZZED(-547.630)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))))))))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), mix(float(_GLF_FUZZED(-547.630)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), true && (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0), mix(float(_GLF_FUZZED(-547.630)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), ! (! (bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))))))))))))))))), true)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), uint(uvec3(subgroup_base, 0u, 1u))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), uint(uvec4(~ (subgroup_local_id + 1), 1u, 1u, 0u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, min((1) - 0, _GLF_IDENTITY((1) - 0, clamp((1) - 0, (1) - 0, (1) - 0)))))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u)))), (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) | (0))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, 1 * ((1) - 0))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), clamp(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec2(_GLF_IDENTITY(1, (1) - 0), 1))))), 0u + (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), 1 * ((1))) - 0))), ~ (~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ((1) - 0) | ((1) - 0))), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (1) - 0))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))) - 0)) - 0u)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))), clamp(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (1) - 0))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))) - 0)) - 0u)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))), max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (1) - 0))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))) - 0)) - 0u)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (1) - 0))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))) - 0)) - 0u)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))), ~ (~ (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (1) - 0))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1))) - 0)) - 0u)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))))))))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))) * (1u & 1u))) << 0u))), subgroup_local_id + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-98903) : 0)))))), (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))) | (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(bitCount(workgroup_id))))) - 0), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ((1) - 0) / 1)), (_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (true ? subgroup_local_id + _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED((uvec2(135448u, 103085u) , atomicAdd(workgroup_size, virtual_gid)))))))), (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ~ (~ ((1) - 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) + (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))) | (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))))), (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) - 0), (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) | (_GLF_IDENTITY((0) | 0, ((0) | 0) << 0))))) + 0))) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, int(ivec2((1) - 0, (0 >> _GLF_IDENTITY(int(0), int(0))))))), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(int(38612u))))) - 0), 0u + (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(floatBitsToInt(inversesqrt(-589.883))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), 0u, 0u)))))) | (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))), (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_base) : subgroup_local_id)))) + _GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u) + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))), ((~ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))), 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0))))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))) | 0u)))))) | (max(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), int(ivec4(_GLF_IDENTITY(1, (1) - 0), 1, 1, 0))), (subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)) - 0u), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY((1), (false ? _GLF_FUZZED(58783) : (1))) - 0), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) - 0), 0u + (subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(5), int(5))) | (1)), (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, 1, 0, 1)), (_GLF_IDENTITY(int(ivec4(1, 1, 0, 1)), ~ (~ (int(ivec4(1, 1, 0, 1)))))) / 1), (int(ivec4(1, 1, 0, 1))) * 1))) - 0))), subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)))))))) / 1u)) + 0u)))) >> 0u), max(~ _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1)))), (((subgroup_local_id + 1))) - 0u), ~ ((subgroup_local_id + 1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), true, false)), (bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))), true, false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), 0u | (_GLF_IDENTITY(uint(1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(1, 0 ^ (1)))), (_GLF_IDENTITY(~ (uint(1)), uint(uvec4(_GLF_IDENTITY(~ (uint(1)), uint(uint(~ (uint(1))))), 0u, 1u, 1u)))) | (_GLF_IDENTITY(~ (uint(1)), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(1), ~ (~ (uint(1)))))), (~ (~ (uint(1)))) << 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), uint(uvec4(~ (uint(1)), 0u, 1u, 1u)))) | (~ (uint(1)))))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), uint(uvec4(~ (uint(1)), 0u, 1u, 1u)))) | (~ (uint(1)))))), uint(uint(~ ((_GLF_IDENTITY(~ (uint(1)), (_GLF_IDENTITY(~ (uint(1)), uint(uvec4(~ (uint(1)), 0u, 1u, 1u)))) | (~ (uint(1)))))))))) - 0u)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) + 0), 64, 4);
 if((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id % _GLF_IDENTITY(2, (2) - _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - length(sin(0.0))))))))), max(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, int(ivec3(2, 1, 0)))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)))), vec2(1.0, 1.0) * (vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), max(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), max(mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))))))) / vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0))))))).x))), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), (false ? _GLF_FUZZED(47861) : _GLF_IDENTITY((2), (false ? _GLF_FUZZED(-8254) : (2))))) - _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-64899, min(-64899, -64899))) : int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0))))))))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)))), ~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), 0u))), (subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u))))))))))), 0u), (uvec2(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u + ((subgroup_local_id % _GLF_IDENTITY(2, (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0u, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(0u, (0u) << 0u), ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(0u, (0u) << 0u)) | ((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | 0), (2) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY(0u, (0u) << 0u)))))), 0u)) ^ uvec2(0u, 0u))))) == 0)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y : _GLF_FUZZED(-8.8), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y : _GLF_FUZZED(-8.8)) / 1.0)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     subgroupAll(true);
    }
   else
    {
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)), 0 | (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)), 0 | (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2))))))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)), 0 | (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, ~ (~ (2))), 2)))))))))))))), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
