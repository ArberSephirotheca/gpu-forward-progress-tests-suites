#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), true, false, false)))) || false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), mix(vec2(_GLF_FUZZED(-826.340), (vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[1]), vec2((vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))[0], _GLF_FUZZED(-991.197)), bvec2(true, false))), _GLF_IDENTITY(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), min(vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y))), max(_GLF_IDENTITY(vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), mat2(1.0) * (vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))), vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))))) : _GLF_FUZZED(uintBitsToFloat(uvec2(162741u, 95432u))))).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, uint(uvec3(gl_WorkGroupID.x, 1u, 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-273.781) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), 1.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), false, false, false))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))), workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(34.50), _GLF_FUZZED(230.109)), bvec2(false, false))).y) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! _GLF_IDENTITY((bool(false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bool((bool(false))))), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bool((bool(false))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY((bool(false)), bool(bool((bool(false))))), false, true, true))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bvec2(! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), subgroup_base)), (true ? subgroup_base : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(atomicXor(subgroup_local_id, subgroup_base)) : subgroup_base))) / 1u)) - 0u) + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) - 0u, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(-- workgroup_id, (-- workgroup_id) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), (-- workgroup_id) - 0u))) : (subgroup_base) - 0u))) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))), (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base))))) | (_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))), ((subgroup_local_id)) | ((subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))), ((subgroup_local_id) | (subgroup_local_id)) | _GLF_IDENTITY(0u, (0u) + 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) >> 0u))))) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u + ((subgroup_local_id))), _GLF_IDENTITY(((subgroup_local_id)) | ((subgroup_local_id)), min(((subgroup_local_id)) | ((subgroup_local_id)), ((subgroup_local_id)) | ((subgroup_local_id))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) | _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) + 0u, max((0u) + 0u, _GLF_IDENTITY((0u) + 0u, 0u | (_GLF_IDENTITY((0u) + 0u, min((0u) + 0u, (0u) + 0u))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_size))))) >> 0u)), (true ? _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_size))))) >> 0u)), ((false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(subgroup_size))))) >> 0u))) >> 0u) : _GLF_FUZZED(subgroup_local_id)))))) + 1) % subgroup_size) << _GLF_IDENTITY(0u, min(0u, 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(false, false, true))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) / vec2(1.0, 1.0))).x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY((false), true && ((false)))) && true), ! (! ((false))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, (false) || false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) >> (77476u & (0u | 0u))), max(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))), _GLF_IDENTITY(((~ (virtual_gid))) >> 0u, clamp(((~ (virtual_gid))) >> 0u, (_GLF_IDENTITY((~ (virtual_gid)), 0u | ((~ (virtual_gid))))) >> 0u, ((~ (virtual_gid))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)))), uint(uvec3((~ (virtual_gid)), 0u, 1u)))), min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))) >> (77476u & (0u | 0u))), max(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))), _GLF_IDENTITY(((~ (virtual_gid))) >> 0u, clamp(((~ (virtual_gid))) >> 0u, (_GLF_IDENTITY((~ (virtual_gid)), 0u | ((~ (virtual_gid))))) >> 0u, ((~ (virtual_gid))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), ~ (~ (min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))) | 0u), min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))), min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (_GLF_IDENTITY(virtual_gid, ~ (~ _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), uint(uvec2((virtual_gid), 1u)))) ^ 0u)))) >> (77476u & (0u | 0u))), max(_GLF_IDENTITY(virtual_gid, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY(((~ (virtual_gid))) >> 0u, clamp(((~ (virtual_gid))) >> 0u, (_GLF_IDENTITY((~ (virtual_gid)), 0u | ((~ _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), (virtual_gid))))))) >> 0u, ((~ (virtual_gid))) >> 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(((~ (virtual_gid))) >> 0u, clamp(((~ (virtual_gid))) >> 0u, (_GLF_IDENTITY((~ (virtual_gid)), 0u | ((~ _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), (virtual_gid))))))) >> 0u, ((~ (virtual_gid))) >> 0u)), 0u ^ (_GLF_IDENTITY(((~ (virtual_gid))) >> 0u, clamp(((~ (virtual_gid))) >> 0u, (_GLF_IDENTITY((~ (virtual_gid)), 0u | ((~ _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), (virtual_gid))))))) >> 0u, ((~ (virtual_gid))) >> 0u)))), _GLF_IDENTITY(((~ (virtual_gid))) >> 0u, clamp(((~ (virtual_gid))) >> 0u, (_GLF_IDENTITY((~ (virtual_gid)), 0u | ((~ _GLF_IDENTITY((virtual_gid), min(_GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))))), (virtual_gid))))))) >> 0u, ((~ (virtual_gid))) >> 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), min(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(1), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (-49496 & 0) | (1))), min(uint(1), uint(1))))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) + 0) : _GLF_FUZZED(-99330)))), _GLF_IDENTITY((uint(1)), ~ _GLF_IDENTITY((~ ((uint(1)))), max(_GLF_IDENTITY((~ ((uint(1)))), ((~ ((uint(1))))) | 0u), (~ ((uint(1))))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))) >> (0 ^ 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))), clamp(~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) >> 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) >> 0)), max(~ (_GLF_IDENTITY(1, (1) >> 0)), ~ (_GLF_IDENTITY(1, (1) >> 0))))) >> 0))), 1)))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1))) >> 0, 0 | ((1) >> 0)))))), 1)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))))))) | ((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (_GLF_IDENTITY(1u | 1u, (1u | 1u) >> 0u))), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), clamp((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), (true ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)) : _GLF_FUZZED(-27036))))))), 0u, (1u | 1u)))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, min(0, 0)))))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ _GLF_IDENTITY((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ((~ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))) << 0)))))) - 0u), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1), (min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), (1) >> 0)))), 1)) / 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), 1)), max(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), 1))))) + 0))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0)))))), 1)))))), 0u, (_GLF_IDENTITY(1u, (1u) ^ 0u) | 1u)))))))))), ~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))))))))), (true ? _GLF_IDENTITY(max(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) + 0) : _GLF_FUZZED(-99330)))), _GLF_IDENTITY((uint(1)), ~ (~ ((uint(1))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))) >> (0 ^ 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (1) >> 0)))), 1)))))))), clamp(~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, 0, 0)), int(ivec4(int(ivec3(1, 0, 0)), 0, 0, 1)))), 1))) >> 0, 0 | ((1) >> 0)))))), 1)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), clamp((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, min(0, 0)))))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ _GLF_IDENTITY((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) - 0))))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))))))) - 0u), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) >> 0))), ~ (~ (~ (~ (_GLF_IDENTITY(1, (1) >> 0))))))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1), (min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)) / 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0)))))), 1)))))), 0u, (1u | 1u)))))))))), ~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))))))))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << 0u), 0u)) ^ (max(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) << 0u)) * 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) + 0) : _GLF_FUZZED(-99330)))), _GLF_IDENTITY((uint(1)), ~ (~ ((uint(1))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))) >> (0 ^ 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), clamp((1), (1), (1)))) | ((1))) >> 0)))), 1)))))))), clamp(~ (_GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(32964))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(32964))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(32964))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))), 0u + (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), clamp(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))), (true ? _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))) : _GLF_FUZZED(32964))), _GLF_IDENTITY(1, (1) << (0 << _GLF_IDENTITY(int(7), int(7)))))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec3(1, 0, 0))), 1))) >> 0, 0 | ((1) >> 0)))))), 1)))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), clamp((_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, (1) >> 0))), (~ (~ (_GLF_IDENTITY(1, (1) >> 0)))) >> 0)), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, min(0, 0)))))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)), max(uvec3(~ _GLF_IDENTITY((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ((~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) << 0), ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))))))) - 0u), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), 0u, (1u | 1u)))))))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))), _GLF_IDENTITY(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0)), (int(ivec3(_GLF_IDENTITY(1, (1) >> 0), 0, 0))) | 0))))), 1)))))), uint(_GLF_IDENTITY(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1), (min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)) / 1)))))), 0u, (1u | 1u)), max(uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(1, (1) >> 0)))))), 1)))))), 0u, (1u | 1u)), uvec3(~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, clamp(0, 0, 0)))))), 1)))))), 0u, (1u | 1u)))))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))))))), min(_GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1))))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), clamp(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))), ~ (~ ((uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))), 1)))))))))))))))))) : _GLF_FUZZED(subgroup_local_id)))), 4, _GLF_IDENTITY(64, (64) * 1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, ~ (~ (4))), 4)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(36.66)), float(injectionSwitch.x), bool(true))), 1.0, determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), (_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-587.284, 208.785)) : injectionSwitch)).x, mix(float(_GLF_FUZZED(36.66)), float(injectionSwitch.x), bool(true))), 1.0, determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)), (true ? float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(36.66)), float(injectionSwitch.x), bool(true))), 1.0, determinant(mat2(0.0, sqrt(0.0), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(90.86)))) - 0.0)))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 64, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) | (4)))), 4)), (4) | (4)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-49.84)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) | 0u), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), (4))) + 0, clamp(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) / (0 | 1))), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), (int(_GLF_IDENTITY(int((4)), (int((4))) >> 0))) / 1)), _GLF_IDENTITY(max(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int(_GLF_IDENTITY((4), 0 ^ ((4))))), (_GLF_IDENTITY(int(int((4))), (int(int((4)))) | (int(int((4)))))) / 1)), _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), (int(int((4)))) / 1))), ~ (~ (max(_GLF_IDENTITY((4), _GLF_IDENTITY(int(int((4))), (int(_GLF_IDENTITY(int((4)), 0 ^ (int((_GLF_IDENTITY(4, 0 | (4)))))))) / 1)), _GLF_IDENTITY((4), _GLF_IDENTITY(int(int((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | (min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED((5337 | 82553)) : 4)), 4))))), clamp(~ (_GLF_IDENTITY(4, min(4, 4))), ~ (_GLF_IDENTITY(4, min(4, 4))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), 1 * (min(4, 4))))), clamp(~ (_GLF_IDENTITY(4, min(4, 4))), ~ _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), 1 * ((_GLF_IDENTITY(4, min(4, 4))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(4, 4))), 0 + (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, min(4, 4))), min(~ (_GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (_GLF_IDENTITY(min(4, 4), 0 + (min(4, 4)))) - 0))), ~ (_GLF_IDENTITY(4, min(4, 4)))))))))))))) | (4))))), (int(int((4)))) / 1))))))))))) + 0, _GLF_IDENTITY((4), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), ~ (~ ((4)))), (false ? _GLF_FUZZED(-58582) : _GLF_IDENTITY((4), ((4)) / 1))))) + 0, _GLF_IDENTITY(_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(findMSB(97167)) : (4))))), (_GLF_IDENTITY(_GLF_IDENTITY((4), min((_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, _GLF_IDENTITY(0, (0) | (0)) | (4))))), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(findMSB(97167)) : (4))))), 0 | (_GLF_IDENTITY((4), min((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(findMSB(97167)) : (4)))))))) >> 0) + 0))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))) && true) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))) && true), true && _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, 4.5)) : injectionSwitch)).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, 4.5)) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, 4.5)) : injectionSwitch)).y) || false)))))), false))))), bool(bvec3(bool(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(6.6))) > injectionSwitch.y)), false), bvec3(bvec3(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false), bvec3(bvec3(bvec3((false), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6726.3063), _GLF_FUZZED(23.31)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y) && true)), false))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))) || false))))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(vec3(mat4(vec3(injectionSwitch, log(_GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0)), vec3(mat3x4(vec3(mat4(vec3(injectionSwitch, log(_GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))[0])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), min(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), max(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))))))), vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)), bvec2(false, false))).y))), _GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)), bvec2(false, false))).y)))) || false, true && (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)))), bvec2(false, false))).y)))), false || (_GLF_IDENTITY((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)))), bvec2(false, false))).y)))), ((bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))))), _GLF_IDENTITY(vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(13.28), _GLF_FUZZED(62.50)))), bvec2(false, false))).y))))) || false))) || false))))), false)))), true))))))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
