#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, false || (true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false)))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.3, 270.673)) : injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, 0.0, 0.0))) > injectionSwitch.y))), false, false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (0u & 183182u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x)))), clamp(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x))) | (gl_WorkGroupID.x), 0u | ((_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x))) | (gl_WorkGroupID.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : gl_WorkGroupID.x))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : gl_WorkGroupID.x))), clamp((_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : gl_WorkGroupID.x))), (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : gl_WorkGroupID.x))), (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) : gl_WorkGroupID.x)))))) - 0u) | (_GLF_IDENTITY(gl_WorkGroupID.x, (true ? gl_WorkGroupID.x : _GLF_FUZZED(num_workgroup))))) / 1u)), gl_WorkGroupID.x))));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), ~ (~ (clamp(workgroup_base, workgroup_base, workgroup_base)))))))), ((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(clamp(workgroup_base, workgroup_base, workgroup_base), ~ (~ (clamp(workgroup_base, workgroup_base, workgroup_base))))))))) - 0u)), ~ (~ (_GLF_FUZZED((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_base) : workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base) | 0u)))) << 0u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base))), subgroup_local_id))) >> 0u), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)) + subgroup_base + subgroup_local_id) * 1u), (false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), ~ (~ (_GLF_FUZZED((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) << 0u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base))), subgroup_local_id))) >> 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) << 0u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base))), subgroup_local_id))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) << 0u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base))), subgroup_local_id))) >> 0u), 0u | (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) << 0u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base))), subgroup_local_id))) >> 0u))), _GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base))) << 0u)))) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))))) : _GLF_FUZZED(workgroup_base))), subgroup_local_id))) >> 0u)))))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)) + subgroup_base + subgroup_local_id) * 1u)) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false))), true, _GLF_IDENTITY(true, ! (! (true)))))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size), min((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> 0u) % subgroup_size)))) - 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), 0u ^ (uint(_GLF_IDENTITY(1, (1) >> 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(4u, clamp(4u, 4u, 4u))))), uint(4u)))), (false ? _GLF_FUZZED(uvec2(34371u, 36103u)) : uvec2(uint(_GLF_IDENTITY(1, (1) | 0)), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), 0u | (_GLF_IDENTITY(uint(4u), uint(4u)))))))))), 0u ^ (uint(_GLF_IDENTITY(1, (1) >> 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (false ? _GLF_FUZZED(uvec2(34371u, 36103u)) : uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) >> 0)), (uint(_GLF_IDENTITY(1, (1) >> 0))) / 1u)))), (false ? _GLF_FUZZED(next_virtual_gid) : (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, min(1, 1)) : _GLF_FUZZED(25026)))), uint(_GLF_IDENTITY(uvec2(uint(1), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u * ((0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))) ^ 0u)), (false ? _GLF_FUZZED(uvec2(34371u, 36103u)) : uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), 0u ^ (uint(_GLF_IDENTITY(1, (1) >> 0))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(34371u, _GLF_IDENTITY(36103u, ~ (~ (36103u))))) : uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), uvec2(0u, 0u) + (false ? _GLF_FUZZED(uvec2(34371u, _GLF_IDENTITY(36103u, ~ (~ (36103u))))) : uvec2(uint(1), (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))), 0u ^ (uint(_GLF_IDENTITY(1, (1) >> 0))))))) - 0u), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2) == _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | (0)), (0) / 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((subgroup_local_id % 2) == _GLF_IDENTITY(0, 0 ^ (0))))), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2) == 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((subgroup_local_id % 2) == 0)))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, uint(uvec2(subgroup_local_id % 2, 1u))), clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))) == 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) ^ 0u) % 2) == 0)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (uint(2)) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) - 0u)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(180.854, 2.6, -659.662, 6.6)) : mat2(1.0))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x) + 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(9.1)), vec2(_GLF_FUZZED(-937.257), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(180.854, 2.6, -659.662, 6.6)) : mat2(1.0))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(180.854, 2.6, -659.662, 6.6)) : mat2(1.0)))))) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x) + 0.0) > injectionSwitch.y) || false)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))), true, false, true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), false || (false)));
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), 0)))) | (4)))), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, min((4) - 0, (4) - 0))), 4, 4))), max(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, (4) - 0))))))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), ((_GLF_IDENTITY(int(4), ~ (~ (int(_GLF_IDENTITY(4, (4) >> 0))))))) ^ 0))))) * 1)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-85895), int(ivec3(_GLF_FUZZED(-85895), 1, 0))) : _GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) + 0), (4) - 0), 4, 4))), max(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), ~ (~ (int(4)))))), (~ (~ _GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(int(4), ~ (~ (int(4))))), ((_GLF_IDENTITY(int(4), ~ (~ (int(4)))))) ^ 0))))) * 1))))))))) << _GLF_IDENTITY(0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-690.969) : injectionSwitch.x)))))) ^ (0))), _GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) - 0), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) - 0)), _GLF_IDENTITY(((_GLF_IDENTITY(64, (64) - 0))), max(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(64, (64) - 0))), (true ? ((_GLF_IDENTITY(64, (64) - 0))) : _GLF_FUZZED(ivec2(-6622, 14140)[1]))), max(((_GLF_IDENTITY(64, (64) - 0))), ((_GLF_IDENTITY(64, (64) - 0))))), _GLF_IDENTITY(((_GLF_IDENTITY(64, (64) - 0))), clamp(((_GLF_IDENTITY(64, (64) - 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) - 0), ~ (~ (_GLF_IDENTITY(64, (64) - 0)))), _GLF_IDENTITY(64, (64) - 0))))), ((_GLF_IDENTITY(64, (64) - 0))))))) | ((_GLF_IDENTITY(64, (64) - _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0)), 0)))))) - 0), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), mix(float(_GLF_FUZZED(-76.10)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), vec2(mat4x3(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0)))).y, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), vec2(mat4x3(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0)))).y, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), vec2(mat4x3(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), vec2(mat4x3(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), vec2(mat4x3(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 1.0), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0)), (mat4(1.0) * (vec4(injectionSwitch, 0.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0)))).y))))), bool(true))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0), 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 1.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), bool(bvec2(bool(true), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_IDENTITY(min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), clamp(min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), min(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))), float(_GLF_FUZZED((-1.9 + -6.1))), bool(false)))), 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(1.0))))), 1.0, determinant(mat3(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), min(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, abs(0.0), 1.0))))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, mix(float(_GLF_FUZZED(8.2)), float(injectionSwitch.y), bool(true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))), min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))), 1.0 * ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))))) - _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0 + (determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(6.8)), bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), false || (! (bool(bool(true)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) && (_GLF_IDENTITY(false, (false) && true))))), mix(float(_GLF_FUZZED(-37.09)), float(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), min(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), _GLF_IDENTITY(tan(0.0), max(tan(0.0), tan(0.0))), 0.0), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, max(2.4, 2.4))))))))))), _GLF_IDENTITY(float(_GLF_FUZZED(6.8)), min(float(_GLF_FUZZED(6.8)), float(_GLF_FUZZED(6.8)))), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (true ? vec4(injectionSwitch.y, exp(0.0), tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))), float(_GLF_IDENTITY(_GLF_FUZZED(6.8), mix(float(_GLF_FUZZED(6.8)), float(_GLF_FUZZED(-8.1)), bool(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))))), min(mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec2(1.0, 0.0)), dot(vec2(0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))), vec2(1.0, 0.0))), 0.0, 1.0))).y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), float(_GLF_FUZZED(6.8)), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(uintBitsToFloat(7035u)))), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))), float(_GLF_FUZZED(6.8)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false))))), bool(true)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - length(sin(0.0))), max(injectionSwitch.y, injectionSwitch.y)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)), (vec2(mat3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0))) - tan(vec2(0.0, 0.0)))))), min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(495.843), _GLF_FUZZED(94.68)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))), clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y, injectionSwitch.y))) - determinant(mat4(0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.9)), bool(false))), _GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 0.0))) * (1.0)))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0)))), _GLF_IDENTITY(float(_GLF_FUZZED(6.8)), 0.0 + (_GLF_IDENTITY(float(_GLF_FUZZED(6.8)), float(_GLF_IDENTITY(mat4x3(float(_GLF_FUZZED(6.8)), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(float(_GLF_FUZZED(6.8)), 1.0, 1.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))), bool(_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? _GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), (true ? true ? injectionSwitch : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(_GLF_IDENTITY((- vec2(-684.669, 5.1)), max((- vec2(-684.669, 5.1)), (- vec2(-684.669, 5.1))))))) : _GLF_FUZZED(vec3(-56.20, 8.0, -4.2).gg))))).y)) && (_GLF_IDENTITY(false, (false) && true))))), mix(float(_GLF_FUZZED(-37.09)), float(_GLF_IDENTITY(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), min(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))) ? vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, _GLF_IDENTITY(334.248, (false ? _GLF_FUZZED(547.603) : 334.248)), 907.279, _GLF_IDENTITY(2.4, min(2.4, _GLF_IDENTITY(2.4, max(2.4, 2.4))))))))))), float(_GLF_IDENTITY(_GLF_FUZZED(6.8), _GLF_IDENTITY(min(_GLF_FUZZED(6.8), _GLF_FUZZED(6.8)), (min(_GLF_FUZZED(6.8), _GLF_FUZZED(6.8))) - 0.0))), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), bool(bvec3(bool(bvec4(false, false, false, true)), false, false))))))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(6.8, (true ? 6.8 : _GLF_FUZZED(8730.4345))))), bool(false)))), max(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (true ? vec4(injectionSwitch.y, exp(0.0), tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4)))), clamp(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (true ? vec4(injectionSwitch.y, exp(0.0), tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4)))), _GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (true ? vec4(injectionSwitch.y, exp(0.0), tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4)))), _GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (true ? vec4(injectionSwitch.y, exp(0.0), tan(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))))), float(_GLF_FUZZED(6.8)), _GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))))), min(mix(float(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), float(_GLF_FUZZED(6.8)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(3.4)), float(_GLF_IDENTITY(exp(0.0), float(float(exp(0.0))))), bool(true))), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))), float(_GLF_FUZZED(6.8)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(3.4)), float(_GLF_IDENTITY(exp(0.0), float(float(exp(0.0))))), bool(true))), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))), float(_GLF_FUZZED(6.8)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(3.4)), float(_GLF_IDENTITY(exp(0.0), float(float(exp(0.0))))), bool(true))), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))), float(_GLF_FUZZED(6.8)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), tan(0.0), 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? vec4(injectionSwitch.y, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(3.4)), float(_GLF_IDENTITY(exp(0.0), float(float(exp(0.0))))), bool(true))), tan(0.0), 0.0) : _GLF_FUZZED(vec4(405.836, 334.248, 907.279, 2.4))))))), float(_GLF_FUZZED(6.8)), bool(false)), min(mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false)))))))), mix(float(injectionSwitch.y), float(_GLF_FUZZED(6.8)), bool(false))))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
