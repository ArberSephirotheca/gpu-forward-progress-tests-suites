#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false))))))
        break;
       for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   do
    {
     return;
     if(_GLF_DEAD(false))
      continue;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true)))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.1) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(931.891, -88.23)) : injectionSwitch)).y)))))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.8)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0 + (injectionSwitch.y)))))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((gl_NumWorkGroups), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))), ((~ (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) << uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u))))) >> uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))) && true))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) | (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, (true) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, true)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_IDENTITY(true, true && (true)))))) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) && true), false, true, false))) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0, (false ? _GLF_FUZZED(0.9) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(5.9))), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false)))))), bool(bool(bool(bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false))))))))))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), min(float(0.0), _GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))), float(_GLF_FUZZED(64.52)), bool(false))))))) - 0.0)))) || false, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) * 1.0)) - 0.0))), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(64.52)), min(_GLF_IDENTITY(float(_GLF_FUZZED(64.52)), max(float(_GLF_FUZZED(64.52)), float(_GLF_FUZZED(64.52)))), float(_GLF_FUZZED(64.52)))), bool(false))))))) - 0.0)))) || false))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! (! (true))))) && _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY((false), ! (! ((false))))), ! (! ((_GLF_IDENTITY((false), ! (! ((false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bool(false)))))), true && ((_GLF_IDENTITY((false), ! (! ((false))))))))) || false) || false))) || _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false, false, false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))) || false)))))
      return;
    }
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, false)))))) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, false)))))) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(false, true, false)))))) ? _GLF_FUZZED(subgroup_local_id) : workgroup_size) / 1u), 0u, 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), workgroup_size), 0u ^ (min(workgroup_size, workgroup_size)))))) * _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id)));
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * subgroup_size));
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << _GLF_IDENTITY(0u, (0u) | (0u)))) % subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(155467u) : subgroup_local_id)) + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1)))), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 ^ (1))))) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))), max(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1)), subgroup_local_id + 1))) % subgroup_size) * 1u))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, false)))) || false)))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-610.470) : 0.0)), injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false))); _injected_loop_counter ++)
        {
         return;
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) + (0 << _GLF_IDENTITY(int(7), int(7)))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1) > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1) > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))), true && (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1) > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))))), ! (! (! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1), (true ? _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter))) / 1) : _GLF_FUZZED(_injected_loop_counter))), 0, 1, 1))) > int(_GLF_ZERO(0.0, injectionSwitch.x)), false || (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) > int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(5952.9342) : injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.7)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true))), injectionSwitch.y), clamp(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), max(min(injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(injectionSwitch.y, injectionSwitch.y)) * 1.0))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-895.125)))), _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), clamp(min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y), min(injectionSwitch.y, injectionSwitch.y))))))))) + 0.0)), _GLF_IDENTITY(! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0))), (! ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))), clamp((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.2))), injectionSwitch.y)), injectionSwitch.y)))))) / 1.0) + 0.0)))) && true)), ! (! ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0))))))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))), ! (! ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))) + 0.0))))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0)))), ! (! ((! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) + 0.0))))))), false)), false, true))))))), (! (! _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) + 0.0))), true && (((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))) + 0.0))))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))) << 0u) % 2) >> 0u, (_GLF_IDENTITY((subgroup_local_id % 2) >> 0u, _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2) >> 0u) | ((subgroup_local_id % 2) >> 0u), (((subgroup_local_id % 2) >> 0u) | ((subgroup_local_id % 2) >> 0u)) << 0u), min(_GLF_IDENTITY(((subgroup_local_id % 2) >> 0u) | ((subgroup_local_id % 2) >> 0u), (((subgroup_local_id % 2) >> 0u) | ((subgroup_local_id % 2) >> 0u)) << 0u), _GLF_IDENTITY(((subgroup_local_id % 2) >> 0u) | ((subgroup_local_id % 2) >> 0u), (((subgroup_local_id % 2) >> 0u) | ((subgroup_local_id % 2) >> 0u)) << 0u))))) + 0u))) == _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-4524) : 0)), 0, 0)))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) << 0)) | 0))), (min(1, _GLF_IDENTITY(1, 1 * _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | 0), min(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)) | 0, (_GLF_IDENTITY(((1)) | 0, int(ivec3(((1)) | 0, 0, 0)))) / 1)), _GLF_IDENTITY((1), ((1)) | 0)))))) * 1))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             return;
            }
          }
         subgroupAll(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))));
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec4(_injected_loop_counter > 0, false, true, false))), true && (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, true)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, true))), true && ((_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bool(_injected_loop_counter > 0))))))) || false)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0) ^ 1), int(_GLF_IDENTITY(int((_GLF_IDENTITY(1, (1) >> 0) ^ 1)), (_GLF_IDENTITY(int((_GLF_IDENTITY(1, (1) >> 0) ^ 1)), max(int((_GLF_IDENTITY(1, (1) >> 0) ^ 1)), int((_GLF_IDENTITY(1, (1) >> 0) ^ 1))))) | (int((_GLF_IDENTITY(1, (1) >> 0) ^ 1))))))))
          {
           atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), 0 + _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4)))))), (_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4))))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1))), (_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1)))) ^ 0)))), (~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), (false ? _GLF_FUZZED(15736) : (~ (4))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ _GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(5), int(5))) | ((4)))))))) / 1))))), max(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 1 * (_GLF_IDENTITY(~ (4), (~ (4)) << 0)))), clamp((~ (4)), (~ (_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) ^ (4)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))), (false ? _GLF_FUZZED(15736) : (~ (4))))))), _GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(15736) : (~ (4))))))))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), 0 + _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4)))))), (_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4))))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1))), (_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1)))) ^ 0)))), (~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), (false ? _GLF_FUZZED(15736) : (~ (4))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ _GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(5), int(5))) | ((4)))))))) / 1))))), max(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 1 * (_GLF_IDENTITY(~ (4), (~ (4)) << 0)))), clamp((~ (4)), (~ (_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) ^ (4)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))), (false ? _GLF_FUZZED(15736) : (~ (4))))))), _GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(15736) : (~ (4))))))))))) - 0), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), 0 + _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4)))))), (_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4))))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1))), (_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1)))) ^ 0)))), (~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), (false ? _GLF_FUZZED(15736) : (~ (4))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ _GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(5), int(5))) | ((4)))))))) / 1))))), max(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 1 * (_GLF_IDENTITY(~ (4), (~ (4)) << 0)))), clamp((~ (4)), (~ (_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) ^ (4)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))), (false ? _GLF_FUZZED(15736) : (~ (4))))))), _GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(15736) : (~ (4))))))))))) - 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), 0 + _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4)))))), (_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4))))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1))), (_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1)))) ^ 0)))), (~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), (false ? _GLF_FUZZED(15736) : (~ (4))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ _GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(5), int(5))) | ((4)))))))) / 1))))), max(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 1 * (_GLF_IDENTITY(~ (4), (~ (4)) << 0)))), clamp((~ (4)), (~ (_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) ^ (4)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))), (false ? _GLF_FUZZED(15736) : (~ (4))))))), _GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(15736) : (~ (4))))))))))) - 0), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 | (~ (4))), 0 + _GLF_IDENTITY(_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4)))))), (_GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (false ? _GLF_FUZZED(15736) : (~ (4))))))) | 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), min((4), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1))), (_GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), ((4)) * 1)))) ^ 0)))), (~ (4)), _GLF_IDENTITY((~ (4)), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : _GLF_IDENTITY((~ (4)), max((~ (4)), (~ (4))))), (false ? _GLF_FUZZED(15736) : (~ (4))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(15736) : (~ (4))), clamp((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ (4))), (false ? _GLF_FUZZED(15736) : (~ _GLF_IDENTITY((4), (0 >> _GLF_IDENTITY(int(5), int(5))) | ((4)))))))) / 1))))), max(_GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 1 * (_GLF_IDENTITY(~ (4), (~ (4)) << 0)))), clamp((~ (4)), (~ (_GLF_IDENTITY(4, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) ^ (4)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))), (false ? _GLF_FUZZED(15736) : (~ (4))))))), _GLF_IDENTITY(~ (4), 0 + _GLF_IDENTITY((~ (4)), clamp((~ (4)), (~ (4)), _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))) ? _GLF_FUZZED(15736) : (~ (4))))))))))) - 0) : _GLF_FUZZED(_injected_loop_counter)))))) ^ 0)), _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, 4), (min(4, 4)) | (min(4, 4)))))), 64, 4);
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(bvec3((injectionSwitch.x > injectionSwitch.y) && true, false, true))))))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true))) && true), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, false))))), bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), true, true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, false))))), bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false, true && (false)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false)))), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bvec4(! (! (true)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false))))), bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))))))), true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false)))), true, true))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), true && (! (true)))), bool(bvec4(! (! (true)), true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false))))), bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))))))), true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), false)))), true, true))))))))), (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (true), true && (! (true)))), ((_GLF_IDENTITY(! (true), true && (! (true))))) && true)) && true), bool(bvec4(! (! (true)), true, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(false || (_GLF_IDENTITY(true, ! (! (true)))), true, true)))), false))))), bool(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(! _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) || false)) || false), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.7)), bool(false)))) - sqrt(0.0)), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))), false)))))))), true), false)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-86.94), _GLF_FUZZED(-5.2)), bvec2(false, false)))) / vec2(1.0, 1.0))) - tan(sqrt(vec2(0.0, 0.0))))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true), bvec3(bvec4(bvec3(bvec2(! (true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))), true), false)))), true, true)))))))))) || false)) && true)))))), false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! ((true)), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(! ((true)), true, false), bvec3(bvec3(bvec3(! ((true)), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(! ((true)), true, false), bvec3(bvec3(bvec3(! ((true)), true, false))))))))))), (bool(_GLF_IDENTITY(bvec3(! ((true)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(! ((true)), true, false)), bvec3(bvec3(bvec3(bvec3(! ((true)), true, false))))))))) || false)), bool(bvec3(_GLF_IDENTITY(! ((true)), _GLF_IDENTITY(bool(bvec3(! ((true)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false)), (bool(bvec3(! ((true)), true, false))) || false)), true, false))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((true), true && ((true))), true, true), true))))), ! (_GLF_IDENTITY(! (! (true)), true && (! (! (true))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, true), bvec3(bvec4(bvec3((true), true, true), true))))), ! (! (! _GLF_IDENTITY((true), true && ((true))))))))))))))))))))
            {
             subgroupAll(false);
            }
           else
            {
            }
          }
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, min(2, 2)), 1)) | ivec2(0, 0)))))), (_GLF_IDENTITY(ivec2(2, 1), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, min(2, 2)), 1)) | ivec2(0, _GLF_IDENTITY(0, int(ivec3(0, 1, 0)))))))))) + (ivec2(0, 0) ^ ivec2(0, 0)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 ^ (0)), 0)), _GLF_IDENTITY(0, (0) | (0)))))) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0))), 0 | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(2, 2))) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), (~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1)))))) >> (0 & 40523)), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, (21416 & 0) | (_GLF_IDENTITY((2) << 0, clamp((2) << 0, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1), (2) << 0)))))) | (_GLF_IDENTITY(2, max(2, 2)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), clamp((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))))), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))))), 0, 1, 0), ~ (~ (ivec4(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), ((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))) - 0))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(int(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), ((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))) - 0))), 0 + (int(int(_GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2))), ((_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))) - 0))))))))), 0, 1, 0)))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, clamp((2) << 0, _GLF_IDENTITY((2) << 0, ((2) << 0) - 0), (2) << 0)))) | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (2) | (2)))))), _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), max((_GLF_IDENTITY(2, max(2, 2))), (_GLF_IDENTITY(2, max(2, 2)))))))), 1), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(2, (2) * 1), 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(_injected_loop_counter)))))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 + (_GLF_IDENTITY(~ (2), (true ? ~ (2) : _GLF_FUZZED(99937))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2) << 0, min((2) << 0, (2) << 0))) * 1))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(1, min(1, 1)), (1 & _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 0, 0, 0))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(1, 0, 0, 0), _GLF_IDENTITY(ivec4(1, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-42971, 15583, 3454, -340)) : ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) ^ (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0))) * (ivec4(1, 0, 0, 0)))))) - 0)), 0)) >> ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0), 0, 0))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1)))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) << 0))) | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | (2)))))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), (ivec2((1), 1)) / ivec2(1, 1)))))) - 0), 1)) & 1), 0)) - ivec4(0, 0, 0, 0)), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0)))))))), max(((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(_injected_loop_counter)))))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 + (_GLF_IDENTITY(~ (2), (true ? ~ (2) : _GLF_FUZZED(99937))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2) << 0, min((2) << 0, (2) << 0))) * 1))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(1, min(1, 1)), (1 & _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 0, 0, 0))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(1, 0, 0, 0), _GLF_IDENTITY(ivec4(1, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-42971, 15583, 3454, -340)) : ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) ^ (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0))) * (ivec4(1, 0, 0, 0)))))) - 0)), 0)) >> ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0), 0, 0))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1)))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) << 0))) | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | (2)))))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), (ivec2((1), 1)) / ivec2(1, 1)))))) - 0), 1)) & 1), 0)) - ivec4(0, 0, 0, 0)), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0)))))))), _GLF_IDENTITY(((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(_injected_loop_counter)))))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 + (_GLF_IDENTITY(~ (2), (true ? ~ (2) : _GLF_FUZZED(99937))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2) << 0, min((2) << 0, (2) << 0))) * 1))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(1, min(1, 1)), (1 & _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 0, 0, 0))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(1, 0, 0, 0), _GLF_IDENTITY(ivec4(1, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-42971, 15583, 3454, -340)) : ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) ^ (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0))) * (ivec4(1, 0, 0, 0)))))) - 0)), 0)) >> ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0), 0, 0))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1)))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) << 0))) | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | (2)))))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), (ivec2((1), 1)) / ivec2(1, 1)))))) - 0), 1)) & 1), 0)) - ivec4(0, 0, 0, 0)), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0)))))))), (((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 1 * (1)) : _GLF_FUZZED(_injected_loop_counter)))))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 + (_GLF_IDENTITY(~ (2), (true ? ~ (2) : _GLF_FUZZED(99937))))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2))))), _GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2) << 0, min((2) << 0, (2) << 0))) * 1))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) / 1), 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(1, min(1, 1)), (1 & _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 0, 0, 0))))), (_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 0, 0), clamp(_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(1, 0, 0, 0), _GLF_IDENTITY(ivec4(1, 0, 0, 0), (false ? _GLF_FUZZED(ivec4(-42971, 15583, 3454, -340)) : ivec4(1, 0, 0, 0))))), _GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) ^ (ivec4(0, 0, 0, 0) ^ ivec4(0, 0, 0, 0))) * (ivec4(1, 0, 0, 0)))))) - 0)), 0)) >> ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) + 0), 0, 0))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1), ivec2(ivec2(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))), ~ (~ ((_GLF_IDENTITY(2, _GLF_IDENTITY(max(2, 2), min(max(2, 2), max(2, 2))))))))), 1)))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) << 0))) | (_GLF_IDENTITY(2, max(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, 0 + (2))) | (2)))))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2((1), 1), (ivec2((1), 1)) / ivec2(1, 1)))))) - 0), 1)) & 1), 0)) - ivec4(0, 0, 0, 0)), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, max(2, 2)), 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0))))))))) / 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, (2687 & 0), 0)), min(int(ivec4(1, 0, (2687 & 0), 0)), _GLF_IDENTITY(int(ivec4(1, 0, (2687 & 0), 0)), 0 ^ (int(ivec4(1, 0, (2687 & 0), 0))))))), 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2))))))))) | (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2))))), (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), _GLF_IDENTITY(ivec2(1, 1), clamp(ivec2(1, 1), ivec2(1, 1), ivec2(1, 1))) * (ivec2(2, 1))))), _GLF_IDENTITY(1, min(1, 1)), (1 & _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, 0, 0, 0), ivec4(1, 1, 1, 1) * (ivec4(1, 0, 0, 0)))))), 0)) >> ivec4(0, 0, 0, 0))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, max(2, 2)), clamp(_GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, max(2, 2)), _GLF_IDENTITY(2, max(2, 2)))))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0), (ivec4(_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), (~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1)))))) ^ 0), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0)) - ivec4(0, 0, 0, 0)), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), 1, (1 & 1), 0)) >> ivec4(0, 0, 0, 0)))))))), (((_GLF_IDENTITY(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << (0 | 0)), (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), 1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec3(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << (0 | 0)), (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), 1), (0 << _GLF_IDENTITY(int(5), int(5)))), (ivec3(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << (0 | 0)), (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), 1), (0 << _GLF_IDENTITY(int(5), int(5))))) - ivec3(0, 0, 0))), ivec2(0, 0) ^ (ivec2(_GLF_IDENTITY(ivec3(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << (0 | 0)), (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), 1), (0 << _GLF_IDENTITY(int(5), int(5)))), (ivec3(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << (0 | 0)), (2) << 0)) | _GLF_IDENTITY((_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, 0 ^ (2)), 2))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(2, max(2, 2))), (0 >> _GLF_IDENTITY(int(0), int(0))) + ((_GLF_IDENTITY(2, max(2, 2)))))))), 1), (0 << _GLF_IDENTITY(int(5), int(5))))) - ivec3(0, 0, 0)))))), ivec2(1, 1) * (ivec2(2, 1))))), 1, (1 & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, (2) | (2))))), (2) << 0)) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(_injected_loop_counter) : 2)), 2)))), 1), ivec2(1, 1) * (ivec2(2, _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | 0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(1, (1) | 0), 1, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0)))))))))), _GLF_IDENTITY(1, min(1, 1)), (1 & _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 0, 0), ivec4(1, 1, 1, _GLF_IDENTITY(1, 1 * (1))) * (_GLF_IDENTITY(ivec4(1, 0, 0, 0), (ivec4(1, 0, 0, 0)) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(1), ivec4(1))))))))), 0)) >> ivec4(0, 0, 0, 0))), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))), (false ? _GLF_FUZZED(ivec2(90733, -4195)) : _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))), ivec2(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))), 0, 1))))))), 1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)), 0 + (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1))))) >> 0) & 1), 0), (ivec4(~ (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * (ivec2(2, 1))))), 1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) - 0), 1)) & 1), 0)) - ivec4(0, 0, 0, 0)), (ivec4(~ _GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), ((int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1)))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1))))), ((int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, max(2, 2)))), 1), ivec2(1, 1) * _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) / ivec2(1, 1)))))) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))))), 1, (1 & 1), 0)) >> ivec4(0, 0, _GLF_IDENTITY(0, 0 ^ (0)), 0))))))))) >> 0))) - 0)))), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) - int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))))), 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, ~ (~ (64))))), min(64, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), (64) >> 0))), (64) + (0 >> _GLF_IDENTITY(int(8), int(8)))), 1 * _GLF_IDENTITY((64), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 ^ (64))), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), max(_GLF_IDENTITY((64), int(int(_GLF_IDENTITY(_GLF_IDENTITY((64), 0 | ((64))), (_GLF_IDENTITY((64), 0 | ((64)))) ^ _GLF_IDENTITY(0, 1 * (0)))))), _GLF_IDENTITY(_GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), clamp(_GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), _GLF_IDENTITY(_GLF_IDENTITY((64), (false ? _GLF_FUZZED(-82290) : _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), ((64)) | ((64))), (64))))), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), _GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((64)))))))))))), 1, 0), _GLF_IDENTITY((ivec3(_GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), 1, 0)) / ivec3(1, 1, 1), (true ? (ivec3(_GLF_IDENTITY((64), int(int(_GLF_IDENTITY((64), 0 | ((64)))))), 1, 0)) / ivec3(1, 1, 1) : _GLF_FUZZED(ivec3(-90289, 59133, -13645)))))))), 4);
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true, ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false, false)))) && true)))))); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
