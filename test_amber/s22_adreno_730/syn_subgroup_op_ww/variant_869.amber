#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(_GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-52336), (_GLF_FUZZED(-52336)) * 1)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))), int(ivec2(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))), 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))), 0 | (_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false) ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (_GLF_IDENTITY(true ? 0 : _GLF_FUZZED(-52336), (true ? 0 : _GLF_FUZZED(-52336)) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))), (true ? _GLF_IDENTITY((true ? 0 : _GLF_FUZZED(-52336)), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(_GLF_IDENTITY(-52336, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -52336 : _GLF_FUZZED(_injected_loop_counter))))), (true ? 0 : _GLF_FUZZED(-52336))), max(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(-52336), (true ? _GLF_FUZZED(-52336) : _GLF_FUZZED(ivec4(-58969, -82429, -43256, -27522)[3]))))), _GLF_IDENTITY(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), clamp(min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336))), min((true ? 0 : _GLF_FUZZED(-52336)), (true ? 0 : _GLF_FUZZED(-52336)))))))) : _GLF_FUZZED((false ? 8988 : -78516)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))), injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))), injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))), mix(vec2((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[0], _GLF_FUZZED(-1598.0566)), vec2(_GLF_FUZZED(24.54), (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))[1]), bvec2(false, true)))).y) && true), ! (! (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))), injectionSwitch)))).x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0))), max(_GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0))), _GLF_IDENTITY(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0))))), min(vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0))))), vec2(vec2((true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))))), injectionSwitch)))).x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.1, -1.0)))))), injectionSwitch)))).x > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
     break;
    }
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.z = subgroup_id;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) || false)))))))
      return;
    }
   if(_GLF_DEAD(false))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), true, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && _GLF_IDENTITY((bool(bvec4(false, true, true, false))), bool(bvec4(_GLF_IDENTITY((bool(bvec4(false, true, true, false))), false || ((bool(bvec4(false, true, true, false))))), true, true, true)))))))))
        continue;
      }
     else
      {
       GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z = subgroup_size;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, -5150.0229)) : injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), vec2(mat2(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), sin(0.0), 1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, -5150.0229)) : injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), vec2(mat2(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), sin(0.0), 1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch), (true ? true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, -5150.0229)) : injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), vec2(mat2(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), sin(0.0), 1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(injectionSwitch))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, -5150.0229)) : injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), vec2(mat2(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), sin(0.0), 1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1.2, -5150.0229)) : injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), vec2(mat2(max(vec2(1.0, 1.0), vec2(1.0, 1.0)), sin(0.0), 1.0)))), _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0))) / vec2(1.0, 1.0)), vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), min((vec2(1.0, 1.0)) * mat2(1.0), (vec2(1.0, 1.0)) * mat2(1.0)))), (_GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))) - vec2(0.0, 0.0))))) : _GLF_FUZZED(injectionSwitch))))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(mat4(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-4281.5625)), vec2(_GLF_FUZZED(4431.4390), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(1.0), bool(true))))), 1.0)) : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(66.65)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(4213.9860)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-7.5)), bool(false))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) + 0.0))))))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))), 1.0, 0.0, 1.0, 1.0), mat2x3(mat3x4(mat2x3((injectionSwitch), 1.0, 0.0, 1.0, 1.0)))))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).x, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(mat4(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-4281.5625)), vec2(_GLF_FUZZED(4431.4390), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(1.0), bool(true))))), 1.0)) : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(66.65)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(4213.9860)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-7.5)), bool(false))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) + 0.0))))))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))), 1.0, 0.0, 1.0, 1.0), mat2x3(mat3x4(mat2x3((injectionSwitch), 1.0, 0.0, 1.0, 1.0)))))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch), vec2(_GLF_IDENTITY(mat4(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-4281.5625)), vec2(_GLF_FUZZED(4431.4390), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true)))) / vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.2)), float(1.0), bool(true))))), 1.0)) : _GLF_FUZZED(injectionSwitch), 1.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(66.65)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(injectionSwitch), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp2(4213.9860)) : _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), float(_GLF_FUZZED(-7.5)), bool(false))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) + 0.0))))))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))), 1.0, 0.0, 1.0, 1.0), mat2x3(mat3x4(mat2x3((injectionSwitch), 1.0, 0.0, 1.0, 1.0)))))))) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch))))).x)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), vec2(0.0, 0.0)), (true ? dot(vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)) : _GLF_FUZZED(76.16)))), 0.0))))), mat2(1.0) * ((true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, cos(0.0), 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), vec2(0.0, 0.0)), (true ? dot(vec2(_GLF_IDENTITY(1.0, float(mat2x4(1.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 1.0), vec2(0.0, 0.0)) : _GLF_FUZZED(76.16)))), 0.0)))))))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(6.1), _GLF_FUZZED(9.9)), bvec2(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) && true)))))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5299.5813)), float(injectionSwitch.y), bool(true)))) / 1.0)) && true)))))
        {
        }
       else
        {
         return;
        }
      }
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.y = subgroup_local_id;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.y, min(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.y, GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.y));
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))), false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true))))))), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))))))), bool(bool(bool((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, true), bvec3(bvec3(bvec3(! (false), true, true)))))))))))))))))) && true)))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)), clamp(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, 1u, 1u)), 1u * (uint(uvec3(gl_NumWorkGroups.x, 1u, 1u))))), (gl_NumWorkGroups.x) >> 0u)), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x) >> 0u)) >> 0u))) << 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)), clamp(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x), (false ? _GLF_FUZZED(uint(4279.5717)) : _GLF_IDENTITY((gl_NumWorkGroups.x), (_GLF_IDENTITY((gl_NumWorkGroups.x), 1u * ((gl_NumWorkGroups.x)))) << (0u & 95730u)))) >> 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)), max(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) >> 0u)), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, 0u ^ (gl_NumWorkGroups.x)), (gl_NumWorkGroups.x) >> 0u)))))), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u)))));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) << 0)), _GLF_IDENTITY(int(4), int(ivec2(int(4), (0 << _GLF_IDENTITY(int(2), int(2)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (! (! (false)))))) && true), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))) || false))))
              break;
             return;
            }
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || ((_GLF_IDENTITY(false, (false) && true))))))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.z * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, uvec3(uvec4(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, clamp(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size)), 1u))).z;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.x = subgroup_base;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))));
      }
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-4477.1161) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(-2339.5599))))) > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / 1)); _injected_loop_counter ++)
  {
   GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.y = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, (GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size) * uvec3(1u, 1u, 1u))) | (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size, (GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), (GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size) / (uvec3(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), (_GLF_IDENTITY(1u, (1u) * 1u)) | (_GLF_IDENTITY(1u, (1u) * 1u))), 1u) | uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_base), (true ? 1u : _GLF_FUZZED(workgroup_base)) | (_GLF_IDENTITY(true ? 1u : _GLF_FUZZED(workgroup_base), ~ (~ (true ? 1u : _GLF_FUZZED(workgroup_base)))))))), 1u, 1u))).x;
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(183117u, 89802u, 30682u, 21430u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id))))) * uvec4(1u, 1u, 1u, 1u)).y + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), _GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.y + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(81145u, 84954u, 113743u, 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, 113743u, 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) | uvec4(0u, 0u, 0u, 0u)))).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w)) + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z), (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_base >> workgroup_id)) : ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[_GLF_IDENTITY(2, (2) ^ 0)], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z), min(false ? _GLF_FUZZED((workgroup_base >> workgroup_id)) : ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z), _GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_base >> workgroup_id)) : ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_base >> workgroup_id)) : (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1), 0u ^ ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1)))) + 0u) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z), min(false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base >> workgroup_id, (workgroup_base >> workgroup_id) | (workgroup_base >> workgroup_id))), uint(uint((_GLF_IDENTITY(workgroup_base >> workgroup_id, (workgroup_base >> workgroup_id) | (workgroup_base >> workgroup_id))))))) : ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id))))[3])).w + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z), false ? _GLF_FUZZED((workgroup_base >> workgroup_id)) : ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(113743u, (113743u) ^ 0u)) | (_GLF_IDENTITY(113743u, (113743u) ^ 0u))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(_GLF_IDENTITY(113743u, _GLF_IDENTITY((113743u) ^ 0u, uint(uvec4((113743u) ^ 0u, 0u, 1u, 0u)))), 0u ^ (_GLF_IDENTITY(113743u, (113743u) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), clamp((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u))))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(113743u, (113743u) ^ 0u)) | (_GLF_IDENTITY(113743u, (113743u) ^ 0u))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(_GLF_IDENTITY(113743u, _GLF_IDENTITY((113743u) ^ 0u, uint(uvec4((113743u) ^ 0u, 0u, 1u, 0u)))), 0u ^ (_GLF_IDENTITY(113743u, (113743u) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), clamp((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u))))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z)))) | ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(113743u, (113743u) ^ 0u)) | (_GLF_IDENTITY(113743u, (113743u) ^ 0u))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(_GLF_IDENTITY(113743u, _GLF_IDENTITY((113743u) ^ 0u, uint(uvec4((113743u) ^ 0u, 0u, 1u, 0u)))), 0u ^ (_GLF_IDENTITY(113743u, (113743u) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), clamp((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u))))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(113743u, (113743u) ^ 0u)) | (_GLF_IDENTITY(113743u, (113743u) ^ 0u))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(_GLF_IDENTITY(113743u, _GLF_IDENTITY((113743u) ^ 0u, uint(uvec4((113743u) ^ 0u, 0u, 1u, 0u)))), 0u ^ (_GLF_IDENTITY(113743u, (113743u) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), clamp((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u))))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z))), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(113743u, (113743u) ^ 0u)) | (_GLF_IDENTITY(113743u, (113743u) ^ 0u))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(_GLF_IDENTITY(113743u, _GLF_IDENTITY((113743u) ^ 0u, uint(uvec4((113743u) ^ 0u, 0u, 1u, 0u)))), 0u ^ (_GLF_IDENTITY(113743u, (113743u) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), clamp((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u))))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z)))) | ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(113743u, (113743u) ^ 0u)) | (_GLF_IDENTITY(113743u, (113743u) ^ 0u))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u))))) << _GLF_IDENTITY(uint(5u), uint(5u))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(uvec4(81145u, 84954u, _GLF_IDENTITY(113743u, (_GLF_IDENTITY(_GLF_IDENTITY(113743u, _GLF_IDENTITY((113743u) ^ 0u, uint(uvec4((113743u) ^ 0u, 0u, 1u, 0u)))), 0u ^ (_GLF_IDENTITY(113743u, (113743u) ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), clamp((_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u)), (_GLF_IDENTITY(113743u, (113743u) ^ 0u))))), 155748u)) : GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w + 1), ((0u | 0u) << _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (5u) | (5u))))) | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) / uvec4(1u, 1u, 1u, 1u)).w + 1))) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z)))))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uint(workgroup_base)), (uint(uint(workgroup_base))) - 0u)) >> workgroup_id)) : ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w), 0u | (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w) ^ 0u) + 1) % GLF_merged3_0_1_13_1_1_17_2_1_13subgroup_basesubgroup_local_idsubgroup_size.z))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)) && true)))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(tan(injectionSwitch)))).y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y, true, true)))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y), false, false, false))) || false)))))), ((_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y, true, true)))), false, false, false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.6, 4.1)))) > injectionSwitch.y), false, false, false))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), true && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0), injectionSwitch.y))))))))), (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))) * 1.0), injectionSwitch.y)))))))))) || false)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), true && ((! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-418.763), _GLF_FUZZED(-12.11)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(5.9)))), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true)))) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))), true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(5.9)))), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true)))) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))))))))))), true && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-418.763), _GLF_FUZZED(-12.11)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, true))), bvec2(bvec2(bvec2(bvec2(bvec2(true, true))))))))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(5.9)))), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true)))) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y))), true && ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-9.1)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(abs(5.9)))), injectionSwitch.y)), max(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), bool(true)))) * 1.0), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y)))))))))))))))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, false)))))))
      break;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))), true && (_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter --)
        {
         GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.x = next_virtual_gid;
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter))) << 0))) < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
              }
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        break;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, length(0.0), 0.0, 0.0))), tan(0.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.04), _GLF_FUZZED(7527.1058)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-7.4) : _GLF_ZERO(0.0, injectionSwitch.x))), tan(sqrt(0.0)), 0.0)))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0))))) - 0.0), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(1.0), cos(0.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0))))))) > injectionSwitch.y)))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) || false))))))), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(62.04), _GLF_FUZZED(7527.1058)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), false || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(-9922.0406), _GLF_FUZZED(1762.2746)), bvec2(false, false))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))))))))))), true && ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(4081.3099)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), (mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(680.287) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))), injectionSwitch.x, injectionSwitch.x)))))), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_IDENTITY(_GLF_FUZZED(-7.4), float(mat3x2(_GLF_FUZZED(-7.4), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, sin(0.0)))) : _GLF_ZERO(0.0, injectionSwitch.x))), tan(sqrt(0.0)), 0.0)))), (float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0))))) + (injectionSwitch)).x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0))))) - 0.0), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0), _GLF_IDENTITY(mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(1.0), cos(0.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0)), (mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(1.0), cos(0.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0))), injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), tan(sqrt(0.0)), 0.0))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) > injectionSwitch.y)))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(722.652), _GLF_FUZZED(4.8)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-155.828)), vec2(_GLF_FUZZED(-323.717), (injectionSwitch)[1]), bvec2(false, true))))).y)))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(faceforward(8.0, 0.0, -3.6), -98.74)))).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) || false))))))), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))) && true)))) && _GLF_IDENTITY(true, ! (! (true)))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), min(~ (~ (4)), ~ (~ (4)))))), (int(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), min(~ (~ (4)), ~ (~ (4))))))) << 0))))), 64, _GLF_IDENTITY(4, min(4, 4)));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
            continue;
           if(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))) << 0u)))) / 1u), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, max(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(3u), uvec4(3u)))).w)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))) ^ 0u), min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), min(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))) ^ 0u), min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))) ^ 0u), min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (true ? GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[3])).w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) ^ uvec4(0u, 0u, 0u, 0u)).w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))), max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w) << 0u), min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w))))))))))))) % 2), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w) ^ 0u))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)) % 2))), min(uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w) ^ 0u))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)) % 2))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w) ^ 0u))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)) % 2))), (uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w) ^ 0u))), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w)) % 2)))) + 0u))), 1u * (uint(uint((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, min(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.w, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) >> uvec4(0u, 0u, 0u, 0u)), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) | (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)))))).w)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).w)) % 2)))))) == 0)
            {
             do
              {
               subgroupAll(_GLF_IDENTITY(true, (true) && true));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))), (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-588.397)), float(0.0), bool(true))), 1.0, 0.0, abs(1.0), 1.0, 0.0)), min(float(mat3x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-588.397)), float(0.0), bool(true))), 1.0, 0.0, abs(1.0), 1.0, 0.0)), float(mat3x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-588.397)), float(0.0), bool(true))), 1.0, 0.0, abs(1.0), 1.0, 0.0))))), 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), (abs(1.0)) * 1.0)))).x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7182.8045))), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), abs(1.0)))).x > injectionSwitch.y))))))), false, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (true ? sqrt(1.0) : _GLF_FUZZED(688.753))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y)))), _GLF_IDENTITY(true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y))))), (true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, sqrt(1.0), sqrt(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))).x > injectionSwitch.y)))))) && true))), false, false)))))))
              continue;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), ! (! (false))))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  break;
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))); _injected_loop_counter --)
                    {
                     return;
                    }
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id.x], uint(2), 4, 64, _GLF_IDENTITY(4, (4) << (85877 & 0)));
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true))))), _GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false))))))))), true))))));
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
                break;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) && true), false, true, true)), (bool(bvec4((_GLF_IDENTITY(false, false || (false))) && _GLF_IDENTITY(true, (true) && true), false, true, true))) && true)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) < injectionSwitch.y))))
                    {
                     return;
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 1.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x3(3543.9374, -10.38, -566.393, 8.2, 7.9, 2716.3389, -65.10, 5.0, 652.473, -62.51, 32.51, 5.8)) : mat4x3(injectionSwitch.x, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 1.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x3(injectionSwitch.x, abs(0.0), determinant(mat3(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(0.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 1.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x3(3543.9374, -10.38, -566.393, 8.2, 7.9, 2716.3389, -65.10, 5.0, 652.473, -62.51, 32.51, 5.8)) : mat4x3(injectionSwitch.x, abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sqrt(0.0), 1.0, cos(0.0), 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0))))) > injectionSwitch.y)))))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                      continue;
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), bool(bvec3(bool(bvec4((false), false, true, true)), true, true)))) && true))))))))
                  continue;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(acos(-8413.1736)) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, clamp(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) * uvec4(1u, 1u, 1u, 1u)), (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id) >> uvec4(0u, 0u, 0u, 0u))))), uvec4(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id[_GLF_IDENTITY(3, min(3, 3))])), GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_17next_virtual_gidsubgroup_basesubgroup_idsubgroup_local_id)).x], uint(2), 4, 64, 4);
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), true && (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)))))))))))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(false))), false, true, true))))))))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))))))), min(((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))))))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))), min(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))), int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) - 0), 0))))) : _GLF_FUZZED(bitCount(virtual_gid)))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-462.753) : injectionSwitch.y))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, true)))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), (! (! ((injectionSwitch.x > injectionSwitch.y)))) || false)), true, true)))))), false), true, true))))))))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   break;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                      return;
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, ! (! (true)))), true, true, _GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), (true ? (injectionSwitch) / vec2(1.0, 1.0) : _GLF_FUZZED(roundEven(injectionSwitch))))).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 1.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0))), (mat2x3(injectionSwitch, 1.0, 1.0, 0.0, tan(0.0))) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y))));
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bool(bool(false))), true && (bool(bool(bool(false)))))))))))))
                return;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | (0))))], injectionSwitch[1]))) * sqrt(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), min((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))))[0], (injectionSwitch[0]) / abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))))), injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / cos(0.0)), injectionSwitch[1]))) * sqrt(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))], (injectionSwitch[0]) / abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])) : _GLF_FUZZED(cosh(vec2(9.1, -4.5)))))) * sqrt(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], (injectionSwitch[0]) / abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))))), injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * sqrt(vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * sqrt(vec2(1.0, 1.0)))) - vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], (injectionSwitch[0]) / abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : _GLF_IDENTITY(-5707.2946, (_GLF_IDENTITY(-5707.2946, (-5707.2946) + 0.0)) + _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), bool(false))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)) : _GLF_FUZZED((vec2(-73.80, -47.29) * 332.421))))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) * 1)))]))) * sqrt(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], (injectionSwitch[0]) / abs(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))))), injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), min((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * sqrt(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[_GLF_IDENTITY(0, clamp(0, 0, 0))], (injectionSwitch[0]) / abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))), (false ? _GLF_FUZZED(-0.6) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))))))))), injectionSwitch[1])))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * sqrt(vec2(1.0, 1.0))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], (injectionSwitch[0]) / abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(61.34) : 1.0))) - 0.0), mix(float(1.0), float(_GLF_FUZZED((false ? float(true) : -5707.2946))), bool(false))))), injectionSwitch[1])))).y))));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))))))) && true))), bool(bvec2(false, false)))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     break;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(95.21))), max(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(95.21))), _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(95.21))))), true, true)))))))
                return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! (false)))))))
              break;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x3(injectionSwitch.y, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))), clamp(float(mat4x3(injectionSwitch.y, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))), float(mat4x3(injectionSwitch.y, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))), float(mat4x3(injectionSwitch.y, log(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, abs(1.0))))))))))
                {
                 return;
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), false)))))
              return;
             return;
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            continue;
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bool(true))), (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((false), ! (! ((false))))))))))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                break;
               return;
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
