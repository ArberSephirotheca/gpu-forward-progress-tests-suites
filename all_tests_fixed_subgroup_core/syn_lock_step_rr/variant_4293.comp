#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, abs(0.0), 0.0), mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x2(injectionSwitch.x, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, abs(0.0), 0.0))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) || false, true && (_GLF_IDENTITY((_GLF_DEAD(false)) || false, true && ((_GLF_DEAD(false)) || false))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bool(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec4((_GLF_IDENTITY(false, (false) && true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), true))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
          barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false), bool(bvec3((false), true, false)))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (false), (! (false)) || false)), false, false, false)), bool(bool(bool(bvec4(! (_GLF_IDENTITY(! (false), (! (false)) || false)), false, false, false)))))))))) || false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), true && (bool(_GLF_IDENTITY(true, (true) && true)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec4(bvec2(false, true), true, false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY((false), ((false)) && true)))) || false)), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), _GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true && (_GLF_IDENTITY(true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (true && (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))) && true)))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY(0u | (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) / 1u, min((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) / 1u, (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) / 1u)))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) ^ (0u | (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) / 1u))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-0.9)), bvec2(false, false)), clamp(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-0.9)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-0.9)), bvec2(false, false)), mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-0.9)), bvec2(false, false)))))), vec2(vec4((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-0.9)), bvec2(false, false)))), cos(abs(0.0)), 0.0)))), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), false || (bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))))))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), false || (bool(bool(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))))))))))))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))) || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))), true))) || false)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, length(vec4(0.0, 0.0, 0.0, 0.0)) + (injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))) && true), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false)))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false)))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || (! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! ((! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! ((! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))) || false))))))) && true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec3(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false)))))), false))))), true, false, false)))), bool(bool(false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false || (false)), (! (false || (false))) || false)), ! (! (! (_GLF_IDENTITY(! (false || (false)), (! (false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))))) || false)))))))))) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED((7367.1121 - 6956.1469))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], 1.0 * ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0])), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-9323.7051)), bvec2(false, false))))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.0)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y, true, true)))) && true)))))), bool(bvec4(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))).y, true, true)))) && true)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, log(1.0) + (injectionSwitch.y))) + sqrt(0.0))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((gl_WorkGroupID.x) - 0u, uint(uvec4((gl_WorkGroupID.x) - 0u, 0u, 1u, (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (gl_WorkGroupID.x)));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)), uint(uvec2(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / 1u)), 1u))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_size) | 0u, 1u, 1u)), 1u * (uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), uint(uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_size) | 0u, 1u, 1u)), 1u * (uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u, 0u, 1u))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_size) | 0u, 1u, 1u)), 1u * (uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), uint(uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_size) | 0u, 1u, 1u)), 1u * (uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u, 0u, 1u))), 1u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_size) | 0u, 1u, 1u)), 1u * (uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), uint(uvec4(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), _GLF_IDENTITY(uint(uvec3((subgroup_size) | 0u, 1u, 1u)), 1u * (uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), 0u, 0u, 1u))), 1u) : _GLF_FUZZED(uvec2(77339u, 177343u))))) << uvec2(0u, 0u)), uvec2(0u, 0u) ^ (uvec2(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) >> 0u))) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u))))))))), 1u)))))) / 1u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 1u)))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(atomicOr(workgroup_base, workgroup_size))))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_FUZZED(workgroup_size)))) | (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)), uint(uvec2(((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / 1u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))))))), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, (_GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u))) | ((subgroup_size) | 0u)), 0u | ((subgroup_size) | _GLF_IDENTITY(0u, (0u) | 0u))), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))), (true ? (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, 0u | ((subgroup_size) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) : _GLF_FUZZED(workgroup_base))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 1u * ((subgroup_size))) | 0u)), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))))) / 1u)) * 1u)), 1u))), (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), max((true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u))), (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)))))), _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))), (uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)))) | (uint(uint(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))))))))))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ~ (~ ((subgroup_size) | 0u))))) / 1u)), uint(uvec2(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, min((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u | ((subgroup_size) | _GLF_IDENTITY(0u, min(0u, 0u)))), uint(uvec3((subgroup_size) | 0u, 1u, 1u))))) / _GLF_IDENTITY(1u, (1u) | (1u)))), 1u)))) / 1u)) - (0u << _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-401.473), _GLF_FUZZED(4.3)), bvec2(false, false))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec2(bvec2(bvec2(bvec2(true, false))))))))) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(1), _GLF_IDENTITY(4, max(4, 4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_id) : ~ (buf[virtual_gid]))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])))), buf[virtual_gid]))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (~ (_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), buf[virtual_gid], buf[virtual_gid]))))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), false)))), false || (bool(_GLF_IDENTITY(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(false || ((injectionSwitch.x > injectionSwitch.y)), true, true), false))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) || false), false, false))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.5)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false), false, false)))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))), true && ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))))))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (true ? vec2(vec3(injectionSwitch, 1.0)) : _GLF_FUZZED(vec2(90.16, 7941.5562))))).x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false, false)))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))))) || false), false, false))))))) || false)))))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) * 1.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - determinant(mat3(0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.5))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- -8.5))), float(_GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), bool(true))), 0.0, 0.0)), 0.0, 0.0)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(bool(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), true)))))) || false)))) && true), true && _GLF_IDENTITY((true), true && ((true)))) && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))) && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), min((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) * mat2(1.0))))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, false, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (true))), true))) && true))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (true))), true)), (bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (! (true))), true))) && true))), true, true, false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.8) : injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0), _GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(distance(-669.995, atan(1.2))))), 1.0, sqrt(1.0), exp(0.0), 1.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), exp(0.0), 0.0, 0.0)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), true))))), true && (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))) || false))))))), ! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((203.395 + 3.3))), vec2(_GLF_FUZZED((+ 76.40)), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))), 0.0, 0.0, 0.0, sin(0.0), 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0, 0.0)), tan(0.0))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), false || (! ((! (false))))))))) || false)))) && true)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))))))) || false))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))))))) || false)))))) && true)) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)))) && true)) && true), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (false)))))))))) || false)))) && true)) && true)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, false))))))))), ! (! (! (false)))))))))) || false)))) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (((_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))) || false)))) && true)) && true), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)), true, false, false))))) && true)) && true)))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true)))))))))))))), (! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))))))))))))))) || false))) || _GLF_IDENTITY(false, false || (false)))))) && true)) && true)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)))) && true)) && true), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) || false)))) && true)) && true))))))))))) && true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), bool(bool(! (false)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) || false))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), true && (bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) || false)))) && true)) && true)), false, true, false)), ! (! (bool(bvec4(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) || false))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))) || false)))), ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec2((! (false)), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2((! (false)), false)), true, false)), ! (! (bool(bvec3(bool(bvec2((! (false)), false)), true, false))))))), ! (! _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (false))), (((! (false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(((! (false))), (((! (false)))) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)) && true)), false, true, false))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))) || false))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || false)))) || false)))) || false)), true && (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ((_GLF_IDENTITY(false, ! (! (false)))) || false) && true))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), true, false, false)), (_GLF_IDENTITY(bool(bvec4(true && (false), true, false, false)), bool(bvec2(bool(bvec4(true && (false), true, false, false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false), true, false))))))))))) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), bool(bool(true && (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))), true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), injectionSwitch.y))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))))))), bool(bvec4(_GLF_DEAD(false), false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) && true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) || false, ! (! (_GLF_IDENTITY((false), ((false)) && true) || false)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), clamp(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), min(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))))) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), false, true, true))))), ! (! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false || (! ((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
}
