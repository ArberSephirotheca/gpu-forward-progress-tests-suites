#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))) || false))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-184.168) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-3.9) : injectionSwitch[0]))) / 1.0), injectionSwitch[1])).x, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-3.9) : injectionSwitch[0]))) / 1.0), injectionSwitch[1])).x : _GLF_FUZZED(-3897.0003))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)))))))) > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)).y)) : _GLF_FUZZED(7.6))))))) || false), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -9154.9584 : 7.3))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -9154.9584 : 7.3))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((true ? -9154.9584 : 7.3))), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2((min(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(float(true))), vec2(_GLF_FUZZED(8368.1390), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[1], float(mat3x4((min(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) * 1)) - 0)], cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), bvec2(false, true)))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(asin(-2.3)) : injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.63)), bool(false))))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) || false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.63)), bool(false))))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) || false), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-81.63)), bool(false))))) > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false))) || false), true), true, false))), true, true))))))) || false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u))), max(subgroup_local_id + 1, subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u))), max(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)), uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1)))) / 1u))), max(subgroup_local_id + 1, subgroup_local_id + 1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(max(uint(-7370.6726), subgroup_size)))) + 1)) / 1u))), max(subgroup_local_id + 1, subgroup_local_id + 1))), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u))), max(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (uint(subgroup_local_id + 1)) / 1u))), max(subgroup_local_id + 1, subgroup_local_id + 1))))))), max((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | (_GLF_IDENTITY((1) | (1), 1 * ((1) | (1)))))), (_GLF_IDENTITY(1, (1) | (1))) | 0)))), (_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(656.272))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.6)), bool(false))), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)) * (injectionSwitch.y)), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, 0 | (4)))), 4)))), _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (false) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.1, -5806.0290)) : injectionSwitch)), injectionSwitch), clamp(clamp(injectionSwitch, injectionSwitch, injectionSwitch), clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(atan(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(-87.72, 8412.2297))))))), injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, max(64, 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, (true) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))], clamp(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))], (_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))], (buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), (~ ((virtual_gid))) >> 0u))) ^ (0u ^ 0u))]) | (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))]))) ^ 0u), _GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ _GLF_IDENTITY((0u ^ _GLF_IDENTITY(0u, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), clamp(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), 0u + (_GLF_FUZZED(subgroup_id))))) : 0u))), min((0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : 0u), ((false ? _GLF_FUZZED(subgroup_id) : 0u)) << 0u), (false ? _GLF_FUZZED(read_1) : (false ? _GLF_FUZZED(subgroup_id) : 0u))))), (0u ^ _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))))))], _GLF_IDENTITY((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))]), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))], min(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))])))), ~ (~ (_GLF_IDENTITY(~ ((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))])), min(~ ((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))])), ~ ((buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))]))))))))) << 0u), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ (0u ^ 0u))])), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(true ? ~ (~ (4)) : _GLF_FUZZED(-89472), (true ? ~ (~ (4)) : _GLF_FUZZED(-89472)) - 0))), 1, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(~ (~ (4)), (true ? ~ (_GLF_IDENTITY(~ (4), 0 ^ (~ (4)))) : _GLF_FUZZED(-89472))), 1, 1))))), (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-89472))), 1, 1), ivec3(ivec3(ivec3(_GLF_IDENTITY(~ (~ (4)), (true ? ~ (~ (4)) : _GLF_FUZZED(-89472))), 1, _GLF_IDENTITY(1, (1) | (1)))))))) >> 0))), _GLF_IDENTITY(4, 1 * (4)), _GLF_IDENTITY(4, (4) | 0)))) << 0), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, min(64, 64)), 64))) / 1), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, max((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0 : _GLF_FUZZED(2.7)))))))) ? (next_virtual_gid) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), 0u, 0u))), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, max((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0 : _GLF_FUZZED(2.7)))))))) ? (next_virtual_gid) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), 0u, 0u))), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))))) >> 0u)))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))), ~ (~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))), (~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))))) + 0u))))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), min(~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(mat3x2(vec4(0.0, 0.0, 0.0, 0.0), 0.0, 1.0)), (vec4(mat3x2(vec4(0.0, 0.0, 0.0, 0.0), 0.0, 1.0))) * vec4(1.0, 1.0, 1.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), ~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))), true, true, false))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))))) * 1u))), (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, _GLF_IDENTITY(float(mat4((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0 + (float(mat4((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))), exp(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 1.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), max(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), uint(uvec2(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), 1u))))) : _GLF_FUZZED(workgroup_base)))), (true ? ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(-1.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) / 1u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0)), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0)), false, true)))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), max(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-7.6) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), uint(uvec2(_GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), clamp((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), max((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))))) * _GLF_IDENTITY(1.0, (1.0) + 0.0)))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))), 1u))))) : _GLF_FUZZED(workgroup_base)))) : _GLF_FUZZED(subgroup_local_id))), 0u ^ (~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0), transpose(transpose(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6385.7681)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 0.0, 0.0)))) + 0.0)) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid), 0u | (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0), transpose(transpose(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0)))))), 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6385.7681)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 0.0, 0.0)))) + 0.0)) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, max((_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), vec4(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(820.833, -3.1, -8912.2500, -6.9)) : vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(820.833, -3.1, -8912.2500, -6.9)) : vec4(1.0, 1.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0))))))) + vec4(0.0, 0.0, 0.0, 0.0)), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))), _GLF_IDENTITY(~ (~ (~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))))), ~ (~ (~ (~ (~ (~ _GLF_IDENTITY((next_virtual_gid), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 1.0))), 0.0), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec4(49.35, -842.128, 4.0, 1.8)) : vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) - sqrt(vec4(0.0, 0.0, 0.0, 0.0)))), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(454.268) : 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) * 1.0))) ? (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid)))))))))))))) - 0u) : _GLF_FUZZED(subgroup_local_id)))) - 0u)], _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (_GLF_IDENTITY(read_1, (read_1) / 1u))) >> 0u))) == read_2, (read_1 == read_2) || false)))))) / 1u) + 1, 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(false ? _GLF_FUZZED(int(-411.227)) : _GLF_IDENTITY(4, (4) | 0), max(false ? _GLF_FUZZED(int(-411.227)) : _GLF_IDENTITY(4, (4) | 0), false ? _GLF_FUZZED(int(-411.227)) : _GLF_IDENTITY(4, (4) | 0))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.8)), float(injectionSwitch.y), bool(true))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
