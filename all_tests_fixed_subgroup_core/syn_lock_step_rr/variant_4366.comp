#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(62.31), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-0.8)), bvec2(true, false)))))[0], (injectionSwitch)[0]))) * 1.0), _GLF_FUZZED(-608.830)), vec2(_GLF_IDENTITY(_GLF_FUZZED(-507.901), (true ? _GLF_FUZZED(-507.901) : _GLF_FUZZED(8824.5417))), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(mat2x3(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2(injectionSwitch)), _GLF_IDENTITY(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), min(clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)))))), 0.0, cos(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0))), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), min(_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), clamp(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), min(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))))), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups)), (~ ((gl_NumWorkGroups))) / uvec3(1u, 1u, 1u))))), max(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) | ((gl_NumWorkGroups))), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), _GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), ~ (~ (max((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), min(_GLF_IDENTITY((gl_NumWorkGroups), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups))), (gl_NumWorkGroups))))))))))))), uvec3(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), 1u), _GLF_IDENTITY(max(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((false ? uvec3(195399u, 168024u, 42705u) : uvec3(138489u, 143864u, 76571u))))))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), 1u), uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), 1u)), ~ (_GLF_IDENTITY(~ (max(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), 1u), uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), clamp(_GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), uvec3(uvec3((gl_NumWorkGroups))))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups))), (gl_NumWorkGroups)))))))))), 1u))), uvec4(0u, 0u, 0u, 0u) + (~ (max(_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))), ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u))))) | ((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec4(gl_NumWorkGroups, 0u)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups, gl_NumWorkGroups))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))))))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(~ (~ ((gl_NumWorkGroups))), min(~ (~ ((gl_NumWorkGroups))), ~ (~ ((gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), 1u), ~ (_GLF_IDENTITY(~ (uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)))), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups)), uvec3(_GLF_IDENTITY(uvec4(~ ((gl_NumWorkGroups)), 1u), (uvec4(~ ((gl_NumWorkGroups)), 1u)) - uvec4(0u, 0u, 0u, 0u)))))), (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), (true ? max((gl_NumWorkGroups), (gl_NumWorkGroups)) : _GLF_FUZZED(uvec3(185035u, 91103u, 113387u)))))), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), 1u), (uvec4((gl_NumWorkGroups), 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (uvec3(_GLF_IDENTITY(uvec4((gl_NumWorkGroups), 1u), (uvec4((gl_NumWorkGroups), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) >> uvec3(0u, 0u, 0u)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), 1u)), (~ (uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))), (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))) | (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))), (uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))), (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))) | (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))))))) | (uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))), (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))) | (_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))))))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), (uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max(_GLF_IDENTITY((gl_NumWorkGroups), ~ (~ _GLF_IDENTITY(((gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (((gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)))))))))), 1u))) << uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-48.59)), float(0.0), bool(true))), 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), uvec4(uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(max((_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), min(uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((gl_NumWorkGroups), (gl_NumWorkGroups)), max((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | ((gl_NumWorkGroups)))), max((gl_NumWorkGroups), (gl_NumWorkGroups))))), uvec3(_GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), clamp(max((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups)))))), (gl_NumWorkGroups)), max(_GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))), ~ (~ ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[_GLF_IDENTITY(0, 0 + (0))], gl_NumWorkGroups[1], gl_NumWorkGroups[_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (2)), 2))])))))), _GLF_IDENTITY(max((gl_NumWorkGroups), (gl_NumWorkGroups)), (_GLF_IDENTITY(max((gl_NumWorkGroups), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))))), _GLF_IDENTITY((max((gl_NumWorkGroups), (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u), ((max((gl_NumWorkGroups), (gl_NumWorkGroups))) / uvec3(1u, 1u, 1u)) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) >> uvec3(0u, 0u, 0u)))))))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) / 1u))))))))))))))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(406.625) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(406.625) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(406.625) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), bool(bool(bool(bvec2((false), false)))))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false))))), (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) + subgroup_id * subgroup_size) ^ 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) / 1u))) + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | 0u), (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))) + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))), ~ (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)))), (true ? (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1)))), ((~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1))))) / 1u)))))) + 0u)), 1u * _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))))))) + 0u))), ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))))))) + 0u)))) | ((~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) | (subgroup_local_id + 1))), ~ (~ (~ (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) | (subgroup_local_id + 1))))))) + 0u)))))))) * _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) * 1u, (_GLF_IDENTITY((1u) * 1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((1u) * 1u), max(uint((1u) * 1u), uint((1u) * 1u)))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((1u) * 1u), max(uint((1u) * 1u), uint((1u) * 1u))), (_GLF_IDENTITY(uint((1u) * 1u), max(uint((1u) * 1u), uint((1u) * 1u)))) >> 0u)), uint(_GLF_IDENTITY(uint((1u) * 1u), max(uint(_GLF_IDENTITY((1u) * 1u, 0u ^ (_GLF_IDENTITY((1u) * 1u, ((1u) * 1u) - 0u)))), uint((1u) * 1u)))), uint(_GLF_IDENTITY(uint((1u) * 1u), max(uint(_GLF_IDENTITY((1u) * 1u, max(_GLF_IDENTITY((1u) * 1u, 0u | ((1u) * 1u)), (1u) * 1u))), uint((1u) * 1u)))))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), clamp((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, (subgroup_local_id + 1) * 1u)), ~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u))))))) % subgroup_size)) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, (64) ^ 0)))) + 0), 4);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2114) : 4, max(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)))) || false)), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2114) : 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2114) : 4, clamp(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2114) : 4, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2114) : 4, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(-2114) : 4)), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))) ? _GLF_FUZZED(-2114) : 4) ^ 0))))), (_GLF_IDENTITY(4, 0 + (4))) | 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)), 0 | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)))), (0 | 0) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)), 0 | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0))))))), int(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)), 0 | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)))), (0 | 0) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)), 0 | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0))))))), (1 & 1), 0, 0), (ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)), 0 | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)))), (0 | 0) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0)), 0 | (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0)))), (~ (_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) ^ 0))))) | 0)))) | 0))))))), (1 & 1), 0, 0)) / ivec4(1, 1, 1, 1))))), 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, true && ((_GLF_IDENTITY(false, ! (! (false)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), true)), false, true)))), bvec2(bvec2(bvec2(false, false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, false), true)), false, true)))), bvec2(bvec2(bvec2(false, false)))), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * exp(0.0)) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bool(! (_GLF_IDENTITY(true, ! (! (true))))))))) ? injectionSwitch.y : _GLF_FUZZED(sign(9.2)))))) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(1.0))), mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(1.0))), (true ? _GLF_IDENTITY((injectionSwitch.y) / round(length(normalize(1.0))), (false ? _GLF_FUZZED(62.31) : (injectionSwitch.y) / round(length(normalize(1.0))))) : _GLF_FUZZED(46.76)))), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, exp(0.0), 0.0)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6006.1647), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(551.512)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), bool(bool(bool(_GLF_DEAD(false))))))), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false)))) && true))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1348.2471)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-66.18, mix(float(_GLF_FUZZED(-7.0)), float(-66.18), bool(true)))), (injectionSwitch)[1]), bvec2(false, true))))).y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))), false), true, true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), false))))) || false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), false, true)), true, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), true)))), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))) + determinant(mat3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0)), (((_GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))) + determinant(mat3(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0))) - 0.0)) + 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0))).y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, sqrt(1.0) * (1.0))), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(max(0.0, 0.0), min(max(0.0, 0.0), max(0.0, 0.0))), float(mat2x4(max(0.0, 0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0))))))))), 0.0))).y), (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y), _GLF_IDENTITY(0.0 + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), float(_GLF_IDENTITY(vec3(0.0 + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(1.0, 0.0, 0.0, 1.0))), 0.0))), 0.0))).y)), cos(0.0), sqrt(0.0)), (vec3(0.0 + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (true ? vec3(1.0, 1.0, 1.0) : _GLF_FUZZED(vec3(-8.3, 3.7, 1.4))))))))) * 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0))).y : _GLF_FUZZED(790.857))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-88.36))), max(0.0, 0.0))), 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((125.006 - injectionSwitch)) : vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0))))).y), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(0.1)), _GLF_IDENTITY(_GLF_IDENTITY(float(sqrt(1.0)), max(_GLF_IDENTITY(float(sqrt(1.0)), min(float(sqrt(1.0)), float(sqrt(1.0)))), float(sqrt(1.0)))), (true ? float(sqrt(1.0)) : _GLF_FUZZED(42.67))), bool(true))), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), min(sqrt(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))), sqrt(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))), 0.0))).y), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)) + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0 + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0)), min(_GLF_IDENTITY(vec3(0.0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0)), mix(vec3(_GLF_FUZZED(9783.1080), _GLF_FUZZED(-11.48), (vec3(0.0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0)))[2]), vec3((vec3(0.0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0)))[0], (vec3(0.0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), tan(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0)))[1], _GLF_FUZZED(-34.27)), bvec3(true, true, false))), _GLF_IDENTITY(vec3(0.0 + (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0)), mix(vec2(_GLF_IDENTITY((vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0)))[0], (true ? _GLF_IDENTITY((vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0)))[0], ((vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(0.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0), (mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, abs(0.0), round(length(normalize(1.0))), 0.0, 0.0, 1.0, 0.0, 1.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 0.0)))[0]) / 1.0) : _GLF_FUZZED(-80.04))), _GLF_FUZZED((-12.74 * -95.66))), vec2(_GLF_FUZZED(-3523.0017), (vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0)))[1]), bvec2(false, true)))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(sqrt(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0))) : _GLF_FUZZED(ceil(2.8)))), 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(_GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), sqrt(0.0))), sqrt(0.0), sqrt(0.0))), 0.0))).y)), cos(0.0), sqrt(0.0)), vec3(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0) + (vec3(0.0 + (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y)), cos(0.0), sqrt(0.0)))))), (_GLF_IDENTITY(vec3(0.0 + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3168.1389 / -35.11)), _GLF_FUZZED(-6572.0584)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), sqrt(1.0), 0.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) + 0.0))), 0.0))).y)), cos(0.0), sqrt(0.0)), (vec3(0.0 + (min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, sqrt(0.0), 0.0))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3168.1389 / -35.11)), _GLF_FUZZED(-6572.0584)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3168.1389 / -35.11)), _GLF_FUZZED(-6572.0584)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3168.1389 / -35.11)), _GLF_FUZZED(-6572.0584)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), sqrt(1.0), 0.0, sqrt(0.0), 0.0))).y) / 1.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))), 1.0))))), cos(0.0), sqrt(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(263.428)), float(0.0), bool(true)))))) - vec3(0.0, 0.0, 0.0))) / vec3(1.0, 1.0, 1.0)))))) * 1.0)) : _GLF_FUZZED(1.9))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(-6686.8127)), bool(false)))), 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sqrt(1.0), 0.0, 0.0)), (false ? _GLF_FUZZED(5.1) : float(mat2(0.0, sqrt(1.0), 0.0, 0.0)))))), max(sqrt(0.0), sqrt(0.0))), 0.0))).y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))))), true), true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), true))), true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   barrier();
  }
}
