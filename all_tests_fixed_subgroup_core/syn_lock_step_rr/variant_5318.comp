#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(1635.0597))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))))), float(_GLF_FUZZED(-8385.3109)), bool(false)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(mat2x4(mat2(1.0, 0.0, 1.0, 0.0))))), float(mat3(float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), mat2(mat2x4(mat2(1.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)) + (vec3(injectionSwitch.y, 1.0, 0.0))))), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-4978.8435, -41.94)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), vec3(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y) || false)))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(85.50)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(1635.0597))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), injectionSwitch.y)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-91.19), _GLF_FUZZED((26.59))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), (float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))) - 0.0)))), 0.0), vec3(0.0, 0.0, 0.0) + (vec3(injectionSwitch.y, 1.0, 0.0))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) * 1.0)))))), float(_GLF_FUZZED(-8385.3109)), bool(false))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.0)), float(0.0), bool(true)))) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))))))).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.0)), float(0.0), bool(true)))) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) - 0.0), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))))))).x) + 0.0) : _GLF_FUZZED(9.2), (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))) ? _GLF_FUZZED(675.644) : _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(886.094)), float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.8)), float(1.0), bool(true))), 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sqrt(1.0), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(sqrt(1.0), 1.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))), _GLF_IDENTITY(mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948))))), (mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, _GLF_IDENTITY(638.883, (_GLF_IDENTITY(638.883, min(638.883, 638.883))) * 1.0), 2730.1177, 1693.4948)))))) + mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).x : _GLF_FUZZED(9.2), min(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-59.43)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)), (_GLF_IDENTITY(_GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (_GLF_IDENTITY(true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))).x : _GLF_FUZZED(9.2), _GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-4651.5200)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.8)), float(1.0), bool(true))), 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))))))).x : _GLF_FUZZED(9.2), (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))), mat3(1.0) * (_GLF_IDENTITY(mat3(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0), (true ? mat3(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-4651.5200)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.8)), float(1.0), bool(true))), 1.0, 0.0) : _GLF_FUZZED(mat3(6.8, -4.4, -9.3, 55.62, 8.3, 672.487, 638.883, 2730.1177, 1693.4948)))))))).x : _GLF_FUZZED(9.2)) / abs(1.0)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(vec2(-4816.5706, -9761.6708)), max(_GLF_FUZZED(vec2(-4816.5706, -9761.6708)), _GLF_FUZZED(vec2(-4816.5706, -9761.6708)))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), true && ((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), true && (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1894.7103) : injectionSwitch.x)), 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat2(log(1.0), 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / uvec3(1u, 1u, 1u))) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), uvec3(2u)))), gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1))))])).x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.6)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) || (false))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) || (false))), true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) << 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << _GLF_IDENTITY(0u, (0u) * 1u))) | 0u) + 1, _GLF_IDENTITY(max(subgroup_local_id + 1, subgroup_local_id + 1), ~ (~ (max(subgroup_local_id + 1, subgroup_local_id + 1)))))), uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), max(_GLF_IDENTITY(uint((subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (uint((subgroup_local_id + 1))), (~ (uint((subgroup_local_id + 1)))) ^ 0u))), _GLF_IDENTITY(uint((subgroup_local_id + 1)), min(uint((subgroup_local_id + 1)), uint((subgroup_local_id + 1)))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, (_GLF_IDENTITY((subgroup_size) + 0u, uint(uvec3((subgroup_size) + 0u, 1u, 1u)))) | 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.8) : injectionSwitch.x)), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.8) : injectionSwitch.x)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, abs(1.0), 0.0))), 0.0)), (true ? float(vec3(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.8) : injectionSwitch.x)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), vec4(0.0, 0.0, abs(1.0), 0.0))), 0.0)) : _GLF_FUZZED(8.3)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, false))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec3(bool(bvec3(false, false, true)), true, false)))))))))), (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), min((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), int(ivec2(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), min((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), (0 ^ 1)))), _GLF_IDENTITY(0 | (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) >> 0), 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))), clamp(0 | (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))), min(_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))), _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))), 0 | (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, 0 | (1)), 1), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))) ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), clamp(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, min(1, 1)), 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), max(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))) << 0), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))))), 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), (true ? _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), 0 ^ (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))) : _GLF_FUZZED(55369))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : _GLF_IDENTITY(clamp(1, 1, 1), min(_GLF_IDENTITY(clamp(1, 1, 1), clamp(clamp(1, 1, 1), clamp(1, 1, 1), clamp(1, 1, 1))), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) << 0)))), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), (true ? _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), ~ (~ (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))) : _GLF_FUZZED(553))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(42412, (42412) << 0)) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))))) - 0))))), clamp((_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), max(clamp(1, 1, 1), _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))))))), (_GLF_IDENTITY(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))), (_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))) | (_GLF_IDENTITY(clamp(1, 1, 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))) | 0))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), min((1), (1)))))), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))))))), (_GLF_IDENTITY(min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), (false ? _GLF_FUZZED(clamp(24932, -7216, -35822)) : (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))))), clamp(min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, int(int(1))), 1), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))), (false ? _GLF_FUZZED(42412) : clamp(1, 1, 1))))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)), int(int((false ? _GLF_FUZZED(42412) : clamp(1, 1, 1)))))))))))))) + 0)))))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(1.0 * _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y)))), float(_GLF_FUZZED((6.4 - 4.3))), bool(false)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), mix(float(1.0 * (injectionSwitch.y)), float(_GLF_FUZZED((6.4 - 4.3))), _GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), true && (bool(false))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u ^ ((false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid]))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), _GLF_IDENTITY(uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), (true ? uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))) : _GLF_FUZZED(next_virtual_gid)))))), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))), clamp(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)) || false)))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, min(4, 4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))) && true)) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
