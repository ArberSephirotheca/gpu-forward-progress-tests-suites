#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), true, false)), true)))), false)), bvec2(bvec4(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))), true, false)), true)))), false)), false, true)))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), false)))))))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) || false)))))), false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((true)), ! (! (! ((true))))), bool(bvec4(_GLF_IDENTITY(! ((true)), ! (! (! ((true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), ((! (_GLF_IDENTITY(true, ! (! (true)))))) && true))), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))), false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))), false || (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))))) && true)), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false || (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), vec2(_GLF_FUZZED(_GLF_IDENTITY(50.21, clamp(50.21, _GLF_IDENTITY(50.21, max(50.21, 50.21)), 50.21))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * cos(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(false, true))).y)), true)), true), bvec2(bvec3(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), vec2(_GLF_FUZZED(_GLF_IDENTITY(50.21, clamp(50.21, _GLF_IDENTITY(50.21, max(50.21, 50.21)), 50.21))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * cos(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[1]), bvec2(false, true))).y)), true)), true), true))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) && true)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)), false, true))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec3(bvec3(bvec2(false, true), true)))), true))))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false, false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false, false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), bvec2(bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))), false, false)))))), true, true)))))))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bool(false)))))))))))), true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), true, false, false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (! (false))))))))), true, false, false)), (bool(bvec4((! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (! (! (false))))))))), true, false, false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), false))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))), bool(bvec2(! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))), false)))))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true))))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), false, false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)), false || (bool(_GLF_IDENTITY(false, (false) && true)))), true, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), true))), false, false))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) && true)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, bool(bool(true)))))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, _GLF_IDENTITY(false, (false) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true && (! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))))) && true), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-855.797), _GLF_FUZZED((9879.6303 + vec3(-75.61, 5.3, -604.170).b))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), true)))))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), false, false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), _GLF_IDENTITY(vec2(_GLF_FUZZED(50.21), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(mat4x3(vec2(_GLF_FUZZED(50.21), (injectionSwitch)[1]), length(sqrt(vec3(0.0, 0.0, 0.0))), abs(0.0), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat4x3(vec2(_GLF_FUZZED(50.21), (injectionSwitch)[1]), length(sqrt(vec3(0.0, 0.0, 0.0))), abs(0.0), log(1.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))), bvec2(false, true))).y)), true)), true))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), ! (! (false))))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) && true)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))), false)))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))), false)))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(false, true), true))))), false)))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true)))), true))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), true && (! (! (false)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) < injectionSwitch.y))), bool(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), true))), false, false)))))), ! (! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ! (! ((! (false)))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || _GLF_IDENTITY(false, false || (false)))))))), false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY((false), false || ((false))), false)), false)))) && true)) || false) && true))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) || _GLF_IDENTITY(false, (false) && true)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true)))), false))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true)))), false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true)))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), true))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (true))))))), ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false)))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), ((! (false))) || false)) || false)) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))))), true)))), false)))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), false, false)), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.2)), vec2(_GLF_FUZZED(50.21), (injectionSwitch)[1]), bvec2(false, true))).y)), true)), true))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))) || false))))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_IDENTITY(false, (false) && true)), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), true, true))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, true), true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, true), true), false)), false)))))), false, false)))))))))))))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true)))))) || false), _GLF_IDENTITY(true && (! (! (false))), true && (true && (! (! (false)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), true))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), ! (! (! (! _GLF_IDENTITY((false), ((false)) && true)))))) || false), _GLF_IDENTITY(true && (! (! (false))), true && (true && (! (! (false)))))))))))), true))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) && true))))))))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true)))))) || false), false, false)), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, cos(0.0), 1.0, 1.0))), injectionSwitch.y)))), true)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))), bool(bvec2(bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true)))), true)))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, ! (! (false)))) || false, true, true)))), true)))))))), false, false)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true))))), true))), false, false))))))))))), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   do
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), (_GLF_IDENTITY(! (bool(bvec3(false, false, false))), true && (! (_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))) || false))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))) || false))) && true), false)))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) && true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(-72.40))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)), float(_GLF_FUZZED(834.449)), bool(false))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
            }
           barrier();
          }
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))), ((injectionSwitch.x > injectionSwitch.y)) && true))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-908.586, 771.302)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x3(vec2(1.0, 1.0), 0.0, 1.0, 1.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.3, -9.9)) : injectionSwitch)))))).x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0))), 1.0), (mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0))), 1.0)) * mat3(1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0))), 1.0), (mat3x2(injectionSwitch, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0))), 1.0)) * mat3(1.0)))))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
      {
      }
     else
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), false || (! (! (! (false)))))))), (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat2(9773.1298, -3.9, -4.4, 90.09)))))))))
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, false || (true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / cos(0.0))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           for(int _injected_loop_counter = (((0 & -47989) << _GLF_IDENTITY(int(7), int(7))) & 10944); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.0)), float(0.0), bool(true))), 0.0, 0.0)), 0.0))) + (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x)) : _GLF_FUZZED(subgroup_id))), gl_NumWorkGroups.x)), 0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u)), 0u), (true ? uvec4(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), (_GLF_IDENTITY((gl_NumWorkGroups) / uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ ((gl_NumWorkGroups) / uvec3(1u, 1u, 1u)))) >> uvec3(0u, 0u, 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u)) : _GLF_FUZZED(uvec4(181922u, 124889u, 88648u, 185922u)))))), gl_NumWorkGroups)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))], gl_NumWorkGroups[2]))) | (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) + _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u)))))) / uvec3(1u, 1u, 1u)).x), uint(uvec3((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), (uvec3(uvec3(gl_NumWorkGroups))) + uvec3(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u, 1u, 1u)))).x), 0u, 0u))) >> _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) * 1u)), min(_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))), _GLF_IDENTITY(~ (0u), (~ (0u)) - 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (0u) * 1u)), min(_GLF_IDENTITY(~ (0u), max(~ (0u), ~ (0u))), _GLF_IDENTITY(~ (0u), (~ (0u)) - 0u)))) | 0u), _GLF_IDENTITY(~ (0u), (true ? ~ (0u) : _GLF_FUZZED(subgroup_local_id)))))) >> _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(uint((0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))))))));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) * 1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bool(_injected_loop_counter != 1))), _GLF_IDENTITY(bool(bvec3(_injected_loop_counter != 1, false, true)), false || (bool(bvec3(_injected_loop_counter != 1, false, true)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((injectionSwitch - 1.8)))).x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, true)))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true))), (false) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true)))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, true)))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true))), (false) || false)), bvec3(bvec4(bvec3(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true))), (false) || false)), true)))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true)))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), true, false))))))) || false) || false)), false)))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))))))), true && (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), (! ((true))) && true))))), bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))), bvec3(bvec3(bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), true)))))))))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, (false) && true)))))), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(false, (false) && true))))))) && true))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, true)))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true))), (false) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), true && ((false))) && _GLF_IDENTITY(true, bool(bool(true)))))), true)))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, ! (! (true))), false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true, false)), bvec3(bvec4(bvec3(bvec3((_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false))))), true, false)), false)))))))), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))))))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, false || (false)))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, (false) || false)))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) && true)) || false), bool(bvec4(! (! (true)), true, true, true)))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, ((false) || false) || false)) || false)), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true))), (false) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false)))), true)))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))))))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))))))))))))))))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, (false) || false)))))))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), true, true, true)))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), (bool(_GLF_IDENTITY(false, bool(bool(false))))) && true))) || false)), (false) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true)))))))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), true))))))))) && true))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! _GLF_IDENTITY((true), bool(bool((true)))))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), false))), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)), bvec3(bvec4(bvec3(true, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))))), bool(bvec3(! ((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))))))), true, true))))) || false) || false)), false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false))))))) || false) || false)))))))))))))))))), true, false, false))))))) || false)))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) * 1))))) != (_GLF_IDENTITY(0, min(0, 0)) | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       else
        {
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)) && true))))) || false)))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y))))), (bool(bool(bool(bool((injectionSwitch.x > injectionSwitch.y)))))) || false))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
          {
          }
         else
          {
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.2), _GLF_FUZZED(1.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, float(float(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(false || ((false) && true), bool(bool(false || ((false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, _GLF_IDENTITY(false || ((false) && true), bool(bool(false || ((false) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))), false, true, false))))), false, true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(int(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), (true ? _GLF_IDENTITY(int(int(_injected_loop_counter)), int(int(int(int(_injected_loop_counter))))) : _GLF_FUZZED(_injected_loop_counter)))) != (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), ((1 << _GLF_IDENTITY(int(0), int(0)))) + 0) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (workgroup_base + subgroup_id * subgroup_size)), (~ (~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size))) >> 0u))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * _GLF_IDENTITY(1u, (1u) | (1u)))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * 1u)), (true ? ~ (_GLF_IDENTITY((1u), ((1u)) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(workgroup_base))))))) + 0u))))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * 1u)), (true ? ~ (_GLF_IDENTITY((1u), ((1u)) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(workgroup_base))))))) + 0u))))), clamp(~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * 1u)), (true ? ~ (_GLF_IDENTITY((1u), ((1u)) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(workgroup_base))))))) + 0u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * 1u)), (true ? ~ (_GLF_IDENTITY((1u), ((1u)) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(workgroup_base))))))) + 0u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * 1u)), (true ? ~ (_GLF_IDENTITY((1u), ((1u)) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(workgroup_base))))))) + 0u)))))))) | (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((1u), ((1u)) * 1u)), (true ? ~ (_GLF_IDENTITY((1u), ((1u)) * 1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(workgroup_base)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_FUZZED(workgroup_base))))))) + 0u)))))))))) ^ 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max((1u), (1u)))) << 0u) ^ 0u, ((1u) ^ 0u) - 0u)))) - 0u))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (injectionSwitch.x) / abs(1.0)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))), true && (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / abs(1.0), (true ? (injectionSwitch.x) / abs(1.0) : _GLF_FUZZED(-249.631)))) > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) * 1.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), (injectionSwitch.x) / abs(1.0)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.7)), bool(false))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-1.9)) : injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), true && (bool(bvec4(true, false, true, true))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.7)), bool(false))))) > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-1.9)) : injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-1.9)) : injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-1.9)) : injectionSwitch.x))) / abs(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(318.421)), float(1.0), bool(true))), min(1.0, 1.0)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(atan(-1.9)) : injectionSwitch.x))) / abs(_GLF_IDENTITY(1.0, min(1.0, 1.0)))) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0)), mat2(1.0) * (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 1.0, 1.0, 0.0))))).y)))))) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat4x3(mat2(1.0)))))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true, true)))))) ? _GLF_FUZZED(8.5) : 0.0))), max(vec4(injectionSwitch, 1.0, 0.0), vec4(injectionSwitch, 1.0, 0.0))))).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))));
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 1 * (_GLF_IDENTITY(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1))), true && (_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, true, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(subgroup_local_id), (uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))) + 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))), (1) / _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, (1) << 0), 1))))) ^ (0 << _GLF_IDENTITY(int(2), int(2))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1 ^ 0) * (1))) | (1))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, (1) + 0), 1))) | (1))), 1, 1), ivec3(ivec3(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0))) << 0))))), 1, _GLF_IDENTITY(1, min(1, 1))), clamp(ivec3((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0))) << 0))))), 1, _GLF_IDENTITY(1, min(1, 1))), ivec3((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0))) << 0))))), 1, _GLF_IDENTITY(1, min(1, 1))), ivec3((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0)), (int(ivec4(_GLF_IDENTITY(1, (1) << 0), 0, 1, 0))) << 0))))), 1, _GLF_IDENTITY(1, min(1, 1))))))))))) ^ 0) | 0))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) | 0u), 1u)), (uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), 1u))) + 0u)) + _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 0u | (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(workgroup_base, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), 1u), ~ (~ (uvec4(workgroup_base, 1u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), 1u)))))) + subgroup_id * subgroup_size))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (~ (workgroup_base + subgroup_id * subgroup_size)) >> 0u))) + ((_GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) / 1), _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), (_GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), ~ (~ (int(ivec3((1), 1, (1 | 1))))))) ^ 0)), (1))) ^ 0), (1) | 0), 1, 1))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), (_GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), ~ (~ (int(ivec3((1), 1, (1 | 1))))))) ^ 0)), (1))) ^ 0), (1) | 0), 1, 1))), min(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), (_GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), ~ (~ (int(ivec3((1), 1, (1 | 1))))))) ^ 0)), (1))) ^ 0), (1) | 0), 1, 1))), ((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), (_GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), ~ (~ (int(ivec3((1), 1, (1 | 1))))))) ^ 0)), (1))) ^ 0), (1) | 0), 1, 1)))) / 1), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), (_GLF_IDENTITY(int(ivec3((1), 1, (1 | 1))), ~ (~ (int(ivec3((1), 1, (1 | 1))))))) ^ 0)), (1))) ^ 0), (1) | 0), 1, 1)))))))) / 1), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ((1) - 0) / 1))) / 1), (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), int(ivec3((1), 1, (1 | 1)))), (1))) ^ 0), (1) | 0), 1, 1))) / 1)))) % subgroup_size), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))), min((0.0) + _GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), (0.0) + _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat2x4(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), min(float(mat2x4(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), float(mat2x4(dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0))))), dot(vec4(1.0, 0.0, sin(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), injectionSwitch.x)), 1u)));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && true))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))) || false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true, false)))))))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), ! (! (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)))))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) && true) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               else
                {
                }
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(bool(bvec3(false, true, false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec3(false, true, false)), true))), (! (bool(bvec2(bool(bvec3(false, true, false)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec3(false, true, false)), true)), false || (bool(bvec2(bool(bvec3(false, true, false)), true)))), ! (! (bool(bvec2(bool(bvec3(false, true, false)), _GLF_IDENTITY(true, false || (true))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (false)) && true)))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (! (false)) && true)))))), true, false))))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
            {
             for(int _injected_loop_counter = ((0 | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-0.1, -335.096)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(vec2(-0.1, -335.096))) * vec2(1.0, 1.0)))).y))))
                barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 | 1), ((1 | 1)) * 1), int(_GLF_IDENTITY(int((1 | _GLF_IDENTITY(1, min(1, 1)))), max(_GLF_IDENTITY(int((1 | 1)), (int((1 | 1))) ^ 0), int((1 | 1)))))), (_GLF_IDENTITY((1 | 1), int(_GLF_IDENTITY(int((1 | 1)), _GLF_IDENTITY(max(_GLF_IDENTITY(int((1 | 1)), (int((1 | 1))) ^ 0), int((1 | 1))), ~ (~ (max(_GLF_IDENTITY(int((1 | 1)), (int((1 | 1))) ^ 0), int((1 | 1)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((1 | 1), int(_GLF_IDENTITY(int((1 | 1)), max(_GLF_IDENTITY(int((1 | _GLF_IDENTITY(1, (1) / 1))), (int((1 | 1))) ^ 0), int((1 | 1)))))), min(_GLF_IDENTITY((1 | 1), int(_GLF_IDENTITY(int((1 | 1)), max(_GLF_IDENTITY(int((1 | 1)), (int((1 | _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))), _GLF_IDENTITY(1, min(1, 1)), 1))))) ^ 0), int((1 | 1)))))), _GLF_IDENTITY((1 | 1), int(_GLF_IDENTITY(int((1 | 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(int((1 | 1)), int(ivec2(int((1 | 1)), (0 ^ 0)))), (int((1 | 1))) ^ 0), int((1 | 1))))))))))); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], sqrt(1.0) * (injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(5585.8625, -9.0)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], sqrt(1.0) * (injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(vec2(5585.8625, -9.0)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], sqrt(1.0) * (injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(-3.9)), bvec2(false, false))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(5585.8625, -9.0)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))))).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))));
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((7254.4065 / 8581.3824)) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), (! (_GLF_WRAPPED_IF_TRUE(true))) && true))))), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       else
        {
        }
      }
     else
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))));
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id)))], ~ (~ (buf[_GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_id)))]))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (uint(read_1 == read_2)))) * 1u) + 1, 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 1) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))) && true)))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 1.0 * (injectionSwitch[1])))).y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))), mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))))[0], _GLF_FUZZED(24.96)), vec2(_GLF_FUZZED(-9478.4777), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))))[1]), bvec2(false, true)))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))), mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))))[0], _GLF_FUZZED(24.96)), vec2(_GLF_FUZZED(-9478.4777), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))))[1]), bvec2(false, true)))).y, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))), mix(vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))))[0], _GLF_FUZZED(24.96)), vec2(_GLF_FUZZED(-9478.4777), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(exp(injectionSwitch))))))[1]), bvec2(false, true)))).y) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
}
