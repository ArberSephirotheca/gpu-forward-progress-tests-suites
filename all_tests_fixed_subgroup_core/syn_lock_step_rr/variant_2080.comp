#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) || false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         break;
        }
       return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w = subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w = subgroup_local_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w = subgroup_local_id) - 0u), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w = subgroup_local_id, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w = subgroup_local_id) | 0u)) ^ 0u)) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))))) && true)))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && _GLF_IDENTITY(true, true && (true)))), bool(bvec4(bool(_GLF_IDENTITY(false, (false) && true)), true, false, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (((_GLF_IDENTITY(1 ^ _GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec2(0, 1))), (0) | 0), 0 | (1 ^ 0))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(_GLF_IDENTITY(2, (0 ^ 0) | (2))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_IDENTITY(_GLF_FUZZED(24685), int(_GLF_IDENTITY(ivec4(_GLF_FUZZED(24685), 0, 0, 1), clamp(ivec4(_GLF_FUZZED(24685), 0, 0, 1), ivec4(_GLF_FUZZED(24685), 0, 0, 1), ivec4(_GLF_FUZZED(24685), 0, 0, 1)))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) ^ 0u)))), workgroup_base)), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) | (workgroup_base), ((workgroup_base) | (workgroup_base)) ^ 0u)))), workgroup_base)), 0u | (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) ^ 0u)) | (workgroup_base), ((workgroup_base) | (workgroup_base)) ^ 0u)))), workgroup_base))))) / 1u))) + subgroup_id * subgroup_size + GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u & 67681u))) >> 0u), clamp(subgroup_id, subgroup_id, subgroup_id)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (0u & 67681u))) >> 0u), clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id), ~ (~ (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) + (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 1u * (8u))), uint(8u)))), clamp(subgroup_id, subgroup_id, subgroup_id))) - 0u), subgroup_id)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), ~ (~ (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), ~ (~ (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id)))))), min(_GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), ~ (~ (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id)))))), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), ~ (~ (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id)))))))), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), _GLF_IDENTITY(clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), ~ (~ (clamp(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), max(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))))) | (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)))), subgroup_id))))))))))))) | (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))) * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w) | 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2((1), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))), (int(ivec2((1), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))) | (int(ivec2((1), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))))))))))) | 0)) | 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)), ~ (~ ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0))))) | 0u)), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w) << 0u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)), max((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | _GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) ^ 0)) | 0)) | 0u)))), 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0, ((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0) | (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0, ((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0) / 1))))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0, (false ? _GLF_FUZZED(7209) : (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)))) | 0u)), clamp((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(45748))))))) | 0), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)), clamp((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), min(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), uint(uint(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0))))) / 1u))), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)), max((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), 0 | ((1))))))) | 0), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u, (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))), min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))))) | 0)) | 0u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) | (1))), (~ (_GLF_IDENTITY(1, (1) | (1)))) << 0)))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1))))))) | 0)) | 0u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), 0, 1)))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-24250))), min(1, _GLF_IDENTITY(1, (1) | (1))))) | _GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0u)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), 0, 1)))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-24250))), min(1, _GLF_IDENTITY(1, (1) | (1))))) | _GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0u))), min(~ ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), 0, 1)))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-24250))), min(1, _GLF_IDENTITY(1, (1) | (1))))) | _GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0u))), ~ ((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), max(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (1) | (1)))), 0, 1)))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-24250))), min(1, _GLF_IDENTITY(1, (1) | (1))))) | _GLF_IDENTITY(0, (0) >> (0 << _GLF_IDENTITY(int(0), int(0)))))) | 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), max(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), uint(uvec2(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), 0u))), _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) ^ 0u))), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | _GLF_IDENTITY(0, int(int(0))))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id, max(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id)).w + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) >> 0))))) | 0) : _GLF_FUZZED(-45567))), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (true ? _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))) : _GLF_FUZZED(12094)))) | 0)) | 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id, max(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id, GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id)).w + _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) >> 0))))) | 0) : _GLF_FUZZED(-45567))), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), (true ? _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))) : _GLF_FUZZED(12094)))) | 0)) | 0u))))))), 0u, 0u))), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) | (1))))) | 0)) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)), clamp((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), clamp((1), (1), (1))))))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), 0 + (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) >> 0)))))) | 0)) | 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), ((_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))))) >> 0) | 0), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)), ((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0))) - 0u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(3), int(3)))), _GLF_IDENTITY((1) | (1), max(_GLF_IDENTITY((1) | (1), max((1) | (1), (1) | (1))), (1) | (1))))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0)) | 0u)), max((_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), _GLF_IDENTITY((GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | (1))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), max((1), (1))), (1))))) | (1)))) + 0))) | 0)), (false ? _GLF_FUZZED(workgroup_id) : (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | (1))), (min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), max((1), (1))), (1))))) | (1)))) + 0))) | 0)))) | 0u)), (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), min(1, _GLF_IDENTITY(1, (1) | (1))))) | 0), (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.w + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0)))))) | 0)) | 0u))))))))) ^ 0u) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | ((4))) | _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) << (0 | 0))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-3.0))) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0)))).y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0)))).y), true)), true && (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0)))).y), true)), bool(bvec3(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, sqrt(0.0)))).y), true)), false, false))))))), false))), false)))))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))) && true)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.y = read_1;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.z = read_2, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.z = read_2) ^ 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))))) | 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))))) | 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, ~ (~ (1)))))) | 0) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * 1) : _GLF_FUZZED(19616)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-8682.3226)), min(_GLF_IDENTITY(float(_GLF_FUZZED(-8682.3226)), mix(float(float(_GLF_FUZZED(-8682.3226))), float(_GLF_FUZZED((true ? 0.2 : 81.39))), bool(false))), _GLF_IDENTITY(float(_GLF_FUZZED(-8682.3226)), clamp(float(_GLF_FUZZED(-8682.3226)), float(_GLF_FUZZED(-8682.3226)), float(_GLF_FUZZED(-8682.3226)))))), bool(false))), mix(float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8682.3226)), bool(false)))), float(_GLF_FUZZED(-591.476)), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))) * 1.0)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
            barrier();
           continue;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7822.8052)), bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0))); _injected_loop_counter --)
  {
   atomicStore(buf[next_virtual_gid], uint(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.y == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_17num_workgroupread_1read_2subgroup_local_id.z) + 1, 4, 64, 4);
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
