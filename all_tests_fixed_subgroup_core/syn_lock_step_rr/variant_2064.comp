#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 mat2x4 _f0;
 mat2x3 _f1;
 vec4 _f2;
 bvec3 _f3;
 ivec2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 bool _f1;
 uvec2 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
 uvec2 _f5;
 uint subgroup_local_id;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bool _f2;
 mat2x4 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size;
 uvec4 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.z = subgroup_id;
uint subgroup_size = 16;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(mat3(1.0), _GLF_struct_2(_GLF_struct_0(bvec2(true), true, uvec2(1u), mat3x2(1.0), mat3x2(1.0), uvec2(1u), gl_SubgroupInvocationID), _GLF_struct_1(mat2x4(1.0), mat2x3(1.0), vec4(1.0), bvec3(true), ivec2(1), mat4x3(1.0)), true, mat2x4(1.0), mat3x2(1.0)));
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size.z = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size.z * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.w = workgroup_base;
  }
 else
  {
  }
 uint virtual_gid = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.z * subgroup_size + _GLF_struct_replacement_3._f1._f0.subgroup_local_id;
 GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size.y = virtual_gid;
 uint next_virtual_gid = GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.w + GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.z * subgroup_size + ((_GLF_struct_replacement_3._f1._f0.subgroup_local_id + 1) % subgroup_size);
 GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size.y], 4, 64, 0);
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.y = read_1;
  }
 uint read_2 = atomicLoad(buf[GLF_merged3_0_1_13_1_1_11_2_1_14num_workgroupvirtual_gidworkgroup_size.y], 4, 64, 0);
 atomicStore(buf[GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.x], uint(GLF_merged4_0_1_16_1_1_6_2_1_11_3_1_14next_virtual_gidread_1subgroup_idworkgroup_base.y == read_2) + 1, 4, 64, 4);
}
