#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(147.151)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) && (true && (true)))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, _GLF_IDENTITY(false, false || (false))))))), ! (! ((! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, _GLF_IDENTITY(false, false || (false)))))))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true, false)))) && true)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), true, false)))) && true)))))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))) && true))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), true))))))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) && true))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, ! (! (false)))))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, _GLF_IDENTITY(false, ! (! (false)))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(((7.1)))), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(3.7)))), bool(true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), _GLF_IDENTITY(false, ! (! (false))) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), bool(_GLF_IDENTITY(bvec2(! (! (bool(false))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (! (bool(false))), true))), bvec2(bvec2(bvec2(bvec2(bvec2(! (! (bool(false))), true))))))))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y))))) && true))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.2)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.2)), bool(false)))) / _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec3(bool(false), true, true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false)))), bool(bvec3(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))), false)))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.8) : injectionSwitch.y))), float(_GLF_FUZZED(-39.21)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))) || false)))), true, false)))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.8) : injectionSwitch.y))), float(_GLF_FUZZED(-39.21)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y, (false ? _GLF_FUZZED(8.8) : injectionSwitch.y))), float(_GLF_FUZZED(-39.21)), bool(false)))) || false), true, false)))) && true)), false, true, false)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.8) : injectionSwitch.y))), float(_GLF_FUZZED(-39.21)), bool(false))), true, false)))) && true)), false, true, false)), false || (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(8.8) : injectionSwitch.y))), float(_GLF_FUZZED(-39.21)), bool(false))), true, false)))) && true)), false, true, false))))) && true))))) || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false)))))), (! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))))) || false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), (bool(false)) && true))))), true, false, false))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, _GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false)))))), false || (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false)))))), true && (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false)))), ((_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, false, false))))) || false)))))))) || false))))), (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, false, false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))) && true))))) || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true, _GLF_IDENTITY(false, (false) && true), false))))))), (injectionSwitch.x > injectionSwitch.y))))) && true)))))) && true)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-48.02) : injectionSwitch.x)) > injectionSwitch.y))) || false)) || false, ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (injectionSwitch)), injectionSwitch, injectionSwitch)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))) || false) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y = subgroup_id;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, (true) && true) && ((_GLF_IDENTITY(false, true && (false))))))), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)), ((_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(! (injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-229.401) : injectionSwitch.y))))))))))) || false))))), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))), ! (! ((! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1681.3021)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.3, 7.9)))).y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-59.76)), mix(float(_GLF_FUZZED((+ -26.76))), float(float(_GLF_FUZZED(-59.76))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(false)))), bool(true))), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false))))), (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1681.3021)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-978.178))), injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED(-59.76)), mix(float(_GLF_FUZZED((+ -26.76))), float(float(_GLF_FUZZED(-59.76))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(false)))), bool(true))), ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true)))) || false)) || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), float(_GLF_FUZZED(-3817.9201)), bool(false))))), true))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)) || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), true)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.0) : 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), (mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9429.5311))), 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0))))) * mat2(1.0)))), mix(float(_GLF_FUZZED((-1.2 - -77.35))), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0), vec4(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(7.0) : 0.0)), 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), (mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)), 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9429.5311))), 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 1.0))))) * mat2(1.0))))), bool(true))) > injectionSwitch.y)) || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y)), true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))))), true))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))) || false)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), false, true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(-1.5)), bool(false)))), (float(_GLF_IDENTITY(float(_GLF_ONE(1.0, injectionSwitch.y)), mix(float(float(_GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_FUZZED(-1.5)), bool(false))))) - 0.0)), _GLF_ONE(1.0, injectionSwitch.y))))))), (vec2(mat2(injectionSwitch, 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))) * mat2(1.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), bool(bvec2((! (injectionSwitch.x < injectionSwitch.y)), false))))))))), true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) + 0.0), _GLF_IDENTITY(1.0, cos(0.0) * (1.0)), 1.0))))) || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), _GLF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)), ((_GLF_IDENTITY(true, (true) && true))) && true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), true))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(-2.7, -66.58)) : 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.9)), bool(false))), 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), (mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))))) * mat2(1.0)))) > injectionSwitch.y)) || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(-280.245, -4.3).x)), float(0.0), bool(true))) + (0.0)), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 0.0)), 1.0, 0.0, 1.0))))) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), float(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), 0.0, 1.0, 0.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0))))))))), float(_GLF_FUZZED(-9.0)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), float(_GLF_FUZZED(-9.0)), bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), float(_GLF_FUZZED(-9.0)), bool(false)))) - log(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), float(_GLF_FUZZED(-9.0)), bool(false))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5282.8754)), bool(false))), 0.0, 0.0))))), float(_GLF_FUZZED((+ 12.66))), bool(false)))))).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-3.4) : injectionSwitch.y, max(false ? _GLF_FUZZED(-3.4) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-3.4) : injectionSwitch.y, float(vec3(false ? _GLF_FUZZED(-3.4) : injectionSwitch.y, 1.0, 1.0)))))))), float(_GLF_FUZZED(-9.0)), bool(false))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), true, false, false)), true && (bool(bvec4((! (false)), true, false, false)))))) ? _GLF_FUZZED(_GLF_IDENTITY(-3.4, mix(float(-3.4), float(_GLF_FUZZED(9816.6781)), bool(false)))) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)) ? _GLF_FUZZED(_GLF_IDENTITY(-3.4, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-3.4, sqrt(1.0), 0.0), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(-3.4, sqrt(1.0), 0.0)))), min(float(_GLF_IDENTITY(vec3(-3.4, sqrt(1.0), 0.0), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(-3.4, sqrt(1.0), 0.0)))), float(_GLF_IDENTITY(vec3(-3.4, sqrt(1.0), 0.0), sqrt(vec3(1.0, 1.0, 1.0)) * (vec3(-3.4, sqrt(1.0), 0.0)))))))) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED((true ? 8.7 : 476.013)), _GLF_FUZZED(195.414)), vec2((vec2(0.0, 0.0))[0], _GLF_IDENTITY((vec2(0.0, 0.0))[1], (false ? _GLF_FUZZED((+ -508.750)) : (vec2(0.0, 0.0))[1]))), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true))))).y, (false ? _GLF_FUZZED(-3.4) : injectionSwitch.y))), float(_GLF_FUZZED(-9.0)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(_GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), clamp(normalize(vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(normalize(vec3(1.0, 1.0, 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(_GLF_ONE(1.0, injectionSwitch.y))), normalize(vec3(1.0, 1.0, 1.0)))))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY(_GLF_FUZZED(-3.4), clamp(_GLF_FUZZED(-3.4), _GLF_IDENTITY(_GLF_FUZZED(-3.4), max(_GLF_FUZZED(-3.4), _GLF_FUZZED(-3.4))), _GLF_IDENTITY(_GLF_FUZZED(-3.4), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.4), max(_GLF_FUZZED(-3.4), _GLF_FUZZED(-3.4)))), float(_GLF_FUZZED(1.7)), bool(false))))) : injectionSwitch.y))), float(_GLF_FUZZED(-9.0)), bool(false))))))), true)))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(min(-2.7, _GLF_IDENTITY(-66.58, mix(float(_GLF_FUZZED(-19.73)), float(-66.58), bool(true))))) : 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), (mat2x3(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))))) * mat2(1.0)))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) || (bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0)), mix(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0)), 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED((+ -96.53))), _GLF_ONE(1.0, injectionSwitch.y) * (float(_GLF_FUZZED((+ -96.53))))), bool(false))), 1.0, 0.0, 1.0))))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y, round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-3.4) : injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[0], _GLF_FUZZED(3526.6268)), vec2(_GLF_FUZZED(5.9), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y))), float(_GLF_FUZZED(-9.0)), bool(false))))), true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0)))).x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ (gl_WorkGroupID))) | (~ (~ (gl_WorkGroupID))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), uvec3(uvec4((gl_WorkGroupID), 1u)))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (~ _GLF_IDENTITY((~ (gl_WorkGroupID)), max((_GLF_IDENTITY(~ (gl_WorkGroupID), (false ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid) : ~ (gl_WorkGroupID)))), (~ (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))))))))) | (~ (~ (gl_WorkGroupID))))))), max(~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupID)), clamp((~ (gl_WorkGroupID)), (~ (gl_WorkGroupID)), _GLF_IDENTITY((~ (gl_WorkGroupID)), uvec3(1u, 1u, 1u) * ((~ (gl_WorkGroupID)))))), (~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (_GLF_IDENTITY(~ (gl_WorkGroupID), ~ (~ (~ (gl_WorkGroupID))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) | (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))))))), ~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(~ (~ (gl_WorkGroupID)), (~ (~ _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) ^ ((gl_WorkGroupID))))) | (~ (~ (gl_WorkGroupID)))))))))))).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))).y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))) || false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) || false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))) || false), (_GLF_DEAD(false)) && true)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(1.0, 1.0)))).x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, determinant(mat4(exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, float(vec3(injectionSwitch.y, 1.0, determinant(mat4(exp(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), max(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(11.98))) < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(11.98))) < injectionSwitch.y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(-4.9) : injectionSwitch.x)), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, length(vec2(0.0, 0.0)), 1.0, 1.0, 1.0))).x)) > injectionSwitch.y)) && true))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)))))))), false, false)))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.2, -94.70)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, true))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, true)))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, true))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false), false, true))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true))))))), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false, true && (false)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true)), _GLF_IDENTITY(false, true && (false)), true)))) && true))))), false))))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y, _GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y) - uint(_GLF_ZERO(0.0, injectionSwitch.x)), (GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * subgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y * subgroup_size, max(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y * subgroup_size, 1u * _GLF_IDENTITY((GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y * subgroup_size), uint(uvec2((GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y * subgroup_size), 0u)))), GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y * subgroup_size))) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false))))), true, false, false)))))), false, false), true))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_DEAD(false))), false, false), bvec3(bvec3(bvec3(bool(bool(_GLF_DEAD(false))), false, false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.z = virtual_gid;
 uint next_virtual_gid = workgroup_base + GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.y * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))), (false ? _GLF_FUZZED(smoothstep(-781.198, uintBitsToFloat(workgroup_size), vec2(-5.9, 56.54))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) * mat4(1.0)))))), vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))))))).x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))))), mix(vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-9137.0136)), vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0))))))[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))))), (true ? (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 1.0)))))) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.z], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(((injectionSwitch.x > injectionSwitch.y)), false))) && true)), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(23.56)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.z], 4, _GLF_IDENTITY(64, 0 + (64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), (true ? max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)) : _GLF_FUZZED(vec2(_GLF_IDENTITY(-1.3, sqrt(0.0) + (-1.3)), -5737.7921)))))))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(4.5)), vec2(_GLF_FUZZED(-52.67), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-9885.3337) : (injectionSwitch)[1]))), bvec2(false, true))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false)))), clamp(vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), bool(false)))), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false)))), mix(vec2((vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-245.789)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false)))))[0], (vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false))), mix(float(_GLF_FUZZED(-7.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false))), (_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false)))) - 0.0)), bool(true)))))[1]), vec2(_GLF_FUZZED(-9851.6736), _GLF_FUZZED(6.8)), bvec2(false, false))), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), bool(false)))))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), (_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))) * mat2(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), (_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), (_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0))) * mat2(1.0)))), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), (true ? vec2(length(vec2(0.0, 0.0)), 1.0) : _GLF_FUZZED(vec2(-4.6, -137.777))))))))))) > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)))))), ! (! (! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(-705.920)), float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), (_GLF_IDENTITY(length(vec2(0.0, 0.0)), (length(vec2(0.0, 0.0))) - 0.0)) - 0.0)), bool(true))), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(7189.5547), (_GLF_FUZZED(7189.5547)) * determinant(mat4(1.0, 0.0, log(1.0), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0)))))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), mat2(1.0) * (vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(false, bool(bool(false))))))))))), min(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), (true ? _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), (true ? float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))) : _GLF_FUZZED(atan(-70.80, 8.7)))) : _GLF_FUZZED(-64.10))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))))))), ! (! (! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))), _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (false ? _GLF_FUZZED(mat3x2(5.7, 87.25, 7.5, 4964.9215, 1.4, 59.23)) : mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))), 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.7))), 0.0)), 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ceil(vec4(88.01, -1.9, -1.8, -4.5))) : vec4(injectionSwitch, 0.0, 0.0)))), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, sqrt(1.0))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(_GLF_IDENTITY(95.00, (false ? _GLF_FUZZED(-568.267) : _GLF_IDENTITY(95.00, clamp(95.00, _GLF_IDENTITY(95.00, clamp(95.00, 95.00, 95.00)), _GLF_IDENTITY(95.00, (95.00) / 1.0)))))))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), mix(vec2(_GLF_IDENTITY((vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))[0], (true ? (vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))[0] : _GLF_FUZZED(7.5))), (vec2(vec4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))[1]), vec2(_GLF_FUZZED((-846.933 * -8073.3857)), _GLF_FUZZED(3.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, sin(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(mix(-7286.2038, -9.0, 24.35)) : 1.0))))), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 1.0, 1.0))), 0.0)), 0.0)), 1.0)))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), (float(1.0)) / 1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))).y))))), bool(false)))))))), min(float(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.7), _GLF_FUZZED(2683.2125)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1565.3321)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0)), 1.0))))), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), (dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))) - 0.0))), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))) / 1.0)))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, 0.0)), max(vec2(vec4(injectionSwitch, 0.0, 0.0)), vec2(vec4(injectionSwitch, 0.0, 0.0))))).x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.4) : 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), min(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.4) : 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(9.4) : 0.0)), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))), _GLF_IDENTITY(1.0, float(float(1.0)))), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), min(_GLF_IDENTITY(max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), (max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))) / vec2(1.0, 1.0)), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), (false ? _GLF_FUZZED(-2.0) : _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), clamp(vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0), vec2(length(vec2(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.3))))), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))))))), mix(_GLF_IDENTITY(float(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0), (vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))))), clamp(_GLF_IDENTITY(float(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0), (vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))))), (false ? _GLF_FUZZED(-538.446) : float(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0), (vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))))))), float(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0), (vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))))), float(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0)))), 1.0), clamp(_GLF_IDENTITY(vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0), (vec2(length(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), (vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))) * mat2(1.0))), 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0), _GLF_IDENTITY(vec2(length(vec2(0.0, 0.0)), 1.0), max(vec2(length(vec2(0.0, 0.0)), 1.0), vec2(length(vec2(0.0, 0.0)), 1.0))))))))), float(_GLF_FUZZED(-91.81)), bool(false))))), dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(95.00)), mix(float(float(_GLF_FUZZED(95.00))), float(_GLF_FUZZED(53.38)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(false)))))))), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)), vec2(length(vec2(0.0, 0.0)), 1.0))))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(length(vec2(0.0, 0.0)), 1.0)), dot(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(7189.5547)))), (vec2(0.0, 1.0)) / vec2(1.0, 1.0)), vec2(length(vec2(0.0, 0.0)), 1.0)))))))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x = read_2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid) : GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid) : GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid)), uvec3(uvec3(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid, (false ? _GLF_FUZZED(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid) : GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid)))))) / uvec3(1u, 1u, 1u)).x, GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x))), ~ (~ (uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x, (GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x) | (GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x)), max(GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x, GLF_merged3_0_1_6_1_1_11_2_1_11read_2subgroup_idvirtual_gid.x)))))) + _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> _GLF_IDENTITY(0, max(0, 0)), ((1) >> 0) | 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
