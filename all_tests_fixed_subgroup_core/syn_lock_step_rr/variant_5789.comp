#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0)), vec4(abs(0.0), 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(tan(0.0), (false ? _GLF_FUZZED(-9.9) : _GLF_IDENTITY(tan(0.0), 0.0 + (tan(0.0)))))), vec4(abs(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1.8) : 1.0)))))), (mat4(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), dot(vec3(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0)), vec4(abs(0.0), 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), tan(0.0)), vec4(abs(0.0), 1.0, 0.0, 1.0))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, bool(bool(true))), false))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), true && (bool(true)))), false || (bool(_GLF_IDENTITY(bool(true), true && (bool(true))))))), false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(bool(bvec2(false, true)))))) && true)))))))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(472.684))), injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
          {
           return;
          }
         else
          {
          }
        }
       for(int _injected_loop_counter = (1 ^ int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1961.1371) : injectionSwitch.x)))) | 0)); _injected_loop_counter --)
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, false)))) || _GLF_IDENTITY(false, bool(bool(false))))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) && true), true && (false))));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       do
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            return;
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! ((false))))))) && true))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), false || (_GLF_IDENTITY((false), ! (! ((false))))))) && true)))))) || false))))), ! (! (false)))));
        }
      }
     else
      {
      }
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(1, 1))), max((1 | _GLF_IDENTITY(1, min(1, 1))), (1 | _GLF_IDENTITY(1, min(1, 1)))))), false, false)), bool(bvec4(bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 | _GLF_IDENTITY(1, min(1, 1))), max((1 | _GLF_IDENTITY(1, min(1, 1))), (1 | _GLF_IDENTITY(1, min(1, 1)))))), false, false)), false, true, true)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))), ((! (_GLF_DEAD(false)))) || false)))) || false))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           continue;
          }
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, true)), false || _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, true))), ((bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, true)))) && _GLF_IDENTITY(true, bool(bvec2(true, false)))))))))
    return;
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))), ! (! (! (_GLF_DEAD(false)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-4.5 / -4.2))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(9.5, _GLF_IDENTITY(2792.3331, 0.0 + (_GLF_IDENTITY(2792.3331, float(mat4(2792.3331, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, length(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, injectionSwitch.y))))) || false)))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1))))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), true && (_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(vec2(0.4, 1.4)) : (injectionSwitch)))))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(abs(0.0))))).x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0)))), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0)))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0)))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0))))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0)))), clamp(vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0)))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0)))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 1.0, 1.0, exp(abs(0.0))))))).x > injectionSwitch.y)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-1.4, 2719.9532)))).x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (true ? vec3(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), 0.0, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(vec3(4591.6101, -2372.1429, -5.2)), vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_FUZZED(vec3(4591.6101, -2372.1429, -5.2)), vec3(0.0, 0.0, 0.0) + (_GLF_IDENTITY(_GLF_FUZZED(vec3(4591.6101, -2372.1429, -5.2)), vec3(vec3(_GLF_FUZZED(vec3(4591.6101, -2372.1429, -5.2))))))))))), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))))))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-318.863), _GLF_FUZZED(-8294.9606)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(97.84, -2.9, 41.33))))) * vec3(1.0, 1.0, 1.0)), mat3(1.0) * (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(97.84, -2.9, 41.33))))) * vec3(1.0, 1.0, 1.0))))), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, exp(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(min(abs(0.0), abs(0.0)), min(min(abs(0.0), abs(0.0)), min(abs(0.0), abs(0.0))))), abs(0.0))), abs(0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((2575.2158))), bool(false))))), ! (! (bool((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (vec3(0.0, 1.0, 1.0)) / vec3(1.0, 1.0, 1.0)) : _GLF_FUZZED(vec3(97.84, -2.9, 41.33))))) * vec3(1.0, 1.0, 1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-2.2) : 1.0)), 1.0)), 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, exp(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), abs(0.0))), abs(0.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((2575.2158))), bool(false)))))))))))))))
      return;
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true)))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       return;
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), _GLF_IDENTITY(uint(uvec4(~ (subgroup_size), (0u ^ 0u), 1u, 0u)), (uint(uvec4(~ (subgroup_size), (0u ^ 0u), 1u, 0u))) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size))), max(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id * subgroup_size))))))), clamp(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(0u, uint(uint(0u))) ^ ((_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ (~ (~ (workgroup_base)))))) + subgroup_id * subgroup_size))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size)))) ^ 0u), _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((workgroup_base + subgroup_id * subgroup_size))))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (subgroup_size)), ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))), (~ (_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u))))) >> 0u))), subgroup_size)), _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u)), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u))), 1u)), (uint(uvec4(subgroup_size, 0u, (0u << _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) | 0u))))), (~ _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), uint(uvec2(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u))))) | ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, ~ (~ (0u)))) ^ 0u)))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), false || (! (_GLF_WRAPPED_IF_FALSE(false)))))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              return;
            }
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, false)))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, false, false))) || (false))))
    return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), (true ? uvec2(workgroup_base, 0u) : _GLF_FUZZED(uvec2(91345u, 152464u)))))), (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) + 0u)))) * 1u) + subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, max(_GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) - 0u), _GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, max(_GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) - 0u), _GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) | 0u)))), (true ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, max(_GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) - 0u), _GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) | 0u)))) : _GLF_FUZZED(virtual_gid)))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) * 1u, max(_GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) - 0u), _GLF_IDENTITY((workgroup_base) * 1u, ((workgroup_base) * 1u) | 0u)))))) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u) + subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))) + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (1u * (subgroup_size)) + 0u))), 0u, (0u | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), min((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * 1u))), _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_size)))) | 0u))))), 0u, _GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | 0u), (0u | 0u)))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u, 1u)), min(uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u, 1u)), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), 1u, 1u)))))))), 0u, (0u | 0u))) / uvec3(1u, 1u, 1u))), min((_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, _GLF_IDENTITY(_GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | 0u), (0u | 0u))), ~ (~ (_GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | 0u), (0u | 0u))))))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | 0u))) / uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, min(1u, 1u)) * (subgroup_size))), 0u, _GLF_IDENTITY((0u | 0u), max(_GLF_IDENTITY((0u | 0u), ((0u | 0u)) | 0u), (0u | 0u)))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(1u, 1u, 1u)), uvec3(uvec4(~ (uvec3(1u, 1u, 1u)), 0u))))))))) ^ uvec3(0u, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(workgroup_id))), 0u))), (uint(_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) * (subgroup_size))), 0u, (0u | 0u)), (_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), 0u, (0u | 0u)), _GLF_IDENTITY((uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) | 0u)))), clamp((uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), (false ? _GLF_FUZZED(workgroup_id) : 1u * (subgroup_size))))), 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) | 0u)))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) | 0u)))), _GLF_IDENTITY((uvec3(max(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) - 0u)), 0u, (_GLF_IDENTITY(0u | 0u, (0u | 0u) | 0u)))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), 1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), 1u)))))) ^ ((uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (_GLF_IDENTITY(0u | 0u, _GLF_IDENTITY((0u | 0u) | 0u, ((0u | 0u) | 0u) + 0u))))))))) / uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) | 0u) * (subgroup_size))), 0u, (0u | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | _GLF_IDENTITY(0u, (0u) | (0u)))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 1u)), min(_GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | _GLF_IDENTITY(0u, (0u) | (0u)))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 1u)), _GLF_IDENTITY(uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | _GLF_IDENTITY(0u, (0u) | (0u)))), (uvec3(max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), 0u, (0u | 0u))) / uvec3(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), 1u))))) ^ uvec3(0u, 0u, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), _GLF_IDENTITY(1u * (subgroup_size), clamp(_GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))) | 0u)), 1u * (subgroup_size))), 1u * (subgroup_size), 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), 1u * (subgroup_size))))))))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | 0u))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (true ? uvec3(subgroup_local_id, 0u, 0u) : _GLF_FUZZED(uvec3(102367u, 66100u, 189997u))))), (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (true ? uvec3(subgroup_local_id, 0u, 0u) : _GLF_FUZZED(uvec3(102367u, 66100u, 189997u)))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (true ? uvec3(subgroup_local_id, 0u, 0u) : _GLF_FUZZED(uvec3(102367u, 66100u, 189997u))))), ~ (~ (uint(_GLF_IDENTITY(uvec3(subgroup_local_id, 0u, 0u), (true ? uvec3(subgroup_local_id, 0u, 0u) : _GLF_FUZZED(uvec3(102367u, 66100u, 189997u))))))))))))) + 1) % _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u * (subgroup_size), clamp(1u * (subgroup_size), _GLF_IDENTITY(1u * (subgroup_size), clamp(_GLF_IDENTITY(1u * (subgroup_size), clamp(_GLF_IDENTITY(1u * (subgroup_size), max(_GLF_IDENTITY(1u * (subgroup_size), min(1u * (subgroup_size), 1u * (subgroup_size))), 1u * (subgroup_size))), 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_id)))) | 0u)), 1u * (subgroup_size))), 1u * (subgroup_size), 1u * _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))), 1u * (subgroup_size)))))))))))) | 0u));
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(acosh(injectionSwitch)), vec2(vec4(_GLF_FUZZED(acosh(injectionSwitch)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))))).y), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y)) / 1.0), (false ? _GLF_FUZZED(-3.4) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y)), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(reflect(injectionSwitch, vec2(-6.0, -7.6))))))), (true ? injectionSwitch : _GLF_FUZZED(acosh(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y))) - _GLF_ZERO(0.0, injectionSwitch.x)))), float(_GLF_FUZZED((- -8959.5648))), bool(false))), ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(acosh(injectionSwitch)))).y)) / 1.0))) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(1.0)))), (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(1.0))))) * 1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(1.0)))), _GLF_IDENTITY((_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(1.0))))), (true ? (_GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(1.0))))) : _GLF_IDENTITY(_GLF_FUZZED(485.919), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(485.919), mix(float(_GLF_FUZZED(485.919)), _GLF_IDENTITY(float(_GLF_FUZZED(vec3(-1857.2976, -0.4, -7.6).x)), (float(_GLF_FUZZED(vec3(-1857.2976, -0.4, -7.6).x))) / 1.0), bool(false))) : _GLF_FUZZED(49.42))))) + log(1.0)), _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, sqrt(1.0)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)) * 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, (4) | (4)))), clamp(int(int(_GLF_IDENTITY(4, (4) | (4)))), int(int(_GLF_IDENTITY(4, (4) | (4)))), int(int(_GLF_IDENTITY(4, (4) | (4))))))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, true && (_injected_loop_counter != 1))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12434) : _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), ~ (~ (0 ^ _GLF_IDENTITY((4), ((4)) | (0 | 0)))))), (false ? _GLF_FUZZED(-73735) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(12434) : _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ (4), ~ (~ (0 ^ _GLF_IDENTITY((4), ((4)) | (0 | 0)))))))))), 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((692.566 * 9.9)), _GLF_FUZZED(391.888)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], float(vec4((injectionSwitch)[0], 1.0, 0.0, 1.0))), (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-78.73) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-569.195)), bool(false))))) > injectionSwitch.y)) ? _GLF_FUZZED(reflect(length(3.7), tanh(449.743))) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(739.653)), float(0.0), bool(true))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(injectionSwitch.x, 0.0, sqrt(1.0), 1.0)), (float(vec4(injectionSwitch.x, 0.0, sqrt(1.0), 1.0))) * 1.0))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true))))))))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) : injectionSwitch), vec2(mat2x3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), clamp(determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0), (false ? _GLF_FUZZED(mat3x2(4.2, -3744.4972, 0.2, -66.97, -461.463, -6.7)) : mat3x2(0.0, 0.0, 1.0, 0.0, cos(0.0), 0.0))))), 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.8)), bool(false))), 0.0, 0.0, 0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0), mat2(mat2(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))), 0.0), vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)), mix(float(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))), float(_GLF_FUZZED(378.882)), bool(false))), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0)), injectionSwitch.y))) + 0.0))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2x3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))), mix(vec2(_GLF_FUZZED((-2.6 + 750.948)), _GLF_FUZZED(8602.9368)), vec2((_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2x3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, abs(1.0) * (0.0))), float(_GLF_FUZZED(-866.867)), bool(false))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / 1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-8406.4675))), 0.0, 0.0, sin(0.0))), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), max(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), (true ? _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), min(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))) : _GLF_FUZZED(intBitsToFloat(-60932)))))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))[0], (_GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2x3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, sqrt(1.0)))))), _GLF_IDENTITY(clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0)))), (false ? _GLF_FUZZED(563.504) : clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0), (true ? (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, min(1.0, 1.0))), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.8)), float(0.0), bool(true))), 0.0, 0.0, 0.0, cos(0.0), 1.0))), 0.0))) : _GLF_FUZZED(4.1)))))) - 0.0)), injectionSwitch.y))) + 0.0))), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2x3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.89)), float(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))), bool(true))))), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(-1.1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(round(distance(vec3(721.808, -0.6, 388.987), vec3(-580.977, -691.594, -76.92)))) : _GLF_FUZZED(-1.1))))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0))) * 1.0)) - 0.0), injectionSwitch.y))) + 0.0))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), vec2(mat2x3((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), 0.0, _GLF_IDENTITY(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), clamp(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, sin(0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_ONE(1.0, injectionSwitch.y), 0.0))))))))).y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_FUZZED(-1.1))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(11.89)), float(_GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0))), bool(true))))), (true ? float(mat3x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 0.0, 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(-1.1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(round(distance(vec3(721.808, -0.6, 388.987), vec3(-580.977, -691.594, -76.92)))) : _GLF_FUZZED(-1.1))))))) * _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), max(_GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), ((1.0)) / 1.0)) + 0.0), _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(-4695.6045) : (1.0))))) - 0.0))) * 1.0)) - 0.0), injectionSwitch.y))) + 0.0))), true, true, true))), false, true))))))));
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 1u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 | (64)), (_GLF_IDENTITY(64, 0 | (64))) ^ 0), 0);
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(4), int(4)), (1 << _GLF_IDENTITY(int(4), int(4))) | (1 << _GLF_IDENTITY(int(4), int(4))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), int(int(int(4)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((0 | 1), max((0 | 1), (0 | _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (0 ^ 0) + (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))), (false ? _GLF_FUZZED(atomicMax(_injected_loop_counter, _injected_loop_counter)) : _GLF_IDENTITY(1, int(ivec2(1, 1)))))))))) + 0))))); _injected_loop_counter ++)
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, (false) || false))))) && true)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))))), ! (! ((_GLF_IDENTITY(false, (false) || false)))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(false, (false) || false)) && true))))))))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) || false))), bool(bvec3(! ((_GLF_IDENTITY(false, (false) || false))), true, true))))))))))))) || false)))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ! (! ((true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))))
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(54246), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (false ? _GLF_FUZZED(-613) : 54246))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1))), ((_GLF_FUZZED(_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (false ? _GLF_FUZZED(-613) : 54246))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1)))) * _GLF_IDENTITY(1, (1) | (1))) >> 0) : _GLF_IDENTITY(4, max(4, 4))), 0 + ((false ? _GLF_IDENTITY(_GLF_FUZZED(54246), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (false ? _GLF_FUZZED(-613) : 54246))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1))), ((_GLF_FUZZED(_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (false ? _GLF_FUZZED(-613) : 54246))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1)))) * _GLF_IDENTITY(1, (1) | (1))) >> 0) : _GLF_IDENTITY(4, max(4, 4)))))), 0 ^ (_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(54246), (_GLF_FUZZED(_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (_GLF_IDENTITY(54246, (false ? _GLF_FUZZED(-613) : 54246))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1))) >> 0) : _GLF_IDENTITY(4, max(4, 4))))))), (false ? _GLF_FUZZED(-89708) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(54246) : _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) << 0)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(54246) : _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) << 0)))), ~ (~ ((false ? _GLF_FUZZED(54246) : _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) << 0)))))))) / 1))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4))), clamp((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4))), (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)))))) - 0) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), int(int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)))))) + 0)))), 1, 1), (ivec3((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4))), 1, 1)) | (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(54246) : 4))) ^ 0)), clamp(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(54246) : 4))) ^ 0)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(54246) : 4))) ^ 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(54246) : 4))) ^ 0)), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(54246) : 4))) ^ 0)) : _GLF_FUZZED(-33790))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)) ? _GLF_FUZZED(54246) : 4))) ^ 0)))), 1, 1))))), min((_GLF_IDENTITY(4, (false ? _GLF_FUZZED(54246) : 4))), (_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(54246) : 4), (_GLF_IDENTITY((false ? _GLF_FUZZED(54246) : 4), max((false ? _GLF_FUZZED(54246) : 4), (false ? _GLF_FUZZED(54246) : 4)))) | ((false ? _GLF_FUZZED(54246) : 4))))))))) << _GLF_IDENTITY(0, (0) / 1)), 64, 4);
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(8.1))) > injectionSwitch.y))))))))))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
