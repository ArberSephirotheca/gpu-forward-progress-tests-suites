#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_DEAD(false)))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (! (! (bool(bvec4(_GLF_DEAD(false), false, false, true))))))), ! (! (! (_GLF_IDENTITY(! (bool(bvec4(_GLF_DEAD(false), false, false, true))), ! (! (! (bool(bvec4(_GLF_DEAD(false), false, false, true))))))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(abs(vec2(1.0, 1.0)), vec2(mat4x3(abs(vec2(1.0, 1.0)), 1.0, 1.0, exp(0.0), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) * ((injectionSwitch))) + vec2(0.0, 0.0)).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(6376.2576, min(_GLF_IDENTITY(6376.2576, (_GLF_IDENTITY(6376.2576, max(6376.2576, 6376.2576))) / 1.0), 6376.2576)), -46.08, -2.0, _GLF_IDENTITY(7.7, _GLF_IDENTITY(min(7.7, 7.7), mix(float(_GLF_FUZZED(221.883)), float(min(7.7, 7.7)), bool(true))))).s)), float(injectionSwitch.y), bool(true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(abs(vec2(1.0, 1.0)), vec2(mat4x3(abs(vec2(1.0, 1.0)), 1.0, 1.0, exp(0.0), length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))) * ((injectionSwitch))) + vec2(0.0, 0.0)).x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec4(_GLF_IDENTITY(6376.2576, min(_GLF_IDENTITY(6376.2576, (_GLF_IDENTITY(6376.2576, max(6376.2576, 6376.2576))) / 1.0), 6376.2576)), -46.08, -2.0, _GLF_IDENTITY(7.7, _GLF_IDENTITY(min(7.7, 7.7), mix(float(_GLF_FUZZED(221.883)), float(min(7.7, 7.7)), bool(true))))).s)), float(injectionSwitch.y), bool(true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y, (injectionSwitch.x > injectionSwitch.y) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))))), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), false, true)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4266.8463) : injectionSwitch.y)))) || false)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(4266.8463) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || false))) || false), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-298.701, 7738.6898, -6704.8007, 8768.3107).t), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(75.69)), bvec2(true, false))).x > injectionSwitch.y)) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5.3, -5.1)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)) || false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || false)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)) || false, ! (! ((! (injectionSwitch.x > injectionSwitch.y)) || false))))))), ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((3.6 / float(170527u))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.5)), bvec2(true, false))).x)) > injectionSwitch.y)) || false))))))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))) | 0)) * 1), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))) | 0)) * 1))), 0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (false ? _GLF_FUZZED(17555) : _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), (_GLF_IDENTITY(0, (0) >> 0)) + (0 << _GLF_IDENTITY(int(7), int(7)))))), 0))))], max(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], max(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))])), (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) | 0, ((0) | 0) << 0), (_GLF_IDENTITY((0) | 0, ((0) | 0) << 0)) << (0 | 0))), 0, 0))]) - 0u)) + 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[2], uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + 0u), 1u), clamp(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], ~ (~ (gl_NumWorkGroups[2])))) + 0u), 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u) | (gl_NumWorkGroups), (uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)) << uvec3(0u, 0u, 0u)))[2], (gl_NumWorkGroups[2]) + 0u), 1u), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + 0u), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(uvec3(uvec3(24647u, 35422u, 145187u))))))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(uvec3(uvec3(24647u, 35422u, 145187u)))))))) | uvec3(0u, 0u, 0u)) : uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), min(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ (_GLF_IDENTITY((0), max((0), (0)))))) | 0), _GLF_IDENTITY(0, (0) | (0)), 0))))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, max(_GLF_IDENTITY((0) | 0, min(_GLF_IDENTITY((0) | 0, ((0) | 0) | (_GLF_IDENTITY((0) | 0, clamp((0) | 0, (0) | 0, _GLF_IDENTITY((0) | 0, ((0) | 0) - 0))))), (0) | 0)), (0) | 0))), 0, 0))], _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0), 0, 0))]) - 0u, 0u + ((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0), 0, 0))]) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u)))))) + 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])), ((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(uvec3(uvec3(24647u, 35422u, 145187u))))))), (_GLF_FUZZED(_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(24647u, 35422u, 145187u), uvec3(uvec3(uvec3(24647u, 35422u, 145187u)))))))) | uvec3(0u, 0u, 0u)) : uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, int(ivec3(0, 0, (0 | 1))))), 0, 0), min(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, max(_GLF_IDENTITY((0) | 0, min(_GLF_IDENTITY((0) | 0, ((0) | 0) | ((0) | 0)), (0) | 0)), (0) | 0))), 0, 0))], _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0), 0, 0))]) - 0u, 0u + ((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0), 0, 0))]) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)), 0u)))))) + 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) + uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u)))).x, max(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), 1 * ((0))) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, min(2, 2))], uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, _GLF_IDENTITY(2, max(2, 2))))], (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (gl_NumWorkGroups))[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, _GLF_IDENTITY(2, max(2, 2))))]) | (gl_NumWorkGroups[_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, _GLF_IDENTITY(2, max(2, 2))))]))) + 0u), 1u), clamp(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[2], (true ? gl_NumWorkGroups[2] : _GLF_FUZZED(subgroup_id))), (gl_NumWorkGroups[2]) + 0u), 1u), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2))], (gl_NumWorkGroups[2]) + 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | (1u))), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + 0u), 1u)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(24647u, 35422u, _GLF_IDENTITY(145187u, (145187u) >> 0u))) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)))) | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, clamp(7, 7, 7)), 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) / ivec3(1, 1, 1)))), 0))))], (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, clamp(7, 7, 7)), 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) / ivec3(1, 1, 1)))), 0))))]) - 0u)) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) / 1)), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(27917)))))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 & 24590) + (0))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(6237) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1))), (int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(0, 1)) / ivec2(1, 1)))) | 0)), _GLF_IDENTITY(0, clamp(0, 0, 0)))), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, clamp(7, 7, 7)), 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) / ivec3(1, 1, 1)))), 0))))], (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, clamp(7, 7, 7)), 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 1, 1), (ivec3(0, 1, 1)) / ivec3(1, 1, 1)))), 0))))]) - 0u)) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | 0, ((0) | 0) / 1)), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(27917)))))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 & 24590) + (0))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(6237) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]))), max(false ? _GLF_FUZZED(uvec3(24647u, 35422u, _GLF_IDENTITY(145187u, (145187u) >> 0u))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), min(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), (true ? clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0) : _GLF_FUZZED(-26259))))))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u))) | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(77613) : _GLF_IDENTITY(0, (0) >> 0)))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(742) : 7))), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)))))) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) * (1 & 1)), 0, _GLF_IDENTITY(0, (0) << 0)))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY(0, ~ (~ (0)))))) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + _GLF_IDENTITY(0u, 0u + (0u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), 0 + (_GLF_IDENTITY(0, (0) | 0))), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0), (_GLF_IDENTITY((0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0), ((0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)) / 1)) - 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, 0 | (0)), 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), _GLF_IDENTITY(false ? _GLF_FUZZED(uvec3(24647u, 35422u, _GLF_IDENTITY(145187u, (145187u) >> 0u))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u, ~ (~ (_GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u, ((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u) << 0u)))))) + 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) * 1), 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), clamp((gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]))) - 0u), _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), (_GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), max((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), ((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))])) >> 0u)))) | 0u) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ (0u & 190385u))) | (0u))), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) >> 0) : _GLF_FUZZED(12285))))), 0))]) - 0u)) + 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY((0) | 0, max((0) | 0, _GLF_IDENTITY((0) | 0, ~ (~ ((0) | 0)))))), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0, max((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0, (0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u)) | 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), min(false ? _GLF_FUZZED(uvec3(24647u, 35422u, _GLF_IDENTITY(145187u, (145187u) >> _GLF_IDENTITY(0u, (0u) << 0u)))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, max(0, 0))), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], min(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]))) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), (clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)) + 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), ~ (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)), (~ (clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))) >> 0)))) << 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + _GLF_IDENTITY(0u, 0u ^ (0u))), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - _GLF_IDENTITY(0u, (0u) - 0u)), (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], 0u ^ (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))), (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]))) ^ 0u)) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2]), false ? _GLF_FUZZED(uvec3(24647u, 35422u, _GLF_IDENTITY(145187u, (145187u) >> 0u))) : uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, ~ (~ (0))), 0)), (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ((0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))) + 0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (1 ^ 1) + (_GLF_IDENTITY(0, (0) - 0))), 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, 0, 1), (false ? _GLF_FUZZED(ivec3(-67299, 96256, 34942)) : _GLF_IDENTITY(ivec3(0, 0, 1), ~ (~ (ivec3(0, 0, 1))))))))) | 0), 0, 0))]) - 0u)) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(70347) : _GLF_IDENTITY(0, int(ivec3(0, 0, 0))))), (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u)))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u), _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u, (_GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u, min((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u, (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u))) / 1u))) + 0u), min(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY(0, (0) - 0)), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0), 0 ^ (((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)))), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) >> 0), 0, 0))]) - 0u), (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ ((0 << _GLF_IDENTITY(int(7), int(7))) ^ 0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u))))))), gl_NumWorkGroups[1], gl_NumWorkGroups[2])))))))).x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)) + 0u), gl_NumWorkGroups[1], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[2], uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + 0u), 1u), _GLF_IDENTITY(clamp(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, ((gl_NumWorkGroups[_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 1)))]) + 0u) / 1u), (gl_NumWorkGroups[2]) + 0u)), (gl_NumWorkGroups[2]) + 0u))), 1u), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) / uvec3(1u, 1u, 1u))[2]) + 0u, min((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, min((gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 0, 0, 0), clamp(ivec4(0, 0, 0, 0), _GLF_IDENTITY(ivec4(0, 0, 0, 0), (ivec4(0, 0, 0, 0)) / ivec4(1, 1, 1, 1)), ivec4(0, 0, 0, 0))))))]) + 0u)))), (gl_NumWorkGroups[2]) + 0u))), 1u), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + 0u), 1u)), (false ? _GLF_FUZZED(uvec2(142397u, 149422u)) : clamp(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((_GLF_IDENTITY(gl_NumWorkGroups[2], max(gl_NumWorkGroups[2], gl_NumWorkGroups[_GLF_IDENTITY(2, (false ? _GLF_FUZZED(50903) : _GLF_IDENTITY(2, (2) | (2))))]))) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, (_GLF_IDENTITY((gl_NumWorkGroups[2]), uint(uvec2((gl_NumWorkGroups[2]), 0u))) + 0u) / 1u), (gl_NumWorkGroups[2]) + 0u)), (gl_NumWorkGroups[2]) + 0u))), 1u), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, (_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[2]) + 0u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)), (uint(uvec3(_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[2]) + 0u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u))) | (uint(uvec3(_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, clamp((gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[2]) + 0u)), (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 1u)))))) / 1u), min((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY(min((gl_NumWorkGroups[2]) + 0u, _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u, ~ (_GLF_IDENTITY(~ ((gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u), min(~ ((gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u), ~ ((gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u)))))), (_GLF_IDENTITY(min((gl_NumWorkGroups[2]) + 0u, (gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u), (true ? min(_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, 0u ^ ((gl_NumWorkGroups[2]) + 0u))))), (~ (_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, 0u ^ ((gl_NumWorkGroups[2]) + 0u)))))) | (~ (_GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((gl_NumWorkGroups[2]) + 0u, 0u ^ ((gl_NumWorkGroups[2]) + 0u))))))))), (gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u) : _GLF_FUZZED(subgroup_local_id)))) | (min((gl_NumWorkGroups[2]) + _GLF_IDENTITY(0u, 0u + (0u)), (gl_NumWorkGroups[_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) + 0)) - 0)]) + 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u))[2]) + 0u))), 1u), uvec2(_GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) + 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (1u))) >> 0u))))))))), (false ? _GLF_FUZZED(uvec3(24647u, 35422u, 145187u)) : uvec3(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(-89672 & 0, 0 | (-89672 & 0))) | (0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), min(_GLF_IDENTITY(0, (0) | 0), _GLF_IDENTITY(0, (0) | 0))))), 0, 0))]), (false ? _GLF_FUZZED(123496u) : _GLF_IDENTITY((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (-89672 & 0) | (0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), uint(uvec4((gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (-89672 & 0) | (0)), clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]), 1u, 0u, 0u))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) | (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))])), 1u)), max(uint(_GLF_IDENTITY(uvec2(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], 1u), (uvec2(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], 1u)) * ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(5u), uvec2(5u))) >> _GLF_IDENTITY(uvec2(5u), uvec2(5u))))), uint(uvec2(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], 1u)))))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], ~ (~ (gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) ^ (0 ^ 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0), (clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0)) | 0))]))), (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) << 0), (0) | 0), 0, 0))]) - 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))], (gl_NumWorkGroups[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | 0), 0, 0))]) - 0u)))) ^ 0u)) + 0u), gl_NumWorkGroups[1], gl_NumWorkGroups[2])))).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(min(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((min(min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), clamp((min(min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), (min(min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), (min(min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))))[0], max((min(min(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0], (min(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat2x4(min(injectionSwitch, injectionSwitch), 1.0, 1.0, cos(log(1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), exp(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat2x4(min(injectionSwitch, injectionSwitch), 1.0, 1.0, cos(log(1.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), exp(0.0)), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, (0.0) / cos(0.0)), abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0)), clamp(dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-76.68)), bool(false))))), dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, abs(0.0), exp(0.0)), vec3(0.0, 0.0, 1.0)))))))))) + vec2(0.0, 0.0)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[0])), (min(min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))[1]), vec2(_GLF_FUZZED(380.873), _GLF_IDENTITY(_GLF_FUZZED(1109.3329), max(_GLF_FUZZED(1109.3329), _GLF_FUZZED(1109.3329)))), bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, 0u + (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(_GLF_IDENTITY(uint(gl_WorkGroupSize.x), (uint(gl_WorkGroupSize.x)) ^ (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) << 0u))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-59.69)), bool(false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false)), bool(bvec3(bool(bvec3(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false, false)), false, true))))), true, _GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_IDENTITY(true, false || (true)), false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true, false))))), true && (bool(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), true, false)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-2834.8507, 214.295)))).y, mix(float(_GLF_FUZZED(6249.4299)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-237.809)) : injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, injectionSwitch.y))))), bool(true)))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-2834.8507, 214.295)))).y, mix(float(_GLF_FUZZED(6249.4299)), float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))))), ((_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0)))))) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-237.809)) : injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y))))), bool(true)))))), false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, _GLF_IDENTITY(true, (true) || false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))))), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))), ! (! (bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))))), false, true)), false, true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), (((1u | _GLF_IDENTITY(1u, ~ (~ (1u)))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u) + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u) + subgroup_local_id)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ (workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((~ (workgroup_base)), (true ? (~ (workgroup_base)) : _GLF_FUZZED(num_workgroup)))))) + subgroup_id * subgroup_size + subgroup_local_id, ~ _GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), ~ (~ (_GLF_IDENTITY((~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))), ~ (~ ((~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)), min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)), _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)))) + subgroup_id * subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) ^ 0u)), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) ^ 0u))) / 1u), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), min(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)))), 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u))))) << 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, min(_GLF_IDENTITY(64, (64) * 1), 64)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-86.79)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), false, true)))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == _GLF_IDENTITY(read_2, (read_2) ^ 0u)) + 1, 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 | (4))) << 0), 0, 0, 1))), 4, 4)));
 if(_GLF_DEAD(false))
  barrier();
}
