#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 ivec4 _f0;
 mat4 _f1;
 vec4 _f2;
 uint subgroup_local_id;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
} ;

struct _GLF_struct_23 {
 ivec3 _f0;
 bool _f1;
 mat3x2 _f2;
 ivec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_25 {
 uint _f0;
 uvec2 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
} ;

struct _GLF_struct_21 {
 vec2 _f0;
 mat4 _f1;
 mat3x2 _f2;
 mat4 _f3;
 bool _f4;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 mat3x4 _f1;
 bvec3 _f2;
 bvec4 _f3;
 _GLF_struct_21 _f4;
 uint subgroup_id;
 vec4 _f5;
} ;

struct _GLF_struct_18 {
 bool _f0;
} ;

struct _GLF_struct_17 {
 mat4x3 _f0;
 vec2 _f1;
 mat2x4 _f2;
 mat4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_16 {
 vec2 _f0;
 vec2 _f1;
 vec2 _f2;
 vec3 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_26 {
 uvec4 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_25 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 ivec4 _f1;
 uint workgroup_id;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 bvec3 _f1;
 uint _f2;
 int _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_10 {
 mat4x3 _f0;
 mat2 _f1;
 int _f2;
} ;

struct _GLF_struct_9 {
 vec4 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 mat2x3 _f1;
 _GLF_struct_10 _f2;
} ;

struct _GLF_struct_7 {
 mat4 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 mat4x2 _f1;
 float _f2;
 vec4 _f3;
 bool _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 uvec3 _f1;
 bvec3 _f2;
 mat2x3 _f3;
 uint _f4;
 uint _f5;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat3x4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 int _f1;
 mat2 _f2;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
 mat4x2 _f3;
 mat3x2 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_0 {
 int _f0;
 uvec2 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_15 {
 _GLF_struct_1 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_14 _f4;
 ivec2 _f5;
 ivec3 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) || false, ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) || false) && true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6966.2869)), bool(false)))) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6966.2869)), bool(false)))) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6966.2869)), bool(false)))) - 0.0)))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6966.2869)), bool(false)))) - 0.0), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6966.2869)), bool(false)))) - 0.0), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(6966.2869)), bool(false)))) - 0.0)))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.2, -5.6)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(uvec4(1u), _GLF_struct_19(ivec4(1), _GLF_struct_16(_GLF_IDENTITY(vec2(1.0), vec2(0.0, 0.0) + (vec2(1.0))), vec2(1.0), vec2(1.0), vec3(1.0), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), min(_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) ^ (ivec3(1))), ivec3(1)))) << ivec3(0, 0, 0))), _GLF_struct_17(mat4x3(1.0), vec2(1.0), mat2x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 1.0, 1.0))), mat4(1.0), uvec2(1u)), _GLF_struct_18(_GLF_IDENTITY(true, (true) && true)), mat2x3(1.0)), _GLF_struct_22(_GLF_struct_20(mat3(1.0)), mat3x4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), bvec4(true), _GLF_struct_21(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))) * mat4(1.0)), mat3x2(1.0), _GLF_IDENTITY(mat4(1.0), mat4(1.0) * (mat4(1.0))), true), gl_SubgroupID, vec4(1.0)), _GLF_struct_25(1u, _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)), (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u))) << uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))))) | (uvec2(_GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_struct_23(ivec3(1), true, mat3x2(1.0), ivec3(1), mat4x2(1.0)), _GLF_struct_24(ivec2(_GLF_IDENTITY(1, (1) / 1)))), mat4x2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (false))))), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), true && ((_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, true, false))))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), float(vec2(cos(0.0), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(1.0)), (mat4(injectionSwitch.y, 1.0, 1.0, 1.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, abs(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) + vec2(0.0, 0.0)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9.9) : injectionSwitch.x)) > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(ivec4(1), mat4(1.0), vec4(1.0), gl_SubgroupInvocationID);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0))).y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-23.24)), vec2(_GLF_FUZZED(379.171), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), true, true), false)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, (true) || false) && ((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_1(ivec4(1), _GLF_struct_0(1, uvec2(1u), mat4x2(1.0), mat2x3(1.0), vec2(1.0))), _GLF_struct_6(_GLF_struct_2(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), 1, mat2(1.0)), _GLF_struct_3(mat3x2(1.0), bvec3(true), ivec3(1), mat3x4(1.0), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(41284)))) | (1))) | _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))), ~ (~ ((0 >> _GLF_IDENTITY(int(4), int(4))))))))), _GLF_struct_4(ivec4(1), uvec3(_GLF_IDENTITY(1u, (1u) | (1u))), bvec3(true), mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) << 0u), 1u), mat4x2(1.0), mat3x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.6)), float(1.0), bool(true))) : _GLF_FUZZED(_GLF_IDENTITY(3.8, min(_GLF_IDENTITY(3.8, float(mat4(3.8, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), 3.8)))))), _GLF_struct_5(uvec2(1u), mat4x2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(3.7) : (1.0) + length(vec2(0.0, 0.0))))), min(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(3.7) : (1.0) + length(vec2(0.0, 0.0))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) + length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(3.7) : (1.0) + length(vec2(0.0, 0.0))))))), vec4(1.0), true, mat3x2(1.0))), _GLF_struct_8(_GLF_struct_7(mat4(1.0), bvec3(true))), _GLF_struct_11(_GLF_struct_9(vec4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(457.382)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(457.382)), bool(false))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-400.366)), 1.0 * _GLF_IDENTITY((float(_GLF_FUZZED(-400.366))), (true ? (float(_GLF_FUZZED(-400.366))) : _GLF_FUZZED(-1898.6033)))), float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(457.382)), bool(false)), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(457.382)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))), (mix(float(1.0), float(_GLF_FUZZED(457.382)), _GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), false || (bool(false)))) && true))) / 1.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(457.382)), bool(false)), max(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(457.382), (true ? _GLF_FUZZED(457.382) : _GLF_FUZZED(91.34)))), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(457.382)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(457.382)), bool(false)), mix(float(1.0), float(_GLF_FUZZED(_GLF_IDENTITY(457.382, (false ? _GLF_FUZZED(9548.7670) : 457.382)))), bool(false)))))))))), bool(true)))), float(_GLF_FUZZED(-5.6)), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, abs(1.0), 1.0)))))), ivec2(1)), mat2x3(1.0), _GLF_struct_10(mat4x3(1.0), mat2(1.0), 1)), _GLF_struct_14(_GLF_struct_12(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-534.824)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), min(float(vec2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)))), float(vec2(injectionSwitch.y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y, injectionSwitch.y)))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(-709.297) : (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(-7.5)), bvec2(false, false))))).x > injectionSwitch.y))))))), true)), false)))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, true)))))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 0.0, determinant(mat2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 1.0, 1.0))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))) - vec2(0.0, 0.0)).y))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(560.457)), float(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), bool(true)))), 1.0, 0.0, 1.0, 0.0, 0.0))))))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), false)))), false)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true)), false)))), false)), false)))))))), bvec3(true), 1u, 1), _GLF_struct_13(mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1), (_GLF_IDENTITY(ivec4(1), max(ivec4(1), ivec4(_GLF_IDENTITY(1, (1) | (1)))))) / ivec4(1, 1, 1, 1)), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))), ((_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1)))))) | ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))), (_GLF_IDENTITY(ivec4(1), ~ (~ (ivec4(1))))))) * ivec4(1, 1, 1, 1)) / ivec4(1, 1, 1, 1)), (ivec4(1)) * ivec4(1, 1, 1, 1), (ivec4(1)) * ivec4(1, 1, 1, 1)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1))), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1))), clamp(clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1))), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1))), clamp(_GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), clamp(_GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), (true ? (ivec4(1)) * ivec4(1, 1, 1, 1) : _GLF_FUZZED(ivec4(-89886, -35184, -67842, -95678)))), (ivec4(1)) * ivec4(1, 1, 1, 1), _GLF_IDENTITY((ivec4(1)) * ivec4(1, 1, 1, 1), ((ivec4(1)) * ivec4(1, 1, 1, 1)) << ivec4(0, 0, 0, 0)))))))))), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1))))))))), gl_WorkGroupID.x)), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) | (_GLF_IDENTITY(ivec2(ivec2(1)), (_GLF_IDENTITY(ivec2(ivec2(1)), min(ivec2(ivec2(1)), ivec2(ivec2(1))))) | (ivec2(ivec2(1))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) | (ivec2(_GLF_IDENTITY(ivec2(1), (ivec2(1)) | ivec2(0, _GLF_IDENTITY(0, 0 | (0)))))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(ivec2(1)), min(ivec2(ivec2(1)), ivec2(ivec2(1)))), (_GLF_IDENTITY(ivec2(ivec2(1)), min(ivec2(ivec2(1)), ivec2(ivec2(1))))) | (ivec2(ivec2(1))))), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(1), ~ (~ (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))))))), min(ivec2(ivec2(1)), ivec2(ivec2(1)))), (ivec2(ivec2(1))) | (ivec2(ivec2(1))))))))) / _GLF_IDENTITY(ivec2(1, 1), clamp(_GLF_IDENTITY(ivec2(1, 1), (_GLF_IDENTITY(ivec2(1, 1), (false ? _GLF_FUZZED(ivec2(-10853, -48280)) : ivec2(1, 1)))) ^ ivec2(0, 0)), ivec2(1, 1), ivec2(1, _GLF_IDENTITY(1, 0 + (1))))))) >> ivec2(0, 0))), ivec3(1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)), _GLF_IDENTITY(max(uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u))), (max(uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)))) - 0u))), (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)), max(uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), 1u, 0u)))))) - 0u) * _GLF_IDENTITY(_GLF_struct_replacement_15._f4._f1.workgroup_id, (_GLF_struct_replacement_15._f4._f1.workgroup_id) << 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), false)))), bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_26._f2.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_27.subgroup_local_id, _GLF_IDENTITY(max(_GLF_struct_replacement_27.subgroup_local_id, _GLF_struct_replacement_27.subgroup_local_id), min(max(_GLF_struct_replacement_27.subgroup_local_id, _GLF_struct_replacement_27.subgroup_local_id), max(_GLF_struct_replacement_27.subgroup_local_id, _GLF_struct_replacement_27.subgroup_local_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), true))) && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, false)), bvec3(bvec3(bvec3(bvec3(false, false, false)))))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false), false, false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false)))))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_26._f2.subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_27.subgroup_local_id + 1, min(_GLF_struct_replacement_27.subgroup_local_id + 1, _GLF_struct_replacement_27.subgroup_local_id + 1))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_27.subgroup_local_id + 1), ~ (~ ((_GLF_struct_replacement_27.subgroup_local_id + 1)))), min((_GLF_struct_replacement_27.subgroup_local_id + 1), (_GLF_struct_replacement_27.subgroup_local_id + 1))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_27.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(29259))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12273) : 1))))), ((_GLF_struct_replacement_27.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(29259))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12273) : 1)))))) / 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * virtual_gid)) : (_GLF_struct_replacement_27.subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_27.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(29259))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12273) : 1))))), ((_GLF_struct_replacement_27.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(29259))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12273) : 1)))))) / 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * virtual_gid)) : (_GLF_struct_replacement_27.subgroup_local_id + 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_27.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(29259))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12273) : 1))))), ((_GLF_struct_replacement_27.subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) | (1)), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(29259))), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-12273) : 1)))))) / 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * virtual_gid)) : (_GLF_struct_replacement_27.subgroup_local_id + 1))))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (4) << (0 & 8757)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true))), _GLF_IDENTITY(false, true && (false)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), false, true, false))), true, true))), false, true), false)), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true))), false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))), true, true))))))), false))))), false, true), false)), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(400.980)), vec2(_GLF_FUZZED(-7.7), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_FUZZED(-2690.4030)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), (bool(true)) || false))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), false, false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false, true, false))))), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))))), false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false)), true, true))), false, false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))))), false))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), true && (bool(_GLF_DEAD(false)))), true), true, false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))))), false))), false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_DEAD(false)), true), bvec2(bvec4(bvec2(bool(_GLF_DEAD(false)), true), true, false))))), false))), false)), true)), true)))))), false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(pow(2.8, 6.0)))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 0u ^ (_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), ((false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))))), ! (! (false || _GLF_IDENTITY((false), ((false)) && true)))), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), ((false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))))))), ! (! (false || _GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), ! (! (_GLF_IDENTITY((false), ((false)) && true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0))))).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84874) : 4)), 4)), (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-84874) : 4)), 4))) >> 0), _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(64, (64) + (0 >> _GLF_IDENTITY(int(1), int(1)))), 64), 1 * (clamp(64, 64, 64)))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x))) * 1.0) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) && true))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5939.5221)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(86.23)), float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), ! (! (bool(_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))))))))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))).y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
}
