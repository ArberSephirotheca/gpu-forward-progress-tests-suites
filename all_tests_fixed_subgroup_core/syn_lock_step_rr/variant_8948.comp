#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uvec3 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size;
 uvec3 GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy = GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
 GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.xy = GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.xy;
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y = subgroup_id;
uint subgroup_size = 16;
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw.x = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.z = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.xy.y = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.xy.y;
 do
  {
   GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.xy.x = workgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint virtual_gid = GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.xy.x + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z + GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw.x;
 GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw.y = virtual_gid;
 uint next_virtual_gid = GLF_merged2_0_2_51_2_1_13GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idnum_workgroup.xy.x + GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.y * GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z + ((GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw.x + 1) % GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.z);
 GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x = next_virtual_gid;
 atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint read_1 = atomicLoad(buf[GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw.y], 4, 64, 0);
 uint read_2 = atomicLoad(buf[GLF_merged2_0_2_51_2_2_53GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_idGLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.zw.y], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
    {
     atomicStore(buf[GLF_merged3_0_1_16_1_1_11_2_1_13next_virtual_gidsubgroup_idsubgroup_size.x], uint(read_1 == read_2) + 1, 4, 64, 4);
    }
  }
 else
  {
  }
}
