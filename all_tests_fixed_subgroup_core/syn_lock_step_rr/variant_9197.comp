#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat2x4 _f0;
 bool _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 vec3 _f1;
 mat4 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_1 {
 vec4 _f0;
 _GLF_struct_0 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_4 {
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base;
 _GLF_struct_1 _f0;
 uvec3 _f1;
 _GLF_struct_3 _f2;
 mat4x3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_6_1_1_11read_2subgroup_id;
 _GLF_struct_4 _GLF_struct_replacement_4;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged2_0_1_6_1_1_11read_2subgroup_id.y = subgroup_id;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.y = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.w = workgroup_base;
 uint virtual_gid = _GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.w + GLF_merged2_0_1_6_1_1_11read_2subgroup_id.y * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.w + GLF_merged2_0_1_6_1_1_11read_2subgroup_id.y * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_local_id - virtual_gid)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))) + 1) % subgroup_size);
 _GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.x = next_virtual_gid;
 atomicStore(buf[_GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.x], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 _GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.z = read_1;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 GLF_merged2_0_1_6_1_1_11read_2subgroup_id.x = read_2;
 atomicStore(buf[_GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.x], uint(_GLF_struct_replacement_4.GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_14next_virtual_gidnum_workgroupread_1workgroup_base.z == GLF_merged2_0_1_6_1_1_11read_2subgroup_id.x) + 1, 4, 64, 4);
}
