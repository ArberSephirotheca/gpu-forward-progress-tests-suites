#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 mat4x3 _f0;
 mat4x2 _f1;
 float _f2;
 bool _f3;
} ;

struct _GLF_struct_13 {
 mat3x4 _f0;
 ivec4 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_10 {
 int _f0;
 ivec2 _f1;
 mat4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_11 {
 uint workgroup_size;
 mat3x2 _f0;
 _GLF_struct_10 _f1;
 mat3x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 _GLF_struct_11 _f1;
 vec4 _f2;
 _GLF_struct_13 _f3;
} ;

struct _GLF_struct_7 {
 float _f0;
 bvec2 _f1;
 uint subgroup_size;
 mat4x3 _f2;
 uvec2 _f3;
 uint _f4;
 uint _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_7 _f0;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 vec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_4 {
 int _f0;
 bvec4 _f1;
 mat3x2 _f2;
 uvec4 _f3;
 mat2x3 _f4;
 mat3x2 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 mat2x4 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat3 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 _GLF_struct_6 _f1;
 mat2x4 _f2;
 _GLF_struct_8 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 bvec3 _f3;
 uint _f4;
 vec2 _f5;
 bool _f6;
 uint next_virtual_gid;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat3x4 _f1;
 bool _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         break;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(true, false || (true)))), (true && (! (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true))))))) && true))))), ! (! ((true)))) || _GLF_IDENTITY(false, (false) || false))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))));
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), round(_GLF_IDENTITY(length(normalize(1.0)), mix(float(_GLF_FUZZED(5.4)), float(length(normalize(1.0))), bool(true)))), 0.0, 1.0))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4(length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, sin(sin(0.0)), 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(348.260))))), 1.0, 1.0)), 0.0, exp(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0))), round(length(normalize(1.0))), 0.0, 1.0))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(67.25) : _GLF_IDENTITY(0.0, (0.0) - 0.0))))), round(length(normalize(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), 0.0, 1.0))).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, tan(0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)), round(length(_GLF_IDENTITY(normalize(1.0), _GLF_IDENTITY((normalize(1.0)), mix(float((normalize(1.0))), float(_GLF_FUZZED(9692.0649)), bool(false))) - 0.0))), 0.0, 1.0))).x > injectionSwitch.y)))) || false))), _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((1.1))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), round(length(normalize(1.0))), 0.0, 1.0))).x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((1.1))), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0)), round(length(normalize(1.0))), 0.0, 1.0))).x > injectionSwitch.y))))) && true) || false)))))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), min(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, 0 | (0 | 0))), ~ (~ ((0 | 0))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), min(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, 0 | (0 | 0))), ~ (~ ((0 | 0)))))))), min(~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), min(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, 0 | (0 | 0))), ~ (~ ((0 | 0)))))))), ~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), min(0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0))))), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(0 | 0, 0 | (0 | 0))), ~ (~ ((0 | 0))))))))))))) | (0 ^ (_GLF_IDENTITY((0 | 0), ~ (~ ((0 | 0)))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), false))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)))))) && true); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)) << 0) != (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 | (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | 0)); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) && true, false || ((_injected_loop_counter > 0) && true)))); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)), bool(bool(bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), true)), true)))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), bool(bvec2((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), true))))))), true, false, false))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), true)), true)), ! (! (_GLF_IDENTITY(bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)), bool(bool(bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), true)), true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false)))), true)), true)))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))))))))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), bool(bvec2((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), true)))))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), _GLF_IDENTITY(((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))))) && true))))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false))))))), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, false, true))) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)))) && true))))), bool(bvec2((! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), true)))), false, true, true)), false))))))))), ((bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true)), false, true)), bool(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(false, false || (false)), true)), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true, true)))) && true))))), true))))))))), true, false, false))) || false))))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       do
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             return;
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          continue;
                        }
                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true, false), bvec2(bvec4(bvec2((_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))) && true, false), true, true)))))));
                      }
                    }
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(uvec3(1u), _GLF_struct_6(ivec4(1), mat2x4(1.0), _GLF_struct_3(bvec3(true), ivec3(1)), _GLF_struct_4(1, bvec4(true), mat3x2(1.0), uvec4(1u), mat2x3(1.0), mat3x2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(-86.12), mix(float(_GLF_FUZZED(880.915)), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-86.12, (-86.12) - 0.0)), min(_GLF_FUZZED(-86.12), _GLF_FUZZED(-86.12)))), bool(true))))))))), mat4x3(1.0)), mat3(1.0), _GLF_struct_5(uvec4(_GLF_IDENTITY(1u, (1u) << 0u)), mat4x3(1.0), uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))))), vec3(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat4x3(1.0))), mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_8(_GLF_struct_7(1.0, bvec2(true), gl_SubgroupSize, mat4x3(1.0), uvec2(1u), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (~ (1u)) - 0u))), 1u)), 1.0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false)))), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), bool(bool(bool(true && (false))))))))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))), false, true)))))) && true, ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true))) || false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)), false || (bool(bvec2(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true))) || false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)), false || (bool(bvec2(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) && true)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)), true && (bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))), true && (! (_GLF_IDENTITY(false, true && (false))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), ((! ((injectionSwitch.x < injectionSwitch.y)))) && true)), false, true))) || false))), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), (_GLF_IDENTITY(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)), false || (bool(bvec2(bool(bvec4(true && (false), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false, true))))) || false)))))) && true) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || false)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(false || (_injected_loop_counter < 1), _GLF_IDENTITY(bool(bvec4(false || (_injected_loop_counter < 1), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(bool(bvec4(false || (_injected_loop_counter < 1), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(false || (_injected_loop_counter < 1), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true))))), ! (! ((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))))))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 ^ 0) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, ~ (~ (4))))))); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY(~ (~ (_injected_loop_counter ++)), ~ (~ (~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0))))))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           return;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false)))) && true)))));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), false))), false, true)), _GLF_IDENTITY(! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), bool(bvec3(! (! (bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(-6006.0434)), vec2(_GLF_FUZZED(-3.0), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))).x < injectionSwitch.y)) && (_GLF_DEAD(false))))))))
        return;
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(vec3(1.0), _GLF_struct_11(gl_WorkGroupSize.x, mat3x2(1.0), _GLF_struct_10(1, ivec2(1), mat4(1.0), mat2x4(1.0)), mat3x2(1.0), mat2x3(1.0)), vec4(1.0), _GLF_struct_13(mat3x4(1.0), ivec4(1), _GLF_struct_12(mat4x3(1.0), mat4x2(1.0), 1.0, true)));
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = _GLF_struct_replacement_14._f1.workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(728.241), 1.0 * (true ? injectionSwitch.x : _GLF_FUZZED(728.241))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))).y))))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 73365)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & _GLF_IDENTITY(73365, (73365) | 0)))))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))) || false)))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u, (_GLF_IDENTITY(((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, max(subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size))) >> 0u) ^ 0u, (((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | ((_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u, ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u, ((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) >> 0u))))) ^ 0u))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size))))), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9._f3._f0.subgroup_size, uint(uvec3(_GLF_struct_replacement_9._f3._f0.subgroup_size, 0u, 0u)))) >> 0u) ^ 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u, 1u * (((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)), (_GLF_IDENTITY(((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u, (((_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, clamp(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size)), workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size))) >> 0u) ^ 0u) | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) | (((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u, _GLF_IDENTITY(uint(uvec2((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u, 1u)), (uint(uvec2((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u, 1u))) ^ 0u))) ^ 0u)))))) - 0u) | (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) / 1u))))), ((workgroup_base + _GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (subgroup_id)) * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_9._f3._f0.subgroup_size, max(_GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size)), _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> _GLF_IDENTITY(0u, max(0u, 0u)), ((workgroup_base + subgroup_id * _GLF_struct_replacement_9._f3._f0.subgroup_size) >> 0u) ^ 0u)))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4715.1356) : 0.0))))), max(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y)))) && true)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), false, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x))) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x))) * 1.0), 1.0, 0.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), 0.0 + (_GLF_IDENTITY(length(vec2(0.0, 0.0)), (_GLF_IDENTITY(length(vec2(0.0, 0.0)), (false ? _GLF_FUZZED(66.92) : length(vec2(0.0, 0.0))))) * 1.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y) || false)))), false, false)))) && true))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7616.7015)), float(injectionSwitch.x), bool(true))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(164624u)), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED((- 999.833))), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.3)), bvec2(true, false))).x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0))) > injectionSwitch.y))), false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), false, false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(50.81) : clamp(1.0, 1.0, 1.0))))))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x))) * 1.0), (false ? _GLF_FUZZED(9855.6995) : _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0), (injectionSwitch.x))) * 1.0))), 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0)), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.4))), 1.0))))), 0.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))), false, false)))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat2x4(1.0), mat3x2(1.0), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-34.54)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(exp(5.7)))), 0.0, 0.0, abs(1.0)))), clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY(bool(true), false || (bool(true)))))), bvec3(true), 1u, vec2(1.0), true, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(_GLF_struct_replacement_9._f3._f0.subgroup_size, clamp(_GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size)), max(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(_GLF_struct_replacement_9._f3._f0.subgroup_size, clamp(_GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(_GLF_struct_replacement_9._f3._f0.subgroup_size, clamp(_GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(_GLF_struct_replacement_9._f3._f0.subgroup_size, clamp(_GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size, _GLF_struct_replacement_9._f3._f0.subgroup_size))) - 0u))) + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_struct_replacement_9._f3._f0.subgroup_size, ~ (~ ((subgroup_local_id + 1) % _GLF_struct_replacement_9._f3._f0.subgroup_size)))))), mat3x4(1.0), true);
 for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), 0 + ((0 >> _GLF_IDENTITY(int(1), int(1))))), (0 << _GLF_IDENTITY(int(7), int(7)))), (ivec2(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), int(1))), 0 + ((0 >> _GLF_IDENTITY(int(1), int(1))))), (0 << _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(ivec2(0, 0), (false ? _GLF_FUZZED(ivec2(12859, -26879)) : ivec2(0, 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            continue;
          }
        }
       else
        {
        }
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(6), int(6))), false || (_injected_loop_counter != (_GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-1480) : 1))) << _GLF_IDENTITY(int(6), int(6)))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
                {
                 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, clamp(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, (_GLF_struct_replacement_2._f0._f0.next_virtual_gid) | (_GLF_struct_replacement_2._f0._f0.next_virtual_gid)), _GLF_struct_replacement_2._f0._f0.next_virtual_gid))], _GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(_GLF_IDENTITY(1, max(1, 1))))), 4, _GLF_IDENTITY(64, (64) | (64)), 4);
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9908.5279)), vec2(_GLF_FUZZED(_GLF_IDENTITY(float(true), (true ? float(true) : _GLF_FUZZED(-5772.0705)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((false ? 35.07 : 536.351)), _GLF_FUZZED(5.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))[1]), bvec2(false, true))).x > injectionSwitch.y))));
            }
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, cos(0.0), 1.0, 1.0))).x > injectionSwitch.y))))
            {
             do
              {
               for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, int(ivec3(7, 0, 1)))) | (7))), int(7)))); _injected_loop_counter ++)
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) && true))))))
            break;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(exp(69.87)), (true ? _GLF_FUZZED(_GLF_IDENTITY(exp(69.87), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat3(76.05, -9.2, 9.3, 5.8, -9.1, 458.420, 3.0, -2.7, _GLF_IDENTITY(3.2, clamp(3.2, 3.2, 3.2)))) : _GLF_IDENTITY(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0), transpose(transpose(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0))))))), float(_GLF_IDENTITY(mat3x4(float(_GLF_IDENTITY(mat3(exp(69.87), _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat3(76.05, -9.2, 9.3, 5.8, -9.1, 458.420, 3.0, -2.7, 3.2)) : _GLF_IDENTITY(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 1.0, log(1.0), 0.0, 0.0)))), transpose(transpose(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat3x4(mat4(mat3x4(float(_GLF_IDENTITY(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-71.24)))), 0.0, cos(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat3(76.05, -9.2, 9.3, 5.8, -9.1, 458.420, 3.0, -2.7, 3.2)) : _GLF_IDENTITY(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0), transpose(transpose(mat3(exp(69.87), 1.0, 1.0, 0.0, sin(0.0), 0.0, cos(0.0), 0.0, 1.0))))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))))))) : _GLF_FUZZED(-6.4))))) > injectionSwitch.y))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))))));
        }
       else
        {
        }
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false, ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false))), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))) || false, false, false, false)))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (64) | (64)))), 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) << 0u, (_GLF_IDENTITY((virtual_gid) << 0u, (true ? _GLF_IDENTITY((virtual_gid), ((virtual_gid)) >> 0u) << 0u : _GLF_FUZZED(virtual_gid)))) << 0u))], 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) & 1)); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, true, true, true))), true, true)))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 return;
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   else
    {
    }
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, clamp(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, 0u | (_GLF_struct_replacement_2._f0._f0.next_virtual_gid)), _GLF_struct_replacement_2._f0._f0.next_virtual_gid)), ~ (~ (_GLF_struct_replacement_2._f0._f0.next_virtual_gid)))) << 0u, 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, clamp(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_2._f0._f0.next_virtual_gid, 0u | (_GLF_struct_replacement_2._f0._f0.next_virtual_gid)), _GLF_struct_replacement_2._f0._f0.next_virtual_gid)), ~ (~ (_GLF_struct_replacement_2._f0._f0.next_virtual_gid)))) << 0u)))], uint(read_1 == read_2) + 1, 4, 64, 4);
}
