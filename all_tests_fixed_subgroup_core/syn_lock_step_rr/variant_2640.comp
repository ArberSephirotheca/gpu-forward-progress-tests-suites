#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, exp(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), exp(0.0), 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, exp(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), exp(0.0), 1.0, 1.0))))), vec2(1.0, 1.0) * (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, 0.0, exp(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), exp(0.0), 1.0, 1.0), transpose(transpose(mat2x4(injectionSwitch, 1.0, 0.0, exp(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), exp(0.0), 1.0, 1.0)))))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), injectionSwitch.x, injectionSwitch.x), float(mat2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), injectionSwitch.x, injectionSwitch.x), 0.0, 1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), exp(0.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false)))))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, true, true)))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))))), (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, true, true)))))), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(631.681))))), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x < injectionSwitch.y)), false))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true, true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true, true)), true, false, true))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.1)), vec2(_GLF_FUZZED(-5183.0546), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, (true) && true)))).y)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, sqrt(0.0), 1.0, cos(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0)))).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, round(length(normalize(1.0))), tan(0.0), 0.0, 1.0, 1.0, 1.0)))) - 0.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! (! (injectionSwitch.x > injectionSwitch.y)), false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true), true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-477.038))), _GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) * 1.0), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))) || false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true), false, false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true)))))), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / 1u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_base + subgroup_id * subgroup_size)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) | 0), (true ? ~ (1) : _GLF_FUZZED(-53981)))) >> 0))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, (0 & -68266), (_GLF_IDENTITY(1, min(1, 1)) | 0), _GLF_IDENTITY(1, ~ (~ (1)))), ~ (_GLF_IDENTITY(~ (ivec4(1, (0 & -68266), (1 | 0), 1)), ~ (~ (_GLF_IDENTITY(~ (ivec4(1, (0 & -68266), (1 | 0), 1)), (~ (ivec4(1, (0 & -68266), (1 | 0), 1))) - ivec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))) * _GLF_IDENTITY(1u, 0u | (1u)))))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 + (_GLF_IDENTITY(1, (1) | 0))), 1, _GLF_IDENTITY(1, (1) + 0))), 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))) : _GLF_FUZZED((-- virtual_gid)))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0), (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) * 1u) - _GLF_IDENTITY(0u, (0u) / 1u)), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))) : _GLF_FUZZED((-- virtual_gid))))) + 0u))) % subgroup_size)), 0u ^ ((((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 + (_GLF_IDENTITY(1, (1) | 0))), 1, _GLF_IDENTITY(1, (1) + 0))), 1, 1)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))) : _GLF_FUZZED((-- virtual_gid)))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) - 0), (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) * 1u) - _GLF_IDENTITY(0u, (0u) / 1u)), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))) : _GLF_FUZZED((-- virtual_gid))))) + 0u))) % subgroup_size)))) | 0u, (true ? (((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), 0 + ((_GLF_IDENTITY(1, (1) | 0))))), 1, _GLF_IDENTITY(1, (1) + 0))), 1, 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1) * 1u, ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((subgroup_local_id + 1) * 1u, ((subgroup_local_id + 1) * 1u) | ((subgroup_local_id + 1) * 1u)))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id, subgroup_local_id)) + 1) ^ (193711u & 0u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) * _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), ((subgroup_local_id + 1) * 1u) - 0u), (false ? _GLF_FUZZED(virtual_gid) : (subgroup_local_id + 1) * 1u)))) : _GLF_FUZZED((-- virtual_gid)))))) % subgroup_size)) | 0u : _GLF_FUZZED((-- workgroup_id)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) && true), true))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) && true), true))) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) && true), true))) || false)), false))))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (0 & (38940 / 6762)) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) / 1)))), 4, 64, _GLF_IDENTITY(4, (4) * ((_GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(2)), clamp(1 << _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) | (1 << _GLF_IDENTITY(int(2), int(2)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) | (1 << _GLF_IDENTITY(int(2), int(2)))))))) | 0), _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (true ? _GLF_IDENTITY(int(2), int(2)) : _GLF_FUZZED(25338))), _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(int(2), int(2)))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(int(2), int(2))) ^ 0)) << 0)))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), false, false, false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), false, false, false))), true)))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))))))) || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), false, false, false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), false, false, false))), true)))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))))))) || (_GLF_DEAD(false))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), false, false, false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), bool(bvec4(bool(_GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false)))), false, false, false))), true)))))), bool(bool(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), true && (! (bool(false)))))))))))) || (_GLF_DEAD(false))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(bool(_GLF_DEAD(false)))), (bool(bool(bool(_GLF_DEAD(false))))) || false))), true && (! (bool(_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))], 4, 64, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) | 0)), (~ (_GLF_IDENTITY(0, (0) | 0))) << 0))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) / 1u, _GLF_IDENTITY(uint(uvec4((virtual_gid) / 1u, 1u, 1u, 1u)), 0u | (uint(uvec4((virtual_gid) / 1u, 1u, 1u, 1u))))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, true && (false)))), false, true)))), bool(bvec4(false, false, false, true))))), true, false, true))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(58.29, 4346.7000))))[0], (injectionSwitch)[0]), (min((injectionSwitch)[0], (injectionSwitch)[0])) / 1.0), min((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))]), _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), mix(float(min((injectionSwitch)[0], (injectionSwitch)[0])), float(_GLF_FUZZED(2972.5267)), bool(false)))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(82.72), _GLF_IDENTITY(_GLF_FUZZED(-5.8), (true ? _GLF_IDENTITY(_GLF_FUZZED(-5.8), max(_GLF_FUZZED(-5.8), _GLF_FUZZED(-5.8))) : _GLF_FUZZED(36.79)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), false, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), false, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), false, true, _GLF_IDENTITY(true, ! (! (true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), false, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(_GLF_IDENTITY(! (false), false || (! (false))), false, true, _GLF_IDENTITY(true, ! (! (true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))), float(_GLF_FUZZED(-9.7)), bool(false))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), mix(float(_GLF_FUZZED(886.867)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), bool(true)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, max(read_2, read_2)))), bool(bvec3(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, max(read_2, read_2)))), false, false)))) && true))))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, max(read_2, read_2)))), bool(bvec3(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, max(read_2, read_2)))), false, false)))) && true)))))))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), max(_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), clamp(~ (~ (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) + (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, false || (true))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))))), max((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))) | (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) && true)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) && true))))), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))) | (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))))), ((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, false || (true))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))))), max((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))) | (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) && true)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) && true))))), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))) | (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))))))))) ^ 0u), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, ! (! ((read_1 == read_2) && true)))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) || false), _GLF_IDENTITY((read_1 == read_2) && true, ! (! ((read_1 == read_2) && true))))))) && true))))))), _GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) && true))))))), clamp(_GLF_IDENTITY(~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), min(~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (read_1 == read_2) && true))), (! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : read_2))) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u)))), (read_1 == read_2) && true)))) && true))))), ~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 1u * (read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, max(read_2, read_2)), 0u)))) | (read_2))) && true)))))), min((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 1u * (read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, max(read_2, read_2)), 0u)))) | (read_2))) && true)))))), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 1u * (read_1)) == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec2(_GLF_IDENTITY(read_2, max(read_2, read_2)), 0u)))) | (read_2))) && true))))))))))), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, (true) || false)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2) && true)))))), min(~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2) && true)))))), _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2) && true)))))), (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) ^ 0u) == read_2) && true))))))) | 0u)))), 0u | (~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))), max(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))), _GLF_IDENTITY((~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))) && true))))))), ((~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == _GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))) && true)))))))) >> 0u) ^ 0u), ~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))))), max(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))))))), uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), ! (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))))))))))))))))))))) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(_GLF_IDENTITY(ivec4(ivec3(1, 1, 0), 0), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec3(1, 1, 0), 0), (ivec4(ivec3(1, 1, 0), 0)) | (ivec4(ivec3(1, 1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0)), 0))), 0))), max(_GLF_IDENTITY(ivec4(ivec3(1, 1, 0), 0), (ivec4(ivec3(1, 1, 0), 0)) | (ivec4(ivec3(1, 1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0)), 0))), 0))), _GLF_IDENTITY(ivec4(ivec3(1, 1, 0), 0), (ivec4(ivec3(1, 1, 0), 0)) | (ivec4(ivec3(1, 1, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) ^ 0), 0)), 0))), 0)))))) << ivec4(0, 0, 0, 0)))))), uint(uvec3(uint(read_1 == read_2) + _GLF_IDENTITY(1, int(ivec3(1, 1, 0))), 1u, 0u))), 4, 64, 4);
}
