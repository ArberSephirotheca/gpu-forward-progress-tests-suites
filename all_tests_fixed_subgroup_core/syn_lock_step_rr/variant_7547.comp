#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base;
 uvec2 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x = subgroup_id;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((1 | 1), min((1 | 1), (1 | _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0)))), int(ivec4(_GLF_IDENTITY((1 | 1), _GLF_IDENTITY(min((1 | 1), (1 | 1)), (min((1 | 1), (1 | 1))) << 0)), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0))), _GLF_IDENTITY(int(0), (int(0)) | (int(0))))), 1, 0)))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))))), min((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0))))), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 0, 0)))))) * 1))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = (0 ^ (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = (_GLF_IDENTITY(1, (1) >> 0) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, (injectionSwitch.x) - 0.0)), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(_GLF_FUZZED(91.48)), bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), int(int(_GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ ((int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), int(_GLF_IDENTITY(ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1)), (ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0)))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), min((int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(-44671)))), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), _GLF_IDENTITY(min((~ (0)), (~ (0))), max(min((~ (0)), (~ (0))), min((~ (0)), (~ (0)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(_GLF_FUZZED(91.48)), bool(false)))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1)), _GLF_IDENTITY((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0), (_GLF_IDENTITY((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0), ((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0)) / ((ivec3(1, 1, 1) << _GLF_IDENTITY(ivec3(7), ivec3(7))) >> _GLF_IDENTITY(ivec3(7), ivec3(7))))) * ivec3(1, 1, 1))))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), min((int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(-44671))))) << 0)) - 0), ! (! (_injected_loop_counter > 0))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) - 0)))) > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ _GLF_IDENTITY((0), (true ? (0) : _GLF_FUZZED(_injected_loop_counter)))), (~ (0)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) - 0.0)), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(18.97)), bool(false))), _GLF_IDENTITY((injectionSwitch.x) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))) - 0.0, float(mat4(_GLF_IDENTITY((injectionSwitch.x) - 0.0, min((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) - 0.0, (injectionSwitch.x) - 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(18.97)), bool(false))), _GLF_IDENTITY((injectionSwitch.x) - 0.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), (true ? (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)) : _GLF_FUZZED(-80.78))))) - _GLF_IDENTITY(0.0, (0.0) / sqrt(1.0)), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float(_GLF_IDENTITY((injectionSwitch.x) - 0.0, ((injectionSwitch.x) - 0.0) - 0.0)), float(_GLF_FUZZED(37.08)), bool(false))), min(_GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - 0.0, (injectionSwitch.x) - 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x) - 0.0, (injectionSwitch.x) - 0.0))) : _GLF_FUZZED(dot(vec3(-311.687, -2911.9393, -39.23), vec3(278.539, 5372.4241, -27.55))))))), float(_GLF_FUZZED(91.48)), bool(false)))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))) - 0.0), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x))), 1, (0 ^ 1)), (ivec3((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), min(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY((1), min((1), (1)))))), _GLF_IDENTITY(int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), min(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY((1), min((1), (1)))))))), 0 | (int(int(~ (_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), max(_GLF_IDENTITY(_GLF_IDENTITY((1), min((1), (1))), min(_GLF_IDENTITY((1), min((1), (1))), _GLF_IDENTITY((1), min((1), (1))))), _GLF_IDENTITY((1), min((1), (1))))))))))))) / 1), _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | (1)))), 1), min(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1))))), (0 ^ 1))) >> ivec3(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))), int(ivec3(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))), 1, 0))))), 0, 0)))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), min((int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(-44671))))) - 0), ! (! (_injected_loop_counter > 0))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))), min(_GLF_IDENTITY((~ (0)), min((_GLF_IDENTITY(~ (0), (~ (0)) - 0)), (~ (0)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (0), max(_GLF_IDENTITY(~ (0), (0 & 43034) ^ (~ (0))), ~ (0)))), min((~ (0)), (~ _GLF_IDENTITY((0), clamp(_GLF_IDENTITY((0), ((0)) | ((0))), (0), (0)))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) << ivec4(0, 0, 0, 0))))), (int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(9.9) : _GLF_ZERO(0.0, injectionSwitch.x)))), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), 0, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))) * 1)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0))))), float(_GLF_FUZZED(6087.4720)), bool(false))))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) : _GLF_FUZZED(-1.0))), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), float(_GLF_FUZZED(91.48)), bool(false)))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1)), _GLF_IDENTITY((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0), ivec3(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0), ivec3(ivec3((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0))))), clamp(ivec3(_GLF_IDENTITY((ivec3((_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 ^ (int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, (0 ^ 1))) >> ivec3(0, 0, 0), ivec3(ivec3((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0))))), ivec3(_GLF_IDENTITY((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) / 1))), (0 ^ 1))) >> ivec3(0, 0, 0), ivec3(ivec3((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0))))), ivec3(_GLF_IDENTITY((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> ivec3(0, 0, 0), ivec3(ivec3((ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), 1, (0 ^ 1))) >> _GLF_IDENTITY(ivec3(0, 0, 0), (false ? _GLF_FUZZED((findMSB(ivec3(-83494, -49282, 66080)) & _injected_loop_counter)) : _GLF_IDENTITY(ivec3(0, 0, 0), min(ivec3(0, 0, 0), ivec3(0, 0, 0)))))))))))))))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), min((int(_GLF_ZERO(0.0, injectionSwitch.x))), (int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED(-44671))))) - 0), ! (! (_injected_loop_counter > 0))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ _GLF_IDENTITY((0), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), false, false)))) ? (0) : _GLF_FUZZED(_injected_loop_counter)))), (~ (0)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), _GLF_IDENTITY(int(3), max(int(3), int(3))))) * ((int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))))))) - 0.0) - 0.0)), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x), float(_GLF_FUZZED(18.97)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0))) - 0.0, clamp(_GLF_IDENTITY((injectionSwitch.x) - 0.0, float(mat4(_GLF_IDENTITY((injectionSwitch.x) - 0.0, min((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-685.725, 2097.0867)) : injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).x) - 0.0, (injectionSwitch.x) - 0.0))))), float(_GLF_FUZZED(91.48)), bool(false)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1, (0 ^ 1)), (ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1, (0 ^ 1))) | (ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1, (0 ^ 1)))), (ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), min(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))))))), (0 ^ _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), min(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0, 0))), 0)))))))) >> ivec3(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), 0, 0)))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), min((int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1) : _GLF_FUZZED(_injected_loop_counter)))))) : _GLF_FUZZED(-44671))))), ~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ _GLF_IDENTITY((0), (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), false, false)))) ? (0) : _GLF_FUZZED(_injected_loop_counter)))), (~ (0)))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), _GLF_IDENTITY(int(3), max(int(3), int(3))))) * ((int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(-3.8) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))))))) - 0.0) - 0.0)), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x), float(_GLF_FUZZED(18.97)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) / 1.0))) - 0.0, clamp(_GLF_IDENTITY((injectionSwitch.x) - 0.0, float(mat4(_GLF_IDENTITY((injectionSwitch.x) - 0.0, min((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-685.725, 2097.0867)) : injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)).x) - 0.0, (injectionSwitch.x) - 0.0))))), float(_GLF_FUZZED(91.48)), bool(false)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1, (0 ^ 1)), (ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1, (0 ^ 1))) | (ivec3((int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x))), 1, (0 ^ 1)))), (ivec3((int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), min(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) / 1), 1, 1)))))))), (0 ^ _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), ivec3(ivec4(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), min(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 0), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), max(_GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(1, clamp(1, 1, 1)))), 0, 0))), 0)))))))) >> ivec3(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (int(7))))))), 0, 0)))) | _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), min((int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), (true ? _GLF_IDENTITY((int(_GLF_ZERO(0.0, injectionSwitch.x))), ((int(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1) : _GLF_FUZZED(_injected_loop_counter)))))) : _GLF_FUZZED(-44671)))))))) - _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0))))))), min((_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0))))))), (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), (int(int(0))) | 0)))))))))))))), ! (! (_injected_loop_counter > 0))))))))); _injected_loop_counter --)
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     do
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       do
                                        {
                                         barrier();
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))));
                                      }
                                    }
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y = subgroup_size;
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false || (bool(bvec2(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(617.345), _GLF_FUZZED(-3.7)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), true))).x < injectionSwitch.y))), false))))))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))))))))
                                          {
                                           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                                            barrier();
                                           barrier();
                                          }
                                        }
                                       barrier();
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                        barrier();
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                  }
                                }
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              {
                               for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1)))), int(ivec3(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1)))), (0 << _GLF_IDENTITY(int(4), int(4))), 0)))), (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1)))), int(ivec3(0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 1, 1)))), (0 << _GLF_IDENTITY(int(4), int(4))), 0))))) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                                {
                                 barrier();
                                }
                              }
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     do
      {
       for(int _injected_loop_counter = ((-26566 & (0 << _GLF_IDENTITY(int(5), int(5)))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec4(int(0), 1, 0, 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x = subgroup_local_id;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY((0 | 0), ((0 | 0)) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
      {
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = (_GLF_IDENTITY(0 & 23889, 0 + (0 & 23889))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
                  {
                   do
                    {
                     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true))))))) && (_injected_loop_counter != 1)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(70.73)))), float(_GLF_FUZZED(-721.077)), bool(false))) > injectionSwitch.y)))))), (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           for(int _injected_loop_counter = (((1 | 1) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(ivec3(int(5), 1, 0))), min(_GLF_IDENTITY(int(5), int(ivec3(int(5), 1, 0))), _GLF_IDENTITY(int(5), int(ivec3(int(5), 1, 0))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), clamp((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))), 0 + ((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2))))))), (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), max(int(2), int(2)))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               do
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(756.894)), max(vec2(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[0], _GLF_FUZZED(756.894)), vec2((injectionSwitch)[0], _GLF_FUZZED(756.894)))), vec2(_GLF_FUZZED(-41.13), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), bvec2(false, true))).x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))));
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) >> uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) - 0u), max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x))) >> 0u)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec3(164045u, 39829u, 96449u)) : _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))))).x))) >> 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).x))) >> 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x))) >> 0u))) - 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (false ? _GLF_FUZZED((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base ^ subgroup_local_id)) : uvec3(0u, 0u, 0u)))).x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(10845u) : _GLF_IDENTITY(gl_WorkGroupID.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x))))))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x))) >> 0u)), 0u ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x)), (_GLF_IDENTITY(gl_WorkGroupID.x, max(_GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x))) >> 0u))))))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id)), (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id))))) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id))) ^ 0u), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id)), (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), min(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec2(workgroup_id, 0u), uvec2(1u, 1u) * (uvec2(workgroup_id, 0u)))))))) - 0u)));
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z = _GLF_IDENTITY(workgroup_base, (1u ^ 1u) ^ (workgroup_base));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z, ~ (~ (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z))), max(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z, 0u + (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z))))))) | (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z)) + GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.x * GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size.y + GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x;
 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - 0.0), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 & 30099) ^ (0))) / 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))).y)))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y = _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)));
 uint next_virtual_gid = GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)).x, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, clamp(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) >> uvec2(0u, 0u)).x) ^ 0u) * _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, uvec2(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[0], GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size[1]))) << (uvec2(0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec2(8u), max(uvec2(8u), uvec2(8u))), uvec2(8u)))))).y + ((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(_GLF_IDENTITY(((1)), 0 | (((1)))) / 1, (_GLF_IDENTITY(((1)), 0 | (((_GLF_IDENTITY(1, (1) | (1)))))) / 1) / 1)) | (1))) % _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | uvec2(0u, 0u)), ~ (~ (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) | uvec2(0u, 0u))))), (true ? GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size : _GLF_FUZZED((uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(70002u, 0u | (70002u)), clamp(70002u, 70002u, _GLF_IDENTITY(70002u, 1u * (70002u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(70002u, 0u | (70002u)), clamp(70002u, 70002u, _GLF_IDENTITY(70002u, 1u * (70002u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(70002u, _GLF_IDENTITY(0u, (0u) ^ 0u) | (70002u)), clamp(_GLF_IDENTITY(70002u, (70002u) / 1u), 70002u, _GLF_IDENTITY(70002u, 1u * (70002u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(70002u, 0u | (70002u)), clamp(70002u, 70002u, _GLF_IDENTITY(70002u, 1u * (70002u)))), _GLF_IDENTITY(_GLF_IDENTITY(70002u, 0u | (70002u)), clamp(70002u, 70002u, _GLF_IDENTITY(70002u, 1u * (70002u)))))), _GLF_IDENTITY(_GLF_IDENTITY(70002u, 0u | (70002u)), clamp(70002u, 70002u, _GLF_IDENTITY(70002u, 1u * (70002u)))))))), _GLF_IDENTITY(105651u, 0u | (_GLF_IDENTITY(105651u, 0u ^ (105651u))))) | workgroup_id))))) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (true ? GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size : _GLF_FUZZED((uvec2(70002u, 105651u) | workgroup_id))))) | (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (true ? _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, (GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size) << uvec2(0u, 0u)) : _GLF_FUZZED((uvec2(70002u, 105651u) | workgroup_id))))) | _GLF_IDENTITY((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size), _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), clamp(((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, min(GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size, GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), _GLF_IDENTITY(min(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))), clamp(_GLF_IDENTITY(min(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))), (min(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))) | (min(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))))), min(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size))), min(((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)), ((GLF_merged2_0_1_11_1_1_13subgroup_idsubgroup_size)))))))) * uvec2(1u, 1u))))).y);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-83.39)), bool(false)))) - 0.0))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)), true && (bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))))); _injected_loop_counter ++)
      {
       do
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec4(uint(1), 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), max(uint(uvec2(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))), uint(uvec2(1u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), (0u | 0u)))), 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))).x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED((++ _injected_loop_counter)) : _injected_loop_counter)) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))))
            barrier();
          }
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bool(! (_GLF_WRAPPED_IF_TRUE(true)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)));
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(int(int(5))))))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch : _GLF_FUZZED(vec2(8167.6985, -3.2)))))), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch : _GLF_FUZZED(vec2(8167.6985, -3.2)))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch : _GLF_FUZZED(vec2(8167.6985, -3.2)))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch : _GLF_FUZZED(vec2(8167.6985, -3.2)))))))).y, float(vec3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, (_GLF_IDENTITY(true, ! (! (true))) ? _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))), false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))), false || (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true, false || ((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))))))), false, false)))))))))))))) || false) ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(log(vec2(1.0, 1.0))))) : injectionSwitch : _GLF_FUZZED(vec2(8167.6985, -3.2)))))).y, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(((_GLF_IDENTITY(1, (1) / 1) ^ 1) >> _GLF_IDENTITY(int(0), int(0))), (((1 ^ 1) >> _GLF_IDENTITY(int(0), int(0)))) / 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false)))))))), true, false))))))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) - uvec3(0u, 0u, 0u)).y], _GLF_IDENTITY(min(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)), uvec3(uvec3(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), _GLF_IDENTITY(((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)) | (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), uvec3(uvec4((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), 1u)))), (((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)) | (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), uvec3(uvec4((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), 1u))))) | (((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)) | (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), uvec3(uvec4((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), 1u))))))) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0)), (vec2(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))) - vec2(0.0, 0.0))))).y), _GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))))), float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), clamp(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(1674.9003)))) - 0.0), _GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec2(-275.112, -72.66).r)), bool(false))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), ((uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) | uvec3(0u, 0u, 0u)))), ~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), max(~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, cos(0.0), log(1.0), 1.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0))))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), ~ (_GLF_IDENTITY(uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, sin(0.0) + (injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) | (uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))))) >> uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u, 0u) & uvec3(137041u, 83658u, 16619u))), max(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)), GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base))) >> _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.0)), float(0.0), bool(true))), (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.0)), float(0.0), bool(true)))) / determinant(mat3(1.0, 0.0, 0.0, cos(0.0), 1.0, 0.0, 0.0, 0.0, 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) / (uvec3(1u, 1u, 1u) & uvec3(1u, 1u, 1u)))).y]), (0u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, 1u * (1u))), clamp(~ (_GLF_IDENTITY(1u, 1u * (1u))), ~ (_GLF_IDENTITY(1u, 1u * (1u))), ~ (_GLF_IDENTITY(1u, 1u * (1u)))))))), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), 0u | ((1u))) << _GLF_IDENTITY(0u, (0u) / 1u)))) | (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, uint(uvec4((1u) << 0u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u, (0u ^ 1u))))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u))), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), max(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), min(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) << 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, ((1u) << 0u) >> 0u)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, 0u ^ (0u))))))))), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_IDENTITY(1u, (1u) << 0u)))), uint(_GLF_IDENTITY(1u, (1u) << 0u))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, (1u | 1u)))), (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))))))), min((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u))), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), max(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), min(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) << 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, ((1u) << 0u) >> 0u)))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u))), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), max(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), min(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) << 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, ((1u) << 0u) >> 0u)))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_IDENTITY(1u, (1u) << 0u)))), uint(_GLF_IDENTITY(1u, (1u) << 0u))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) * (1u))) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), clamp(uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u)), 0u)), uint(uvec2((_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))))), uint(1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u)))), (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))) | (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))))))) / 1u))), uint(1u))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), 1u))), max(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(virtual_gid)))), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), max(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), min(_GLF_IDENTITY(1u, (1u) << 0u), _GLF_IDENTITY(1u, (1u) << 0u)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, _GLF_IDENTITY(((1u) << 0u) >> 0u, max(((1u) << 0u) >> 0u, _GLF_IDENTITY(((1u) << 0u) >> 0u, 1u * (((1u) << 0u) >> 0u)))))))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), _GLF_IDENTITY(uint(1u), min(_GLF_IDENTITY(uint(1u), clamp(uint(1u), uint(1u), uint(1u))), uint(1u)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, (true ? (1u) << 0u : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base[1]))))), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, 0u ^ ((1u) << 0u)))), (false ? _GLF_FUZZED(next_virtual_gid) : uint(_GLF_IDENTITY(1u, (1u) << 0u)))), uint(_GLF_IDENTITY(1u, (1u) << 0u))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (1u) << 0u))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(0u, min(0u, 0u)))) >> 0u))), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), min(uint(_GLF_IDENTITY(1u, (1u) << 0u)), uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | (uint(_GLF_IDENTITY(1u, (1u) << 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_size))), 1u, 0u, 1u)), uint(uvec2(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_size))), 1u, 0u, 1u)), 1u))))))), uint(1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) << 0u)), (uint(_GLF_IDENTITY(1u, (1u) << 0u))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(workgroup_size))))))) | _GLF_IDENTITY(0u, min(0u, 0u))))), uint(1u))))))))))))) + (min(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y])))), 4, _GLF_IDENTITY(64, ~ (~ (64))), 0);
 uint read_2 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y) - 0u)], min(_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], uint(uvec4(_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], 0u ^ (buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y])), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) | (0u))))))))), buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y])))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], 0u | (_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y) - 0u)], min(_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], uint(uvec4(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 0u))), buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y])))), (_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], 0u | (_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y) - 0u)], clamp(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y) - 0u)], buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y) - 0u)], buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).y, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y) - 0u)])), min(_GLF_IDENTITY(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], uint(uvec4(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, 0u))), buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y]))))) ^ 0u)) | 0u), 4, 64, 0);
 for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) << 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) << 0u)))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) << 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) << 0u))))) | 0u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) ^ 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))), (clamp(_GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid)))))) << 0u)))))), _GLF_IDENTITY((next_virtual_gid), uint(uint((next_virtual_gid))))))) - 0u))), uint(uint((next_virtual_gid) | (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED((++ workgroup_size)) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)))) | (next_virtual_gid))) >> 0u))))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_2, uint(uint(read_2))))), (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) && true))))))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)) >> (0u | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, (0u) / 1u)))))) * 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), ~ (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) * 1u)) | 0u))))) * 1u))), 0u ^ (0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), max(_GLF_IDENTITY((0u), ((0u)) | ((0u))), (0u)))), 0u), (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) | (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (_GLF_IDENTITY(true, false || (true)) ? uint(uvec4(0u, 1u, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))) : _GLF_FUZZED((virtual_gid)))))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, _GLF_IDENTITY(0u, max(0u, 0u)))) : _GLF_FUZZED((_GLF_IDENTITY(virtual_gid, uint(uvec4(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), 1u, 0u, (1u & 1u)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))), max((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))), max(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))))) | (_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))), min((_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) / 1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) / 1u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) / 1u))) << 0u)) * 1u)))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) - 0u) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (_GLF_IDENTITY(true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)), ~ (~ (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(_GLF_IDENTITY(0u, min(0u, 0u)) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (uint(uvec4(0u, 1u, 1u, 0u))) << 0u), (true ? uint(uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) | (_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))), ((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 1u, 1u, 0u)))), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) | (_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), clamp(uint(uvec4(0u, 1u, 1u, 0u)), uint(uvec4(0u, 1u, 1u, 0u)), uint(uvec4(0u, 1u, 1u, 0u)))) : _GLF_FUZZED((virtual_gid)))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) - 0u, ~ (~ ((_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)))) - 0u)))) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))), 0u + ((_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, 0u))))), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), max(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), ((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))) / 1u)))) << 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid)))))), 1u * (0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))) | (_GLF_IDENTITY(0u, (0u) - 0u) ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 1u, 1u, 0u)), (true ? uint(uvec4(0u, 1u, 1u, 0u)) : _GLF_FUZZED((virtual_gid))))))))))))))), 0u), (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) | (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), clamp((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), clamp((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), clamp((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u))))))), 0u), (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) | (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))), ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), clamp((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec2(0u, 0u) ^ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), clamp((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), clamp((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) / 1u)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - uvec2(0u, 0u))))))), 0u), (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) | (uvec2(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))) - uvec2(0u, 0u))))))) + 1, 4, 64, _GLF_IDENTITY(4, 0 | (4)));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
}
