#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 float _f0;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 float _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 mat4x2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 vec2 _f1;
 ivec4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 float _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 vec4 _f1;
 int _f2;
 mat3x2 _f3;
 mat2x3 _f4;
 ivec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat3x4 _f3;
 _GLF_struct_3 _f4;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_8 _f2;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true))))) || false), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(uvec4(1u), _GLF_struct_4(_GLF_struct_0(bvec4(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(-2.4, -3.7, -8.4, -21.65)) : mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))), uvec2(_GLF_IDENTITY(1u, (1u) / 1u))), _GLF_struct_1(bvec4(true), vec4(1.0), 1, mat3x2(1.0), mat2x3(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)), mat4x2(1.0)), _GLF_struct_2(bvec2(true), 1.0, uvec3(1u)), mat3x4(1.0), _GLF_struct_3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) << ivec3(0, 0, _GLF_IDENTITY(0, ~ (~ (0))))), vec2(1.0), ivec4(1), bvec3(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), true && (! (true))))))))))), _GLF_struct_8(_GLF_struct_5(vec2(1.0), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), int(ivec2(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), 0)))) ^ 0)), 1 * ((_GLF_IDENTITY(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), min(_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0)))) | (0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))))), 0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) >> 0))), int(ivec2(0 >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) | 0)) >> 0))), 0)))) ^ 0)))) + (1)))), _GLF_struct_6(uvec3(1u), 1.0, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | uvec4(0u, 0u, 0u, 0u))), _GLF_struct_7(1.0), mat4x2(1.0), mat2x3(1.0)), gl_SubgroupInvocationID);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), bool(bvec3(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3220.9509) : injectionSwitch.x)) > injectionSwitch.y, false)), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float(_GLF_FUZZED(-76.96)), float((injectionSwitch.y) / 1.0), bool(true))))) / 1.0))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), bool(bool(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y)))), false)), false || (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), false || (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), (_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0)))) * 1.0)))))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))))), false || (bool(bvec4(false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_9.subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(54164u) : _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size)), _GLF_IDENTITY(0u, (0u) | (0u)) | (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> ((1u ^ 1u) >> _GLF_IDENTITY(uint(4u), uint(4u)))))) + ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, _GLF_IDENTITY((_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u, ((_GLF_struct_replacement_9.subgroup_local_id + 1) / 1u) << 0u))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) >> 0u), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(82.47), mix(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(82.47)), bool(true)))), float(injectionSwitch.y), bool(true))))) && (_GLF_DEAD(false))))), ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))))))) && true) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.47)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * _GLF_IDENTITY((_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))), clamp((_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))), (_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))), (_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))))))), bool(true)))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.47)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * (float(float(float(injectionSwitch.y)))))), (true ? _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * (float(float(float(injectionSwitch.y)))))) : _GLF_FUZZED(3.7))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))))))))) && (_GLF_DEAD(false)))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, (true) || false)))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))))))) && true) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.47)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * _GLF_IDENTITY((_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))), clamp((_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))), (_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))), (_GLF_IDENTITY(float(float(float(injectionSwitch.y))), float(mat3x4(float(float(float(injectionSwitch.y))), exp(0.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), 0.0 + (dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), length(vec2(0.0, 0.0)), 0.0)))))))), bool(true)))), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.47)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * (float(float(float(injectionSwitch.y)))))), (true ? _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * (float(float(float(injectionSwitch.y)))))) : _GLF_FUZZED(3.7))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), false || (_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))))))))) && (_GLF_DEAD(false))))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(82.47), mix(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(82.47)), bool(true)))), float(injectionSwitch.y), bool(true))))) && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(false, true, true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), false), false, false))), true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))) && true)), false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))) && true)), false)))))), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), bvec3(bvec3(bvec3(false, true, true))))))) || false)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(false, true, true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (true) && true)), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false)))))))), false), false, false))), true, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))) && true)), false)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, ! (! (false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), (bool(bvec3(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))) && true)), false)))))), true))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false)), bvec3(bvec3(bvec3(false, true, true))))))) || false))))) && true) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (true)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(82.47)), _GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(float(float(injectionSwitch.y))), exp(0.0) * (float(float(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) + 0.0)))))), bool(true))))) && (_GLF_DEAD(false)))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(82.47), mix(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(82.47)), bool(true)))), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))) && (_GLF_DEAD(false))))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, (true) && true), true)))))), ((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))) || false)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(true, true && (true))), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false)))))))), true && _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), _GLF_IDENTITY(((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))))))), bool(bvec2(((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), false || (bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))))))))), true))) || false))))) || false) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(82.47), (_GLF_FUZZED(82.47)) - sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(injectionSwitch.y))), (float(float(float(injectionSwitch.y)))) * 1.0), _GLF_IDENTITY(exp(0.0) * (float(float(float(injectionSwitch.y)))), 0.0 + (exp(0.0) * (float(float(float(injectionSwitch.y)))))))), (_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(float(float(injectionSwitch.y))), (float(float(float(injectionSwitch.y)))) * 1.0), _GLF_IDENTITY(exp(0.0) * (float(float(float(injectionSwitch.y)))), 0.0 + (exp(0.0) * (float(float(float(injectionSwitch.y))))))))) + 0.0), bool(true))))) && (_GLF_DEAD(false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | _GLF_IDENTITY((4), clamp((4), (4), (4)))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4)))))) | (4))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0), 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), (_GLF_IDENTITY(bool(false || (_GLF_DEAD(false))), (bool(false || (_GLF_DEAD(false)))) && true)) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(1, 1, 1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2) + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec3(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) / 1), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(uint(read_1 == read_2) + 1, 0u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-46.23)), vec2(_GLF_FUZZED(59.77), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - vec2(0.0, 0.0)).y)))))), (uint(_GLF_IDENTITY(uvec3(uint(read_1 == read_2) + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), clamp(uvec3(uint(read_1 == read_2) + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) + 0u)) + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(uint(read_1 == read_2) + 1, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0u)), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, false || _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true)), ((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2) && true))) || false)))))) + 1) | (uint(read_1 == read_2) + 1))), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))) + 1, (uint(read_1 == read_2) + 1) | (uint(read_1 == read_2) + 1)))) / 1u)), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))), ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false)))))))))))))) + 1), min((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (read_2) << 0u)))) + 1), (uint(read_1 == read_2) + 1))) | (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(uvec4(uint(read_1 == read_2) + 1, 0u, 1u, 0u)))) / 1u)) - 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | 0u) == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), clamp(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), _GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), max(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), clamp(0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u)))), 0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)), (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1))) << 0u)))) | (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))))) == read_2)) | (uint(read_1 == read_2)))) | _GLF_IDENTITY((_GLF_IDENTITY(0u ^ 0u, 1u * (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u)))), uint(uint((_GLF_IDENTITY(0u ^ 0u, 1u * (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u)))))))) + 1, 1u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | 0u) == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))), (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1))))) | (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))))) == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(0u ^ 0u, 1u * (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u))))) + 1, 1u)), (~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | 0u) == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))), (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1))))) | (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))))) == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(0u ^ 0u, 1u * (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u))))) + 1, 1u))) >> uvec2(0u, 0u)), max(~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | 0u) == _GLF_IDENTITY(read_2, (read_2) >> 0u)))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))), (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, _GLF_IDENTITY((8u), max((8u), (8u))) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1))))) | (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))))) == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(0u ^ 0u, 1u * (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u))))) + 1, 1u)), ~ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) / 1u)) | 0u) == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1)))), (_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) | (8u))) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(115858u) : read_1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * 1u), (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) | 0u)), uint(8u))) | (_GLF_IDENTITY(read_1, _GLF_IDENTITY((false ? _GLF_FUZZED(115858u) : read_1), uint(_GLF_IDENTITY(uvec2((false ? _GLF_FUZZED(115858u) : read_1), 0u), (uvec2((false ? _GLF_FUZZED(115858u) : read_1), 0u)) ^ uvec2(0u, 0u))))))))) == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u ^ 0u, uint(uint(0u ^ 0u))), 1u * (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) << 0u))))) + 1, 1u)))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((_GLF_IDENTITY(! (false), true && (! (false))))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
}
