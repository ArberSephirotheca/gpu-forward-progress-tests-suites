#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uint subgroup_size;
 uint _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_12 {
 float _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_9 {
 vec3 _f0;
 ivec3 _f1;
 bvec4 _f2;
 mat3 _f3;
 int _f4;
 mat3 _f5;
 int _f6;
} ;

struct _GLF_struct_10 {
 uvec2 _f0;
 _GLF_struct_9 _f1;
 uint _f2;
 mat2 _f3;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_12 _f2;
 mat3x2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat4 _f1;
 bool _f2;
 ivec2 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 vec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 uint workgroup_base;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 ivec4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 mat4x3 _f0;
 uint _f1;
 bvec2 _f2;
 mat3x4 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 vec3 _f1;
 mat3x2 _f2;
 vec4 _f3;
 mat4 _f4;
 bvec2 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat2x3 _f1;
 vec4 _f2;
 mat3x4 _f3;
 uvec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat2x4 _f4;
 uint _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_3 _f0;
 _GLF_struct_7 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(bvec2(true), _GLF_struct_10(uvec2(1u), _GLF_struct_9(vec3(1.0), ivec3(1), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1, mat3(1.0), 1), 1u, mat2(1.0)), _GLF_struct_12(1.0, _GLF_struct_11(gl_SubgroupSize, 1u, mat3x2(1.0))), mat3x2(1.0), mat4x2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_3(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(max(uvec4(1u), uvec4(1u)), (max(uvec4(1u), uvec4(1u))) + uvec4(0u, 0u, 0u, 0u))), _GLF_struct_0(_GLF_IDENTITY(1, min(1, 1)), mat2x3(1.0), vec4(1.0), mat3x4(1.0), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)), ~ _GLF_IDENTITY((~ ((uvec2(1u)))), (false ? _GLF_FUZZED(uvec2(189882u, 166279u)) : (~ ((uvec2(1u))))))) | (uvec2(1u))), ivec2(1)), _GLF_struct_1(ivec4(1), vec3(1.0), mat3x2(1.0), vec4(1.0), mat4(1.0), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), false), bvec3(bvec3(bvec3(bvec2(true), false)))))), mat3x4(1.0)), _GLF_struct_2(mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(-38.12)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), 1u, bvec2(true), mat3x4(1.0), mat4x3(1.0)), mat2x4(1.0), 1u), _GLF_struct_7(_GLF_struct_4(ivec4(1), vec4(_GLF_IDENTITY(1.0, (1.0) + 0.0)), mat4x3(1.0)), workgroup_size * workgroup_id, _GLF_struct_5(_GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(ivec4(71615, -54061, -38502, -81634).ggga))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), _GLF_struct_6(mat3x4(1.0), mat4(1.0), true, ivec2(1), uvec3(_GLF_IDENTITY(1u, max(1u, 1u)))), ivec4(1), mat3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_struct_replacement_8._f1.workgroup_base + subgroup_id * _GLF_struct_replacement_13._f2._f1.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_8._f1.workgroup_base + subgroup_id * _GLF_struct_replacement_13._f2._f1.subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size)), ~ (~ (~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size)))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size)))))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size))), ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size)))) | ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_13._f2._f1.subgroup_size, ~ (~ (_GLF_struct_replacement_13._f2._f1.subgroup_size)))))))) >> (0u | 0u)));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(15.04)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) >> 0), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), ! (! (bool(bvec4(false, true, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 0u, 0u, 1u), (uvec4(read_1, 0u, 0u, 1u)) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (_GLF_IDENTITY(! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true)))))), (! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec2((read_1 == read_2), true)), (bool(bvec2((read_1 == read_2), true))) && true))))) || false))), true, true))))))) && true)) || false))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), true))), false, true))))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) | (read_1)) == read_2))), _GLF_IDENTITY((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) && true), bool(bvec4(_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) && true), true, false, true)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) && true), bool(bvec4(_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) && true), true, false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(num_workgroup)))))), (! ((! (read_1 == read_2)))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), bool(bvec2(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true)))), ! (! (! (_GLF_IDENTITY((! _GLF_IDENTITY((read_1 == read_2), true && ((read_1 == read_2)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) && true), (! ((! (read_1 == read_2)))) || false)))))))))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u)))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), _GLF_IDENTITY(bool(bvec2((! ((_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) && true)))), true)), true && (bool(bvec2(_GLF_IDENTITY((! ((! (read_1 == read_2)))), bool(bvec4((! ((! (read_1 == read_2)))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! (_GLF_IDENTITY((! (read_1 == read_2)), (_GLF_IDENTITY((! (read_1 == read_2)), ! (! ((! (read_1 == read_2)))))) && true))) || false)))) && true))) || false))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (read_1 == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_local_id) : read_1)) == read_2)))) || false))), true, true))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 0u, 1u)))) * (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 1u)) == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! _GLF_IDENTITY(((! (read_1 == read_2))), ! (! (((! (read_1 == read_2))))))), true && ((! ((! _GLF_IDENTITY((read_1 == read_2), _GLF_IDENTITY(bool(bvec4((read_1 == read_2), false, true, false)), false || (bool(bvec4((read_1 == read_2), false, true, false)))))))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(read_1, (read_1) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, max(read_2, read_2))))), ! (! ((read_1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, max(read_2, read_2))))))))))) || false))), true, true))))))), _GLF_IDENTITY(bool(bvec3((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (read_1 == read_2), true && (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((! (read_1 == read_2))), ! (! (((! (read_1 == read_2)))))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! _GLF_IDENTITY(((! (read_1 == read_2))), bool(bool(((! (read_1 == read_2))))))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), ! (! (_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + sin(0.0)))) ^ (read_2)))) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true))))))), false, false)), ! (! (bool(bvec3((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) && true)) || false))))), true, true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! _GLF_IDENTITY((read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))), bool(bvec4((read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2))), true, true, true)))) || false), true, true, false))))))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true))))))), false, false)))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))), ! (! ((_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false)))), bool(bvec4(! (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false)))), true, true, true))))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true, true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), bool(bvec4((_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))))) || false))))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, ! (! ((! ((! (read_1 == read_2)))) || false)))))), true, true))))))), _GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))), ! (! ((_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false)))), bool(bvec4(! (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false)))), true, true, true))))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true, true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), bool(bvec4((_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))))) || false))))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, ! (! ((! ((! (read_1 == read_2)))) || false)))))), true, true))))))))), bool(bvec3(bool(bool((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))), (! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))), ! (! ((_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true))))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false)))), bool(bvec4(! (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false)))), true, true, true))))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true, true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), bool(bvec4((_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))))) || false))))))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, ! (! ((! ((! (read_1 == read_2)))) || false)))))), true, true))))))))), true, false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((_GLF_IDENTITY(! (read_1 == read_2), bool(bvec2(! (read_1 == read_2), false)))))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY((read_1 == read_2), bool(bool((read_1 == read_2)))))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true && (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false))), true), true)))))))), (! ((_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2))), true && (! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! (_GLF_IDENTITY((! (read_1 == read_2)), true && ((! (read_1 == read_2)))))), _GLF_IDENTITY(true && ((! ((! (read_1 == read_2))))), true && (_GLF_IDENTITY(true && ((! ((! (read_1 == read_2))))), true && (true && ((! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))))))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, _GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true))))))), false, false), bvec3(bvec4(bvec3((! (_GLF_IDENTITY((! (read_1 == read_2)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((_GLF_IDENTITY(! (read_1 == read_2), bool(bvec2(! (read_1 == read_2), false)))))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! _GLF_IDENTITY((read_1 == read_2), bool(bool((read_1 == read_2)))))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true && (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, false))), true), true)))))))), (! ((_GLF_IDENTITY(! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2))), true && (! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! (_GLF_IDENTITY((! (read_1 == read_2)), true && ((! (read_1 == read_2)))))), _GLF_IDENTITY(true && ((! ((! (read_1 == read_2))))), true && (_GLF_IDENTITY(true && ((! ((! (read_1 == read_2))))), true && (true && ((! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u))))))))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | (read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || false)))) && true))) || false))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, _GLF_IDENTITY(false, ! (! (false))))))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true))))))), false, false), false)))), ! (! (bool(bvec3((! (_GLF_IDENTITY((! _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), _GLF_IDENTITY((! ((! (read_1 == read_2)))) || false, bool(bvec2((! ((! (read_1 == read_2)))) || false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((! (read_1 == read_2))), true && (! ((! (read_1 == read_2))))), (! ((! (read_1 == read_2)))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))), (! ((! (read_1 == read_2)))) || false)))) && true)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 0u, 0u))), read_2)))))) || false))), (_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false)))) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((read_1 == read_2), false || ((read_1 == read_2))))), _GLF_IDENTITY((! ((! (read_1 == read_2)))), true && ((! ((! (read_1 == read_2)))))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, 0u | _GLF_IDENTITY((read_1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (read_1) : _GLF_FUZZED(next_virtual_gid)))), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2) || false))), ! (_GLF_IDENTITY(! ((! (read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u)))), (! ((! (read_1 == read_2)))) || _GLF_IDENTITY(false, (false) && true))))) && true))) || false))))), true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, 1u))) == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (read_2)))) || false), true, true, false)))), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), (! ((! (read_1 == read_2)))) || false))), true, true))))))), false, false))))))))) && true)) || false)))))))) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
