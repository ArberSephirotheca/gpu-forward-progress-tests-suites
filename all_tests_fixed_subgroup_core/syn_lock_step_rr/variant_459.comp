#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 uint subgroup_local_id;
 uint _f0;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
 vec2 _f1;
 int _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 vec3 _f1;
 uvec4 _f2;
 ivec2 _f3;
 ivec3 _f4;
 int _f5;
 mat3 _f6;
} ;

struct _GLF_struct_17 {
 ivec2 _f0;
 _GLF_struct_14 _f1;
 vec4 _f2;
 _GLF_struct_15 _f3;
 mat4x2 _f4;
 float _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 mat3x4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_13 {
 mat2 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_10 {
 int _f0;
 ivec2 _f1;
 int _f2;
 mat3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 uvec3 _f1;
 bool _f2;
 bool _f3;
 mat4x3 _f4;
 mat2x4 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_8 {
 vec4 _f0;
 mat4x2 _f1;
 float _f2;
 vec3 _f3;
 ivec4 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 vec3 _f1;
 mat4 _f2;
 uint _f3;
} ;

struct _GLF_struct_4 {
 mat3x4 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 vec4 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
} ;

struct _GLF_struct_2 {
 mat3 _f0;
 int _f1;
 mat3 _f2;
 mat2x4 _f3;
 uint _f4;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat4 _f3;
 mat4x3 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 _GLF_struct_2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_13 _f4;
 _GLF_struct_17 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 ivec3 _f0;
 uint workgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.4)), bool(false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))), (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (true ? clamp(injectionSwitch, injectionSwitch, injectionSwitch) : _GLF_FUZZED(vec2(-462.682, -9182.7148))))) / abs(vec2(1.0, 1.0))))) / vec2(1.0, 1.0)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), max(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) >> (0u | 0u)), (true ? _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)) : _GLF_FUZZED(189232u)))))))), _GLF_struct_3(_GLF_struct_1(ivec3(1), bvec2(true), uvec2(1u), mat4(1.0), mat4x3(1.0), mat3x2(1.0)), mat2x3(1.0), _GLF_struct_2(mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (1)) : _GLF_FUZZED((-80389 * -9511)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (1)) : _GLF_FUZZED((-80389 * -9511))) | (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), 0 | (1)) : _GLF_FUZZED((-80389 * -9511))) - 0))))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), max(_GLF_IDENTITY(0, (0) / 1) | (1), 0 | (1)))) : _GLF_FUZZED((-80389 * -9511)))))), (1 & 1)), max(ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), max(_GLF_IDENTITY(0, (0) / 1) | (1), 0 | (1)))) : _GLF_FUZZED((-80389 * -9511)))))), (1 & 1)), ivec2(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0 | (1), max(_GLF_IDENTITY(0, (0) / 1) | (1), 0 | (1)))) : _GLF_FUZZED((-80389 * -9511)))))), (1 & 1)))))), mat3(1.0), mat2x4(1.0), 1u), bvec2(true)), _GLF_struct_7(_GLF_struct_4(mat3x4(1.0)), vec4(1.0), _GLF_struct_5(vec2(1.0), vec3(1.0), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), ((1.0)) / 1.0)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(false, false)), true, false)), ! (! (bool(bvec3(bool(bvec2(false, false)), true, false))))))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3508.9779) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(1.0, 1.0))))), 1u), _GLF_struct_6(mat4x3(1.0), mat3x4(1.0))), _GLF_struct_11(_GLF_struct_8(vec4(1.0), mat4x2(1.0), 1.0, vec3(1.0), _GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED((ivec4(44641, -51930, -70231, -98616) >> ivec4(-15429, 95558, -82930, -2758))))), mat4x3(1.0)), ivec3(_GLF_IDENTITY(1, ~ (~ (1)))), mat4x2(1.0), _GLF_struct_9(uvec2(1u), uvec3(_GLF_IDENTITY(1u, 0u + (1u))), _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), ! (_GLF_IDENTITY(! (bool(bool(true))), false || (! (bool(bool(true)))))))))), bool(bvec2(_GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(bool(bool(true)), true, true, true)))))), false)))), true, mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((2.4 / -7.2))), bool(false)))), mat2x4(1.0), mat3x2(1.0)), _GLF_struct_10(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(75667) : 1)), ivec2(1), 1, mat3(1.0), uvec4(1u))), _GLF_struct_13(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), _GLF_struct_12(mat4x2(1.0), mat3x4(1.0), mat3x2(1.0))), _GLF_struct_17(ivec2(1), _GLF_struct_14(mat3(1.0), vec3(1.0), uvec4(1u), ivec2(1), ivec3(1), 1, mat3(1.0)), vec4(1.0), _GLF_struct_15(uvec2(1u), vec2(1.0), 1, mat3x4(1.0)), mat4x2(1.0), 1.0, _GLF_struct_16(gl_SubgroupInvocationID, 1u)), mat4(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false, true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) - vec2(0.0, 0.0)).x)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0)))).x)) > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (_GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0))).x, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((2.2 / -6.3))), float(0.0), bool(true))), 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat4x3(-37.24, 4797.7090, 8530.2334, -878.609, 804.827, -33.44, 991.128, 79.16, 0.5, -1.5, -660.997, 753.001) / 299.372)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(exp(-1.6)) : 1.0)), 0.0, cos(sqrt(0.0)), length(0.0)) : _GLF_FUZZED(mat4x3(1.2, 1.4, -2945.2030, -3247.5324, 2.1, 1232.0441, 2.6, _GLF_IDENTITY(8176.1185, min(8176.1185, 8176.1185)), 7.1, 37.28, 81.49, -7902.5306))))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), _GLF_IDENTITY(length(0.0), (true ? _GLF_IDENTITY(length(0.0), max(length(0.0), length(0.0))) : _GLF_FUZZED((7.9))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat4x3(-37.24, 4797.7090, 8530.2334, -878.609, 804.827, -33.44, 991.128, 79.16, 0.5, _GLF_IDENTITY(-1.5, max(-1.5, -1.5)), -660.997, 753.001) / 299.372)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)) : _GLF_FUZZED(mat4x3(1.2, 1.4, -2945.2030, -3247.5324, 2.1, 1232.0441, 2.6, 8176.1185, 7.1, 37.28, 81.49, -7902.5306)))))))) * mat2(1.0))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat4x3(-37.24, 4797.7090, 8530.2334, -878.609, 804.827, -33.44, 991.128, 79.16, 0.5, -1.5, -660.997, 753.001) / 299.372)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(cos(sqrt(0.0)), max(cos(sqrt(0.0)), _GLF_IDENTITY(cos(sqrt(0.0)), clamp(cos(sqrt(0.0)), cos(sqrt(0.0)), cos(sqrt(0.0)))))), length(0.0)), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)) : _GLF_FUZZED(mat4x3(1.2, 1.4, -2945.2030, -3247.5324, 2.1, 1232.0441, 2.6, 8176.1185, 7.1, 37.28, 81.49, -7902.5306))))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat4x3(-37.24, 4797.7090, 8530.2334, -878.609, 804.827, -33.44, 991.128, 79.16, 0.5, -1.5, -660.997, 753.001) / 299.372)) : _GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)), (true ? mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, cos(sqrt(0.0)), length(0.0)) : _GLF_FUZZED(mat4x3(1.2, 1.4, -2945.2030, -3247.5324, 2.1, 1232.0441, 2.6, 8176.1185, 7.1, 37.28, 81.49, -7902.5306)))))))) * mat2(1.0))).x)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(ldexp(vec2(-4440.9273, 7.7), ivec2(33123, 10492))) : vec2(0.0, 0.0)))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), 1.0, 1.0, exp(0.0)))))) > injectionSwitch.y)))), false, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(! ((injectionSwitch.x > injectionSwitch.y)), true, false))))))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            return;
           return;
          }
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false || (bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))), bool(bool(_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), mix(vec2(_GLF_FUZZED(-5.8), _GLF_FUZZED((2.4))), vec2(_GLF_IDENTITY((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0], min((max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))))))[0], (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))[0])), (_GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), min(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))[1]), bvec2(_GLF_IDENTITY(true, (true) || false), true)))).y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) && true)))
            return;
           return;
          }
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-4174.3879))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(ivec3(1), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(bitfieldInsert(uvec3(50286u, 24768u, _GLF_IDENTITY(57218u, uint(_GLF_IDENTITY(uint(57218u), uint(_GLF_IDENTITY(uvec3(uint(57218u), 0u, 1u), (uvec3(uint(57218u), 0u, 1u)) | (uvec3(uint(57218u), 0u, 1u)))))))), uvec3(64553u, _GLF_IDENTITY(117205u, (_GLF_IDENTITY(117205u, max(117205u, 117205u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), 153412u), 95082, 48726)) : gl_WorkGroupSize)).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupSize, 1u), ~ (~ _GLF_IDENTITY((uvec4(gl_WorkGroupSize, 1u)), ((uvec4(gl_WorkGroupSize, 1u))) ^ (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u))))))).x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))) ? _GLF_FUZZED(uvec4(144627u, 146603u, 53324u, 71388u)) : _GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) | ((_GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x))))), 0u | (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), (gl_WorkGroupSize.x), _GLF_IDENTITY((gl_WorkGroupSize.x), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))), ~ (~ (uint(4u)))))), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(111673u)))))) ^ ((gl_WorkGroupSize.x))))), 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) << 0u)) | ((_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)).x))), 0u | (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), (gl_WorkGroupSize.x), _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), ~ (~ (_GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), uint(uint(uint(4u))))))) | (_GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))))))), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(111673u)))))) ^ ((gl_WorkGroupSize.x))), 0u ^ (_GLF_IDENTITY((gl_WorkGroupSize.x), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), 0u + (_GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))), uint(_GLF_IDENTITY(4u, (true ? 4u : _GLF_FUZZED(111673u)))))) ^ (_GLF_IDENTITY((gl_WorkGroupSize.x), max((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))))))), 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x))))))), (uvec4((_GLF_IDENTITY(gl_WorkGroupSize.x, clamp(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), _GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), gl_WorkGroupSize.x))), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u, 1u))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) / 1u), 1u, 1u, 1u), ((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))))), uint(uvec4(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) / 1u), 1u, 1u, 1u), ((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))))), max(~ (uint(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) / 1u), 1u, 1u, 1u), ((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))))), ~ (uint(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) / 1u), 1u, 1u, 1u), ((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))))))), 0u, 0u, 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize)))).x))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec4(144627u, 146603u, 53324u, 71388u)), (_GLF_FUZZED(uvec4(144627u, 146603u, 53324u, 71388u))) >> uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), _GLF_ZERO(0.0, injectionSwitch.x))) : uvec4(_GLF_IDENTITY((gl_WorkGroupSize.x), clamp(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), (_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))), ~ (~ (_GLF_IDENTITY((gl_WorkGroupSize.x), 0u | (_GLF_IDENTITY((gl_WorkGroupSize.x), min((gl_WorkGroupSize.x), (gl_WorkGroupSize.x))))))))) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (gl_WorkGroupSize.x), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u)))).x), (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(uvec3(uint(4u), 1u, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) + 0u)) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))), clamp(uint(uvec3(_GLF_IDENTITY(uint(4u), 0u + (uint(4u))), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), min(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))), 0u | (_GLF_IDENTITY(uint(6u), clamp(uint(6u), uint(6u), uint(6u))))))))))), uint(uvec3(uint(4u), 1u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u), uint(6u))))))), uint(uvec3(uint(4u), 1u, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) | 0u)) ^ 0u)), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), clamp(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uint(6u)))))))))))) ^ ((gl_WorkGroupSize.x))))), 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))), _GLF_IDENTITY(mat2(1.0) * (vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), max(mat2(1.0) * (vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), mat2(1.0) * (vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))))) + (injectionSwitch)).x))))), (_GLF_IDENTITY(uvec4((_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (~ (ivec4(2, 1, 0, 1))))), int(ivec2(int(_GLF_IDENTITY(ivec4(2, 1, 0, 1), ~ (~ (ivec4(2, 1, 0, 1))))), int(_GLF_ONE(1.0, injectionSwitch.y))))))], gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (_GLF_IDENTITY(~ (uvec4((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], _GLF_IDENTITY(max(gl_WorkGroupSize[2], gl_WorkGroupSize[2]), (max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])) >> 0u)))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (true ? _GLF_IDENTITY(~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(129257u, 71168u, 184824u, 26910u)) : _GLF_IDENTITY(~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / uvec4(1u, 1u, 1u, 1u))), ((_GLF_IDENTITY(false ? _GLF_FUZZED(uvec4(129257u, 71168u, 184824u, 26910u)) : _GLF_IDENTITY(~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)])))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize), min(min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)))).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / uvec4(1u, 1u, 1u, 1u)), (false ? _GLF_FUZZED(uvec4(20111u, 31141u, 91098u, 67517u)) : false ? _GLF_FUZZED(uvec4(129257u, 71168u, 184824u, 26910u)) : _GLF_IDENTITY(~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(_GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) - 0u), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) >> 0)])))), gl_WorkGroupSize)).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (~ (uvec4((_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize), min(min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize), min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], max(gl_WorkGroupSize[2], gl_WorkGroupSize[2])))), gl_WorkGroupSize)))).x), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / uvec4(1u, 1u, 1u, 1u)))))) << uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(uvec4(50172u, 110566u, 189144u, 153630u))))))) * uvec4(1u, 1u, 1u, 1u))), ~ (~ (uint(_GLF_IDENTITY(uvec4((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) | (0u)), 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), _GLF_IDENTITY((uvec4((gl_WorkGroupSize.x), _GLF_IDENTITY(0u, (0u) | 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, (1u) / 1u), 1u, 1u, 1u), (_GLF_IDENTITY((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))) + (_GLF_IDENTITY((0.0), clamp(_GLF_IDENTITY((0.0), min((0.0), (0.0))), (0.0), (0.0))))) + 0.0), 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(_GLF_IDENTITY(-1446.2426, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-1446.2426, (-1446.2426) - 0.0), float(float(_GLF_IDENTITY(-1446.2426, (-1446.2426) - 0.0))))), float(_GLF_FUZZED(4.7)), bool(false))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)))) * _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, 0u ^ (1u)))), (true ? uint(uvec4(1u, 0u, 0u, 1u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u), clamp(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (uint(uvec4(1u, _GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u))) | (uint(uvec4(1u, 0u, 0u, 1u)))), uint(uvec4(1u, 0u, 0u, 1u)), uint(uvec4(1u, 0u, 0u, 1u))))), 1u, 1u, 1u), (false ? _GLF_FUZZED((uvec4(54359u, 19388u, 133309u, 74106u) << uvec4(28183u, 157094u, 33191u, 32043u))) : _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, 0u ^ (1u)))), (true ? uint(uvec4(1u, 0u, 0u, 1u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u), clamp(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (uint(uvec4(1u, _GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u))) | (uint(uvec4(1u, 0u, 0u, 1u)))), uint(uvec4(1u, 0u, 0u, 1u)), uint(uvec4(1u, 0u, 0u, 1u))))), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, 0u ^ (1u)))), (true ? uint(uvec4(1u, 0u, 0u, 1u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u), clamp(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (uint(uvec4(1u, _GLF_IDENTITY(0u, (0u ^ 0u) | (0u)), 0u, 1u))) | (uint(uvec4(1u, 0u, 0u, 1u)))), uint(uvec4(1u, 0u, 0u, 1u)), uint(uvec4(1u, 0u, 0u, 1u))))), 1u, 1u, 1u))))), ((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), float(mat2x4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0))))))), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(-1446.2426)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (true ? uint(uvec4(1u, 0u, 0u, 1u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u), clamp(_GLF_IDENTITY(uint(uvec4(1u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u, 1u)), (uint(uvec4(1u, 0u, 0u, 1u))) | (uint(uvec4(1u, 0u, 0u, _GLF_IDENTITY(1u, uint(uvec2(1u, 0u))))))), uint(uvec4(1u, 0u, 0u, 1u)), uint(uvec4(1u, 0u, 0u, 1u))))), 1u, 1u, 1u)) | ((uvec4((gl_WorkGroupSize.x), 0u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), (false ? _GLF_FUZZED(-1.9) : _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0 * (_GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, (0.0) + 0.0)))), float(_GLF_FUZZED(-1446.2426)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)))) * uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) * 1u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (true ? uint(uvec4(1u, 0u, 0u, 1u)) : _GLF_FUZZED(subgroup_size)))) ^ 0u), clamp(_GLF_IDENTITY(uint(uvec4(1u, 0u, 0u, 1u)), (uint(uvec4(1u, 0u, 0u, 1u))) | (uint(uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u, 0u, 1u)))), uint(uvec4(1u, 0u, 0u, 1u)), uint(uvec4(1u, 0u, 0u, 1u))))), 1u, 1u, 1u)))) / uvec4(1u, 1u, 1u, 1u))))))))) >> 0u) / 1u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_struct_replacement_0.workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.0)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), false, false, true)), (bool(bvec4(! (false), false, false, _GLF_IDENTITY(true, true && (true))))) || false))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_18._f5._f6.subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))), (workgroup_base) | 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_18._f5._f6.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_18._f5._f6.subgroup_local_id + 1, max(_GLF_struct_replacement_18._f5._f6.subgroup_local_id + 1, _GLF_struct_replacement_18._f5._f6.subgroup_local_id + 1))) + 0u)) % subgroup_size), (((_GLF_struct_replacement_18._f5._f6.subgroup_local_id + 1) % subgroup_size)) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0))))).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec2(next_virtual_gid, 0u)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) && true))))
      return;
    }
   return;
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
