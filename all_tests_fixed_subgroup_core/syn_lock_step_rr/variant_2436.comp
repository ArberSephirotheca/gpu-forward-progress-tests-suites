#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 mat2 _f0;
 uint virtual_gid;
 uint _f1;
} ;

struct _GLF_struct_1 {
 mat2x4 _f0;
 mat2x4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bool _f1;
 uint _f2;
 ivec4 _f3;
 mat2x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 uint _f0;
 _GLF_struct_3 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))), true)), true, false, false)), bool(bvec3(bool(bvec4(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)))), true)), true, false, false)), false, true)))))) && true)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))) && true))), false || ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((true ? 61.92 : -8489.8578))), bool(false)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8.8), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 175.924))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x) + tan(0.0)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)), ((mat2(1.0) * (injectionSwitch))) * mat2(1.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))) * (injectionSwitch), 1.0, 0.0))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(mat4x2((injectionSwitch), 1.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, abs(0.0))))))).y))), bool(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))))), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))), false, false)))))) || false)))) && true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))) && true)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(inversesqrt(-3.1), min(_GLF_IDENTITY(inversesqrt(-3.1), (_GLF_IDENTITY(inversesqrt(-3.1), (false ? _GLF_FUZZED(40.30) : inversesqrt(-3.1)))) / 1.0), inversesqrt(-3.1)))))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)))) * (injectionSwitch), min(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), float(mat3x2(float(mat2x4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0))))))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2(mat2(1.0) * (injectionSwitch), 1.0, 0.0))))), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(vec2(mat3x2(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0)), max(vec2(mat3x2(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0)), vec2(mat3x2(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0))))), mat2(1.0) * (injectionSwitch)))).y))))) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[0], _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))[1], gl_NumWorkGroups[2]))[0]), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(181377u, 48375u, 111611u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups)))), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[0]), (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))[0]))) >> 0u), _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, 0 ^ (1))], clamp(_GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(1, 0 ^ (1))], ~ (~ (gl_NumWorkGroups[_GLF_IDENTITY(1, 0 ^ (1))]))), gl_NumWorkGroups[_GLF_IDENTITY(1, 0 ^ (1))], gl_NumWorkGroups[_GLF_IDENTITY(1, 0 ^ (1))])), gl_NumWorkGroups[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)), injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (! ((injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (! ((injectionSwitch.x > injectionSwitch.y))), false, false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false || (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), true && (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(98.87), _GLF_FUZZED(26.25)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), min(injectionSwitch, injectionSwitch)).y)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))), max(injectionSwitch.y, injectionSwitch.y))) + 0.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED((- 8679.7427)), (_GLF_FUZZED((- 8679.7427))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(818.388) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED((- 8679.7427)), (_GLF_FUZZED((- 8679.7427))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(818.388) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), injectionSwitch)).x > injectionSwitch.y) || false)) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED((- 8679.7427)), (_GLF_FUZZED((- 8679.7427))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(818.388) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED((- 8679.7427)), (_GLF_FUZZED((- 8679.7427))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(818.388) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), injectionSwitch)).x > injectionSwitch.y) || false)) && true)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED((- 8679.7427)), (_GLF_FUZZED((- 8679.7427))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(818.388) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6.0), _GLF_IDENTITY(_GLF_FUZZED((- 8679.7427)), (_GLF_FUZZED((- 8679.7427))) - 0.0)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(818.388) : (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))), injectionSwitch)).x > injectionSwitch.y) || false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | ((workgroup_id)))) / 1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1u, _GLF_struct_3(_GLF_struct_0(bvec4(true), true, 1u, _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, 0 ^ (1))), ivec4(1, 1, 1, 1) * (ivec4(_GLF_IDENTITY(1, 0 ^ (1))))), mat2x3(1.0), _GLF_IDENTITY(ivec3(1), ivec3(_GLF_IDENTITY(ivec3(ivec3(1)), _GLF_IDENTITY(ivec3(ivec4(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)))), (ivec3(ivec3(1))) << ivec3(0, 0, 0)), 0)), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0), ivec3(0, 0, 0) + _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) | (0 & (-70551 << -86350)))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(ivec3(10171, -43263, 94866).y) : 0)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(19099)))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0))), ((~ (ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(5.3)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((~ (ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0))), ((~ (ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(5.3)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x), _GLF_ZERO(0.0, injectionSwitch.x)))) << (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(0), ivec3(0)))))), ((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, _GLF_IDENTITY((0) - 0, ((0) - 0) | (0 & (-70551 << -86350)))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(10171, -43263, 94866).y, min(ivec3(10171, -43263, 94866).y, ivec3(10171, -43263, 94866).y))) : 0)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(19099)))), ~ _GLF_IDENTITY((~ (ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0))), ((~ (ivec3(_GLF_IDENTITY(0, (0) - 0), 0, 0)))) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-8.6), _GLF_FUZZED(5.3)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | ivec3(0, 0, 0))) ^ (ivec3(ivec4(_GLF_IDENTITY(ivec3(ivec3(1)), (ivec3(_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), clamp(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) + (ivec3(1))), ivec3(1)))) | (ivec3(1))))) << ivec3(0, 0, 0)), 0)))))))), _GLF_struct_1(mat2x4(1.0), mat2x4(1.0), uvec2(1u)), _GLF_struct_2(mat2(_GLF_IDENTITY(1.0, (1.0) + 0.0)), workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)), _GLF_IDENTITY(bool(bool(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)))), ! (! (bool(bool(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false))))))))))) ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)))) * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), 0u ^ (1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), 0u ^ (1u)) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), ((_GLF_IDENTITY(1u, 0u ^ (1u)))) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) << 0u))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, 0u ^ (1u)))), 0u | ((~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))), 1u)), 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uvec4(104067u, 144465u, 108507u, 22116u)[0]) : 1u))), 0u | (_GLF_IDENTITY((1u), ((1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), 0u | (_GLF_IDENTITY(0u ^ (1u), clamp(0u ^ (1u), 0u ^ (1u), 0u ^ (1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), (0u ^ (1u)) | (0u ^ (1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (1u))), ((_GLF_IDENTITY(1u, 0u ^ (1u)))) >> 0u)) * (1u | 0u)) * 1u), _GLF_IDENTITY(1u, 0u ^ (1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, 0u ^ (1u)))))), max((_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))), min(~ (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))), ~ (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u))))))))))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))), 1u)), 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), ((1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), 0u | (_GLF_IDENTITY(0u ^ (1u), clamp(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(num_workgroup) : 0u)) ^ (1u), 0u ^ (1u), 0u ^ (1u)))))), (_GLF_IDENTITY(1u, 0u ^ (1u))) * _GLF_IDENTITY(1u, uint(uvec2(1u, 1u)))), _GLF_IDENTITY(1u, 0u ^ (1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, 0u ^ (1u)))))), (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((+ num_workgroup)) : 0u)) ^ (1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))), 1u)), 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))))), 1u)), 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(131216u))), min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u | (1u)), 1u)), min(1u, 1u))))))), 1u)), 0u ^ (1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u))))) | _GLF_IDENTITY(0u, (0u) | (0u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))), 1u)), 0u ^ (1u))))) ^ 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))), 1u)), 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))), ~ (~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))), (false ? _GLF_FUZZED(subgroup_local_id) : clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(1u, min(1u, 1u)))))))))))), 1u)), 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) << 0u) : _GLF_FUZZED(131216u))), min(1u, 1u))), (~ (_GLF_IDENTITY(1u, min(1u, 1u)))) | 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, 0u | (1u)), 1u)), min(1u, 1u))))))), 1u)), 0u ^ (1u))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))), clamp(~ (_GLF_IDENTITY(1u, min(1u, 1u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(1u, 1u))), (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u))))) | _GLF_IDENTITY(0u, (0u) | (0u))), ~ (_GLF_IDENTITY(1u, min(1u, 1u))))))), 1u)), 0u ^ (1u))))) ^ 0u)))) * 1u), _GLF_IDENTITY(1u, 0u ^ _GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), ((1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min(max(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u ^ (1u), 0u | (_GLF_IDENTITY(0u ^ (1u), clamp(0u ^ (1u), 0u ^ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), (true ? ~ ((1u)) : _GLF_FUZZED(packHalf2x16(vec2(675.888, 7.9))))))), 0u ^ (1u)))))), (_GLF_IDENTITY(1u, 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, 0u ^ (1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(1u, 0u ^ (1u))) * 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY(0u, (0u) | (0u)) ^ (1u)))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0))))).y)) || (false))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id)), subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u))), (subgroup_id) + 0u) * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), (1) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(30850)))), ~ (~ (int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(30850)))))))), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(30850)))), ~ (~ (int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(30850)))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(30850)))), ~ (~ (int(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, clamp(1, 1, 1)) : _GLF_FUZZED(30850))))))))))))), 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), (bool(_GLF_IDENTITY(bool(false), false || (bool(false))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, false)))))), false, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))) || (false)))), true, false), bvec3(bvec3(bvec3((_GLF_DEAD(false)), true, false)))))), false, true)))))) || false), false, false, false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(88.33, -3784.1664)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(88.33, -3784.1664), mix(vec2((vec2(88.33, -3784.1664))[0], (vec2(88.33, -3784.1664))[1]), vec2(_GLF_FUZZED(180.024), _GLF_FUZZED(3623.7189)), bvec2(false, false)))) : injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), (! (false)) || false)))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bool((false)))), (! (false)) || false))))))) && true), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(3310.4233), (((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch)) * mat2(1.0))[1]), vec2((((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-61.84)), bvec2(true, false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch)) * mat2(1.0), mix(vec2(_GLF_FUZZED(3310.4233), (((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch)) * mat2(1.0))[1]), vec2((((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch)) * mat2(1.0))[0], _GLF_FUZZED(-61.84)), bvec2(true, _GLF_IDENTITY(false, ! (! (false))))))))))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(50.21, _GLF_IDENTITY(_GLF_IDENTITY(-869.086, max(-869.086, -869.086)), mix(float(-869.086), float(_GLF_FUZZED(((_GLF_IDENTITY(bvec4(true, true, false, true) == bvec4(true, true, false, false), ! (! (_GLF_IDENTITY(bvec4(true, true, false, true) == bvec4(true, true, false, false), bool(bvec4(bvec4(true, true, false, true) == bvec4(true, true, false, false), true, false, false))))))) ? -4901.5471 : -92.59))), bool(false)))) / -1161.9937)))))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.3, clamp(-0.3, _GLF_IDENTITY(-0.3, (-0.3) - 0.0), -0.3)), 4983.0482)) : injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.3, clamp(-0.3, _GLF_IDENTITY(-0.3, (-0.3) - 0.0), -0.3)), 4983.0482)) : injectionSwitch, clamp(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.3, clamp(-0.3, _GLF_IDENTITY(-0.3, (-0.3) - 0.0), -0.3)), 4983.0482)) : injectionSwitch, false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.3, clamp(-0.3, _GLF_IDENTITY(-0.3, (-0.3) - 0.0), -0.3)), 4983.0482)) : injectionSwitch, false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-0.3, clamp(-0.3, _GLF_IDENTITY(-0.3, (-0.3) - 0.0), -0.3)), 4983.0482)) : injectionSwitch))) / vec2(1.0, 1.0))))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_FUZZED(exp(6.0))))) * _GLF_IDENTITY((vec2(1.0, 1.0)), (true ? (vec2(1.0, 1.0)) : _GLF_FUZZED(mod(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(vec2(1.0, 1.0), min(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)), _GLF_IDENTITY((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat4((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), max(vec2(_GLF_IDENTITY(mat4((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat4((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat4((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat4((clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), (vec2(1.0, 1.0)) / vec2(1.0, 1.0)))), vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED((vec2(50.21, -869.086) / -1161.9937)), vec2(mat2x4(_GLF_FUZZED((vec2(50.21, -869.086) / _GLF_IDENTITY(-1161.9937, clamp(-1161.9937, -1161.9937, -1161.9937)))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 0.0, 1.0, 1.0))))))).y, false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(50.21, -869.086) / -1161.9937)))))).y, false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(50.21, -869.086) / -1161.9937)))))).y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((_GLF_IDENTITY(vec2(50.21, -869.086) / -1161.9937, (vec2(50.21, -869.086) / -1161.9937) - vec2(0.0, 0.0)))))))).y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch))), vec2(0.0, 0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.3, 4983.0482)) : injectionSwitch))) : _GLF_FUZZED(vec2(-25.32, -0.5)))))) * vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED(-6.6) : 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED((vec2(50.21, -869.086) / -1161.9937)))))).y, false, _GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-76.69, (-76.69) - 0.0), -0.8)), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(-76.69, (-76.69) - 0.0), -0.8))) / vec2(1.0, 1.0)))).y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))))))))))) && true)))));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_4._f1._f2.virtual_gid], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(buf[_GLF_struct_replacement_4._f1._f2.virtual_gid], min(buf[_GLF_struct_replacement_4._f1._f2.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_4._f1._f2.virtual_gid], 0u + (buf[_GLF_struct_replacement_4._f1._f2.virtual_gid])))))), 4, 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_4._f1._f2.virtual_gid], 4, 64, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(max(_GLF_IDENTITY(80764, min(_GLF_IDENTITY(80764, int(ivec4(80764, 0, 1, 0))), 80764)), ivec2(93963, -48809)[0])))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read_1, min(read_1, read_1))), min((_GLF_IDENTITY(read_1, min(read_1, read_1))), (_GLF_IDENTITY(read_1, min(read_1, read_1))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(read_1, 0u, 1u, 1u)), _GLF_IDENTITY((uint(uvec4(read_1, 0u, 1u, 1u))), clamp((uint(uvec4(read_1, 0u, 1u, 1u))), _GLF_IDENTITY((uint(uvec4(read_1, 0u, 1u, 1u))), clamp((uint(uvec4(read_1, 0u, 1u, 1u))), _GLF_IDENTITY((uint(uvec4(read_1, 0u, 1u, 1u))), 1u * ((uint(uvec4(read_1, 0u, 1u, 1u))))), (uint(uvec4(read_1, 0u, 1u, 1u))))), (uint(uvec4(read_1, 0u, 1u, 1u))))) >> 0u), (uint(uvec4(read_1, 0u, 1u, 1u))) / (1u | 1u))), read_1))), ((_GLF_IDENTITY(read_1, min(read_1, read_1)))) >> 0u), (_GLF_IDENTITY(read_1, min(read_1, read_1))), (_GLF_IDENTITY(read_1, min(read_1, read_1))))), ~ (~ ((read_1))))))) / 1u) == read_2) + 1, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, true))))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(970.897)), float(injectionSwitch.y), bool(true))))))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))))) || false)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
