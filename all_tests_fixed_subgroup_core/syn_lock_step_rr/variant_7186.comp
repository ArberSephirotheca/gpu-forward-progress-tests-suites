#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, _GLF_IDENTITY(false, (false) && true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(7617.6410) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) / determinant(mat4(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) || _GLF_IDENTITY(false, false || (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) || false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) || false))))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(601.375)), float(injectionSwitch.y), bool(true)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))))), true, true)))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))))), true, true)))) || false)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_IDENTITY(true, bool(bvec3(true, true, true))) && (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, false))))), true, true)))) || false)))))) && true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true)))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), float(mat2x3(float(vec3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))) / vec2(1.0, 1.0)), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) + 0.0)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) + 0.0)) > injectionSwitch.y)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true))))))))) || false)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))), false || (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_WRAPPED_IF_FALSE(false))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ((_GLF_WRAPPED_IF_FALSE(false))) || false), false || _GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), (injectionSwitch.x < injectionSwitch.y)))) || false)), true && (_GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), (injectionSwitch.x < injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), (injectionSwitch.x < injectionSwitch.y)))) || false)), ((false || _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))))))))))), ((_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))), (injectionSwitch.x < injectionSwitch.y)))) || false))) && true))))))))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(680.611)))), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))), ! (! (_GLF_DEAD(false)))), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))), true), true, true))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(true, true && (true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), true)))), true), true, true))))), false, false)))))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, false, false)), ! (! (bool(bvec4(true, true, false, false)))))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), bool(bool((_GLF_IDENTITY(false, bool(bool(false))))))))))), true, true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false || (bool(bool(false)))), false || (bool(false || (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false || (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false || (bool(bool(false)))), false || (bool(false || (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (bool(_GLF_IDENTITY(bool(false || (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false || (bool(bool(false)))), false || (bool(false || (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false || (bool(bool(false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false || (bool(bool(false)))), false || (bool(false || (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(false || (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false || (bool(bool(false)))), false || (bool(false || (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (bool(_GLF_IDENTITY(bool(false || (bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(bool(false || (bool(bool(false)))), false || (bool(false || (bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, true))))), false || (bool(bvec3(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, true))))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (! ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)))), bool(bvec3(bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)))), false, true)))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)))), true && (false || (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false)), bool(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), false)), (bool(bvec2(bool(false), false))) || false))))))) && true))))))))))))))))))))), true, _GLF_IDENTITY(false, ! (! (false))))))) && true)) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0), transpose(transpose(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)))))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) - 0.0, mix(float((0.0) - 0.0), float(_GLF_FUZZED(-3958.9174)), bool(false)))), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED((acosh(vec2(-18.78, 23.58)) * mat2(-8.5, 918.995, 1.8, -3.7))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0)), min(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(5.7)), float(float(mat3x2(injectionSwitch.x, 1.0, 1.0, 0.0, 1.0, 0.0))), bool(true)))))) < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec4(_GLF_IDENTITY((true), ! (! ((true)))), false, false, true))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, _GLF_IDENTITY(-38.96, mix(float(_GLF_FUZZED(vec3(-4418.2664, -36.92, -5.7).x)), float(_GLF_IDENTITY(-38.96, (true ? -38.96 : _GLF_FUZZED(-11.61)))), bool(true)))), -4836.6545))))) - vec2(0.0, 0.0)))).y) * round(length(normalize(1.0)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) : _GLF_FUZZED((acosh(vec2(-18.78, 23.58)) * mat2(-8.5, 918.995, 1.8, -3.7))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)))))).y) * round(length(normalize(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) : _GLF_FUZZED((acosh(vec2(-18.78, 23.58)) * mat2(-8.5, 918.995, 1.8, -3.7))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)))))).y) * round(length(normalize(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) : _GLF_FUZZED((acosh(vec2(-18.78, 23.58)) * mat2(-8.5, 918.995, 1.8, -3.7))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)))))).y) * round(length(normalize(1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(-897.766, -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) : _GLF_FUZZED((acosh(vec2(-18.78, 23.58)) * mat2(-8.5, 918.995, 1.8, -3.7))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)))))).y) * round(length(normalize(1.0)))) : _GLF_FUZZED(9.0))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-897.766, (-897.766) / 1.0), -4278.8174)), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-897.766, (-897.766) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(-897.766, (-897.766) / 1.0), max(_GLF_IDENTITY(-897.766, (-897.766) / 1.0), _GLF_IDENTITY(-897.766, (-897.766) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(-897.766, (-897.766) / 1.0), clamp(_GLF_IDENTITY(-897.766, (-897.766) / 1.0), _GLF_IDENTITY(-897.766, (-897.766) / 1.0), _GLF_IDENTITY(-897.766, (-897.766) / 1.0))))), -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(-897.766, -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(vec2(-897.766, -4278.8174), (vec2(-897.766, -4278.8174)) * mat2(1.0))), vec2(mat4x2(_GLF_IDENTITY(_GLF_FUZZED(vec2(_GLF_IDENTITY(-897.766, mix(float(-897.766), float(_GLF_FUZZED((-9.0 - -50.38))), bool(false))), -4278.8174)), _GLF_IDENTITY(vec2(mat2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-897.766, -4278.8174), max(vec2(-897.766, -4278.8174), vec2(-897.766, _GLF_IDENTITY(-4278.8174, (-4278.8174) / 1.0))))), abs(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0)), mat2(1.0) * (vec2(mat2(_GLF_FUZZED(vec2(_GLF_IDENTITY(-897.766, (false ? _GLF_FUZZED(-38.45) : _GLF_IDENTITY(-897.766, mix(float(_GLF_FUZZED(54.85)), float(-897.766), bool(true))))), -4278.8174)), abs(0.0), 0.0))))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))) : _GLF_FUZZED((acosh(vec2(-18.78, 23.58)) * mat2(_GLF_IDENTITY(-8.5, _GLF_IDENTITY(clamp(-8.5, -8.5, -8.5), (clamp(-8.5, -8.5, -8.5)) + 0.0)), 918.995, 1.8, -3.7))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), ((true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))) || false)) ? injectionSwitch : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(-1.5, (-1.5) * 1.0), -38.96), -4836.6545)), max(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true)))))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, min(-1.5, -1.5)), -1.5)), -38.96), -4836.6545)), mix(vec2(_GLF_FUZZED(8.6), _GLF_FUZZED(5772.3951)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(5.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) < injectionSwitch.y)))) && true)))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, min(-1.5, -1.5)), -1.5)), -38.96), -4836.6545)))[0], (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(_GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(_GLF_IDENTITY(-1.5, float(vec2(-1.5, sin(0.0)))), min(-1.5, -1.5)), -1.5)), -38.96), -4836.6545)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, abs(1.0), 0.0, 1.0, 1.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch : _GLF_FUZZED(mod(vec2(-1.5, -38.96), -4836.6545)))))).y) * round(length(normalize(1.0))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) || false), true, false)))), true, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)), false)))), true)))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, exp(0.0), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, sin(0.0) + (injectionSwitch.x)))), (injectionSwitch.x) * 1.0) > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)), true, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5039.7815), _GLF_FUZZED(-5.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) / abs(vec2(1.0, 1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 0u), (uvec4(workgroup_id, 1u, 0u, 0u)) | (_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, 0u), (uvec4(workgroup_id, 1u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))) - uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u)))))), 0u | (workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))))) && (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), true && (_GLF_DEAD(false)))))), (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true && (_GLF_DEAD(false))))))) || false), true && (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8687.7063) : 0.0)))), 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(-53.72) : _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0 * (float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 0.0, 0.0, 1.0, 0.0, 0.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), 0u + (subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) << (1u ^ 1u)) + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -5.4))), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) + abs(vec2(0.0, 0.0))).y))), ! (! (_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-338.407)), bool(false)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))) + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * subgroup_size) * 1u) + (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 0 | ((~ (1)))))), clamp(uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(19349) : 1)))), ~ (~ (1)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), max(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ (~ (1)))))), uint(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) ^ 0)) ^ 0))))))) | (uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))))))))) | (1u ^ 1u)), uint(_GLF_IDENTITY(1, ~ (~ (1)))))), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (false ? _GLF_FUZZED(9333) : ~ (~ (1))))))) * 1u), 4, 64, _GLF_IDENTITY(4, (4) | _GLF_IDENTITY((4), ((4)) << 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), 1u * (_GLF_IDENTITY(0u, (0u) | 0u)))))) | (_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u + (next_virtual_gid), (0u + (next_virtual_gid)) | 0u))))], uint(read_1 == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))) / vec2(1.0, 1.0)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))) / vec2(1.0, 1.0)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))))))).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))) / vec2(1.0, 1.0)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))))))).x > injectionSwitch.y, false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))) / vec2(1.0, 1.0)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), max(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(617.478, 17.69)) : injectionSwitch))))))))).x > injectionSwitch.y, false, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
