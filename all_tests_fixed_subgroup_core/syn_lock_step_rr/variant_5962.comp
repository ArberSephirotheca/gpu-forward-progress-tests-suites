#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, sqrt(0.0)), vec2(0.0, 0.0) + (vec2(injectionSwitch.x, sqrt(0.0)))))), injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) / 1.0) : _GLF_FUZZED(log(-7.4)))))), 1.0)))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-68.58)), ((true ? injectionSwitch.x : _GLF_FUZZED(-68.58))) - 0.0)), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))) - length(0.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), mix(float(_GLF_FUZZED(float((mat4x2(167.162, 8.8, 83.55, 111.468, 9.0, -597.730, 7603.9183, -4.5) != mat4x2(-76.46, 8353.9626, 8.0, -88.71, -7.4, -52.65, -4574.0415, 354.649))))), float(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y)), bool(true))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(74.89))), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)), mat2(mat2x4(transpose(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))))))))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(mat4(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))))))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4558.6916) : 1.0, tan(0.0) + (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4558.6916) : 1.0)))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0, mix(float((_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), float(_GLF_FUZZED(57.18)), bool(false)))), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), abs(1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-68.58)), clamp(_GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-68.58)), 0.0 + ((true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))), (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-68.58)), min((true ? injectionSwitch.x : _GLF_FUZZED(-68.58)), (true ? injectionSwitch.x : _GLF_FUZZED(-68.58))))))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))) - length(0.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(87.09)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(log(1.0), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-234.501)), clamp(float(_GLF_FUZZED(-234.501)), float(_GLF_FUZZED(-234.501)), float(_GLF_FUZZED(-234.501)))), float(log(1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(2.6)), bool(false))), min(1.0, 1.0)))), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), max(_GLF_IDENTITY(min(1.0, 1.0), mix(float(min(1.0, 1.0)), float(_GLF_FUZZED(2.6)), bool(false))), min(1.0, 1.0)))), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0), mat2(1.0) * (mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))))))) * exp(0.0)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))) - length(0.0)))), mix(float(_GLF_FUZZED(11.61)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))))))) * exp(0.0)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))) - length(0.0))))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) && true)))) / 1.0), 0.0, exp(0.0), 0.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(469.282) : 1.0))), (true ? (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(469.282) : 1.0))) : _GLF_FUZZED(-157.921))) - determinant(mat2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0, 0.0)))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))).y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(1021.3159, 6.9).t) : 0.0))), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), log(1.0))), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(-762.855)) : _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-480.941) : 0.0)))), exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(1.0), float(_GLF_FUZZED(-7095.5136)), bool(false))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * _GLF_IDENTITY((1.0), min((1.0), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (1.0) + 0.0))))), bool(true))))))) / 1.0))))), float(mat3x2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(inversesqrt(-762.855)) : 0.0)), exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7095.5136)), bool(false))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * (1.0)) / 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))), (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(-762.855)) : 0.0)), exp(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7095.5136)), bool(false))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * (1.0)) / 1.0))))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))))))) * exp(0.0)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))) - length(0.0)))), mix(float(_GLF_FUZZED(11.61)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(ceil(injectionSwitch)))).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, abs(1.0), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))))))) * exp(0.0)), clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58))), (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-68.58)))) - length(0.0))))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), (bool(true)) && true)))) / 1.0), 0.0, exp(0.0), 0.0, log(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(469.282) : 1.0))), (true ? (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(469.282) : 1.0))) : _GLF_FUZZED(-157.921))) - determinant(mat2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), 0.0, 0.0)))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0))), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))).y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(vec2(1021.3159, 6.9).t) : 0.0))), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(log(1.0), clamp(log(1.0), _GLF_IDENTITY(log(1.0), min(log(1.0), log(1.0))), log(1.0))), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0))), (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(-762.855)) : _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-480.941) : 0.0)))), exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mix(float(1.0), float(_GLF_FUZZED(-7095.5136)), bool(false))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * _GLF_IDENTITY((1.0), min((1.0), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.8)), float(_GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, (1.0) + 0.0))))), bool(true))))))) / 1.0))))), float(mat3x2(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? _GLF_FUZZED(inversesqrt(-762.855)) : 0.0)), exp(0.0), 0.0, log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7095.5136)), bool(false))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * (1.0)) / 1.0))))), 1.0 * (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, _GLF_IDENTITY(determinant(mat2(1.0, 0.0, 0.0, 1.0)), min(determinant(mat2(1.0, 0.0, 0.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, 1.0))))), (mat2x4(injectionSwitch.y, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(inversesqrt(-762.855)) : 0.0)), exp(0.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), log(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7095.5136)), bool(false))), injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(1.0 * (1.0), (1.0 * (1.0)) / 1.0))))))), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.4)), float(injectionSwitch.y), bool(true)))) / 1.0), 0.0, exp(0.0), 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))), (mat2x4(injectionSwitch.y, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), log(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, 1.0 * (1.0)))))))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(min(uvec3(163341u, 58444u, 87190u), uvec3(22894u, 32867u, 54036u))))), gl_NumWorkGroups, gl_NumWorkGroups)).x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (gl_NumWorkGroups.x)))), 1u * (_GLF_IDENTITY(0u ^ (gl_NumWorkGroups.x), _GLF_IDENTITY((0u ^ (gl_NumWorkGroups.x)), max((0u ^ (gl_NumWorkGroups.x)), (0u ^ (gl_NumWorkGroups.x)))) | (0u ^ (gl_NumWorkGroups.x))))))), ((_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(196216u, 126156u, 62775u)), (_GLF_FUZZED(uvec3(196216u, 126156u, 62775u))) - uvec3(0u, 0u, 0u)) : _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))), (gl_NumWorkGroups) | (gl_NumWorkGroups))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(uvec3(_GLF_IDENTITY(uvec3(3u), ~ (~ (uvec3(3u))))))), uvec3(3u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), max((gl_NumWorkGroups) | (gl_NumWorkGroups), (gl_NumWorkGroups) | (gl_NumWorkGroups))))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u))))) ^ (uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))), uvec3(3u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ (3u), 0u + (~ (3u))))), 3u, 3u))), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), uvec3(3u))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), uvec3(3u)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_size) : 0u)), 0u)) : _GLF_FUZZED((subgroup_id & subgroup_size)))), 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (false ? _GLF_FUZZED((subgroup_id + uvec3(144381u, 198141u, 71900u))) : (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) : _GLF_FUZZED(uvec3(uvec2(57655u, 103306u), 188666u)))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))) + uvec3(0u, 0u, 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), max((gl_NumWorkGroups) | (gl_NumWorkGroups), (gl_NumWorkGroups) | (gl_NumWorkGroups))))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u))))) ^ (uvec3(0u, 0u, 0u) | (uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 1u)), min(uint(uvec3(0u, 0u, 1u)), uint(uvec3(0u, 0u, 1u))))), 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))), uvec3(3u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(_GLF_IDENTITY(3u, clamp(_GLF_IDENTITY(3u, ~ (_GLF_IDENTITY(~ (3u), 0u + (_GLF_IDENTITY(~ (3u), clamp(~ (3u), ~ (3u), ~ (3u))))))), 3u, 3u))), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), uvec3(3u))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), uvec3(3u)))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - (uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (false ? _GLF_FUZZED(subgroup_size) : 0u)))), 0u)) : _GLF_IDENTITY(_GLF_FUZZED((subgroup_id & subgroup_size)), clamp(_GLF_FUZZED((subgroup_id & subgroup_size)), _GLF_FUZZED((subgroup_id & subgroup_size)), _GLF_FUZZED((subgroup_id & subgroup_size)))))), 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))) | (gl_NumWorkGroups))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(uvec3(3u), uvec3(3u))), (false ? _GLF_FUZZED((subgroup_id + uvec3(144381u, 198141u, 71900u))) : (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) : _GLF_FUZZED(uvec3(uvec2(57655u, 103306u), 188666u)))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))) + uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u))).x), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups) | (gl_NumWorkGroups), min((gl_NumWorkGroups) | (gl_NumWorkGroups), (gl_NumWorkGroups) | (gl_NumWorkGroups))), (gl_NumWorkGroups) | (gl_NumWorkGroups))))) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), (_GLF_IDENTITY(uvec3(3u), max(uvec3(3u), uvec3(3u)))) ^ uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(3u, (3u) << uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-4.9) : _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), (vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))) / vec2(1.0, 1.0)))).x)))), _GLF_IDENTITY(float(_GLF_FUZZED(6.6)), mix(float(float(_GLF_FUZZED(6.6))), float(_GLF_FUZZED(float(9373u))), bool(false))), bool(false))))))))))), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) | _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), ~ (~ ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) | _GLF_IDENTITY((gl_NumWorkGroups), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u))) | ((gl_NumWorkGroups))))) >> (_GLF_IDENTITY(uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(3u), uvec3(3u)), (_GLF_IDENTITY(uvec3(3u), uvec3(3u))) | (_GLF_IDENTITY(uvec3(3u), uvec3(3u))))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(3u), uvec3(3u)))))))))) + uvec3(0u, 0u, 0u)).x)))), _GLF_IDENTITY(1u, (1u) | (1u)) * (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))).x), (0u ^ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, _GLF_IDENTITY(0u, (0u) << (149950u & 0u)), 0u))) >> uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), max(uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u))))) | (uvec3(0u, 0u, 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), (((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)))))).x)) / (1u | 1u))))))) + 0u) >> 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_id), (~ (workgroup_id)) / 1u)), 0u | (~ (~ (workgroup_id))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) >> 0u);
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))) - 0u)), subgroup_local_id)), ~ (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 0u), ~ (~ (uvec2(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 0u))))))) - _GLF_IDENTITY(0u, max(0u, 0u)))), subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.1) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-248.495))))))))) % subgroup_size) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))))))) % subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-3.1) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (_GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), mix(float(max(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(-723.113)), bool(false)))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-248.495))), float(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-248.495)))))))))))) % subgroup_size) | ((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((180.144 / -331.425)), _GLF_FUZZED(-42.01)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x))), _GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(1, _GLF_IDENTITY((1), max((1), (1))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))) % subgroup_size)) << 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(373.396)))))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid])), 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))) && true))) && true), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(bool(bool(_GLF_IDENTITY(bool(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.y), bool(true)))))))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))), true)))) && true))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.8))) < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true)))) && true))) && true), _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (bool(false || (_GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), true && (bool(bvec3(true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), false, true, false)))))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5.3)), float(injectionSwitch.y), bool(true)))))))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false, true))))), true && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))), true)))) && true))) && true)))))), bool(bvec4(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true))) ? read_1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) | 0u), max(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id))), _GLF_FUZZED(subgroup_id))))) == read_2) + 1, 4, _GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(1, (1) | (1)), int(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(4, (4) / 1))), 0)), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, _GLF_IDENTITY(clamp((4) / 1, (4) / 1, (4) / 1), max(clamp((4) / 1, (4) / 1, (4) / 1), clamp((4) / 1, (4) / 1, (4) / 1))))), (_GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, _GLF_IDENTITY(clamp((4) / 1, (4) / 1, (4) / 1), max(clamp((4) / 1, (4) / 1, (4) / 1), clamp((4) / 1, (4) / 1, (4) / 1)))))) << 0), 0)), int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) / _GLF_IDENTITY(1, (1) | 0), ((4) / 1) | ((4) / 1))), 0)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) / 1), 0)), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(1307), (_GLF_FUZZED(1307)) - 0) : 4))))))), (4) / 1), 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) / 1), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), (0 | 0) | ((4))), (true ? _GLF_IDENTITY((4), (0 | 0) | ((4))) : _GLF_FUZZED((true ? -85277 : floatBitsToInt(-695.581))))) / 1), 0)), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, min(1, 1))), 0), (true ? ivec2(_GLF_IDENTITY(4, (4) / 1), 0) : _GLF_FUZZED(_GLF_IDENTITY((- ivec2(91639, -46263)), max((- ivec2(91639, -46263)), (- ivec2(91639, -46263))))))))) ^ 0)) ^ 0)))), (~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4((4), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), max(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) ^ (int(1))), (false ? _GLF_FUZZED(1979) : int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))))))))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), max(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))), 0))) ^ 0)), (false ? _GLF_FUZZED((71480 >> -52001)) : 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4((4), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) ^ 0))), int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) * (_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))))), max(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) ^ (int(1))), (false ? _GLF_FUZZED(1979) : int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))))))))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) * 1.0))), ~ (_GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(~ (int(_GLF_ONE(_GLF_IDENTITY(1.0, 1.0 * (1.0)), injectionSwitch.y))), _GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), max(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))), 0))) ^ 0)))))) / 1)) / 1), 0)), min(int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) / 1), 0)), int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 | (4), _GLF_IDENTITY(0 | (4), 0 | (0 | (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 | (4), _GLF_IDENTITY(0 | (4), 0 | (0 | (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 | (4), _GLF_IDENTITY(0 | (4), 0 | (0 | (4))))), (_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 | (4), _GLF_IDENTITY(0 | (4), 0 | (0 | (4)))))) | (_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 | (4), _GLF_IDENTITY(0 | (4), 0 | (0 | (4)))))))) * 1)) - 0), 1, 0, 0))))) / 1), 0)))))) / 1), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) / 1), 0)), min(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(1307) : 4))))))), (4) / 1), 0)), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1))))), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), (0 | 0) | ((4))), (true ? _GLF_IDENTITY((4), (0 | 0) | ((4))) : _GLF_FUZZED((true ? -85277 : floatBitsToInt(-695.581))))) / 1), 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) / 1), 0), (true ? ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) / 1), 0) : _GLF_FUZZED((- ivec2(91639, -46263)))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) / 1), 0), (true ? ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) / 1), 0) : _GLF_FUZZED((- ivec2(91639, -46263)))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) / 1), 0), (true ? ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) / 1), 0) : _GLF_FUZZED((- ivec2(91639, -46263))))))) - 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (4) / 1), 0), (true ? ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, (4) / 1)) / 1), 0) : _GLF_FUZZED((- ivec2(91639, -46263))))))))) ^ 0)) ^ 0)))), (~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0)), 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4((4), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), max(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) ^ (int(1))), (false ? _GLF_FUZZED(1979) : int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))))))))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), max(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))), 0))) ^ 0)))) / 1, 0 | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ 0)), 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4((4), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(int(1), max(int(1), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), max(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(1979) : int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) ^ (int(1))), (false ? _GLF_FUZZED(1979) : int(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 ^ (1)), 1)))))), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))))))))))), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (_GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), clamp(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), max(~ (int(_GLF_ONE(1.0, injectionSwitch.y))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))), ~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))), 0))) ^ 0)))) / 1)))) / 1), 0)), min(int(ivec2(_GLF_IDENTITY(4, (4) / 1), 0)), int(ivec2(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(0 | (4), int(ivec4(_GLF_IDENTITY(0 | (4), clamp(_GLF_IDENTITY(0 | (4), max(0 | (4), 0 | (4))), 0 | (4), _GLF_IDENTITY(0 | (4), 0 | (0 | (4))))), 1, 0, 0))))) / 1), 0)))))) / 1)) >> 0)))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bool(false))), false, false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false, false, false))))), _GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec4(bvec2(! (false), true), false, false))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))), false)))))) || false, true && (_GLF_IDENTITY((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || false, _GLF_IDENTITY(((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || false) || false, bool(bvec2(((bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))) || false) || false, false))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, false)))))) || false), true, false, true))))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
