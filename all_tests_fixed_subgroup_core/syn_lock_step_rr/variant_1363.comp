#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) * 1u), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) * _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 1u * (1u))))))) + _GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), _GLF_IDENTITY(uint(8u), (uint(8u)) | (uint(8u))))), 0u)));
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(_GLF_IDENTITY(32372, (32372) | 0), 0 ^ (_GLF_IDENTITY(32372, (32372) | 0)))))) | 0)) >> 0)) >> 0))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, _GLF_IDENTITY((32372), ((32372)) >> 0) | 0)))) | 0))), 1, 0)), (int(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))) ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0)), clamp((_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0)), ((_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0))) | 0), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0))))), 1, _GLF_IDENTITY(0, (0) / (0 ^ 1))))) | (int(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(_GLF_IDENTITY(32372, ~ (~ (32372))), (32372) | 0)), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))), (~ ((false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))) | 0))), 1, 0))))))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))))))), (_GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))))))))) >> 0), _GLF_IDENTITY(32372, min(_GLF_IDENTITY(32372, (32372) - 0), _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (_GLF_IDENTITY(32372, (_GLF_IDENTITY(32372, (32372) / 1)) >> 0)) | 0)))))))), _GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))))))))), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))))))), (_GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))))))))) >> 0), _GLF_IDENTITY(32372, min(_GLF_IDENTITY(32372, (32372) - 0), _GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (_GLF_IDENTITY(32372, (_GLF_IDENTITY(32372, (32372) / 1)) >> 0)) | 0)))))))), _GLF_IDENTITY(32372, min(32372, _GLF_IDENTITY(_GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0)))))), (_GLF_IDENTITY(32372, int(int(_GLF_IDENTITY(32372, (false ? _GLF_FUZZED(21146) : _GLF_IDENTITY(32372, (32372) | 0))))))) ^ 0))))))))) : _GLF_IDENTITY(0, (0) >> 0))));
 do
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) + 1, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(19765) : _GLF_IDENTITY(64, _GLF_IDENTITY(0 | (64), (false ? _GLF_FUZZED(16442) : 0 | (64)))))), 4);
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, bool(bool(true))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, bool(bool(true))))), false)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(true, bool(bool(true)))) || false))), false))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, bool(bool(true))))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))), _GLF_IDENTITY(false, true && (false))))), true)), true))), true))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), true, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), true, true)), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, true && (true)))), false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))))), true))))))), false))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bool(bool(true)), false || (bool(bool(true)))))))))))), true && (bool(bool(true)))), true, true, true))))))))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))))), false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(_GLF_IDENTITY(bool(true), bool(bool(bool(true))))))))))), false)))), false)))))))), true)))), _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (false))), true, true)))))), (_GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (false))), true, true)))), true)))))) || false), bool(bvec4(true && _GLF_IDENTITY(_GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (false))), true, true)))))), (_GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), true, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), ! (! (bool(bvec4((! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))), true, true))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, true)), bvec3(bvec3(bvec3(bvec3(false, true, true)))))))))))), true, true), bvec3(bvec3(bvec3(((! (false))), true, true)))), true)))))) || false), true, true, true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (false))), false || (((! (false))))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true, true)))))))), ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true) && _GLF_IDENTITY(((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), true))))))))))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, true))))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (false))), false || (((! (false))))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), true, true)))))))), ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true) && _GLF_IDENTITY(((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), true))))))))))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))), true, true))))))))) || false)), (! (_GLF_IDENTITY((_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (false))), false || (((! (false))))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bool(_GLF_IDENTITY(bvec3(! ((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(! ((! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))), true, true)))))))), ((_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true) && _GLF_IDENTITY(((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ((false)) && true), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ((false)) && true), true))))))))))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), cos(0.0) * (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))))) < injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (! (false)))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), true, true))))))))) || false))) || false)) && true)))))), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true, false), true, false)), true)))), true)))))), false || ((! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true, false), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true, false), true, false)), true)))), true)))))))))), true), bvec3(bvec3(bvec3((_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((false), false), false)), bvec2(bvec4(bvec2(bvec3(bvec2((false), false), false)), true, true))))))), ((! (false))) || false)) || false)), true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (_GLF_IDENTITY(false, true && (false))))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true)))))))), (! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true))))))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))), true, true))))))), ! (! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_IDENTITY(true, true && (true)))))))))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(((! (false))), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(((! (false))), true, true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(((! (false))), true, true))))), false)))))))), ! (! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true, false)))))))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false))))), bool(bvec4(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false)))))))), false, true, true))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true)))))))))))))))), false || (bool(bool(! ((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))), true, true))))))), ! (! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, _GLF_IDENTITY(true, true && (true)))))))))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), true && ((false))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(((! (false))), true, true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(((! (false))), true, true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(((! (false))), true, true))))), false)))))))), ! (! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))), true, false)))))))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ! (! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false))))), bool(bvec4(_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool((false)))))))), false, true, true))), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true)))))))))))))))))), ! (! (bool(bool(! ((! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(bvec3(((! (false))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(((! (false))), true, true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(((! (false))), true, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(((! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((! (false))), ! (! (_GLF_IDENTITY(((! (false))), false || (((! (false)))))))))), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(((! (false))), true, true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(bvec3(((_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true, true))))), false)))))))), ! (! (_GLF_IDENTITY((! (false)), true && _GLF_IDENTITY(((! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), false, true))))))))))))), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(((! (false))), true, true), bvec3(bvec3(bvec3(((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bool(! (false)))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) / 1.0, float(mat2x3(_GLF_IDENTITY((injectionSwitch.y) / 1.0, mix(float((injectionSwitch.y) / 1.0), float(_GLF_FUZZED(float(82887))), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0))))), false, true))))))))))))), true, true)))), true))))))))))))))))))))), ((_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))) || false))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false))))), false)))), true)), true)))))), _GLF_IDENTITY(_GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), true, true), false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, ! (! (true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_WRAPPED_LOOP(false)), (bool(_GLF_WRAPPED_LOOP(false))) || false), true))))), true, true)), false)))), true)))))), true && ((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, bool(bvec2(true, true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, (true) && true), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false)))))))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), false, true))), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))), false))))), false)))))))), false))), true)))))))), true)))))))) && true, bool(bvec2(_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(bvec2(true, true), false, true))))))), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), true)))))), true && (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)))), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, ! (! (true))))), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), true))), false))), _GLF_IDENTITY(false, true && (false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), true)))))), ((bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(true, false))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) || false)))), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(true, ! (! (true))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, _GLF_IDENTITY(true, ! (! (true))))), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), true, true), bvec3(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)), false)))), true))), false))), _GLF_IDENTITY(false, true && (false)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_WRAPPED_LOOP(false), true, true)), false)))), true))))))) && true))) && true, false))))));
}
