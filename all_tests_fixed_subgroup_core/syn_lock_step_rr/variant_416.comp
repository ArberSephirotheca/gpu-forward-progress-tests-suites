#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))))), _GLF_FUZZED(-114.002)), (false ? _GLF_FUZZED(vec2(-8.9, -865.130)) : vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])))))), _GLF_FUZZED(-114.002)))), vec2(_GLF_FUZZED(-8.2), (injectionSwitch)[1]), bvec2(false, true))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-42.92) : injectionSwitch.x)) > injectionSwitch.y)), true))), false))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), true), true))))))))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))) > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false, false, true))))))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && true)))), bool(bool((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))), (! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))) && true)))))))))))), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bool(false))))))))), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2170.7016)), bool(false))))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), float(mat4x3(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(9.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-6.7))) > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), float(mat4x3(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(9.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-6.7))) > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), true)), ! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), float(mat4x3(clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(9.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-6.7))) > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), true))))))))))) || false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), true))), false)))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))), ((bool(bvec2(false, true)))) && true)))), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ((bool(bvec2(false, true)))) && true))))) || false), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), ! (! (((bool(bvec2(false, true))))))) && true)))), false)), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), ! (! (((bool(bvec2(false, true))))))) && true)))), false))) && true)) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))) && true)))), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))))) || false), false)), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY(((bool(bvec2(false, true)))), ! (! (((bool(bvec2(false, true))))))) && true)))), false))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))))) && true), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), ! (! ((bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))))))))))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), true))), ((bool(bvec2(false, true)))) && true)))), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ((bool(bvec2(false, true)))) && true))))) || false), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), ! (! (((bool(bvec2(false, true))))))) && true)))), false)), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, true))), true && (_GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), ! (! (((bool(bvec2(false, true))))))) && true)))), false))) && true)) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((_GLF_IDENTITY(bool(bvec2(false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))))) && true)))), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), ((bool(bvec2(false, true)))) && true))))) || false), false)), (bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! _GLF_IDENTITY((bool(bvec2(false, true))), _GLF_IDENTITY(((bool(bvec2(false, true)))), ! (! (((bool(bvec2(false, true))))))) && true)))), false))) && true)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true))))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))), false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))))) && true), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), false || (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)))))), ! (! ((bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(bvec3(false, false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false))))))))))))))), true, false)))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((true ? gl_NumWorkGroups : _GLF_IDENTITY(_GLF_FUZZED((uvec3(183809u, 33148u, 74856u) & uvec3(97784u, 133543u, 120587u))), (_GLF_FUZZED((uvec3(183809u, 33148u, 74856u) & uvec3(97784u, 133543u, 120587u)))) | (_GLF_FUZZED((uvec3(183809u, 33148u, 74856u) & uvec3(97784u, 133543u, 120587u)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(! (true), true, true, true))))) ? gl_NumWorkGroups : _GLF_FUZZED((_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), (uvec3(183809u, 33148u, 74856u)) | (_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), (_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), (uvec3(_GLF_IDENTITY(183809u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(183809u, (183809u) + 0u))), 33148u, 74856u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) >> uvec3(0u, 0u, 0u)))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), (uvec3(183809u, 33148u, 74856u)) | (_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), (_GLF_IDENTITY(uvec3(183809u, 33148u, 74856u), (uvec3(_GLF_IDENTITY(183809u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(183809u, (183809u) + 0u))), 33148u, 74856u)) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, max(0u, 0u))))) >> uvec3(0u, 0u, 0u))))))))) & uvec3(97784u, 133543u, 120587u)))), ~ (~ ((true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(183809u, _GLF_IDENTITY(33148u, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(33148u, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(117712u) : 33148u)))), 74856u) & uvec3(97784u, 133543u, 120587u))))))), (true ? gl_NumWorkGroups : _GLF_FUZZED((uvec3(183809u, 33148u, 74856u) & uvec3(97784u, 133543u, 120587u))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, gl_WorkGroupID.x, gl_WorkGroupID.x)) : _GLF_FUZZED(workgroup_size)), ~ (~ (_GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)), clamp((true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)), _GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)), clamp((true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)), (true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)), (true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)))), (true ? gl_WorkGroupID.x : _GLF_FUZZED(workgroup_size)))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0), (true ? mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, 1.0) : _GLF_FUZZED(mat4(2.7, 5204.1047, 3.4, -9.2, 67.31, -68.19, 1.1, -937.419, 83.44, -85.77, -863.845, -1213.8159, 962.523, -3.3, 1001.1509, 19.77)))))), injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))), dot(vec2(0.0, 0.0), vec2(1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)), 0.0, 0.0)), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log2(-63.55)) : _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 1.0, 1.0)), (float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(343.427))), 0.0, 1.0, 1.0, 1.0))) - 0.0)))), injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, injectionSwitch.y), max(false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) / 1.0), injectionSwitch.y), (false ? _GLF_FUZZED(44.06) : false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, injectionSwitch.y)))))))))) ^ 1u, (uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, injectionSwitch.y), max(false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(44.06) : false ? _GLF_FUZZED(7562.8996) : _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), float(mat4(injectionSwitch.y, 1.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))))))))) ^ 1u) ^ 0u)) ^ _GLF_IDENTITY((gl_WorkGroupID.x), uint(_GLF_IDENTITY(uvec2((gl_WorkGroupID.x), 1u), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(uvec2((gl_WorkGroupID.x), 1u), uvec2(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u)), 0u) ^ (uvec2((gl_WorkGroupID.x), 1u))) : _GLF_FUZZED(uvec2(26736u, 134056u)))))));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | (_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u) | (workgroup_id)) : _GLF_FUZZED(workgroup_id)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), ~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((workgroup_base), 0u, 0u, 0u), (_GLF_IDENTITY(uvec4((workgroup_base), 0u, 0u, 0u), min(uvec4((workgroup_base), 0u, 0u, 0u), _GLF_IDENTITY(uvec4((workgroup_base), 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(51951u, 48429u, 51129u, 178657u)) : uvec4((workgroup_base), 0u, 0u, 0u)))))) | (uvec4((workgroup_base), 0u, 0u, 0u)))), 0u ^ (uint(uvec4((workgroup_base), 0u, 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), workgroup_base)) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), workgroup_base)), ~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec4((workgroup_base), 0u, 0u, 0u)), 0u ^ (uint(uvec4((workgroup_base), 0u, 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), workgroup_base)) + subgroup_id * subgroup_size, max(_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), workgroup_base)), ~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec4((workgroup_base), 0u, 0u, 0u)), 0u ^ (uint(uvec4((workgroup_base), 0u, 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), workgroup_base)) + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), workgroup_base)), ~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec4((workgroup_base), 0u, 0u, 0u)), 0u ^ (uint(uvec4((workgroup_base), 0u, 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), workgroup_base)) + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) ^ 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 0u, 0u))), workgroup_base)), ~ (~ (workgroup_base))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(uvec4((workgroup_base), 0u, 0u, 0u)), 0u ^ (uint(uvec4((workgroup_base), 0u, 0u, 0u))))))), (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))))))), workgroup_base)) + subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), uint(uvec2(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), 0u)))) | 0u);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u), (~ ((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u)) | (~ ((_GLF_IDENTITY(uint(1), (uint(1)) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)), 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec4(1u, 1u, (1u ^ 0u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), ~ (~ (1u))))))) | 0u)))))), (_GLF_IDENTITY(uint(1), _GLF_IDENTITY((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u), (~ ((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u)) | (~ ((_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) - 0u)) / 1u)) | 0u))), (~ ((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u)) | (~ ((_GLF_IDENTITY(uint(1), (uint(1)) / 1u)) | 0u))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(4, 0 | (4))) | (_GLF_IDENTITY(4, (4) | (4)))), _GLF_IDENTITY(4, int(ivec3(4, 0, _GLF_IDENTITY(1, clamp(1, 1, 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (true ? clamp(4, 4, 4) : _GLF_FUZZED(-72648)))) | 0))) << 0)) - 0), 64, _GLF_IDENTITY(4, min(4, 4)));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0)))).y)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0)))).y)), false)), bvec3(bvec4(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0))), 1.0, 1.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0))), 1.0, 1.0, 0.0, 1.0)))[0], _GLF_FUZZED(6.8)), vec2(_GLF_FUZZED(2.9), (vec2(mat2x3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), vec2(mat3(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0))))) * mat2(1.0))), 1.0, 1.0, 0.0, 1.0)))[1]), bvec2(false, true))))).y)), false)), true))))), bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
}
