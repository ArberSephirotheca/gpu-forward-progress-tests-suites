#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(! (! (! (_GLF_DEAD(false)))), bool(bvec4(! (! (! (_GLF_DEAD(false)))), false, true, false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), bool(bvec2((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))), false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-6.9)), vec2(_GLF_FUZZED(-9512.7245), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), bvec2(false, true))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-15.36) : _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(124209u, 47966u, 120640u)) : gl_WorkGroupID))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, true, true)), _GLF_IDENTITY(bool(bool(bool(bvec4((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), 0.0)), _GLF_IDENTITY(mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0))), clamp(mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0))), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0))), mat2(1.0) * (vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, exp(0.0), 1.0, 0.0))))))))).x > injectionSwitch.y), false, true, true)))), bool(bvec4(bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)))), false, false, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(-397.787), clamp(true ? 1.0 : _GLF_FUZZED(-397.787), true ? 1.0 : _GLF_FUZZED(-397.787), true ? 1.0 : _GLF_FUZZED(-397.787))))), 0.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-1758.7691)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-42.50), _GLF_FUZZED(1.7)), bvec2(false, false))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) >> 0u)) >> 0u), uint(uvec2(workgroup_base, 1u))))) + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), false, true))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))) && true))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), bool(bvec4((_GLF_IDENTITY(! (false), (! (false)) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), false, false, false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 1u, (52466u & 0u))), (uint(uvec4(subgroup_size, 0u, 1u, (52466u & 0u)))) ^ 0u))), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u)))))))))) + 0u), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | 0u))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) << 0u)))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u)), (uint(uvec3((_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))) ^ 0u)))))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u))))) - (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (_GLF_IDENTITY(1u ^ (1u & 1u), ~ (~ (1u ^ (1u & 1u)))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) | (0u))))) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(subgroup_size, subgroup_size, subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, max(1u, 1u)))))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + subgroup_id * subgroup_size) / 1u), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (1u ^ (1u & 1u))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size, subgroup_size)), subgroup_size))), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)) | (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (_GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size, subgroup_size)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / 1u)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) * 1u)) - 0u))))))) + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true)))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false)))))))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, tan(_GLF_IDENTITY(0.0, float(float(0.0)))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))))), _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))))))), true && (bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.y, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + tan(0.0)), 0.0, tan(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, false))))))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), true && (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-60.77), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(7145.5784)), mix(float(_GLF_FUZZED(-475.551)), float(_GLF_IDENTITY((true ? (injectionSwitch)[1] : _GLF_FUZZED(7145.5784)), mix(float(_GLF_FUZZED(33.40)), float((true ? (injectionSwitch)[1] : _GLF_FUZZED(7145.5784))), bool(true)))), bool(true))))), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((vec2(754.268, 1293.7788))))))[0], _GLF_FUZZED(7806.7781)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)), true))), false, false, false))))))), true, false, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec2(! (_GLF_DEAD(false)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6539.3480)), bool(_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1805.9844)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0)) > injectionSwitch.y))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (4) | 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, (1) >> 0), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}
