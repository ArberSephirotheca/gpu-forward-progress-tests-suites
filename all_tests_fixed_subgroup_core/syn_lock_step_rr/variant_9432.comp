#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size;
 uvec2 GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.xy = GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_size;
 uvec4 GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.3)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(false, bool(bool(false)))), false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))), false))))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), true, false, true))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! _GLF_IDENTITY((! (false)), ((! (false))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0)))) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec2((false), false)))), (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))) && true))), ! (! (! (false))))))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(bvec2(false, false)), true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(true, true, false))), false))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))) || false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uvec4 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(! (! (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(_GLF_IDENTITY(bvec3(! (! (! _GLF_IDENTITY((false), ! (! ((false)))))), true, false), bvec3(bvec3(bvec3(! (! (! _GLF_IDENTITY((false), ! (! ((false)))))), true, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))))) || false)) || false), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))) && true, bool(bvec4((! ((false))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! _GLF_IDENTITY(((false)), bool(bool(((false)))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false, false)))), true, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (_GLF_IDENTITY(! ((false)), true && (! ((false))))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(_GLF_IDENTITY(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true, false)), false)))))), true, false, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))), bool(_GLF_IDENTITY(bvec3((! ((false))), true, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! ((false))), true, true), bvec3(bvec4(bvec3((! ((false))), true, true), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3((! ((false))), true, true), bvec3(bvec4(bvec3((! ((false))), true, true), true)))), false))))))) && true)))), bool(bvec2((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, _GLF_IDENTITY(false, ! (! (false))), false)))), true, false, false)))))))))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec3(bvec2(bool(((false))), false), true))), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), true, false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), true, false))))), false, true))))))))), false)))))), (! ((false))) && true)), ! (! ((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), true, false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, true)), true, false))))), false, true))))))))), false)))))), (! ((false))) && true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(((false))), false)), bvec2(bvec4(bvec2(bvec2(bool(((false))), false)), true, true)))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(((false))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bool(((false))), false)))), false, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(((false))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bool(((false))), false)))), false, false))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(bool(((false))), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bool(((false))), false)))), false, false))))), false, true))), true, false)))), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(((_GLF_IDENTITY(false, false || (false))))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(((_GLF_IDENTITY(false, false || (false))))), false))), true, true))))), false))))))) && true), (! ((false))) && true))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), true)))), ! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec4(bvec2(bool(((false))), false), false, false)), true, false)), true, false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(((false))), true && (bool(((false))))), false))))), true))))))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec4(bvec2(bool(((false))), false), true, false))), true, false))), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false))))))) && true), (! ((false))) && true)))))) && true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool((_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), false))), true))))))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(((false))), (bool(((false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), false, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), false, false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), false, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), false, false))), true)))))), true))))), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))), false)))))), (! ((false))) && _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), true, _GLF_IDENTITY(false, true && (false)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), true, _GLF_IDENTITY(false, true && (false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(((false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(((false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(((false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(((false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(((false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(((false))), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))))))), false))), true))), false, false))))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false)))))), (! ((false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), false, false)))))))))))))), (! ((false))) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), false, false)))))))))))))), (! ((false))) && true), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false))))), false), false, false)))))))))))))), (! ((false))) && true), true, false))))))), false || ((_GLF_IDENTITY(! _GLF_IDENTITY(((false)), bool(_GLF_IDENTITY(bool(((false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(((false))), false), bvec2(bvec2(bvec2(bool(((false))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(bvec2(bool(_GLF_IDENTITY(bvec2(bool(((false))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(bool(((false))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(bool(((false))), false))), true, false))))), false)))))), (! ((_GLF_IDENTITY(false, ! (! (false)))))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec3(bvec3(true, false, true)))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec2(true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))), true)))))))), true && (bool(_GLF_IDENTITY(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true))))))))))), (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec2(-0.7, 5.7))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec2(-0.7, 5.7))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(mat3x2(injectionSwitch, 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(vec2(-0.7, 5.7))))).x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), bool(bool((injectionSwitch.x < injectionSwitch.y))))), false), true)))), false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0)))) + vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(-878.125, -511.232)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))) || false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.w = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.xy.y = GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.w;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x = GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.xy.y;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.z = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.xy.x = GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y = GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.xy.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-5867.7076)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x), 0.0 + (max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(mix(asin(-183.668), 9204.6839, 928.277)) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))) && true), false, true, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec3(injectionSwitch[1], 0.0, 1.0)), (float(vec3(injectionSwitch[1], 0.0, 1.0))) - 0.0)))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec3(injectionSwitch[1], 0.0, 1.0)), (float(vec3(injectionSwitch[1], 0.0, 1.0))) - 0.0)))).x) * 1.0) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || false, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false))) || false, false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false))) || false, false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false))) || false, false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), false))) || false, false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))))))))) || false))) && true)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, 0 | (0)))))], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(vec3(injectionSwitch[1], _GLF_IDENTITY(0.0, float(float(0.0))), 1.0)), (float(_GLF_IDENTITY(vec3(injectionSwitch[1], 0.0, 1.0), exp(vec3(0.0, 0.0, 0.0)) * (_GLF_IDENTITY(vec3(injectionSwitch[1], 0.0, 1.0), mat3(1.0) * (vec3(injectionSwitch[1], 0.0, 1.0))))))) - 0.0)))).x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bool(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) || false, false || ((_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))))))))) && true))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.y = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) || false), bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))), false)))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(301.463, -5.9, -6956.9998, 3.8, 14.24, 68.90, 8.1, -1.2, -5655.4177, -9.5, -5.3, -85.85)))))))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(301.463, -5.9, -6956.9998, 3.8, 14.24, 68.90, 8.1, -1.2, -5655.4177, -9.5, -5.3, -85.85)))))))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(301.463, -5.9, -6956.9998, 3.8, 14.24, 68.90, 8.1, -1.2, -5655.4177, -9.5, -5.3, -85.85)))))))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true)))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(301.463, -5.9, -6956.9998, 3.8, 14.24, 68.90, 8.1, -1.2, -5655.4177, -9.5, -5.3, -85.85)))))))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true)))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (true ? mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x3(301.463, -5.9, -6956.9998, 3.8, 14.24, 68.90, 8.1, -1.2, -5655.4177, -9.5, -5.3, -85.85)))))))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), true)))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.y = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.y;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) / 1.0) : _GLF_FUZZED(41.91))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0))))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))) && _GLF_IDENTITY(true, ! (! (true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.w = _GLF_IDENTITY(workgroup_size, (workgroup_size) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))), (uint(7u)) | (uint(7u))), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u | (_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u))))), (0u | (_GLF_IDENTITY(uint(7u), ~ (~ (_GLF_IDENTITY(uint(7u), (uint(7u)) + 0u)))))) >> 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0), min(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0), mix(vec3(_GLF_FUZZED(9717.6190), (vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0))[1], _GLF_FUZZED(-2.1)), vec3((vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0))[0], _GLF_FUZZED(-3.4), (vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0))[2]), bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0))))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(2.9, (2.9) * 1.0)) : 0.0))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(753.574) : float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-2536.2201) : float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(vec4(5.6, -0.7, -7.9, 3919.7281), vec4(59.74, -39.47, 1.8, -731.994))) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.6)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)), ((vec3(0.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0)) + vec3(0.0, 0.0, 0.0))))))))), vec3(1.0, 0.0, 0.0))), 1.0)), float(vec3(float(mat3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), bool(false))), 0.0))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), clamp(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)), ((vec3(0.0, 0.0, 1.0))) / vec3(1.0, 1.0, 1.0)) + vec3(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2.9) : 0.0))))))), float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), (vec3(0.0, 0.0, 1.0)) + vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-2536.2201) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)), ((vec3(0.0, 0.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) + vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-63.38) : float(_GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0), _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)), ((vec3(0.0, 0.0, 1.0))) / _GLF_IDENTITY(vec3(1.0, 1.0, 1.0), max(vec3(1.0, 1.0, 1.0), vec3(1.0, 1.0, 1.0)))) + vec3(0.0, 0.0, 0.0))))))))))), vec3(1.0, 0.0, 0.0))), 1.0)), 0.0, 0.0))), (float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(mat4x3((injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 0.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), tan(0.0), log(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))) / 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat2(_GLF_IDENTITY(0.0, cos(0.0) * (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))))), 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), min(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0))) / 1.0)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-5.6)), float(mat3x2(float(_GLF_FUZZED(-5.6)), 1.0, 0.0, 1.0, 1.0, 0.0))), bool(false))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8207.3770)), vec2(_GLF_FUZZED(-98.48), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true), false)))))))), _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-245.904)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-245.904)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 0.0, 0.0)))))), 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(9251.7337)), bool(false)))), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)))))))), bool(bool(bool(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0), mat4(1.0) * (mat4(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 0.0, 1.0)))))))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(68.50), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((-0.3 * -39.49))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 0.0, 0.0))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(vec2(9.5, -484.873), 6.5)))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), ! (! (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), bool(bvec3(_GLF_DEAD(false), false, false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 0.0, sin(0.0), 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.8)), float(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch[1])).y), bool(true))), 0.0, 0.0, 0.0, sin(0.0), 1.0)))))))))
  return;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.w = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.w, uint(uint(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.w)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.w * GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.z = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id, uvec4(0u, 0u, 0u, 0u) | (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id)).z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y, max(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y, (false ? _GLF_FUZZED(workgroup_base) : GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y)), GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y))) - 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), ! (! ((! (bool(bool(false))))))))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.w = virtual_gid;
 GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.z = GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true, true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.y = _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, uvec4(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id)), min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id))), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id)), min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id))), uvec4(1u, 1u, 1u, 1u) * ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id)), min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id)))))))).z;
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id, (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id) + uvec4(0u, 0u, 0u, 0u)).z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.z * _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x, (GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x) * 1u)) << 0u)) << (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u)))) + ((GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.y + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, (1) / 1)))) % GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.x);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   return;
  }
 GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size.z = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, max(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2)))))).x, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, 0u | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x)))), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(virtual_gid))) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x)))), GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x)))) << 0u) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-250.585)), bool(false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || false))))) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || false))))) || false))), true)), (bool(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true && (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), (! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || false))))) || false))), true))) && true)))))))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x = _GLF_IDENTITY(GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size, (GLF_merged3_0_2_55_2_1_16_3_1_13GLF_merged2_0_1_17_1_1_13subgroup_local_idsubgroup_sizenext_virtual_gidsubgroup_size) - (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u)))).z;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size) / uvec4(1u, 1u, 1u, 1u)).x], uint(1), _GLF_IDENTITY(4, 0 | (4)), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false))))))))) || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy.y], 4, 64, 0);
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z = read_1;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true)))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (false)), false || (_GLF_IDENTITY(bool(false || (false)), true && (bool(false || (false))))))), bool(bool(bool(_GLF_IDENTITY(bool(false || (false)), false || (_GLF_IDENTITY(bool(false || (false)), true && (bool(false || (false))))))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false || (false)), false || (_GLF_IDENTITY(bool(false || (false)), true && (bool(false || (false))))))), bool(bool(bool(_GLF_IDENTITY(bool(false || (false)), false || (_GLF_IDENTITY(bool(false || (false)), true && (bool(false || (false)))))))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.x = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy, min(GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy, GLF_merged3_0_2_49_2_1_11_3_1_12GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gidvirtual_gidworkgroup_id.xy)).y], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, 64)), (64) / 1), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), int(ivec3(max(0, 0), 1, 1)))));
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w = read_2;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y = GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.x = GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_14next_virtual_gidnum_workgroupsubgroup_idworkgroup_size.x], uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid, (true ? GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid : _GLF_FUZZED(GLF_merged4_0_1_6_1_1_6_2_1_17_3_1_11read_1read_2subgroup_local_idvirtual_gid))).x == GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_12read_2subgroup_local_idworkgroup_baseworkgroup_id.x) + 1, 4, 64, 4);
}
