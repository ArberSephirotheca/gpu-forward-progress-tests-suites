#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)) || false, ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(! (false), (! (false)) || false)) || false), false || (_GLF_IDENTITY(((_GLF_IDENTITY(! (false), (! (false)) || false)) || false), (((_GLF_IDENTITY(! (false), (! (false)) || false)) || false)) && true))), ! (! (! ((_GLF_IDENTITY(! (false), (! (false)) || false)) || false)))))))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false))))) || false) || false))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((4.2 / -781.286))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) || false), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(44.07)), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))), clamp(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))), clamp(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))), (false ? _GLF_FUZZED(-4.0) : max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))))), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.46)), float(injectionSwitch.y), bool(true)))))))))), bool(true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(6720.1345)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, log(1.0), 1.0, length(0.0), 0.0, 1.0))), injectionSwitch)).y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), vec2(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0)), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0)))) / sqrt(vec2(1.0, 1.0)))).x > injectionSwitch.y) || false)), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true, true, false))) && true) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp(_GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0)))) * mat2(1.0)), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), min((injectionSwitch) + vec2(0.0, 0.0), (injectionSwitch) + vec2(0.0, 0.0))), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(bvec2((false) && true, true)))) && true))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_IDENTITY(false, false || (false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, false || (false)), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, false || (false)), true), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))) || false)), ! (! (bool(bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, false), false))))), true, false, false))) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, false))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(tan(7.5))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7065.7297) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))), mix(vec2(((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[0], ((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(13.02), _GLF_FUZZED(-9452.4315)), bvec2(false, false)))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(80.73)), float(injectionSwitch.y), bool(true)))), float(_GLF_FUZZED(0.5)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || _GLF_IDENTITY((false), ! (! ((false))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(603.461, 2141.9122)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, false, true))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))), vec2(mat2x3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, determinant(mat4(0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 0.0)))) * mat2(1.0)) : _GLF_FUZZED(vec2(96.69, 6.7)))).y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(gl_NumWorkGroups[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), (true ? ivec2(1, 1) : _GLF_FUZZED(findMSB(ivec2(67732, 93020))))))) : _GLF_FUZZED(-41883))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), int(int(_GLF_IDENTITY(1, (1) | (1))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, int(ivec2(1, 1))) : _GLF_FUZZED(-41883)))) | 0)], (gl_NumWorkGroups[1]) + _GLF_IDENTITY(0u, 0u ^ (0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), min(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)))))[2], max(_GLF_IDENTITY(gl_NumWorkGroups[2], (_GLF_IDENTITY(gl_NumWorkGroups[2], min(gl_NumWorkGroups[2], gl_NumWorkGroups[2]))) >> (0u | 0u)), _GLF_IDENTITY(gl_NumWorkGroups[2], (gl_NumWorkGroups[2]) << (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, bool(bvec2(false, true))))) || (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, length(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1], determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, length(0.0), 0.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), injectionSwitch[1])))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.4)))) - 0.0) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), (true ? 0u ^ (subgroup_size) : _GLF_FUZZED(13518u)))) + subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + subgroup_local_id), uint(uvec2(_GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + subgroup_local_id), ~ (~ ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + subgroup_local_id)))), 1u))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u), uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id) + 0u), 0u))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) + 0u)))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | 0u) + subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))), 0u ^ (min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), uint(uvec3(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), 1u, 0u))))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uvec4(28876u, 18507u, _GLF_IDENTITY(13768u, uint(uvec4(13768u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))), 117973u)[0]) : workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (subgroup_size)) + subgroup_local_id)) ^ 0u))), uint(uvec4(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u)))) * 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | 0u) + subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))), 0u ^ (min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), uint(uvec3(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), 1u, 0u))))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uvec4(28876u, 18507u, _GLF_IDENTITY(13768u, uint(uvec4(13768u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))), 117973u)[0]) : workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (subgroup_size)) + subgroup_local_id)) ^ 0u))), uint(uvec4(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u)))) * 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | 0u) + subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))), 0u ^ (min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), uint(uvec3(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), 1u, 0u))))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uvec4(28876u, 18507u, _GLF_IDENTITY(13768u, uint(uvec4(13768u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))), 117973u)[0]) : workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (subgroup_size)) + subgroup_local_id)) ^ 0u))), uint(uvec4(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u)))) * 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)) + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + _GLF_IDENTITY((subgroup_id * subgroup_size), max((subgroup_id * subgroup_size), (subgroup_id * subgroup_size))))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) | 0u) + subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))), 0u ^ (min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))) + subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), _GLF_IDENTITY(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), uint(uvec3(max((_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id)), 1u, 0u))))) - 0u), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), clamp(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uvec4(28876u, 18507u, _GLF_IDENTITY(13768u, uint(uvec4(13768u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))), 117973u)[0]) : workgroup_base)) + subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) ^ (subgroup_size)) + subgroup_local_id)) ^ 0u))), uint(uvec4(~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size, uint(uint(workgroup_base + subgroup_id * subgroup_size))) + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), (~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) << (1u ^ 1u)))) * 1u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), uint(uvec4(_GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, 0u))), subgroup_id, _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) * ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), max(uint(0u), _GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))))), uint(0u)))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 0u)))) << 0u) + subgroup_local_id), uint(uvec4(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u, 0u, ((_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (1u) + 0u))) << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id) | (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), uint(uvec4(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) * 1u)) | 0u)) | 0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(0u, (0u) >> 0u), 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ~ (~ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)) | ((workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))))), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec2(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id), 0u, 0u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec2(0u, 0u)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED((uaddCarry(subgroup_local_id, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size))))), (~ (_GLF_IDENTITY(~ (subgroup_size), ~ (~ (~ (subgroup_size)))))) | 0u)), subgroup_size)), subgroup_size) - subgroup_local_id)))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), max(clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id), clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) ^ 0u), _GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), subgroup_id)))) * subgroup_size + subgroup_local_id), (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))) * subgroup_size + subgroup_local_id)) << (1u ^ 1u))))))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))) + (5u))), uint(5u))), ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), clamp(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) | (0u))))) + (5u))), uint(5u)))) << 0u) ^ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), clamp(uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u)), uint(uvec2(workgroup_base + subgroup_id * subgroup_size, 0u))))) + subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | 0u)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)))))) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / 1u)) | (subgroup_size)))) + subgroup_local_id), ((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | 0u)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)))))) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / 1u)) | (subgroup_size)))) + subgroup_local_id)) >> 0u), 0u, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (1u << _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_local_id))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 1u)))), uint(4u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (1u << _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_local_id))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 1u)))), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec3(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u), ~ (~ (uvec3(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))))), (false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))))) / 1u)))) / 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) / 1u)))) + subgroup_local_id)) << (1u ^ 1u))))))), 0u | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)) + subgroup_local_id, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(~ (workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), uint(uvec4(~ _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | 0u)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)))))) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / 1u)) | (subgroup_size)))) + subgroup_local_id), ((workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | 0u)), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u, ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u) | ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) / 1u)))))) | (subgroup_size)))), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))) / 1u)) | (subgroup_size)))) + subgroup_local_id)) >> 0u), 0u, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (1u << _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_local_id))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 1u)))), uint(4u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), (false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))))) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (true ? (1u << _GLF_IDENTITY(uint(4u), uint(4u))) : _GLF_FUZZED(subgroup_local_id))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, uint(uvec4(4u, 1u, 0u, 1u)))), uint(4u)), (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), uint(_GLF_IDENTITY(uvec3(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u), ~ (~ (uvec3(false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, 0u ^ (4u))), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)), 0u, 1u)))))), (false ? _GLF_FUZZED(subgroup_size) : (1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, min(4u, _GLF_IDENTITY(4u, ~ (~ (4u)))))))) / 1u)))) / 1u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, max(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))), (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)) / 1u)))) + subgroup_local_id)) << (1u ^ 1u))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((0u ^ 0u), uint(_GLF_IDENTITY(uvec4((0u ^ 0u), 1u, 1u, 1u), (uvec4((0u ^ _GLF_IDENTITY(0u, (0u) - 0u)), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))), 1u, 0u))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u) | (subgroup_id)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-34.35, mix(float(_GLF_FUZZED(-62.19)), float(-34.35), bool(true)))), ((injectionSwitch))[1]), _GLF_IDENTITY(vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), vec2(vec4(vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), 0.0, sqrt(length(vec3(0.0, 0.0, 0.0)))))), bvec2(true, false)))))[0]) / 1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_FUZZED(263.944), (false ? _GLF_FUZZED(-0.5) : _GLF_FUZZED(263.944)))), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))[0]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), ((injectionSwitch))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0, (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, cos(0.0), 0.0, 0.0)))))[1]), vec2(_GLF_IDENTITY(((injectionSwitch)), (_GLF_IDENTITY(((injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(((injectionSwitch)), vec2(0.0, 0.0) + (((injectionSwitch))))))) - vec2(0.0, 0.0))[0], _GLF_FUZZED(263.944)), _GLF_IDENTITY(bvec2(true, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true)))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec2(true, false), true), bvec3(bvec3(bvec3(bvec2(true, false), true)))))))), true, false))))))))[0]) / 1.0)), 0.0, sin(0.0))), float(_GLF_IDENTITY(vec4(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0), vec3(1.0, 0.0, 1.0)))), max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]), max((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]), (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0])))) * 1.0) / 1.0, (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0)), 0.0, sin(0.0))), 1.0, 0.0, 0.0), min(vec4(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0, (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0)), 0.0, sin(0.0))), 1.0, 0.0, 0.0), vec4(float(vec3(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch)), _GLF_IDENTITY((((injectionSwitch))) * mat2(1.0), vec2(mat3((((injectionSwitch))) * mat2(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0, max((_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[_GLF_IDENTITY(1, min(1, 1))]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / 1.0, (_GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-34.35), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(263.944)), bvec2(true, false)))))[0]) / _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-674.790)), float(1.0), bool(true))), round(length(normalize(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))))), 1.0, 0.0, 0.0))))))), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(5.3), _GLF_FUZZED(vec2(-171.066, -6.9).t)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) || false)) || false))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(exp(-4.2)))), true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-2.4, -2.9)))).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(_GLF_IDENTITY(7664.0904, _GLF_IDENTITY((7664.0904), float(mat3x4((7664.0904), 1.0, _GLF_IDENTITY(sqrt(1.0), max(sqrt(1.0), sqrt(1.0))), abs(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), tan(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, abs(1.0), 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, abs(1.0), 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))), bool(false))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bool(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! (_GLF_DEAD(false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0))), mix(float(_GLF_FUZZED(-80.01)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.5) : _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - 0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(((_GLF_IDENTITY(! (false), false || (! (false))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(! (false), false || (! (false))))), (((_GLF_IDENTITY(! (false), false || (! (false)))))) || false))) && _GLF_IDENTITY(true, false || (true))))), (bool(bool((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), ((! (false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)) && true), true && (_GLF_IDENTITY(false, (false) && true))))))))) && true))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec3((false), false, true)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), true && ((! (false)))))))), (bool(bool((_GLF_IDENTITY(! (false), false || (! (false))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))).y)), false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, sin(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))).y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(_GLF_IDENTITY(0, min(0, 0)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))], _GLF_FUZZED(_GLF_IDENTITY(-623.298, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298))), 1.0 * (_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298))), 0.0 + (0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))), mix(vec2(_GLF_FUZZED(97.28), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0)), min((_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))))), (injectionSwitch)[_GLF_IDENTITY(1, (1) / 1)]), bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true)))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-14.62), (_GLF_IDENTITY(false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, (false) && true), true))))[0], _GLF_FUZZED(0.5)), bvec2(true, false))).y))))))), _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_IDENTITY(_GLF_FUZZED(3.6), mix(float(_GLF_FUZZED((-27.67 - 733.249))), float(_GLF_FUZZED(3.6)), bool(true)))), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0, 1.0)), 0.0))))), (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-206.107)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(true))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0))))), (injectionSwitch) * mat2(1.0)).x) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), (_GLF_IDENTITY(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), min(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), _GLF_IDENTITY(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))))))) - 0.0))), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-14.62, (true ? _GLF_IDENTITY(-14.62, min(-14.62, -14.62)) : _GLF_FUZZED(195.653)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(5.0), clamp(_GLF_FUZZED(5.0), _GLF_IDENTITY(_GLF_FUZZED(5.0), (true ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-31.40))), _GLF_FUZZED(5.0))) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true))).y)))))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_IDENTITY(_GLF_FUZZED(3.6), mix(float(_GLF_FUZZED((-27.67 - 733.249))), float(_GLF_FUZZED(3.6)), bool(true)))), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-0.8)), bvec2(true, false))))[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))), 0.0, 1.0)), 0.0))))), (injectionSwitch) * mat2(1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), clamp(vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(_GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-206.107)), float(length(vec4(0.0, 0.0, 0.0, 0.0))), bool(true))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(mat4x3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)))))), 0.0, 1.0)), 0.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(3.6)), bvec2(false, false))), 0.0, 1.0, 0.0, 1.0, cos(0.0), determinant(mat2(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0))))), (injectionSwitch) * mat2(1.0)).x) - _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (0.0) * 1.0)), _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), (_GLF_IDENTITY(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), min(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), _GLF_IDENTITY(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)), min(float(mat4x3(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(-623.298, 0.0 + (_GLF_IDENTITY(-623.298, clamp(-623.298, -623.298, -623.298)))), cos(0.0), tan(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0)))))))) - 0.0))), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-14.62, (true ? _GLF_IDENTITY(-14.62, min(-14.62, -14.62)) : _GLF_FUZZED(195.653)))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(5.0), clamp(_GLF_FUZZED(5.0), _GLF_IDENTITY(_GLF_FUZZED(5.0), (true ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-31.40))), _GLF_FUZZED(5.0))) : _GLF_FUZZED(-14.62), (false ? _GLF_FUZZED(5.0) : _GLF_FUZZED(-14.62)) * 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[1]), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), true))).y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, 0 | (_GLF_IDENTITY((1) << 0, ((1) << 0) - (0 | 0)))))), uint(uvec2(uint(_GLF_IDENTITY(1, (1) << 0)), 1u))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / 1)))))), min(4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / 1)))))), min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) >> 0)) ^ 0) | 0)))))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | 0)))))), (0 ^ 1), 1, 1), ~ (~ (ivec4((_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | 0))))), (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | 0)))))) | (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / _GLF_IDENTITY(1, (1) | 0)))))))), (0 ^ 1), 1, 1))))))), min(4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / 1)))), ~ (~ (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (4) / 1))))))))), min(4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 | ((4))) | (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) / 1)))))), min(4, _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), max(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) ^ (4)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, _GLF_IDENTITY(4, (4) | (4)))), (4) / 1)), (0 | 0) + (int(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, _GLF_IDENTITY(4, (4) | (4)))), (4) / 1)))))))), min(4, 4)))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), bool(bvec4(! (_GLF_IDENTITY(false, false || (false))), false, false, true))))))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-603.070, 957.234, -192.266, -35.60, -95.43, 5.5, -249.462, -5847.8217, 6.7, -98.98, 0.1, -52.80))))), min(vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), (false ? _GLF_FUZZED(vec2(6.2, -33.65)) : _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-603.070, 957.234, -192.266, -35.60, -95.43, 5.5, -249.462, -5847.8217, 6.7, -98.98, 0.1, -52.80))))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat3x4(-603.070, 957.234, -192.266, -35.60, -95.43, 5.5, -249.462, -5847.8217, 6.7, -98.98, 0.1, -52.80)))))))).y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0), (mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) + 0.0)) * 1.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)))).y, 1.0 * (injectionSwitch.y)), float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), 0.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0)), (mat2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, abs(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) * 1)))), _GLF_IDENTITY(4, 0 | _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(floatBitsToInt(_GLF_IDENTITY(-9.9, min(-9.9, -9.9))))))) / 1)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) | (4)))), 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(refract(838.393, -4.3, dot(-2.5, 4.9))) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), dot(vec4(0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), max(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0)))), (false ? _GLF_FUZZED(-8.1) : float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), max(vec2(injectionSwitch.x, 0.0), vec2(injectionSwitch.x, 0.0))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))) && true)) && true)))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_IDENTITY(read_2, uint(uvec4(read_2, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(-9214.8514, -8226.3768, _GLF_IDENTITY(69.20, min(69.20, 69.20)), 21.24)), (packSnorm4x8(vec4(-9214.8514, -8226.3768, _GLF_IDENTITY(69.20, min(69.20, 69.20)), 21.24))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) : (1u)), ((_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * ((false ? _GLF_FUZZED(_GLF_IDENTITY(packSnorm4x8(vec4(-9214.8514, -8226.3768, _GLF_IDENTITY(69.20, min(69.20, 69.20)), 21.24)), (packSnorm4x8(vec4(-9214.8514, -8226.3768, _GLF_IDENTITY(69.20, min(69.20, 69.20)), 21.24))) << (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) : (1u))))) >> 0u)) | (1u)), (0u & 36177u), _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u ^ (8u))), uint(8u))) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), _GLF_IDENTITY(1u * ((_GLF_IDENTITY(1u, (1u) * 1u))), _GLF_IDENTITY((1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))) | 0u, 0u | ((1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))) | 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) - 0u) * 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u))))), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) * 1u, ((1u) * 1u) | _GLF_IDENTITY((_GLF_IDENTITY((1u) * 1u, uint(uint((1u) * 1u)))), ((_GLF_IDENTITY((1u) * 1u, uint(uint((1u) * 1u))))) | ((_GLF_IDENTITY((1u) * 1u, uint(uint((1u) * 1u))))))))), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u))))), ((_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u)), 1u * ((_GLF_IDENTITY(1u, (1u) * 1u)))))) + 0u)))))))))))) + 1, 4, 64, 4);
}
