#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     do
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 90:
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 57:
             bvec3(false, true, false);
             case 0:
             case 27:
             case 61:
             case 54:
             for(uvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v; bvec3(false, true, false).g; uvec4(129314u, 70402u, 21025u, 77910u))
              {
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  else
                   {
                   }
                  return;
                 }
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    case 90:
                    case 34:
                    case 84:
                    case 28:
                    case 14:
                    case 25:
                    case 21:
                    case 12:
                    case 67:
                    bvec4(false, false, true, false);
                    break;
                    case 22:
                    ivec2(-70646, 41614);
                    case 10:
                    mat4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                    default:
                    1;
                   }
                 }
                else
                 {
                 }
                do
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       return;
                     }
                    return;
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  -57042;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
               mix(false, true, isnan(0.1));
               cos(tan(injectionSwitch));
              }
             break;
             case 79:
             bvec4(false, true, true, true);
             case 4:
             bvec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[68];
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          break;
         case 66:
         (floatBitsToUint(vec3(-7.4, 341.151, -0.4)) , mat2x4(3510.0889, 9.1, -830.416, 72.03, 0.7, -272.946, -3.6, -565.989));
         case 0:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
            }
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 85:
             mat4 _GLF_SWITCH_4_0v[72], _GLF_SWITCH_4_1v[45], _GLF_SWITCH_4_2v;
             case 0:
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
              return;
             break;
             default:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             1;
            }
          }
         if(_GLF_DEAD(false))
          continue;
         case 93:
         case 56:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         case 23:
         case 88:
         case 38:
         case 91:
         switch(_GLF_SWITCH(0))
          {
           case 67:
           do
            {
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(true)
            {
             {
              while(true)
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      return;
                     }
                    else
                     {
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                 }
               }
              for(mat2x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; false; ivec3(-38993, 45400, -24035))
               {
                mat4x2(1.9, 4112.2711, 3946.2707, 7.4, -4.5, -1139.2321, -72.13, 28.55);
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                uint _GLF_SWITCH_0_2v[96], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                mat4x2 _GLF_SWITCH_0_5v[65], _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(false))
                 break;
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
               return;
              for(mat2x3 _GLF_SWITCH_0_8v[30], _GLF_SWITCH_0_9v; (mat4x2(958.221, 938.959, 1212.1125, -4.9, 9924.9505, 2779.0996, -2767.5624, -9.6) != mat4x2(7854.3315, 9.9, 20.37, 966.356, 6.6, -3979.8734, 887.697, 7.8)); vec2(543.619, -9.8))
               {
                do
                 {
                  cos(mix(vec2(-1.2, 3.1), vec2(5.9, -6.5), bvec2(true, true)));
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                if(_GLF_DEAD(false))
                 continue;
                mat4 _GLF_SWITCH_0_10v[17], _GLF_SWITCH_0_11v;
                (-50604 & ivec3(72255, 93694, 98207)).sts;
                ivec3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    switch(_GLF_SWITCH(_GLF_IDENTITY((1 ^ 1), 0 ^ ((1 ^ 1)))))
                     {
                      case 0:
                      return;
                      break;
                      case 21:
                      ivec2(-57599, -96183);
                      case 77:
                      (uvec3(22548u, 116622u, 24006u) & floatBitsToUint(vec3(94.29, -2698.9723, 0.4)));
                      default:
                      1;
                     }
                   }
                  else
                   {
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   return;
                  ;
                 }
                if(_GLF_DEAD(false))
                 break;
               }
             }
             if((-85.75 != 104.800))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  continue;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                }
               -55050;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
               for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(38035))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 bvec2(false, true).yxyy;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               (vec4(-376.342, 9.9, -6.4, -9.9) , bvec3(false, true, true));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  break;
                 break;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                return;
               uvec3 _GLF_SWITCH_0_14v;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               {
                for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  mat4(1.2, 3.7, 2.0, 3.9, 4.9, -3204.6056, -80.63, 82.12, -6414.8128, 1506.4470, 969.188, 2.5, 49.64, -407.185, -95.37, 444.669);
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     break;
                    do
                     {
                      do
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 75:
                          if(_GLF_DEAD(false))
                           return;
                          vec4(1616.9630, -11.37, 5.7, 5.5);
                          case 0:
                          case 70:
                          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                           continue;
                          return;
                          case 89:
                          case 99:
                          if(_GLF_DEAD(false))
                           {
                            do
                             {
                              if(_GLF_DEAD(false))
                               return;
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            return;
                           }
                          break;
                          default:
                          do
                           {
                            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                             return;
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          1;
                          if(_GLF_DEAD(false))
                           break;
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                 }
                atanh(vec2(731.674, -634.271));
                ivec2 _GLF_SWITCH_0_15v[89], _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
                uvec3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[63], _GLF_SWITCH_0_20v;
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  return;
                 }
                bvec4 _GLF_SWITCH_0_21v;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                   return;
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH(((1 ^ 1) & ivec2(39672, -24722).x)))
                   {
                    case 0:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      return;
                     }
                    case 20:
                    continue;
                    break;
                    case 35:
                    if(_GLF_DEAD(false))
                     continue;
                    asin(vec2(2875.5929, -440.987));
                    case 99:
                    ;
                    default:
                    if(_GLF_DEAD(false))
                     return;
                    1;
                   }
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 break;
                mat4x3 _GLF_SWITCH_0_22v[89];
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                 }
                else
                 {
                  for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -26458); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                   {
                    switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
                     {
                      case 0:
                      case 87:
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 13:
                          ;
                          for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                           {
                            if(_GLF_DEAD(false))
                             return;
                           }
                          case 0:
                          case 32:
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          case 18:
                          case 30:
                          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                           continue;
                          case 11:
                          case 10:
                          case 55:
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            bvec4(true, true, true, false);
                           }
                          else
                           {
                           }
                          break;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          if(_GLF_DEAD(false))
                           break;
                          case 48:
                          if(_GLF_DEAD(false))
                           return;
                          mat4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             continue;
                            break;
                           }
                          if(_GLF_DEAD(false))
                           continue;
                          case 99:
                          vec4 _GLF_SWITCH_2_3v, _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v;
                          for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              do
                               {
                                return;
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                             }
                           }
                          default:
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                          if(_GLF_DEAD(false))
                           continue;
                          1;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                         }
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                         return;
                       }
                      break;
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  return;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                156778u;
               }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                (mat3x2(-9135.1447, 9.7, 10.31, -82.57, 21.55, -76.23) + 72.83);
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                   continue;
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                ;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                ;
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                     {
                      switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(6), int(6))) | 0)))
                       {
                        case 29:
                        mat2(mat3(-9564.1667, -4721.8901, 5.6, 0.2, -203.887, 3.1, -2918.9080, 3.2, 40.18));
                        case 0:
                        case 63:
                        case 54:
                        case 95:
                        case 83:
                        case 48:
                        return;
                        break;
                        case 62:
                        (subgroup_id ^ uvec4(38857u, 1117u, 114378u, 90697u));
                        case 13:
                        ;
                        default:
                        1;
                       }
                     }
                   }
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 break;
                uvec2(40210u, 7441u);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  else
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 68:
                        bvec4(true, false, true, true);
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           continue;
                          do
                           {
                            return;
                           }
                          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         }
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
                         break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        case 0:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           break;
                          if(_GLF_DEAD(false))
                           return;
                          return;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                         }
                        case 92:
                        case 65:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        if(_GLF_DEAD(false))
                         break;
                        case 34:
                        case 71:
                        case 24:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        switch(_GLF_SWITCH((0 | (0 | 0))))
                         {
                          case 91:
                          do
                           {
                            if(_GLF_DEAD(false))
                             return;
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               break;
                              return;
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            (false ? notEqual(ivec4(-67686, 74006, 10953, 13527), min(ivec4(-96536, 774, -17904, -28730), _injected_loop_counter)) : bvec4(false, false, true, false));
                            if(_GLF_DEAD(false))
                             continue;
                            if(_GLF_DEAD(false))
                             return;
                           }
                          else
                           {
                           }
                          case 0:
                          case 23:
                          if(_GLF_DEAD(false))
                           continue;
                          case 52:
                          case 39:
                          case 8:
                          if(_GLF_DEAD(false))
                           continue;
                          case 93:
                          case 73:
                          case 59:
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                             {
                              case 28:
                              lessThan(uvec3(183369u, 38162u, 89622u), uvec3(78734u, 130021u, 176201u));
                              case 0:
                              case 41:
                              do
                               {
                                return;
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                              break;
                              default:
                              1;
                             }
                           }
                          if(_GLF_DEAD(false))
                           break;
                          case 9:
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                          bvec3(true, true, true);
                          if(_GLF_DEAD(false))
                           break;
                          break;
                          case 88:
                          uvec2(140985u, 17175u);
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                          case 25:
                          if(_GLF_DEAD(false))
                           continue;
                          uvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(false))
                             break;
                            break;
                           }
                          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                           continue;
                          default:
                          1;
                         }
                        if(_GLF_DEAD(false))
                         return;
                        break;
                        if(_GLF_DEAD(false))
                         continue;
                        default:
                        1;
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                           {
                            if(_GLF_DEAD(false))
                             return;
                           }
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(false))
                         return;
                       }
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 continue;
               }
               transpose((mat3(961.435, 663.698, -9.2, 673.134, -5.0, -8.8, 28.09, 8.5, 8.1) - mat3(-28.93, -9.5, -9.8, 5.3, -1.0, 4017.8425, -6.9, -802.173, 254.114)));
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 continue;
                }
               if((93.76 != -4.1))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   (bvec3(true, true, false) != bvec3(true, false, true));
                  }
                 else
                  {
                  }
                 ;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                 mat3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[84];
                 mat2x4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     return;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                    break;
                   do
                    {
                     return;
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 mat4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                 mat3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[3], _GLF_SWITCH_0_32v;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 ;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))))))
                    {
                     case 39:
                     ivec3(-50336, -11589, -81419);
                     if(_GLF_DEAD(false))
                      break;
                     case 71:
                     (_GLF_SWITCH_0_14v[0]);
                     case 0:
                     case 57:
                     _GLF_SWITCH_0_27v;
                     break;
                     default:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      break;
                     if(_GLF_DEAD(false))
                      return;
                     1;
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), false || (bool(bvec4(false, false, true, true)))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   continue;
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   mat2x3(35.84, -4577.2552, -216.591, -7.7, -4.0, 1298.6811);
                  }
                 ivec3 _GLF_SWITCH_0_33v[71];
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 bvec4 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
                 ivec4 _GLF_SWITCH_0_37v[10], _GLF_SWITCH_0_38v;
                 if(_GLF_DEAD(false))
                  continue;
                 ;
                 1477;
                 bvec3(false, false, false).gg;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 ;
                }
               uvec2 _GLF_SWITCH_0_39v;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                }
               mat2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 _GLF_SWITCH_0_41v;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
                  break;
                }
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
              {
               (uvec2(41470u, 5019u) ^ uvec2(121460u, 3640u));
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 1:
                 case 51:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 case 85:
                 case 4:
                 case 2:
                 case 80:
                 return;
                 break;
                 case 67:
                 ;
                 case 8:
                 false;
                 default:
                 1;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
            }
           case 20:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           {
            mat2x3(727.978, -7.7, 0.0, 416.565, -378.097, -9.7);
            do
             {
              if(_GLF_DEAD(false))
               break;
              for(mat3x2 _GLF_SWITCH_0_42v[76], _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v; (uvec4(140224u, 64477u, 107747u, 35295u) != uvec4(167809u, 154998u, 67892u, 134334u)); (ivec4(32828, 25352, -14537, -36382) | ivec4(ivec3(38896, -97860, -82682), 68469)))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  if(_GLF_DEAD(false))
                   break;
                  do
                   {
                    mat3x4 _GLF_SWITCH_0_45v;
                    do
                     {
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                       {
                        subgroup_id;
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    mat4x2(756.882, 3.8, 62.87, 5.3, -27.51, -6027.9562, 24.56, -3.5);
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      do
                       {
                        return;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                     }
                    mat4x2(mat4(-6420.5717, 495.678, -166.627, -477.117, -920.427, -39.37, -56.37, 7.0, -4.5, -0.3, 17.50, -35.79, -9.3, -3.9, 5.7, 9.3));
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      mat2x3(234.894, 7.3, -99.91, -776.811, 1572.0537, -1.3);
                      if(_GLF_DEAD(false))
                       continue;
                     }
                   }
                  while(false);
                  if(_GLF_DEAD(false))
                   continue;
                  for(                  -6.2;
 false; ivec3(-70296, -99596, -27223))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                         {
                          vec3(9.1, 59.13, -1.7);
                         }
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                         {
                          if(_GLF_DEAD(false))
                           return;
                         }
                       }
                     }
                    else
                     {
                     }
                    mat4(349.787, 63.28, -2.5, -9163.9536, -1.1, 4030.3540, 2.0, -3534.0367, -14.18, -4.5, -2.1, 8.9, -9.1, -8.9, -2.1, 1.6);
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                       }
                     }
                    if(_GLF_DEAD(false))
                     return;
                    ;
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      break;
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    float _GLF_SWITCH_0_46v;
                    if(_GLF_DEAD(false))
                     break;
                    mat2x4(69.04, -21.91, 777.072, -171.695, -1.1, 35.07, -7.3, -20.86);
                   }
                  case 59:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    continue;
                   }
                  case 34:
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(-83872) : int(6))), _GLF_IDENTITY(int(6), ~ (~ (int(6)))))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                             }
                            else
                             {
                              return;
                             }
                           }
                         }
                        else
                         {
                         }
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            return;
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        return;
                       }
                      if(_GLF_DEAD(false))
                       continue;
                     }
                    continue;
                   }
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      continue;
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       break;
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                    return;
                   ivec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v[95], _GLF_SWITCH_0_49v;
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  mat3 _GLF_SWITCH_0_50v[26], _GLF_SWITCH_0_51v;
                  if(_GLF_DEAD(false))
                   break;
                  bvec3 _GLF_SWITCH_0_52v;
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 | 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        return;
                       }
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                     break;
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(false))
                     return;
                    continue;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(true)
                   {
                    mat2 _GLF_SWITCH_0_53v;
                    ;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      break;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    if(_GLF_DEAD(false))
                     return;
                   }
                  else
                   {
                    mat2 _GLF_SWITCH_0_54v;
                    mat4x3(19.53, -64.17, 6246.7601, -3.5, 8.3, -4263.9508, 5067.3928, -395.583, -73.57, 4.9, 567.974, 7.0);
                    if(_GLF_DEAD(false))
                     break;
                    all(bvec4(true, true, false, true));
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    uvec3(uvec2(145457u, 179509u), atomicCompSwap(subgroup_id, 163950u, subgroup_id));
                    bvec2 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[24];
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      break;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          return;
                         }
                        else
                         {
                         }
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    findLSB(56729);
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  case 39:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    break;
                   }
                  for(                  (82283u & (uvec4(14667u, 12872u, 73827u, 22051u) % uvec4(146454u, 173133u, 55168u, 142449u)));
 false; bvec2(bvec4(false, true, true, true)))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        continue;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      bvec2 _GLF_SWITCH_0_58v[79], _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v[92];
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                           {
                            return;
                           }
                         }
                       }
                      else
                       {
                       }
                      bvec4 _GLF_SWITCH_0_61v[49], _GLF_SWITCH_0_62v[11];
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                      case 44:
                      if(_GLF_DEAD(false))
                       continue;
                      case 57:
                      if(_GLF_DEAD(false))
                       break;
                      bool _GLF_SWITCH_0_63v[37], _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[60];
                      uvec3(34047u, 152191u, 57325u);
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                       continue;
                      break;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                       break;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      case 15:
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        do
                         {
                          return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        _GLF_SWITCH_0_59v;
                       }
                      default:
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        1;
                       }
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                   }
                  case 55:
                  {
                   vec4 _GLF_SWITCH_0_66v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   vec2 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v;
                   if(_GLF_DEAD(false))
                    continue;
                   uvec4(11183u, 58522u, 42481u, 94508u);
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   float _GLF_SWITCH_0_69v[45], _GLF_SWITCH_0_70v;
                  }
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                       }
                     }
                   }
                  else
                   {
                   }
                  case 1:
                  if(_GLF_DEAD(false))
                   return;
                  uvec2 _GLF_SWITCH_0_71v[28], _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v;
                  if(_GLF_DEAD(false))
                   return;
                  break;
                  case 52:
                  bvec2 _GLF_SWITCH_1_0v[44], _GLF_SWITCH_1_1v[38];
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec4(int(5), 1, 1, 0)), max(int(ivec4(int(5), 1, 1, 0)), int(ivec4(int(5), 1, 1, 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                       {
                        case 2:
                        bvec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[53];
                        case 0:
                        case 12:
                        case 69:
                        case 86:
                        case 73:
                        case 97:
                        case 16:
                        case 3:
                        case 30:
                        return;
                        break;
                        case 35:
                        mat4(7730.9012, -429.130, -2063.0386, -3.6, 57.77, 9.7, -4421.2071, -738.860, 0.6, 23.38, -500.623, 9170.5275, 587.709, -784.206, -48.90, 9.6);
                        default:
                        1;
                       }
                     }
                   }
                  case 31:
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                     }
                    else
                     {
                      uvec3(47111u, 147660u, 175882u);
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     break;
                   }
                  else
                   {
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  default:
                  1;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true)))))))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          return;
                         }
                       }
                      break;
                     }
                    continue;
                   }
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                       continue;
                      break;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    return;
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        return;
                       }
                     }
                    if(_GLF_DEAD(false))
                     continue;
                   }
                 }
               }
             }
            while(_GLF_WRAPPED_LOOP(false));
            uvec2(37241u, 143603u);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               return;
              continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
             {
             }
            else
             {
              mat4(617.342, -713.556, 0.1, -82.78, -94.92, 0.5, -93.23, -6.7, -0.7, -3.5, 9.4, -9334.8343, -84.28, -4.1, 5596.1244, -942.076);
             }
            while(all(bvec4(false, true, true, false)))
             {
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 36:
                      mat4x3(mat4x2(2021.1767, -9.2, 193.899, 6.3, -5.0, -6.0, 469.878, -3.3));
                      case 0:
                      case 32:
                      case 94:
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        return;
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                         return;
                       }
                      break;
                      case 15:
                      ivec4(14078, -89813, 80393, -17857);
                      default:
                      1;
                     }
                   }
                  break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                 }
                do
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    return;
                   }
                  uvec2(32210u, 41690u);
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                     break;
                    continue;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  break;
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                mat2x3 _GLF_SWITCH_0_74v[61];
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                do
                 {
                  mat3x4(806.084, 4.5, -5469.5042, 8.0, -1152.6581, -7.1, 368.646, -8.3, -6242.5398, 5.0, 484.633, 7.3);
                 }
                while(_GLF_WRAPPED_LOOP(false));
                greaterThanEqual(vec2(-3695.9717, 2134.3067), vec2(6.9, 9.2));
               }
              else
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
               }
              if(_GLF_DEAD(false))
               return;
              mat4 _GLF_SWITCH_0_75v[2], _GLF_SWITCH_0_76v;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
                 continue;
                for(                mat3x4(-9.6, -0.1, 836.560, 17.32, 9196.9282, 469.294, 8882.7958, 893.386, -9354.1091, -83.50, 728.775, -9631.2205);
 (96214 != 94687); mat3x2(4.5, -652.702, 41.14, -29.12, -64.61, 225.102))
                 {
                  if(_GLF_DEAD(false))
                   break;
                 }
               }
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 60:
                 ivec4(-80343, 95075, 15618, 65751).zzzw;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   continue;
                  }
                 case 0:
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 case 10:
                 case 42:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   break;
                  }
                 case 43:
                 if(_GLF_DEAD(false))
                  return;
                 case 59:
                 bvec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
                 if(_GLF_DEAD(false))
                  break;
                 break;
                 if(_GLF_DEAD(false))
                  break;
                 default:
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                 1;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
              do
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(8), int(8)))))
                     {
                      case 0:
                      case 10:
                      case 4:
                      case 52:
                      return;
                      break;
                      case 79:
                      uvec4 _GLF_SWITCH_4_0v[27];
                      case 85:
                      bitfieldExtract(ivec4(-60825, -27846, -21375, -56860), _injected_loop_counter, findLSB(bitfieldExtract(73866, _injected_loop_counter, _injected_loop_counter)));
                      default:
                      1;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                   }
                  if(_GLF_DEAD(false))
                   continue;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              (1.7 - mat2x3(-427.570, -697.636, 7940.8620, 6.3, -8.0, -3.9));
              if(_GLF_DEAD(false))
               continue;
              if((mat4x3(281.044, 742.036, -1.5, 7265.3985, 1.2, 2.0, -6.2, -582.899, 255.094, 6876.2060, 719.719, -31.08) != mat4x3(-986.274, 28.96, -87.36, (-98.75 / 480.223), -772.340, -845.841, -417.553, 666.221, -174.632, 3.4, 8.2, 9841.7111)))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 17:
                  ;
                  case 89:
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  mat4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                  case 0:
                  case 42:
                  mat2(-2906.4316, -7.4, 4125.7993, -379.881);
                  mat2x3(6.0, -5668.1341, -57.39, -375.316, 75.02, 721.081);
                  true;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      break;
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    mat3(mat3x4(-59.03, -9107.7605, 271.908, 6.5, 777.104, 8.9, 86.41, -41.56, 4.1, 1.6, 7.6, 7.1));
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  case 91:
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  float _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v[27];
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    continue;
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    return;
                   }
                  for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (_GLF_IDENTITY(int(1), (int(1)) ^ 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      switch(_GLF_SWITCH(0))
                       {
                        case 52:
                        dot(vec4(385.224, -6644.1901, -3230.4232, -6.3), vec4(-6013.3137, -5.6, 9326.8231, 704.722));
                        case 0:
                        case 16:
                        case 87:
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                           {
                            do
                             {
                              return;
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           }
                          else
                           {
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                         }
                        break;
                        case 66:
                        mat2x4(1192.5791, 0.7, 482.517, -6.1, 6.0, 9.0, -0.0, -4.5);
                        case 67:
                        (uvec3(96366u, 161467u, 3653u) - (++ subgroup_id));
                        default:
                        1;
                       }
                      if(_GLF_DEAD(false))
                       break;
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  case 83:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    break;
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  case 69:
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  mat3x4((_GLF_SWITCH_0_79v / mat4(-675.420, -0.4, 548.194, 2.2, -1.4, -81.05, -9536.8960, 3.0, 135.908, 9.2, -70.96, -3702.3719, -848.323, -315.349, -5634.6132, 56.96)));
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  case 62:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 78:
                      uvec3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[25];
                      case 0:
                      case 75:
                      case 62:
                      case 32:
                      do
                       {
                        return;
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      case 73:
                      case 29:
                      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
                       return;
                      break;
                      case 69:
                      matrixCompMult(mat4x2(-28.76, 2310.2840, -54.21, 1.8, -7.6, -64.37, 8.6, -8.7), mat4x2(6.4, -6.4, 52.27, 5.7, -3.0, 631.448, -88.85, 0.7));
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  mat2(mat3x2(4.6, 5259.2466, -5.6, -1057.8236, 9184.5118, -35.18));
                  if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))))
                   break;
                  mat4x3 _GLF_SWITCH_0_81v[30];
                  if(_GLF_DEAD(false))
                   continue;
                  case 55:
                  uvec4 _GLF_SWITCH_0_82v[55];
                  do
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 35:
                      case 21:
                      if(_GLF_DEAD(false))
                       {
                        do
                         {
                          return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                      break;
                      case 77:
                      vec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[31];
                      case 4:
                      mat3 _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v[46], _GLF_SWITCH_6_4v[55];
                      default:
                      1;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  if(_GLF_DEAD(false))
                   break;
                  break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    continue;
                   }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    break;
                   }
                  case 53:
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    mat3(-2210.8662, 409.119, -9.0, 67.78, -27.55, -2134.6815, 2.1, -3.5, -8.6);
                   }
                  else
                   {
                   }
                  default:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    return;
                   }
                  if(_GLF_DEAD(false))
                   return;
                  1;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                 }
               }
              else
               {
                vec2(34.42, 78.98).tts;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  continue;
                 }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    continue;
                   }
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                   {
                    ;
                   }
                  else
                   {
                   }
                  if(_GLF_DEAD(false))
                   continue;
                 }
                mat2x4(-8.5, 325.249, -103.835, 9.1, 9.8, 1.7, 8.2, 8.9);
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 64:
                      154851u;
                      case 0:
                      case 1:
                      case 80:
                      case 32:
                      case 62:
                      case 39:
                      return;
                      break;
                      case 65:
                      mat2x3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[44];
                      case 81:
                      ivec3(56075, 22881, 54019);
                      default:
                      1;
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                 }
                else
                 {
                  ;
                 }
                if(_GLF_DEAD(false))
                 break;
               }
             }
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             continue;
            do
             {
              switch(_GLF_SWITCH(0))
               {
                case 86:
                mat2(-9397.0879, -7585.2840, 2.1, 7409.9946);
                if(_GLF_DEAD(false))
                 break;
                case 38:
                do
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false)))))))
                   return;
                  greaterThanEqual(min(vec4(3.4, 1.5, -2.5, -9.5), vec4(-3979.9187, -91.78, -4385.3501, 8.3)), (- vec4(947.625, 5.6, -76.39, 224.680)));
                 }
                while(_GLF_WRAPPED_LOOP(false));
                case 0:
                case 94:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   return;
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                if(_GLF_DEAD(false))
                 return;
                case 74:
                if(_GLF_DEAD(false))
                 break;
                do
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    break;
                   }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    continue;
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    while(false)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          do
                           {
                            return;
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          return;
                         }
                       }
                      do
                       {
                        (mat2(554.112, 3605.9729, -0.2, -0.6));
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      mat3x4 _GLF_SWITCH_0_83v[79], _GLF_SWITCH_0_84v[99];
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      (uvec2(65729u, 142073u) / uvec2(136189u, 163600u));
                      mat4x2 _GLF_SWITCH_0_85v, _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
                      bvec3 _GLF_SWITCH_0_88v;
                      mat4x2 _GLF_SWITCH_0_89v, _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v;
                      if(_GLF_DEAD(false))
                       break;
                      mat2x4 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v[62], _GLF_SWITCH_0_94v[9];
                      if(_GLF_DEAD(false))
                       {
                        for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                         {
                          switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (true ? _GLF_IDENTITY(int(2), 0 + (int(2))) : _GLF_FUZZED(75749)))))))
                           {
                            case 18:
                            mat3x4(-883.572, -17.48, -8115.9382, -9049.3077, 7.5, -692.907, 2.5, 2.2, 3.6, -331.797, 214.953, 6868.2449);
                            case 62:
                            ;
                            case 0:
                            case 60:
                            case 17:
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec4(bool(bvec3(false, false, true)), false, false, true))))))
                               break;
                              if(_GLF_DEAD(false))
                               return;
                              if(_GLF_DEAD(false))
                               return;
                             }
                            else
                             {
                             }
                            case 80:
                            case 63:
                            case 11:
                            if(_GLF_DEAD(false))
                             break;
                            case 34:
                            case 98:
                            if(_GLF_DEAD(false))
                             continue;
                            break;
                            case 20:
                            vec3(12.54, 512.619, 6.0);
                            default:
                            1;
                           }
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        continue;
                       }
                      equal(vec4(-9.4, 32.61, 688.166, 5.9), vec4(-814.560, 8815.3930, -872.797, 361.161));
                      ivec3(99003, -81390, 6791);
                     }
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    continue;
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                case 81:
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    continue;
                   }
                  return;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  continue;
                 }
                case 32:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                {
                 mat3x4 _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v;
                 do
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     ;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  continue;
                 uvec3 _GLF_SWITCH_0_97v;
                 (- mat4x2(-5.9, -9.6, -0.2, 2.6, 25.83, 855.673, 691.455, -616.705));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
                case 36:
                mat3 _GLF_SWITCH_0_98v, _GLF_SWITCH_0_99v, _GLF_SWITCH_0_100v;
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                break;
                case 52:
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 continue;
                vec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                case 19:
                uvec3 _GLF_SWITCH_3_3v;
                if(_GLF_DEAD(false))
                 continue;
                default:
                if(_GLF_DEAD(false))
                 continue;
                1;
               }
              if(_GLF_DEAD(false))
               continue;
             }
            while((ivec4(634, -49405, -62645, -89682) == ivec4(79521, 89115, -45376, -24008)));
           }
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             break;
            }
           case 0:
           case 32:
           return;
           if(_GLF_DEAD(false))
            continue;
           break;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             switch(_GLF_SWITCH(((0 & -45041) << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8)))))))
              {
               case 71:
               ;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 58:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               mat2x4(mat3x2(-804.907, -6.6, 4952.1157, -30.75, -5.8, 873.894));
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               case 19:
               if(_GLF_DEAD(false))
                return;
               case 64:
               if(_GLF_DEAD(false))
                break;
               case 10:
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               case 63:
               case 99:
               if(_GLF_DEAD(false))
                return;
               case 22:
               case 83:
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), bool(bvec3(bool(bvec4(true, true, true, true)), true, false))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   continue;
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(false))
                continue;
               break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                break;
               case 23:
               mat3x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
               default:
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
                return;
               1;
               if(_GLF_DEAD(false))
                return;
              }
            }
           default:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           1;
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         break;
         if(_GLF_DEAD(false))
          return;
         case 8:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           greaterThanEqual((ivec4(49029, -30642, -691, 76922) % ivec4(62294, 76412, 83859, -82093)), ivec4(85008, -5232, -92980, 76813));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         case 9:
         if(_GLF_DEAD(false))
          return;
         (ivec4(27584, -66217, 79972, -60532) / ivec4(-7284, -36587, 96986, -91238));
         if(_GLF_DEAD(false))
          return;
         default:
         1;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))))
    {
     case 52:
     if(true)
      {
       {
        {
         mat4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
         ivec3 _GLF_SWITCH_6_3v[91], _GLF_SWITCH_6_4v, _GLF_SWITCH_6_5v;
        }
        while((ivec4(-88912, 73939, -51143, -267) != ivec4(-61290, -69838, 79886, -28229)))
         {
          ivec3 _GLF_SWITCH_6_6v[13], _GLF_SWITCH_6_7v[85];
         }
        {
         bvec4(true, false, true, true);
         ivec2 _GLF_SWITCH_6_8v;
         mat4x2(-113.740, 6.5, 27.88, 732.780, 7.4, -1873.0133, -13.11, -407.791);
         (+ mat3x4(-243.031, 6.8, 443.000, 3210.7601, -276.350, 6.1, -40.44, 343.242, 9.3, 8.3, 679.972, -3.0));
         7660;
         _GLF_SWITCH_6_8v[1];
         uvec4 _GLF_SWITCH_6_9v, _GLF_SWITCH_6_10v, _GLF_SWITCH_6_11v;
        }
        while(true)
         {
          ivec2(-3539, -41381);
          (mat2x3(2.4, 8147.5500, -6.8, 5.4, 49.89, 8.7) - -652.530);
          ;
         }
        {
        }
       }
      }
     else
      {
       for(       mat2x4(-3237.1394, 679.877, 5.4, 218.851, 67.43, -4.9, -3.5, -537.240);
 true; mat4x3(86.86, 945.517, -8735.9991, 4413.3894, 8631.7555, -5916.4377, 753.964, 9.4, 3.9, -2.7, -0.6, 9109.5926))
        {
         vec4 _GLF_SWITCH_6_12v, _GLF_SWITCH_6_13v[37], _GLF_SWITCH_6_14v;
         if((mat2(368.649, 30.56, -662.677, 4285.8920) == mat2(-7.6, 21.93, -8.9, 5666.0941)))
          {
          }
        }
       while(all(bvec4(true, true, false, false)))
        {
         for(uvec3 _GLF_SWITCH_6_15v[10]; false; mat4x3(768.643, -53.30, 346.218, 3.0, -3435.2833, -1.6, -9281.0237, 3935.5318, -7.4, -465.519, 2.4, -7.1))
          {
           true;
           uvec3(123219u, 142040u, 31115u);
           mat2(mat4x3(10.98, 739.817, -2.0, 387.476, -7.1, 0.4, -87.24, -179.046, -42.94, -8315.6193, -158.414, -1.7));
           mat3(mat2(-7.5, 3871.5036, 286.328, -3870.8099));
           bvec2 _GLF_SWITCH_6_16v, _GLF_SWITCH_6_17v;
           floatBitsToUint(vec2(-81.27, -1.1));
          }
         ivec2(-44392, -58543);
         for(ivec4 _GLF_SWITCH_6_18v, _GLF_SWITCH_6_19v; (vec3(8.1, -3361.7889, -4143.3599) != vec3(1926.7828, -80.79, -3871.7093)); uvec2(86371u, 153649u))
          {
           mat2x3(-865.241, 9697.5570, 69.24, -42.28, 9371.4148, -8.0);
           uint _GLF_SWITCH_6_20v, _GLF_SWITCH_6_21v, _GLF_SWITCH_6_22v[40];
           mat4x3 _GLF_SWITCH_6_23v;
           notEqual(uvec2(105733u, 192211u), uvec2(76706u, 95491u));
          }
         if(false)
          {
           24028;
           81360;
           mat3x2(-7010.0419, 68.01, -74.63, 278.413, 2433.6402, 4537.2466);
          }
         mat4x3(6.1, -0.3, -1436.1578, 20.25, 219.183, 2321.4914, -5782.3420, -4.4, 7.9, 7.8, 47.30, -4.4);
         ivec3(-47922, -71368, 16852)[1];
         mat3(mat2x4(-34.04, -156.090, -6355.6616, -9931.7451, -1.7, -60.97, -5461.7892, -2019.6151));
         if(true)
          {
           equal(bvec2(false, false), bvec2(false, false));
           ;
           ;
           vec3 _GLF_SWITCH_6_24v[38], _GLF_SWITCH_6_25v, _GLF_SWITCH_6_26v;
           _GLF_SWITCH_6_26v;
           lessThan(ivec3(-87233, 28752, -92061), ivec3(95293, 53191, -2345));
           matrixCompMult(mat4x3(3296.7053, -385.857, -1.2, -9705.5403, -706.250, 51.37, -0.8, 8911.5288, 9211.5241, -797.808, 7.3, -7.8), mat4x3(-0.1, -1187.7583, -6724.6866, -150.408, -88.26, -2.8, -2763.9295, 4.4, -8.5, -2.6, -55.89, 2.0));
          }
         else
          {
          }
        }
       not(bvec3(true, false, true));
       ;
       uvec2(90111u, 45006u);
       if(bool(8.2))
        {
         if(true)
          {
           unpackSnorm2x16(subgroup_size);
          }
         else
          {
           (mat3x4(4.9, -2.4, -54.74, 8.1, 8.1, 2.2, 42.42, -6.8, 9.5, -9.2, 9969.6703, -0.8) / mat3x4(-6.1, 5031.4755, -3.6, 8.3, 6.2, -40.80, -8.6, -4.4, 3.0, -8.3, -6035.8211, 394.104));
           mat2 _GLF_SWITCH_6_27v, _GLF_SWITCH_6_28v, _GLF_SWITCH_6_29v;
           mat3x4(mat3(-5.0, 8.0, -5.3, 8.4, 7956.0953, 5153.4107, 0.4, -8652.3276, -64.70));
           bool _GLF_SWITCH_6_30v, _GLF_SWITCH_6_31v, _GLF_SWITCH_6_32v[73];
           vec4 _GLF_SWITCH_6_33v, _GLF_SWITCH_6_34v;
           mat4x3 _GLF_SWITCH_6_35v, _GLF_SWITCH_6_36v, _GLF_SWITCH_6_37v;
          }
         vec2(171.348, -195.710);
         bvec4(false, false, false, true);
        }
       bvec3 _GLF_SWITCH_6_38v[40], _GLF_SWITCH_6_39v;
       {
        mat4x3 _GLF_SWITCH_6_40v;
       }
       ((workgroup_id --) + uvec3(119182u, 103577u, 53702u));
      }
     case 0:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     case 65:
     case 84:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     break;
     case 47:
     for(vec3 _GLF_SWITCH_6_41v[45], _GLF_SWITCH_6_42v; all(bvec4(false, bvec2(false, false), true)); (mat4(-927.002, 4657.3676, -316.629, -189.873, -4523.8908, -7812.6420, -1917.9014, 73.17, 317.368, 304.557, 385.296, -1.8, 519.565, 86.23, -96.17, -938.375) * (bitCount(ivec4(99349, 27992, 45580, -19649)) , (mat4(6042.1795, -1319.2834, 85.98, -4.2, -4439.6616, 9162.8436, -445.071, 7430.7825, -8.7, 73.84, -51.81, -793.766, 7318.6425, -2.7, -624.380, 7721.1658) * mat3x4(6.5, 1821.9164, 49.84, -6183.7595, -1175.4594, -9.2, 444.865, 0.7, 40.50, -4.7, 4.7, -674.478)))))
      {
      }
     default:
     1;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = (0 ^ (0 << _GLF_IDENTITY(int(3), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
    }
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 60839)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(3), int(3)))))
        {
         case 0:
         case 67:
         case 31:
         case 51:
         case 4:
         if(_GLF_DEAD(false))
          continue;
         case 84:
         case 32:
         case 15:
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 70:
             case 32:
             if(_GLF_DEAD(false))
              continue;
             case 31:
             case 97:
             case 73:
             case 75:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             case 56:
             case 89:
             return;
             break;
             default:
             1;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         case 1:
         {
          uvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[21];
          ;
          bvec4 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
          mat2x4 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v[60];
         }
         default:
         if(_GLF_DEAD(false))
          break;
         1;
        }
      }
    }
  }
 else
  {
  }
}
