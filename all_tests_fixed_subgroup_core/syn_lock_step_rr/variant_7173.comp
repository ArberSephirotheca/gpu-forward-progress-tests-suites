#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_16 {
 vec3 _f0;
 mat2x4 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
 uvec2 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 bvec2 _f1;
 ivec3 _f2;
 uvec3 _f3;
 bool _f4;
 bvec4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_17 {
 vec4 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 mat2 _f3;
 mat3 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 uvec4 _f1;
 bool _f2;
 ivec4 _f3;
 ivec3 _f4;
 mat2x3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_13 _f2;
 mat4x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_11 {
 vec2 _f0;
} ;

struct _GLF_struct_18 {
 mat2x4 _f0;
 bvec3 _f1;
 _GLF_struct_11 _f2;
 ivec2 _f3;
 uint subgroup_id;
 _GLF_struct_14 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_10 {
 uint workgroup_base;
 uvec3 _f0;
 uvec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat3x2 _f1;
 mat4x3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 bvec3 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 uint subgroup_size;
 int _f1;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 mat2 _f3;
 mat4 _f4;
 bvec3 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 uvec2 _f1;
 uvec3 _f2;
 uvec2 _f3;
 int _f4;
 uint _f5;
} ;

struct _GLF_struct_2 {
 float _f0;
 bool _f1;
 int _f2;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 mat4 _f1;
 mat3 _f2;
 _GLF_struct_2 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat4x3 _f1;
 uvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_6 {
 uint virtual_gid;
 _GLF_struct_1 _f0;
 mat2x3 _f1;
 _GLF_struct_5 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(mat2x4(1.0), bvec3(true), _GLF_struct_11(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-80.68)), float(1.0), bool(true)))) / 1.0), (1.0) / 1.0))), ivec2(1), gl_SubgroupID, _GLF_struct_14(vec3(1.0), _GLF_struct_12(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (true ? (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0)) / determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-901.125))))), uvec4(1u), true, ivec4(1), ivec3(1), mat2x3(1.0), mat4x2(1.0)), _GLF_struct_13(mat3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, cos(0.0), 0.0)))), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((5747.1051))), bool(false))))), mat4x3(1.0), true), _GLF_struct_17(vec4(1.0), _GLF_struct_15(mat4x3(1.0), bvec2(true), ivec3(1), uvec3(_GLF_IDENTITY(1u, min(1u, 1u))), true, bvec4(true), ivec3(1)), _GLF_struct_16(vec3(1.0), mat2x4(1.0), mat2x3(1.0), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)), uvec2(1u), mat4x2(1.0)), mat2(1.0), mat3(1.0), mat4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) + 0.0)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9695.0892)), float(injectionSwitch.y), bool(true))), ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))))))))))))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY(false, true && (false))))))
    barrier();
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_8(uvec4(1u), bvec3(true), _GLF_struct_7(bvec3(true), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), mix(float(1.0), float(_GLF_FUZZED(12.03)), bool(false))), 1.0)), 1.0))) * (vec3(1.0, 0.0, 0.0))), vec3(mat3(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), sqrt(vec3(0.0, 0.0, 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), max(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))))))), max((_GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), max(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), mat3(1.0) * (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), (true ? mat3(1.0) * (vec3(1.0, 0.0, 0.0)) : _GLF_FUZZED(vec3(1.0, 4163.6274, 78.08))))))))), (_GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), max(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) * mat3(1.0)) * (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))))))))))), 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(1.0, (1.0) + 0.0)), 1.0, 1.0))), (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0))))) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 1.0)), (false ? _GLF_FUZZED(3466.3497) : determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 1.0)))), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))), (mat3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat4(1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) * (_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(649.841, 4.5, -9.6)) : vec3(1.0, 0.0, 0.0)))))) - vec3(0.0, 0.0, 0.0))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-4021.9835) : 1.0)), 0.0, 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(float(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(_GLF_FUZZED(-8.6)), bool(false))), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), (max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))) / _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), mat4x2(mat4x2(_GLF_IDENTITY(mat4x2(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat4x2(max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 1.0, 0.0, 1.0))))))))))) + determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) - 0.0))))))))) - 0.0)) / _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), vec3(mat3x2(mat3(1.0) * (vec3(1.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))) - vec3(0.0, 0.0, 0.0))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((96.36 / 76.23))), bool(false)))), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), vec3(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec3(-9.5, -820.817, -7263.9552)) : (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), 1.0, exp(sin(0.0)), 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), vec3(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec3(-9.5, -820.817, -7263.9552)) : (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), 1.0, exp(sin(0.0)), 1.0))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), vec3(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec3(-9.5, -820.817, -7263.9552)) : (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), 1.0, exp(sin(0.0)), 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), vec3(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec3(-9.5, -820.817, -7263.9552)) : (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), 1.0, exp(sin(0.0)), 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), vec3(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec3(-9.5, -820.817, -7263.9552)) : (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), 1.0, exp(sin(0.0)), 1.0))))), _GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), vec3(mat3x2(_GLF_IDENTITY((_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(vec3(-9.5, -820.817, -7263.9552)) : (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, 0.0)))))), 1.0, exp(sin(0.0)), 1.0))))) - _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), mat3(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-5765.8771)))) * (vec3(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))), float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, exp(0.0) * (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0), (mat4x2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)) * mat4(1.0)))), 0.0, 1.0, 1.0))), 0.0, 0.0))), (_GLF_IDENTITY(vec3(1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0)), mat3(1.0) * _GLF_IDENTITY((vec3(1.0, 0.0, 0.0)), _GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), mix(vec3(_GLF_FUZZED(3.5), _GLF_FUZZED(float(63241u)), (min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[2]), vec3(_GLF_IDENTITY((min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[0], min(_GLF_IDENTITY((min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[0], min((min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[0], (min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[0])), (min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[0])), (min(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(3.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), vec3(mat3x2(_GLF_IDENTITY(((vec3(1.0, 0.0, 0.0))) * mat3(1.0), (true ? ((vec3(1.0, 0.0, 0.0))) * _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(vec3(1.4, -2704.8231, -4610.8960)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))))[1], _GLF_FUZZED(-70.62)), bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) - vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((mat3(-8.1, -0.0, 8.7, -8040.1106, -54.32, 1.8, 17.08, -33.55, 9.0) * vec3(241.306, 3.2, -42.93)).b)), float(0.0), bool(true))), 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(distance(vec4(-31.93, -3.0, _GLF_IDENTITY(3694.6126, clamp(3694.6126, 3694.6126, 3694.6126)), -618.125), vec4(576.156, _GLF_IDENTITY(8.6, clamp(_GLF_IDENTITY(8.6, float(mat3x4(8.6, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 8.6, _GLF_IDENTITY(8.6, (8.6) / 1.0))), -3.9, _GLF_IDENTITY(-0.3, max(-0.3, _GLF_IDENTITY(-0.3, max(-0.3, -0.3))))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), min(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(false, (false) || false))), false)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false))) && true)) ? _GLF_FUZZED(-899.348) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true))) ? _GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (true ? mat4x2(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 1.0))), abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(6.3, -3.1, -7368.6288, -65.97, _GLF_IDENTITY(-0.8, (false ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(-0.8, (-0.8) / 1.0))), -3.0, -7794.0446, 5.2)))) : _GLF_FUZZED(mat4x2(-0.9, 3.2, -7.5, 1.3, 294.640, -646.114, 1.5, -8384.8506))))), min(float(_GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (true ? mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(6.3, -3.1, -7368.6288, -65.97, -0.8, -3.0, -7794.0446, 5.2)))) : _GLF_FUZZED(mat4x2(-0.9, 3.2, -7.5, _GLF_IDENTITY(1.3, max(1.3, 1.3)), 294.640, -646.114, 1.5, -8384.8506))))), float(_GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0), (true ? mat4x2(1.0, abs(1.0), 1.0, exp(0.0), 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(6.3, -3.1, -7368.6288, -65.97, -0.8, -3.0, -7794.0446, 5.2)))) : _GLF_FUZZED(mat4x2(-0.9, 3.2, -7.5, 1.3, 294.640, -646.114, 1.5, -8384.8506)))))))), 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat2x4(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), mix(float(_GLF_FUZZED((_GLF_IDENTITY(false ? 85.57 : 5053.2980, (false ? _GLF_FUZZED(-14.52) : false ? 85.57 : 5053.2980))))), float(clamp(0.0, 0.0, 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(208.278)), float(0.0), bool(true)))), mat3(1.0) * (vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))))))))) : _GLF_FUZZED(-6280.1126))))), 0.0), mat3(1.0) * (vec3(1.0, 0.0, 0.0))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))) / 1.0)), mat3(1.0) * (vec3(1.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat3x4(0.0, cos(0.0), 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)))))) - vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(207.076)), float(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)))), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))), 0.0, 0.0)), 0.0, 0.0))))))), mat4x3(1.0), ivec3(1))), gl_SubgroupSize, 1);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(_GLF_IDENTITY((! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((false))))), bool(bvec2(_GLF_IDENTITY((! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((false))))), false))) && true))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), vec2(_GLF_FUZZED(9.3), (injectionSwitch)[1]), bvec2(false, true))).x) * _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 1.0, 1.0, exp(length(vec2(0.0, 0.0))), log(1.0), 1.0)), float(mat2x3(float(mat3x2(1.0, 1.0, 1.0, exp(length(vec2(0.0, 0.0))), log(1.0), 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))) > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || false)) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || false)) && true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false ? _GLF_FUZZED(-2.3) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.6)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) + 0.0)), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), true, true, true)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-273.559)), bvec2(true, false))), injectionSwitch)).x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(48.83)), float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0)), bool(true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(workgroup_size * workgroup_id, uvec3(1u), _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), min(uvec2(1u), uvec2(1u)))) >> uvec2(0u, 0u)), uvec2(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (bool(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), ! (! (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bool(bvec2((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))))) || false)), false, true), false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false))), true && (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
    return;
  }
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_replacement_10.workgroup_base + _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size + subgroup_local_id, _GLF_struct_1(_GLF_struct_0(mat4x3(1.0), mat4x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), uvec3(1u), ivec3(1))), mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.6)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_struct_5(mat3x2(1.0), mat4(1.0), mat3(1.0), _GLF_struct_2(1.0, true, 1), _GLF_struct_3(bvec4(true), uvec2(1u), uvec3(1u), uvec2(1u), 1, _GLF_IDENTITY(1u, (1u) - 0u)), _GLF_struct_4(uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_id)))), mat4x3(1.0), mat4x2(1.0), mat2(1.0), mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), false)))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true))))), false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), true)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), false)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(true)), false)), true))))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)))))), true))))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), false)))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true))))), false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), false)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), false)))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true))))), false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), false)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), false)))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true))))), false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), false)))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true))))), false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), false))))))))))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false))), false)))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)))))), true)))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), false)), false)))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true))), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), true))), true))))), false)))), false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, (false) || false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(true), false)), true)))), bvec3(bvec4(bvec3(true), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))), false)))))))), false)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false)))))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false)))))), true)))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(true, true && (true)))))))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false)))))), true)))))), true))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))), true)))))), true))))))))))))))))), mat3x4(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(71.74)), bool(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))), true, true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(max(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, 1u * (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | (_GLF_struct_replacement_10.workgroup_base))))), ~ (~ (max(_GLF_struct_replacement_10.workgroup_base, _GLF_struct_replacement_10.workgroup_base))))))), (uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_10.workgroup_base)), _GLF_struct_replacement_10.workgroup_base), ~ (~ (max(_GLF_struct_replacement_10.workgroup_base, _GLF_struct_replacement_10.workgroup_base)))))))) | (uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(max(_GLF_struct_replacement_10.workgroup_base, _GLF_struct_replacement_10.workgroup_base), ~ (~ (max(_GLF_struct_replacement_10.workgroup_base, _GLF_struct_replacement_10.workgroup_base)))))))))))), (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) * 1u))))) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) ^ 0u) | ((_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))) + _GLF_IDENTITY(_GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)) + ((subgroup_local_id + 1) % _GLF_struct_replacement_9.subgroup_size), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, clamp((_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (115514u & 0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))), (_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_struct_replacement_10.workgroup_base) | 0u)), max(_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, clamp((_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (115514u & 0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))), (_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_struct_replacement_10.workgroup_base) | 0u)), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, clamp((_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (115514u & 0u) | (_GLF_IDENTITY(0u, (0u) ^ 0u))))), (_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_struct_replacement_10.workgroup_base) | 0u))))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) ^ 0u)) | 0u), 0u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)), (~ (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u))) << uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | 0u))), 0u))))) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, 0u)), uint(uvec4(0u, 1u, 1u, 1u))), 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_18.subgroup_id, (true ? _GLF_IDENTITY(_GLF_struct_replacement_18.subgroup_id, (_GLF_struct_replacement_18.subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * _GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_size, ~ (~ (_GLF_struct_replacement_9.subgroup_size))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size), max((_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)), min(_GLF_IDENTITY(uint(uint(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)), 0u ^ (uint(uint(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)))), uint(uint(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, clamp(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, 0u + (false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)), _GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size) | (false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)))))))) + ((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % _GLF_struct_replacement_9.subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), (false ? _GLF_FUZZED(122801u) : (_GLF_struct_replacement_10.workgroup_base))), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u)) | (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))), (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u))))))) + (147106u & 0u)), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))))), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (_GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, (true ? _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base) | 0u, ~ (~ ((_GLF_struct_replacement_10.workgroup_base) | 0u))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u), min(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u)))))) | 0u)), 0u, 1u), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), clamp((_GLF_struct_replacement_10.workgroup_base), (_GLF_struct_replacement_10.workgroup_base), _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) / 1u))) | _GLF_IDENTITY(0u, ~ (~ (0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), max(uint(uint(0u)), uint(uint(0u))))), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), min(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)))))))) + _GLF_IDENTITY(_GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(1, _GLF_IDENTITY(1, (1) | (1)), 1) : _GLF_FUZZED(61482))))) % _GLF_struct_replacement_9.subgroup_size), (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) - 0u) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) - 0u) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) - 0u) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) - 0u) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (0u) | (0u))))), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, _GLF_IDENTITY((_GLF_struct_replacement_10.workgroup_base), ((_GLF_struct_replacement_10.workgroup_base)) - 0u) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))))))))))), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), clamp(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), max(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u))))))), 0u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)))))) << _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + uvec3(0u, 0u, 0u))), min(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, (1u) << 0u), 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (true ? _GLF_struct_replacement_10.workgroup_base : _GLF_FUZZED(atomicXor(workgroup_id, num_workgroup)))), (_GLF_struct_replacement_10.workgroup_base) | 0u), 0u, 1u)) >> _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))) | (uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) | (_GLF_struct_replacement_10.workgroup_base))) | 0u), 0u, 1u)))))), ~ (~ (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) * 1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_struct_replacement_10.workgroup_base, (_GLF_struct_replacement_10.workgroup_base) * 1u)))) | 0u), 0u, 1u)))))) + _GLF_IDENTITY(_GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size, (false ? _GLF_FUZZED(_GLF_struct_replacement_18.subgroup_id) : _GLF_struct_replacement_18.subgroup_id * _GLF_struct_replacement_9.subgroup_size)) + ((subgroup_local_id + 1) % _GLF_struct_replacement_9.subgroup_size)) * 1u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(bvec3(false, false, false), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_FUZZED(-8.4)), bool(false)))))))), ! (! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), float(_GLF_FUZZED(-8.4)), bool(false))))))))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true), false)), (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true), false))) || false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true)))))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), sqrt(1.0), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(mix(vec2(3.7, -9.8), injectionSwitch, bvec2(true, false))))), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), max(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), vec2(vec2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)))))))), (false ? _GLF_FUZZED(vec2(7.3, -33.72)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), sqrt(1.0), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(mix(vec2(3.7, -9.8), injectionSwitch, bvec2(true, false))))), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), max(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), vec2(vec2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)))))))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), sqrt(1.0), sin(0.0), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.7) : 0.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(vec2(0.0, 1.0), (true ? vec2(0.0, 1.0) : _GLF_FUZZED(mix(vec2(3.7, -9.8), injectionSwitch, bvec2(true, false))))), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), max(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) * mat2(1.0)))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)), vec2(vec2(vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.4)), vec2(_GLF_FUZZED((- -8.4)), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), clamp(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(0.0, 1.0), min(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), vec2(0.0, 1.0))), cos(log(1.0)), 0.0)))))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0, 1.0, 0.0))))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) - vec2(0.0, 0.0)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-21.82) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.4)), float(0.0), bool(true)))))), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (_GLF_IDENTITY(vec2(0.0, 1.0), clamp(vec2(0.0, 1.0), vec2(0.0, 1.0), vec2(0.0, 1.0)))) / vec2(1.0, 1.0)))), cos(log(1.0)), 0.0))).y, _GLF_IDENTITY(true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat3x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, sin(0.0), 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, cos(0.0))))))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))).y), (_GLF_IDENTITY(true && _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3514.7519) : 0.0)), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))).y)))), true && (true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch)))), sin(0.0), 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), mat4(1.0) * (vec4(1.0, 0.0, 0.0, 1.0))))))), 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), cos(log(1.0)), 0.0))).y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0))))), cos(log(1.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), sqrt(1.0), sin(0.0), _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, sqrt(0.0), abs(0.0), 0.0, 1.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-18.82)), bool(false))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.8)), bool(false)))), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), float(_GLF_FUZZED(600.098)), bool(false))), cos(log(1.0)), 0.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-9490.1207)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (false ? _GLF_FUZZED(-3.0) : _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-9490.1207)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-9490.1207)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0 + (_GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-9490.1207)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-9490.1207)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(7.7), _GLF_FUZZED(-9490.1207)), vec2((vec2(0.0, 1.0))[0], (vec2(0.0, 1.0))[1]), bvec2(true, true))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), min(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), clamp(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), _GLF_IDENTITY(float(_GLF_FUZZED(600.098)), 1.0 * (_GLF_IDENTITY(float(_GLF_FUZZED(600.098)), max(float(_GLF_FUZZED(600.098)), float(_GLF_FUZZED(600.098)))))), bool(false))), cos(log(1.0)), 0.0))))).y) && true), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))), mix(vec2(_GLF_FUZZED(37.55), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))))[1], 0.0 + ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9501.4269), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(81.97)), bvec2(true, false))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))))[1]))), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))))[0], _GLF_FUZZED(_GLF_IDENTITY((false ? -99.68 : -46.64), float(vec2((false ? -99.68 : -46.64), 0.0))))), vec2(mat4x2(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), tan(_GLF_ZERO(0.0, injectionSwitch.x)), sqrt(1.0), sin(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1326.4315)))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), cos(log(1.0)), 0.0))))[0], _GLF_FUZZED(_GLF_IDENTITY((false ? -99.68 : -46.64), float(vec2((false ? -99.68 : -46.64), 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), max(dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))), dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0))))), dot(vec2(0.0, 1.0), vec2(0.0, exp(0.0)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-271.668))), abs(1.0), 1.0))), bvec2(true, false))).y))), true, false)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            return;
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), false || (bool(bvec4(false, true, true, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0), transpose(transpose(mat3(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) > injectionSwitch.y)))))))))) || false)))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), false || (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) || false), bool(bvec3(bool(bvec4(false, false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), false, true)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), false, true)))), (_GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), false, true)))), (bool(bool(bool(bvec3(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), false, true))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, true))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))), true, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(844.784), _GLF_FUZZED(vec4(-2726.3597, 6774.2300, 7.1, 871.348).y)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(844.784), _GLF_FUZZED(vec4(-2726.3597, 6774.2300, 7.1, 871.348).y)), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))).x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_6.virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 0.0)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) + 0.0) > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_6.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (4) << 0)), (false ? _GLF_FUZZED(clamp(8948, -77042, -10882)) : ~ (_GLF_IDENTITY(4, (4) << 0)))))), _GLF_IDENTITY((4), ((4)) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY(4, (4) * 1))), _GLF_IDENTITY(0 ^ (4), ~ (~ (_GLF_IDENTITY(0 ^ (4), (_GLF_IDENTITY(0 ^ (4), clamp(0 ^ (4), 0 ^ (4), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(max(-93354, 15716)) : 0)), 0, 0)) ^ (4)))) | (0 ^ (4))))))), (_GLF_IDENTITY(4, 0 ^ (4))) | (_GLF_IDENTITY(4, 0 ^ (4)))), 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-3.9)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0), injectionSwitch.y, injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))))), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), mix(float(_GLF_FUZZED((+ -8.0))), float(0.0 + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), bool(true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, max(read_2, read_2)), read_2))))) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}
