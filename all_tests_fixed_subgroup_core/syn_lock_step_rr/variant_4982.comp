#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id) / 1u, ((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id) / 1u) + 0u)))), _GLF_IDENTITY((0u & 87390u), (_GLF_IDENTITY((0u & 87390u), clamp((0u & 87390u), _GLF_IDENTITY(_GLF_IDENTITY((0u & 87390u), max((0u & 87390u), (0u & 87390u))), clamp(_GLF_IDENTITY((0u & 87390u), max((0u & 87390u), (0u & 87390u))), _GLF_IDENTITY(_GLF_IDENTITY((0u & 87390u), max((0u & 87390u), (0u & 87390u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((0u & _GLF_IDENTITY(87390u, _GLF_IDENTITY((_GLF_IDENTITY(87390u, (87390u) << 0u)), ((_GLF_IDENTITY(87390u, (87390u) << 0u))) * ((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (true ? uint(3u) : _GLF_FUZZED(subgroup_id))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) | (_GLF_IDENTITY(87390u, (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(192834u, 178260u).y) : 87390u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(192834u, 178260u).y) : 87390u, uint(uvec2(false ? _GLF_FUZZED(uvec2(192834u, 178260u).y) : 87390u, 1u)))), ~ (~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(uvec2(192834u, 178260u).y) : 87390u, uint(uvec2(false ? _GLF_FUZZED(uvec2(192834u, 178260u).y) : 87390u, 1u)))))))))))))), max(_GLF_IDENTITY((0u & 87390u), ((0u & 87390u)) >> 0u), (0u & 87390u)))), ((_GLF_IDENTITY((0u & _GLF_IDENTITY(87390u, _GLF_IDENTITY((87390u), ((87390u)) | 0u) | (_GLF_IDENTITY(87390u, (false ? _GLF_FUZZED(uvec2(192834u, 178260u).y) : 87390u))))), _GLF_IDENTITY(max((0u & 87390u), (0u & 87390u)), uint(uvec2(max((0u & 87390u), (0u & 87390u)), 0u)))))) << 0u))), _GLF_IDENTITY((0u & 87390u), max((0u & 87390u), (0u & 87390u))))), (0u & 87390u)))) + 0u) | (_GLF_IDENTITY(~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id)), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id), (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id), ~ (~ ((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id))))) + _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(36535u) : 0u))), 0u | (~ _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id), (_GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id), ~ (~ ((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z = subgroup_id))))) + 0u))))) | 0u))));
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w = subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1])), 1.0, 0.0)), min(vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0))], injectionSwitch[1])), 1.0, 0.0)), vec2(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0, 0.0))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), max(_GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (true ? min(injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(8.3))), min(injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u, (0u) << (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u | (uint(4u)))))) | (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(uvec4(gl_WorkGroupID, 0u)), ~ (~ (uvec3(uvec4(gl_WorkGroupID, 0u))))))) | (gl_WorkGroupID)).x));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2.1))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, true)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), false || ((! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0)), (float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, abs(0.0), 0.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0))))), (vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)), mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - log(1.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2x4(injectionSwitch, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), length(0.0), 0.0, 0.0, length(0.0)))))) * vec2(1.0, 1.0))).y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0))), 0.0, 1.0, 0.0))) * 1.0))))))))) || false), false, false))))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, clamp(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)).w, clamp(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size), ((GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)) / uvec4(1u, 1u, 1u, 1u)) | (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)).w)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u + (0u))) + 0u), 0u) | (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)).w, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, uvec4(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u ^ (0u)), (_GLF_IDENTITY(0u, 0u + (0u))) + 0u), 0u) | (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)).w))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w, max(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w, GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.z : _GLF_FUZZED(subgroup_local_id))) * GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w + ((subgroup_local_id + 1) % GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.w);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y))))), ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))).y)))))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 1.0), _GLF_IDENTITY(mat4x2(mat4x2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 1.0))), (mat4x2(mat4x2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, 0.0, 1.0)))) * mat4(1.0))))).y))))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), false || (injectionSwitch.x > injectionSwitch.y)))), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u | _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) / 1u)) << 0u)), 1u * (_GLF_IDENTITY(buf[virtual_gid], 0u | _GLF_IDENTITY((buf[virtual_gid]), (_GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) / 1u)) << 0u)))), buf[virtual_gid]))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-438.723)), bool(false))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false)))), false, false, true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)) || (false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)) || (false), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))) || false), false))), (injectionSwitch.x > injectionSwitch.y)) || (false), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false, false, true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true)))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (false || (true))))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))))), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))) / _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * vec2(1.0, 1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((! (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(1359u))), bool(false))), 0.0, 1.0))), 0.0) + (injectionSwitch)).x, mix(float(_GLF_FUZZED(-68.33)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + vec2(0.0, 0.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.x = read_1, (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))) : GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.x = _GLF_IDENTITY(read_1, ~ (~ (read_1)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false)), ! (! (bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), clamp(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, _GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp(_GLF_IDENTITY((injectionSwitch.y) - 0.0, clamp((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)), (injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)), (injectionSwitch.y) - 0.0))), 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), _GLF_IDENTITY(mix(float(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0))), float(_GLF_FUZZED(9.2)), bool(false)), (true ? mix(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), float(_GLF_FUZZED(9.2)), bool(false)) : _GLF_FUZZED(_GLF_IDENTITY(float(true), min(float(true), float(true))))))), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), (mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))) * 1.0), 0.0)), _GLF_IDENTITY(mix(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), float(_GLF_FUZZED(9.2)), bool(false)), (true ? mix(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), float(_GLF_FUZZED(9.2)), bool(false)) : _GLF_FUZZED(float(true))))), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, sin(0.0))) + mat2(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), (true ? mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), mix(float(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, sin(0.0)) : _GLF_FUZZED(mat2(592.872, 6517.4210, -3510.5446, -900.217))))), min(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), mix(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, sin(0.0)), (true ? mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), mix(_GLF_IDENTITY(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), max(float(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.y) - 0.0), 0.0))), float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))))), float(_GLF_FUZZED(9.2)), bool(false))), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, sin(0.0)) : _GLF_FUZZED(mat2(592.872, 6517.4210, -3510.5446, -900.217))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), mix(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), abs(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, sin(0.0)), (true ? mat2(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), mix(float(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))), float(_GLF_FUZZED(9.2)), bool(false))), abs(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, sin(0.0)) : _GLF_FUZZED(mat2(592.872, 6517.4210, -3510.5446, -900.217)))))))), float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))))), float(vec4(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0)), sqrt(0.0), 0.0, 0.0)))))), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (! (! (true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (true))))) && true))), false))) && _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ! (! ((_GLF_IDENTITY((false), ((false)) && true))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ! (! ((_GLF_IDENTITY((false), ((false)) && true))))), true, true), false))))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
  barrier();
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y = read_2;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size) - _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size), (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)) << uvec4(0u, 0u, 0u, 0u))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(min(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, ~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size)))), (min(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size), clamp(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size), ~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size), ~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size))))))) - uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), min(max(0u, 0u), max(0u, 0u)))), 0u))) / _GLF_IDENTITY((1u | 1u), 1u * ((1u | 1u)))), 0u))))).x == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y) >> 0u)) | (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y)), ~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, ~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, ~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, ~ (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y), max(_GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y), clamp(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y), _GLF_IDENTITY(~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y), (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y)) | (~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))), ~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))), ~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))))), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y)), 1u * ((~ (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_13read_1read_2subgroup_idsubgroup_size.y))))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), ~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY((~ (1)), ~ (~ ((~ (1))))), (~ (1)), (~ (1))))), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (64) << 0), 64, 64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
