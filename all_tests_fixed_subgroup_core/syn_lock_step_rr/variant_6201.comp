#version 460
struct _GLF_struct_20 {
 mat4 _f0;
 mat4x3 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 bvec2 _f4;
 mat3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_19 {
 uint _f0;
 bvec4 _f1;
 uvec3 _f2;
 mat2x3 _f3;
 uvec2 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_18 {
 vec3 _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat4x2 _f3;
 bool _f4;
 uvec2 _f5;
 vec2 _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_18 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_16 {
 bool _f0;
} ;

struct _GLF_struct_15 {
 float _f0;
 mat4 _f1;
 mat3x4 _f2;
 bool _f3;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_13 {
 mat3 _f0;
 mat4 _f1;
 vec2 _f2;
 ivec2 _f3;
 mat2x4 _f4;
 vec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 float _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
} ;

struct _GLF_struct_22 {
 float _f0;
 _GLF_struct_17 _f1;
 mat4x3 _f2;
 mat3x4 _f3;
 uint workgroup_base;
 _GLF_struct_21 _f4;
 bool _f5;
} ;

struct _GLF_struct_10 {
 uvec4 _f0;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 float _f1;
 mat3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 uvec3 _f1;
 bvec2 _f2;
 uint workgroup_size;
 vec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 mat4 _f1;
 uvec3 _f2;
 uvec4 _f3;
 ivec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 mat3x4 _f3;
 mat3 _f4;
 _GLF_struct_11 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
 float _f1;
} ;

struct _GLF_struct_4 {
 int _f0;
 vec4 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_3 {
 mat3x2 _f0;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 ivec3 _f4;
 _GLF_struct_5 _f5;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 mat3 _f1;
 mat3 _f2;
 uvec4 _f3;
 mat3x4 _f4;
 int _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 _GLF_struct_0 _f1;
} ;

struct _GLF_struct_7 {
 uint subgroup_local_id;
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_6 _f2;
 mat4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(gl_SubgroupInvocationID, _GLF_struct_1(vec3(1.0), _GLF_struct_0(mat2(1.0), mat3(1.0), mat3(1.0), uvec4(1u), mat3x4(1.0), 1, uvec2(1u))), _GLF_struct_2(vec2(1.0)), _GLF_struct_6(mat4x3(1.0), mat2(1.0), _GLF_struct_3(mat3x2(1.0)), _GLF_struct_4(1, vec4(1.0), uvec3(1u), mat2x4(1.0), vec2(1.0)), ivec3(1), _GLF_struct_5(vec3(1.0), 1.0)), mat4(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_9(_GLF_struct_8(ivec4(1), uvec3(1u), bvec2(true), gl_WorkGroupSize.x, vec4(1.0), mat4x2(1.0)), mat4(1.0), uvec3(1u), uvec4(1u), ivec4(1), mat3x4(1.0)), uvec3(1u), mat3x4(1.0), mat3x4(1.0), mat3(1.0), _GLF_struct_11(_GLF_struct_10(uvec4(1u)), 1.0, mat3(1.0), mat3x4(1.0)), uvec3(1u));
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(1.0, _GLF_struct_17(_GLF_struct_13(mat3(1.0), mat4(1.0), vec2(1.0), ivec2(1), mat2x4(1.0), vec2(1.0), bvec4(true)), _GLF_struct_14(bvec3(true), mat2(1.0)), 1.0, _GLF_struct_15(1.0, mat4(1.0), mat3x4(1.0), true), _GLF_struct_16(true)), mat4x3(1.0), mat3x4(1.0), _GLF_struct_replacement_12._f0._f0.workgroup_size * workgroup_id, _GLF_struct_21(_GLF_struct_18(vec3(1.0), vec4(1.0), mat4x2(1.0), mat4x2(1.0), true, uvec2(1u), vec2(1.0)), _GLF_struct_19(1u, bvec4(true), uvec3(1u), mat2x3(1.0), uvec2(1u), uvec2(1u)), _GLF_struct_20(mat4(1.0), mat4x3(1.0), ivec3(1), mat4x3(1.0), bvec2(true), mat3(1.0), mat4x3(1.0)), mat2x4(1.0)), true);
 uint virtual_gid = _GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_7.subgroup_local_id;
 uint next_virtual_gid = _GLF_struct_replacement_22.workgroup_base + subgroup_id * subgroup_size + ((_GLF_struct_replacement_7.subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
}
