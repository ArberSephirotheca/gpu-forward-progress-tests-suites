#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_42 {
 uvec4 _f0;
} ;

struct _GLF_struct_41 {
 mat2x4 _f0;
 bvec2 _f1;
 int _f2;
 mat3x4 _f3;
 bvec4 _f4;
 mat3 _f5;
} ;

struct _GLF_struct_40 {
 uvec4 _f0;
 ivec3 _f1;
 bvec3 _f2;
 ivec4 _f3;
 bool _f4;
 bvec3 _f5;
 mat3x2 _f6;
} ;

struct _GLF_struct_39 {
 mat3 _f0;
 bool _f1;
 bvec4 _f2;
 bvec2 _f3;
 mat3x4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_43 {
 bvec4 _f0;
 _GLF_struct_39 _f1;
 _GLF_struct_40 _f2;
 _GLF_struct_41 _f3;
 ivec3 _f4;
 _GLF_struct_42 _f5;
} ;

struct _GLF_struct_37 {
 vec4 _f0;
 ivec3 _f1;
 uvec3 _f2;
 uint _f3;
 bool _f4;
} ;

struct _GLF_struct_36 {
 ivec3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 mat3 _f3;
 int _f4;
} ;

struct _GLF_struct_35 {
 mat3x2 _f0;
 vec4 _f1;
 ivec3 _f2;
 bvec3 _f3;
 mat4x2 _f4;
 uvec3 _f5;
 float _f6;
} ;

struct _GLF_struct_34 {
 uint _f0;
 vec2 _f1;
 uint _f2;
 ivec4 _f3;
 uvec4 _f4;
 mat2x3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_33 {
 mat3x2 _f0;
 uint _f1;
 int _f2;
 bool _f3;
 mat3x2 _f4;
 uint _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_38 {
 _GLF_struct_33 _f0;
 _GLF_struct_34 _f1;
 _GLF_struct_35 _f2;
 _GLF_struct_36 _f3;
 _GLF_struct_37 _f4;
} ;

struct _GLF_struct_31 {
 mat3x4 _f0;
 bool _f1;
} ;

struct _GLF_struct_30 {
 bvec2 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_29 {
 mat2x3 _f0;
} ;

struct _GLF_struct_32 {
 _GLF_struct_29 _f0;
 vec3 _f1;
 mat2 _f2;
 _GLF_struct_30 _f3;
 _GLF_struct_31 _f4;
} ;

struct _GLF_struct_27 {
 mat4x3 _f0;
 bvec3 _f1;
 uvec4 _f2;
 mat2x3 _f3;
 ivec2 _f4;
 bvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_28 {
 bvec2 _f0;
 _GLF_struct_27 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_44 {
 uvec4 _f0;
 _GLF_struct_28 _f1;
 mat4 _f2;
 _GLF_struct_32 _f3;
 uint virtual_gid;
 _GLF_struct_38 _f4;
 _GLF_struct_43 _f5;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
} ;

struct _GLF_struct_23 {
 bvec2 _f0;
 bool _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 bvec4 _f1;
 mat2x3 _f2;
 int _f3;
} ;

struct _GLF_struct_21 {
 ivec2 _f0;
 mat2x3 _f1;
 mat4x2 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_20 {
 uvec3 _f0;
 ivec3 _f1;
 uvec4 _f2;
 ivec2 _f3;
 uint workgroup_size;
 mat3x2 _f4;
} ;

struct _GLF_struct_25 {
 bool _f0;
 _GLF_struct_20 _f1;
 _GLF_struct_21 _f2;
 _GLF_struct_22 _f3;
 _GLF_struct_23 _f4;
 _GLF_struct_24 _f5;
} ;

struct _GLF_struct_19 {
 int _f0;
} ;

struct _GLF_struct_17 {
 uvec2 _f0;
} ;

struct _GLF_struct_16 {
 uvec4 _f0;
 mat2 _f1;
 mat3 _f2;
 mat4x3 _f3;
 bool _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 bool _f1;
 mat3x2 _f2;
 ivec4 _f3;
 mat2x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_14 {
 ivec4 _f0;
 vec3 _f1;
 mat2x4 _f2;
 mat3x4 _f3;
 int _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_18 {
 uvec2 _f0;
 _GLF_struct_14 _f1;
 bvec3 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
 uint _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_13 {
 _GLF_struct_12 _f0;
 uint _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_13 _f0;
 _GLF_struct_18 _f1;
 _GLF_struct_19 _f2;
 mat4x3 _f3;
 _GLF_struct_25 _f4;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 bvec2 _f1;
 bvec3 _f2;
 ivec3 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 uvec4 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat2x4 _f1;
 mat2x4 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_8 {
 mat4x2 _f0;
 _GLF_struct_7 _f1;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 mat2 _f1;
 uvec4 _f2;
 uvec2 _f3;
 mat2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 ivec2 _f1;
 int _f2;
 bvec4 _f3;
 uint _f4;
 mat4x2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_6 {
 _GLF_struct_4 _f0;
 mat3x2 _f1;
 _GLF_struct_5 _f2;
 uint num_workgroup;
 vec2 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_6 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_10 _f2;
 bvec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 mat4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 bvec2 _f1;
 uvec2 _f2;
 mat4 _f3;
 ivec2 _f4;
 mat4x2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 bvec2 _f2;
 uvec2 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_3 {
 uint _f0;
 bvec4 _f1;
 _GLF_struct_2 _f2;
 int _f3;
 vec3 _f4;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, _GLF_ONE(1.0, injectionSwitch.y), abs(0.0), 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)))))), false || (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u)), bvec4(true), _GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(ivec2(1), ivec2(ivec2(_GLF_IDENTITY(ivec2(1), min(ivec2(1), ivec2(1)))))), bvec2(true), uvec2(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY(1u, uint(uint(1u)))) << 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(1u))), (_GLF_IDENTITY(1u, uint(uint(1u)))) >> 0u) : _GLF_FUZZED(125024u)))) << 0u))))))))), mat4(1.0), ivec2(1), mat4x2(1.0), bvec3(true)), _GLF_struct_1(mat3x2(1.0), mat4(1.0), mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), bvec2(true), uvec2(1u), bvec2(true)), 1, vec3(1.0), gl_SubgroupInvocationID);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2.1, -51.90)) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-9869.0879)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          return;
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y))) || false), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y))) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.6) : injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.3) : injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.8)), float(injectionSwitch.y), bool(true))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(-955.715, -5.3)))), vec2(injectionSwitch.y, 0.0))))))), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))), true, false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), (_GLF_IDENTITY(false, true && (false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_6(_GLF_struct_4(_GLF_IDENTITY(ivec4(1), (true ? ivec4(1) : _GLF_FUZZED(ivec2(24467, 74352).ttss))), ivec2(1), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-10926)), (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-10926)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-10926))), min(((_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-30483) : 1)), 1)) : _GLF_FUZZED(-10926))), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-10926))), (((true ? 1 : _GLF_FUZZED(-10926)))) + 0))) | 0)) | ((true ? 1 : _GLF_FUZZED(-10926)))))) >> 0, ((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-10926)), (_GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-10926)), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-10926))), min(((_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-30483) : 1)), 1)) : _GLF_FUZZED(-10926))), _GLF_IDENTITY(((true ? 1 : _GLF_FUZZED(-10926))), (((true ? 1 : _GLF_FUZZED(-10926)))) + 0))) | 0)) | ((true ? 1 : _GLF_FUZZED(-10926)))))) >> 0) | 0)), bvec4(true), 1u, mat4x2(1.0), mat2x4(1.0)), mat3x2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(1.4))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6110.4494)), float(1.0), bool(true))), mix(float(_GLF_FUZZED(7755.4376)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6110.4494)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6110.4494)), float(1.0), bool(true))), mix(float(_GLF_FUZZED(7755.4376)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6110.4494)), float(1.0), bool(true)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0), 1.0)), 1.0))), _GLF_struct_5(mat4x2(_GLF_IDENTITY(1.0, 1.0 * (1.0))), mat2(1.0), uvec4(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, (1u) ^ 0u) : _GLF_FUZZED((subgroup_size --))))), uvec2(1u), mat2(1.0), vec2(1.0)), gl_NumWorkGroups.x, vec2(1.0)), _GLF_struct_8(mat4x2(1.0), _GLF_struct_7(1.0, mat2x4(1.0), mat2x4(1.0), ivec3(1))), _GLF_struct_10(_GLF_struct_9(ivec2(_GLF_IDENTITY(1, max(1, 1))), bvec2(true), bvec3(_GLF_IDENTITY(true, (true) && true)), ivec3(1), bvec2(true)), uvec4(1u), uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))))), bvec4(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(uvec3(1u), (false ? _GLF_FUZZED((uvec3(131263u, 196483u, 167890u) % uvec3(33080u, 196391u, 175767u))) : uvec3(1u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_13(_GLF_struct_12(mat3x2(1.0), bvec2(true), mat3x2(1.0), mat4x2(1.0), 1u, bvec2(true)), 1u), _GLF_struct_18(uvec2(1u), _GLF_struct_14(ivec4(1), vec3(1.0), mat2x4(1.0), mat3x4(1.0), 1, mat2x4(1.0)), bvec3(true), _GLF_struct_15(mat4x3(1.0), true, mat3x2(1.0), ivec4(1), mat2x4(1.0), ivec3(1)), _GLF_struct_16(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)), min((uvec4(1u)), _GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), (uvec4(_GLF_IDENTITY(1u, (1u) - 0u))), (uvec4(1u)))))) | (uvec4(1u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), uvec4(1u))), (uvec4(1u)) | (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) + uvec4(0u, 0u, 0u, 0u)))))), mat2(1.0), mat3(1.0), mat4x3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5165.7650) : 1.0))), float(_GLF_FUZZED((-27.35 * -2.2))), bool(false)))), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mat2x3(1.0)), _GLF_struct_17(uvec2(1u))), _GLF_struct_19(1), mat4x3(1.0), _GLF_struct_25(true, _GLF_struct_20(uvec3(1u), ivec3(1), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) + uvec4(0u, 0u, 0u, 0u)), ivec2(1), gl_WorkGroupSize.x, mat3x2(1.0)), _GLF_struct_21(ivec2(1), mat2x3(1.0), mat4x2(1.0), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) - vec2(0.0, 0.0))), _GLF_struct_22(ivec2(1), bvec4(true), mat2x3(1.0), 1), _GLF_struct_23(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, false))), true, ivec3(1)), _GLF_struct_24(ivec4(1))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 1.0, 1.0, 0.0, 1.0)))))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_26._f4._f1.workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_44 _GLF_struct_replacement_44 = _GLF_struct_44(uvec4(1u), _GLF_struct_28(bvec2(true), _GLF_struct_27(mat4x3(1.0), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec2(bool(bvec3(true, false, false)), true))))), uvec4(1u), mat2x3(1.0), ivec2(1), bvec2(true), bvec4(true)), bvec4(true)), mat4(1.0), _GLF_struct_32(_GLF_struct_29(mat2x3(1.0)), vec3(1.0), mat2(1.0), _GLF_struct_30(bvec2(_GLF_IDENTITY(true, false || (true))), uvec3(1u)), _GLF_struct_31(mat3x4(1.0), true)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id, (workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id) - 0u)) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))), workgroup_base + subgroup_id * subgroup_size + _GLF_struct_replacement_3.subgroup_local_id)), _GLF_struct_38(_GLF_struct_33(mat3x2(1.0), 1u, 1, true, mat3x2(1.0), 1u, mat3x4(1.0)), _GLF_struct_34(1u, vec2(1.0), 1u, ivec4(1), uvec4(1u), mat2x3(1.0), mat2x3(1.0)), _GLF_struct_35(mat3x2(1.0), vec4(1.0), ivec3(1), bvec3(true), mat4x2(1.0), uvec3(1u), 1.0), _GLF_struct_36(ivec3(1), mat3x4(1.0), mat4x2(1.0), mat3(1.0), 1), _GLF_struct_37(vec4(1.0), ivec3(1), uvec3(1u), 1u, true)), _GLF_struct_43(bvec4(true), _GLF_struct_39(mat3(1.0), true, bvec4(true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true))), true), true))))), mat3x4(1.0), ivec4(1)), _GLF_struct_40(uvec4(_GLF_IDENTITY(1u, 0u | (1u))), ivec3(1), _GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y)))))))), ivec4(1), true, bvec3(true), mat3x2(1.0)), _GLF_struct_41(mat2x4(1.0), bvec2(true), 1, mat3x4(1.0), bvec4(true), mat3(1.0)), ivec3(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(27824)))), _GLF_struct_42(uvec4(1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, false)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) + vec2(0.0, 0.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (! (true))), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, min(_GLF_struct_replacement_3.subgroup_local_id, _GLF_struct_replacement_3.subgroup_local_id))) | 0u)) | (_GLF_IDENTITY(_GLF_struct_replacement_3.subgroup_local_id, ~ (~ (_GLF_struct_replacement_3.subgroup_local_id))))) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(336.953)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(53.92)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 1u, 0u), (_GLF_IDENTITY(true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u)), min(true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u)), true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u))))))))), clamp(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec4(next_virtual_gid, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), ~ (~ (~ (0u)))))), 0u)), max(_GLF_IDENTITY(uint(uvec4(next_virtual_gid, 0u, 0u, 0u)), (uint(uvec4(next_virtual_gid, 0u, 0u, 0u))) + 0u), uint(uvec4(next_virtual_gid, 0u, 0u, 0u))))), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid)), _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, 0u + (next_virtual_gid)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))) >> 0u), _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) + 0u), next_virtual_gid)))), 0u, 0u, 0u)), max(uint(uvec4(next_virtual_gid, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(next_virtual_gid) : 0u)))), 0u)), uint(uvec4(next_virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) + 0u)) * 1u), 0u, 0u))))), 0u, 1u, 0u)) - (uvec4(166362u, _GLF_IDENTITY(80116u, (_GLF_IDENTITY(true, ! (! (true))) ? 80116u : _GLF_FUZZED(next_virtual_gid))), 81462u, 27863u) & uvec4(0u, 0u, 0u, 0u))), (true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u))))), uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 1u, 0u), (true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_IDENTITY(_GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u)), (true ? _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u)) : _GLF_FUZZED(uvec4(159598u, 192286u, 74105u, 26682u))))))), uint(_GLF_IDENTITY(uvec4(next_virtual_gid, 0u, 1u, 0u), (true ? uvec4(next_virtual_gid, 0u, 1u, 0u) : _GLF_FUZZED(uvec4(36781u, 81005u, 15527u, 36856u))))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        return;
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_44.virtual_gid, min(_GLF_struct_replacement_44.virtual_gid, _GLF_struct_replacement_44.virtual_gid))], 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(-45881) : 64, int(ivec2(false ? _GLF_FUZZED(_GLF_IDENTITY(-45881, 0 + (_GLF_IDENTITY(-45881, (true ? -45881 : _GLF_FUZZED(88670)))))) : 64, 0))))), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_struct_replacement_44.virtual_gid], 4, _GLF_IDENTITY(64, 0 ^ (64)), 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2) + 1, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
