#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 ivec2 _f0;
} ;

struct _GLF_struct_3 {
 ivec3 _f0;
 mat3x2 _f1;
 vec2 _f2;
 mat2x3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_4 _f2;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 mat2 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 mat2x4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 vec3 _f1;
 uvec2 _f2;
 bvec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec3 _f1;
 _GLF_struct_1 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 vec2 _f1;
 uint subgroup_local_id;
 _GLF_struct_5 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | 0)))); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true)), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true)), false, false, true)), (bool(bvec4(bool(_GLF_IDENTITY(bool((false)), (bool((false))) && true)), false, false, true))) && true))) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))));
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7391.8298)), bool(false)))), transpose(transpose(mat4(1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7391.8298)), bool(false)))), transpose(transpose(mat4(1.0)))), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7391.8298)), bool(false)))), transpose(transpose(mat4(1.0))))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8521.8626)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false))))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8521.8626)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(-5.0)))), sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, sqrt(0.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(vec2(1.0, 874.455)[0]) : log(1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), clamp(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false))))))), 0.0)))) + 0.0)), _GLF_IDENTITY(vec3(mat2x3(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8521.8626)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false))))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8521.8626)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(-5.0)))), sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, sqrt(0.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(vec2(1.0, 874.455)[0]) : log(1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), clamp(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false))))))), 0.0)))) + 0.0)), 0.0, 0.0, sqrt(1.0))), vec3(vec4(vec3(mat2x3(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8521.8626)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false))))), 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, 1.0)), 1.0)), float(vec3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8521.8626)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(-5.0)))), sqrt(0.0), log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, sqrt(0.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(vec2(1.0, 874.455)[0]) : log(1.0))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), clamp(1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false)))), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(determinant(mat3(-6811.3008, 6.6, 160.144, 4.6, -34.77, -2.3, 4240.2315, 0.4, 79.12))))), mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))), 1.0), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (vec4(0.0, 0.0, 0.0, 1.0)) * mat4(1.0))), max(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5776.4759), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(3.4)), bool(false))), _GLF_FUZZED(float(55325u))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(571.325)), float(dot(vec4(0.0, sqrt(0.0), log(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(-414.104)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), bool(true)))))), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x, 0.0 + (vec2(0.5, _GLF_IDENTITY(4.7, (false ? _GLF_FUZZED((1.6 / -463.663)) : 4.7))).x)))), bool(false))))), float(_GLF_FUZZED(8612.1194)), bool(false))))))), 0.0)))) + 0.0)), 0.0, 0.0, sqrt(1.0))), 0.0)))), uvec2(1u), bvec3(true), ivec2(1)), bvec3(true), _GLF_struct_1(mat3(1.0), mat2(1.0), bvec4(true), mat4x3(1.0), mat2x4(1.0), ivec3(1)), mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(5624.4151)), ((true ? 1.0 : _GLF_FUZZED(5624.4151))) / 1.0)))))), vec2(1.0), gl_SubgroupInvocationID, _GLF_struct_5(mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)), mix(float(_GLF_FUZZED(vec3(9.6, -8606.9028, -6177.7780).t)), float(_GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))), bool(true))))), _GLF_struct_3(ivec3(1), mat3x2(1.0), vec2(1.0), mat2x3(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(0.0, (0.0) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-345.363)), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true)))))) - 0.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * determinant(mat2(1.0, 1.0, 0.0, 1.0))), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, cos(0.0), 0.0))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0)), (true ? float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0)) : _GLF_FUZZED(8.8))))))))))), _GLF_struct_4(ivec2(1))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), ! (! ((! (false)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), ! (! ((! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec3(_GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), ! (! ((! (false)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) && true))), ! (! ((! (false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bool(false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false)))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), false)))), false || (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || _GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))) || false)) || false))))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), true), bvec2(bvec3(bvec2(bool(bool(false)), true), true))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), 0u, 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 0u, 1u, 1u))) * workgroup_id), 0u | ((_GLF_IDENTITY(workgroup_size, uint(uvec4(workgroup_size, 0u, 1u, 1u))) * workgroup_id))) | (workgroup_size * workgroup_id)), 0u)));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))) + _GLF_struct_replacement_6.subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, min((subgroup_id * subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, 0u | ((subgroup_id * subgroup_size) * 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)), ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))), max((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u))) ^ 0u) * 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u, min(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 0u, 0u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))))), (~ (subgroup_size)))))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) / 1u)) * 1u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)), ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u))) | ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) >> 0u), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << _GLF_IDENTITY(0u, (0u) | (0u))) / 1u)) * 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(39829u) : (subgroup_size)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u, max(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u, ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) * 1u)) << 0u)) << 0u) / 1u)) * 1u)))), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * 1u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, (0u & 191418u) ^ ((subgroup_size) - 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size) * _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) / 1u))))))))))) - 0u) + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, min((subgroup_id * subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, 0u | ((subgroup_id * subgroup_size) * 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)), ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))), max((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u))) ^ 0u) * 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u, min(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 0u, 0u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))))), (~ (subgroup_size)))))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) / 1u)) * 1u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)), ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u))) | ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) >> 0u), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << _GLF_IDENTITY(0u, (0u) | (0u))) / 1u)) * 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(39829u) : (subgroup_size)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u, max(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u, ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) * 1u)) << 0u)) << 0u) / 1u)) * 1u)))), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * 1u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, (0u & 191418u) ^ ((subgroup_size) - 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size) * _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) / 1u))))))))))) - 0u) + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size)) | (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) * 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) * 1u)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, min((subgroup_id * subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * subgroup_size) * 1u, 0u | ((subgroup_id * subgroup_size) * 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)), ((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))), max((_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))), (_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) >> 0u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u))) ^ 0u) * 1u)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u, min(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u, ~ (~ ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u))), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)) * 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 0u, 0u, 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), max(_GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), _GLF_IDENTITY((~ (subgroup_size)), clamp((~ (subgroup_size)), (~ (subgroup_size)), (~ (subgroup_size)))))), (~ (subgroup_size)))))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (0u))) - 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u)) / 1u)) * 1u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)), ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u))) | ((subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << 0u) / 1u)))) * 1u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) >> 0u), ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)) << _GLF_IDENTITY(0u, (0u) | (0u))) / 1u)) * 1u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(39829u) : (subgroup_size)))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u, max(((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u, ((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))) * 1u)))) << 0u), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) * 1u)) << 0u)) << 0u) / 1u)) * 1u)))), clamp((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * 1u)), (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, (0u & 191418u) ^ ((subgroup_size) - 0u))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) / 1u)) * _GLF_IDENTITY(1u, (1u) + _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))))))))))) | ((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size) * _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) / 1u))))))))))) - 0u) + ((_GLF_struct_replacement_6.subgroup_local_id + 1) % subgroup_size)));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)), (1 ^ 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) >> _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | 0))))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false))) || false, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false))) || false, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec3(true, true, false)), (bool(bvec3(true, true, false))) || false))) || false, false, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), int(int(~ (4))))))) * 1));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             barrier();
            }
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 1 * (0))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)) * 1, 0 + ((_GLF_IDENTITY(4, (4) << 0)) * 1)))) - 0), 4, 4))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 1 * (0))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)) * 1, 0 + ((_GLF_IDENTITY(4, (4) << 0)) * 1)))) - 0), 4, 4))), ~ (~ ((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, 1 * (0))), _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << 0)) * 1, 0 + ((_GLF_IDENTITY(4, (4) << 0)) * 1)))) - 0), 4, 4))))))) << 0) >> 0), 64, 0);
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
    {
    }
   else
    {
     barrier();
    }
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), min((virtual_gid), _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), 0u ^ ((virtual_gid))), 0u ^ ((virtual_gid))))) << 0u)], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_IDENTITY(true, (true) && true))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), false || (! (false)))))) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true, ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (false)))))) && true)) && true) && _GLF_IDENTITY(true, ! (! (true))))) || false))), ((_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), false))), false || (! (false)))))) && true)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)) && true, ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (false)))))) && true)) && true) && _GLF_IDENTITY(true, ! (! (true))))) || false)))) && true)))))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = (_GLF_IDENTITY(1, 0 + (1)) | ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (false ? _GLF_FUZZED(75344) : 1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), max(int(int(0)), int(int(0))))), 0))))))) >> _GLF_IDENTITY(int(7), int(7)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(true, false))), true, false, true)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
      }
     barrier();
    }
  }
 else
  {
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, min(0, 0))); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))), false))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) / 1u))) == _GLF_IDENTITY(read_2, (read_2) + (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << 0u), 0u)) | 0u))), 0u | (uint(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u ^ (read_1))) / _GLF_IDENTITY(1u, max(1u, 1u))))) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)) : _GLF_FUZZED((subgroup_id --)))), (read_2) + (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(0u, 0u), (true ? _GLF_IDENTITY(max(0u, 0u), (max(0u, 0u)) - 0u) : _GLF_FUZZED(subgroup_size)))) << 0u)), _GLF_IDENTITY(0u, (0u) << 0u), 0u)) | 0u))))) + 1, _GLF_IDENTITY(4, (4) - 0), 64, 4);
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
