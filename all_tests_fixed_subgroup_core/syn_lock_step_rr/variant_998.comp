#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) - vec2(0.0, 0.0))) / vec2(1.0, 1.0))).y) || false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, false))), false, false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), false))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bvec4(_GLF_DEAD(false), false, false, false))), false, false))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups))) ^ uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * 1u), 0u, 0u)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), false))), true, true)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))), true, true))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY((injectionSwitch.y) * 1.0, min(_GLF_IDENTITY((injectionSwitch.y) * 1.0, (true ? (injectionSwitch.y) * 1.0 : _GLF_FUZZED(6.6))), (injectionSwitch.y) * 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || (false))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id, 0u), uvec2(0u, 0u) | (uvec2(subgroup_id, 0u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (_GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) / 1u)) | ((subgroup_id) >> 0u))))), 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(subgroup_id, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(0u, 0u) | (uvec2(subgroup_id, 0u)) : _GLF_FUZZED((uvec2(148157u, 25435u) * uvec2(82697u, _GLF_IDENTITY(54950u, uint(uvec3(_GLF_IDENTITY(54950u, (_GLF_IDENTITY(54950u, (54950u) << 0u)) | (0u & 100630u)), 0u, 0u)))))))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(subgroup_id, 0u), uvec2(0u, 0u) | (uvec2(subgroup_id, 0u)))) >> uvec2(0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id, 0u), uvec2(0u, 0u) | (uvec2(subgroup_id, 0u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) >> 0u, (_GLF_IDENTITY((subgroup_id) >> 0u, ((subgroup_id) >> 0u) / 1u)) | ((subgroup_id) >> 0u))))), 0u), _GLF_IDENTITY(uvec2(0u, 0u) | (uvec2(subgroup_id, 0u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec2(0u, 0u) | (uvec2(subgroup_id, 0u)) : _GLF_FUZZED((uvec2(148157u, 25435u) * uvec2(82697u, _GLF_IDENTITY(54950u, uint(uvec3(_GLF_IDENTITY(54950u, (_GLF_IDENTITY(54950u, (54950u) << 0u)) | (0u & 100630u)), 0u, 0u)))))))))) / uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(subgroup_id, 0u), uvec2(0u, 0u) | (uvec2(subgroup_id, 0u)))) >> uvec2(0u, 0u)))) + 0u)))) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (4)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u + (virtual_gid)), ~ (~ (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u + (virtual_gid), (0u + (virtual_gid)) | (_GLF_IDENTITY(0u + (virtual_gid), (true ? _GLF_IDENTITY(0u + (virtual_gid), 0u ^ (_GLF_IDENTITY(0u + (virtual_gid), (true ? 0u + (virtual_gid) : _GLF_FUZZED(workgroup_id))))) : _GLF_FUZZED(subgroup_size)))))))))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) * vec2(1.0, 1.0)).y, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, 0u + (_GLF_IDENTITY(read_2, max(read_2, read_2))))) / 1u), uint(uvec2(read_2, 1u)))), (uint(read_1 == read_2)) | (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(uint(read_1 == read_2), 0u, 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, true, true, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) == read_2, true, true, true))))))))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, true, true, true))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))))))))) || false)))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), clamp(_GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (true ? (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) : _GLF_FUZZED(bitfieldInsert(virtual_gid, subgroup_size, -28873, 61623)))), (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), min((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) == read_2, true, true, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (true) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, _GLF_IDENTITY(true, (true) || false), true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true, true, true)))))))))))))))))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))))) / 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) == read_2, true, true, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))) ^ (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)), bool(bvec2(true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)), true)))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true, true, true)))) || false)))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(virtual_gid))) == read_2, true, true, true))))))))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), clamp((_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) | 0u)) == read_2, true, true, true))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false, false || ((_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true))), ((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), false || (read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)))), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> _GLF_IDENTITY(0u, ~ (~ (0u)))) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))))))))) || false)), ((! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false, false || ((_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true))), ((_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> 0u) == read_2, bool(bvec4(read_1 == read_2, true, true, true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), false || (read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)))), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) >> _GLF_IDENTITY(0u, ~ (~ (0u)))) == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)), bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))))))))) || false))) && true))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(uvec2(46797u, 55514u)[1]) : 7u))))), clamp(_GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, ~ (_GLF_IDENTITY(~ (7u), uint(uvec2(~ (7u), 1u)))))), uint(7u))), (true ? (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) : _GLF_FUZZED(bitfieldInsert(virtual_gid, subgroup_size, -28873, 61623)))), (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(_GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (_GLF_IDENTITY((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), ((read_1) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), clamp(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(uint(7u), uint(7u)))))) * 1u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min((read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (read_1) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))))))) == read_2, true, true, true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (true) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, _GLF_IDENTITY(true, (true) || false), true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true, true, true)))))))))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (true) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, _GLF_IDENTITY(true, (true) || false), true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true, true, true)))))))))))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (true) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, _GLF_IDENTITY(true, (true) || false), true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true, true, true)))))))))))), false), bvec2(bvec2(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (true) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, _GLF_IDENTITY(true, (true) || false), true)))) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, (true) && true), true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)), true, true, true)))))))))))), false)))))))))))))) >> _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))))) / _GLF_IDENTITY(1u, max(1u, 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), clamp((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2)), true, true, true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && true)) && true, ! (! ((_GLF_IDENTITY(true, (true) && true)) && true)))), true, true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ (0u | 0u)), bool(bvec4(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2, true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ (0u | 0u)), bool(bvec4(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2, true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ (0u | 0u)), bool(bvec4(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2, true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), max(~ (_GLF_IDENTITY(read_2, max(read_2, read_2))), ~ (_GLF_IDENTITY(read_2, max(read_2, read_2))))))), true, true, true))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ (0u | 0u)), bool(bvec4(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2, true, _GLF_IDENTITY(true, true && (true)), true)))))) || false)) && true)) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bool(read_1 == read_2))), bool(bvec4(read_1 == read_2, true, true, true)))))))))))))))))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))) && true), bool(bvec4(read_1 == read_2, true, true, true))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, true, true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))), bool(bool(true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), false || (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2, true, true, true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), true && (bool(bvec4(read_1 == read_2, true, true, true)))))), false || (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), true && (bool(bvec4(read_1 == read_2, true, true, true)))))), false || (true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false)))), _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), true && (bool(bvec4(read_1 == read_2, true, true, true)))))))))), bool(bool(true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))))) && true)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, true, true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))), bool(bool(true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(read_1 == read_2, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), false)), false)))), _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), true && (bool(bvec4(read_1 == read_2, true, true, true)))))), bool(bool(true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))))) && true))))))))) || false)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), ! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))) || false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), ! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))) || false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)), bool(bvec4(read_1 == read_2, true, true, true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u), true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(read_1 == read_2, true, true, true))), ! (! (bool(bool(bvec4(read_1 == read_2, true, true, true))))))))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(read_1 == read_2, true, true, true))), ! (! (bool(bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, false), true))))), true, true))))))))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || false))) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))), bool(bvec4(read_1 == read_2, true, true, true))))), true, true, false)))) && true))))))))))))), max(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), ! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))) || false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), ! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))) || false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)), bool(bvec4(read_1 == read_2, true, true, true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u), true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(read_1 == read_2, true, true, true))), ! (! (bool(bool(bvec4(read_1 == read_2, true, true, true))))))))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(read_1 == read_2, true, true, true))), ! (! (bool(bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, false), true))))), true, true))))))))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || false))) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))), bool(bvec4(read_1 == read_2, true, true, true))))), true, true, false)))) && true))))))))))))), uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))), (bool(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true)))))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), ! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))) || false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true)), (bool(bvec4(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2, _GLF_IDENTITY(true, bool(bool(true))), true, true))) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), ! (! (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))))))))) || false), true, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8.8)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), (bool(bvec4(read_1 == read_2, true, true, true))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (read_1 == read_2)), bool(bvec4(read_1 == read_2, true, true, true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), bool(bvec4(read_1 == read_2, true, true, true))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == _GLF_IDENTITY(read_2, (read_2) << 0u), true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(read_1 == read_2, true, true, true))), ! (! (bool(bool(bvec4(read_1 == read_2, true, true, true))))))))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bvec4(read_1 == read_2, true, true, true)), bool(_GLF_IDENTITY(bool(bool(bvec4(read_1 == read_2, true, true, true))), ! (! (bool(bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false))), true, false), true))))), true, true))))))))), true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) || false))) && true)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_IDENTITY(true, ! (! (true))), true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))))), bool(bvec4(read_1 == read_2, true, true, true))))), true, true, false)))) && true)))))))))))))))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, log(1.0), 0.0))), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(54.00)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(530.670)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch.x)), injectionSwitch.x))))) + 1, 4, 64, 4);
}
