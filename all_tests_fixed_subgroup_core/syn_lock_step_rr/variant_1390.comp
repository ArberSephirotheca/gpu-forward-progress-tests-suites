#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 uvec2 _f0;
 mat2x4 _f1;
 uvec4 _f2;
 mat2 _f3;
 mat4 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 uint read_1;
 _GLF_struct_6 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_4 {
 float _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_3 {
 uvec4 _f0;
 mat4x2 _f1;
 ivec4 _f2;
 bool _f3;
 vec2 _f4;
 bool _f5;
} ;

struct _GLF_struct_2 {
 bool _f0;
 uvec4 _f1;
 ivec2 _f2;
 bvec2 _f3;
 uvec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 int _f1;
 mat3x4 _f2;
 bool _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 float _f1;
 vec2 _f2;
 _GLF_struct_7 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_0 {
 int _f0;
 uint subgroup_local_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, tan(length(vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, exp(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0), mat3x2(mat3(mat3x2(0.0, 0.0, exp(0.0), 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0))))))))) + (injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(mat2x3(vec2(0.0, 1.0), 1.0, 0.0, 1.0, 1.0)), min(vec2(mat2x3(vec2(0.0, 1.0), 1.0, 0.0, 1.0, 1.0)), vec2(mat2x3(vec2(0.0, 1.0), 1.0, 0.0, 1.0, 1.0))))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(1.0)), vec2(_GLF_FUZZED((+ 913.526)), (vec2(0.0, 1.0))[1]), bvec2(false, true)))))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(72.65)), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(0.0, 0.0) + (vec2(1.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(length(0.0), min(_GLF_IDENTITY(length(0.0), float(mat3x4(length(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 1.0, 1.0))), _GLF_IDENTITY(length(0.0), (true ? length(0.0) : _GLF_FUZZED(-2.3))))), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-622.968), _GLF_FUZZED(25.19)), bvec2(false, false))), 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) * vec2(1.0, 1.0))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(_GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_IDENTITY(length(vec2(0.0, 0.0)), 1.0 * (length(vec2(0.0, 0.0))))), float(_GLF_FUZZED(-11.57)), bool(false))), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(470.946) : _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-99.35)), bool(false))))), 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, _GLF_IDENTITY(tan(0.0), float(_GLF_IDENTITY(mat2x3(tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0), (mat2x3(tan(0.0), 1.0, 1.0, 1.0, 1.0, 1.0)) * mat2(1.0)))), 0.0, 0.0, _GLF_IDENTITY(length(0.0), float(mat3x4(length(0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, log(1.0), 1.0), vec4(0.0, 0.0, 0.0, 1.0))), log(1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, log(1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) * vec2(1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(0.0, 0.0 + (0.0)), tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(acosh(dot(injectionSwitch, vec2(0.1, -1680.6467)))) : 1.0)))) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(acos(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0), (mat4x3(injectionSwitch, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 1.0, exp(0.0), 0.0, determinant(mat4(length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, sin(0.0), 0.0, tan(0.0), 0.0, 0.0, length(0.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0)) * mat4(_GLF_ONE(1.0, injectionSwitch.y))))))), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-3058.0575, 48.74).s)), float(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.9)), bool(false)))), bool(true))))))))) - vec2(0.0, 0.0)) + vec2(0.0, 0.0)), vec2(mat3x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9503.6100) : 1.0)), 0.0, 1.0))), injectionSwitch))) - tan(vec2(0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.3), _GLF_FUZZED(-1.9)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(true, true))).y, max(injectionSwitch.y, injectionSwitch.y))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.90), _GLF_FUZZED(-20.84)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, -4457.0459)))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(41.90), _GLF_FUZZED(-20.84)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 1.0, 0.0)))[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5.6, -4457.0459)))))).y))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(1, gl_SubgroupInvocationID);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (! (true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2747.5947)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).y))), ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2747.5947)), vec2(_GLF_FUZZED(-9.5), (injectionSwitch)[1]), bvec2(false, true))).y)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, false)))) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true, true, false))) || false), (_GLF_IDENTITY(bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, true, false)), (bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, (true) && true), false))) || false)) && true)) && true)))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool((! (_GLF_DEAD(false)))), ! (! (bool((! (_GLF_DEAD(false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(124.622))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false), true, true))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7692.5327) : injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))) > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7692.5327) : injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7692.5327) : injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7692.5327) : injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))) > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7692.5327) : injectionSwitch.x)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) / vec2(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(1.0)))) > injectionSwitch.y))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))) && true)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))) || false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))))), false, false)), bool(bvec4(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_DEAD(false), false), true, true))))))), false, false)), false, false, true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.x = num_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / 1u)), (_GLF_IDENTITY(false ? _GLF_FUZZED(bitfieldExtract(subgroup_id, -14510, 59403)) : ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, max((gl_WorkGroupSize.x) / 1u, (gl_WorkGroupSize.x) / 1u)))), (false ? _GLF_FUZZED(bitfieldExtract(subgroup_id, -14510, 59403)) : ~ (_GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) / 1u, max((gl_WorkGroupSize.x) / 1u, (gl_WorkGroupSize.x) / 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(246.886), clamp(_GLF_FUZZED(246.886), _GLF_FUZZED(246.886), _GLF_FUZZED(246.886))) : injectionSwitch.y))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - 0.0, min((injectionSwitch.y) - 0.0, (injectionSwitch.y) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), false)))))) && true)))), ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), false))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), true && (false || (false))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) && true)) && true)))), false)))))) && true))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (workgroup_size) ^ 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_0.subgroup_local_id, (_GLF_struct_replacement_0.subgroup_local_id) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y = virtual_gid;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), (bool(bvec4(_GLF_DEAD(false), false, true, true))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_0.subgroup_local_id + 1), _GLF_IDENTITY(((_GLF_struct_replacement_0.subgroup_local_id + 1)), (false ? _GLF_FUZZED(bitfieldReverse(num_workgroup)) : _GLF_IDENTITY(((_GLF_struct_replacement_0.subgroup_local_id + 1)), min(((_GLF_struct_replacement_0.subgroup_local_id + 1)), ((_GLF_struct_replacement_0.subgroup_local_id + 1)))))) / 1u) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> 0)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0), (true ? mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0) : _GLF_FUZZED(mat4(40.53, 44.26, -2.6, -0.6, -265.667, 4.5, -39.53, 627.337, -1090.4310, 9689.1247, -6605.4412, -16.09, 2.3, -2.7, 4.2, -3805.3314))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_5(_GLF_struct_1(ivec3(1), 1, mat3x4(1.0), true, _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u)), (_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) + uvec2(0u, 0u))) / uvec2(1u, 1u))) ^ uvec2(0u, 0u))), _GLF_struct_2(true, uvec4(1u), ivec2(1), bvec2(true), _GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u)))) | (uvec4(0u, 0u, 0u, 0u))) | (uvec4(1u)))) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), uvec4(1u))))))), mat3x2(1.0)), _GLF_struct_3(uvec4(1u), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))) * 1.0)), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | 0) ^ (1)))), ~ (~ (ivec4(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, 0 ^ (0))) | 0) ^ (1))))))), _GLF_IDENTITY(true, (true) && true), vec2(1.0), true), _GLF_struct_4(1.0, bvec2(true))), 1.0, vec2(1.0), _GLF_struct_7(mat2x3(1.0), atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y, clamp(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y, GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y, (GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, clamp(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid)).y))))], 4, 64, 0), _GLF_struct_6(uvec2(1u), mat2x4(1.0), uvec4(1u), mat2(1.0), mat4(1.0), _GLF_IDENTITY(ivec3(1), ~ (~ (ivec3(1))))), uvec2(_GLF_IDENTITY(1u, min(1u, 1u)))), uvec3(1u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y, _GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), (_GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), ((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y)) << 0u)) << 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), (_GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), ((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y)) << 0u)) << 0u), (_GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), (_GLF_IDENTITY((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y), ((false ? _GLF_FUZZED((GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid[0] >> num_workgroup)) : GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.y)) << 0u)) << 0u)) / 1u)))) - 0u))], 4, 64, 0);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     continue;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      continue;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_8._f3.read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) | 0u), read_2, read_2)), ! (! (_GLF_IDENTITY(_GLF_struct_replacement_8._f3.read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) | 0u), read_2, read_2)), (_GLF_struct_replacement_8._f3.read_1 == _GLF_IDENTITY(read_2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), (_GLF_IDENTITY(read_2, (read_2) * 1u)) | 0u), read_2, read_2))) || false))))) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) - 0), _GLF_IDENTITY(64, 1 * (64)), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(false), false), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(false), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))));
}
