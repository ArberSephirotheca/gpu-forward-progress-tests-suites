#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec4 GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1.xyz = GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz = GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1.xyz;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 47:
       case 66:
       case 95:
       case 9:
       case 45:
       if(_GLF_DEAD(false))
        barrier();
       case 46:
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 26:
           if((mat2x4(-21.18, -2.5, 9.5, 63.17, 9.5, -3.3, -37.51, 704.643) != (mat2x4(-34.32, -672.450, -377.639, 4.0, -7958.1502, -6408.5957, -982.167, 0.7) / -9191.9856)))
            {
             switch(_GLF_SWITCH((-30574 & 0)))
              {
               case 73:
               28180;
               case 21:
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 0:
               case 48:
               for(mat2x3 _GLF_SWITCH_6_0v; (length((vec4(8.9, 5837.1116, 8.3, -3518.8280) + -54.19)) == -66.73); (floatBitsToInt(vec3(-5.5, 8356.1208, 8.2)) - 77721))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   ;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat4 _GLF_SWITCH_6_1v[98], _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v;
                 bvec4 _GLF_SWITCH_6_4v[48], _GLF_SWITCH_6_5v[80], _GLF_SWITCH_6_6v;
                }
               case 1:
               case 42:
               case 94:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(                 bitfieldInsert(-80346, -97605, -49909, ivec4(2566, 24462, -2034, 16006).a);
 (bvec3(false, true, true) , (4800u < 85512u)); max(66614, -79320))
                  {
                   GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid;
                   uvec4 _GLF_SWITCH_6_7v;
                  }
                }
               break;
               case 86:
               mat3 _GLF_SWITCH_7_0v[95];
               case 83:
               (atan(injectionSwitch, injectionSwitch) , mat4(-360.907, 6.5, 8.4, -168.905, -637.708, 0.7, -5.5, -64.28, -5878.4485, 11.41, 73.80, -385.595, 678.657, -629.274, 1935.4426, 7.8));
               default:
               1;
              }
            }
           case 0:
           case 36:
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
           default:
           1;
          }
        }
       case 80:
       case 59:
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 73:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 93:
           barrier();
           break;
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       case 92:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         while((true == bvec3(false, false, true)[0]))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))))
            {
            }
           else
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 28:
                 mat4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[3], _GLF_SWITCH_7_2v;
                 case 6:
                 ;
                 case 0:
                 case 60:
                 case 19:
                 case 5:
                 case 39:
                 case 38:
                 for(                 ivec4(-26586, -47721, -14670, 98041);
 (mat2x4(9.7, -5423.6812, 2792.0525, 8526.9233, 3046.4794, 2.2, -5.5, -1.1) == mat2x4(mat3x4(-32.88, 6.0, 586.012, -8.6, -3.9, 9.9, 9550.7527, 0.8, 0.8, -90.04, 5529.2506, -8.9))); vec4(-4.2, -571.601, -1507.6379, 9121.0766))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   int _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[28];
                   mat4x2(9.0, 3.2, 771.755, -64.39, -2119.9776, 845.782, 2.6, 17.82);
                   GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.gb;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1;
                    }
                   ivec2 _GLF_SWITCH_4_2v[88];
                   ivec4(16042, 5522, 23700, -83660);
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   ivec3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 break;
                 case 54:
                 ivec2 _GLF_SWITCH_7_3v;
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   1;
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec3 _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[44];
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((17793 & 0) & 97406)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, true))))))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) - 0)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 switch(_GLF_SWITCH((0 | 0)))
                  {
                   case 38:
                   bvec2 _GLF_SWITCH_6_0v;
                   case 0:
                   case 79:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   case 40:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 67:
                   case 83:
                   if(_GLF_DEAD(false))
                    barrier();
                   ;
                   break;
                   case 98:
                   uvec4(23579u, 63065u, 136080u, 47620u);
                   default:
                   1;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           (false ? mat2x3(0.1, -645.937, -26.93, -211.469, -0.5, -69.56) : mat2x3(-39.21, -1.9, -5.0, -0.4, 784.869, -74.15));
           vec2(814.229, -37.11);
           {
            switch(_GLF_SWITCH(0))
             {
              case 70:
              findMSB(ivec3(69079, -43770, -29883));
              case 0:
              case 6:
              case 94:
              case 55:
              do
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 74:
                  mat3x4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                  case 0:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      barrier();
                     }
                   }
                  case 12:
                  case 67:
                  case 27:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 84:
                  case 43:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 11:
                  case 62:
                  bvec3 _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v[64];
                  break;
                  case 94:
                  injectionSwitch;
                  default:
                  1;
                  if(_GLF_DEAD(false))
                   barrier();
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
              break;
              default:
              1;
             }
           }
           if(true)
            {
             142838u;
             injectionSwitch;
             uint _GLF_SWITCH_4_10v, _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v;
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat4x3(3315.1447, 734.326, -7.2, 5706.7584, -337.682, 7.1, 9430.6350, -4743.7644, -1.0, 0.8, -6.0, 6.4);
             for(vec2 _GLF_SWITCH_4_13v, _GLF_SWITCH_4_14v, _GLF_SWITCH_4_15v[75]; false; ivec4(-45662, -1243, -49822, -44017))
              {
               for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 (true ? vec4(-6.1, 9.2, -1.0, -1475.4971) : vec4(87.81, -7046.1700, -5222.5016, -9979.5410));
                }
              }
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               switch(_GLF_SWITCH(0))
                {
                 case 44:
                 ivec4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                 case 0:
                 case 47:
                 case 34:
                 case 90:
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 67:
                 mat4x2(6.0, -1849.9370, 18.63, 28.77, 927.030, -785.526, 6.5, -993.573);
                 default:
                 1;
                }
              }
            }
           else
            {
             if(true)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   ;
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 case 82:
                 case 65:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 53:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 mat3x2((mat3(-5.0, 45.70, 133.767, 5627.6017, -14.13, 4.1, 3.7, -1525.2648, -8.0)));
                 case 28:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 bool _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v, _GLF_SWITCH_4_18v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.tp;
                 do
                  {
                   mat2x4(mat3x2(-1.5, -4.5, -0.1, -36.08, -2899.8902, 806.188));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 case 14:
                 case 13:
                 case 64:
                 case 88:
                 ivec2 _GLF_SWITCH_4_19v[95];
                 break;
                 default:
                 1;
                }
              }
             else
              {
               switch(_GLF_SWITCH((0 | 0)))
                {
                 case 0:
                 (ivec3(83329, 41610, -8138).p % ivec3(97964, 57857, -5725));
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat2x3(-0.7, -4901.4984, 1.3, 9013.3900, 44.62, 3.6);
                 bvec2(false, false);
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   bvec2(false, true);
                  }
                 mat4x3 _GLF_SWITCH_4_20v;
                 mat2(-409.566, 636.621, -8.2, -8.8);
                 bvec2 _GLF_SWITCH_4_21v, _GLF_SWITCH_4_22v[34], _GLF_SWITCH_4_23v;
                 if(_GLF_DEAD(false))
                  barrier();
                 ivec4(75538, 17451, 94395, 32859);
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
                 break;
                 case 48:
                 ;
                 case 34:
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   mat3(5.8, -6.3, 842.374, 7.6, 46.76, -9.3, -2.4, 1852.6837, -3.4);
                  }
                 default:
                 1;
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       else
        {
        }
       case 13:
       for(ivec4 _GLF_SWITCH_4_24v, _GLF_SWITCH_4_25v; true; uvec4(10452u, 30586u, 123316u, 84175u))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           vec3(-92.77, -200.714, 4.0).pst;
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         do
          {
           while((mat4x3(9.7, -9631.9165, 5.1, 6.3, -7.7, -0.9, -5.3, 13.83, -2.5, 686.893, 5514.4780, -563.718) != mat4x3(2.1, 710.894, 614.699, -974.143, 0.0, -3106.7500, 538.036, 2.2, -489.465, 97.34, 74.64, 2.4)))
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(bool _GLF_SWITCH_4_26v, _GLF_SWITCH_4_27v; isnan(-83.69); clamp(int(18.55), (-26712 + 90131), 14301))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           uvec3 _GLF_SWITCH_4_28v, _GLF_SWITCH_4_29v;
           vec2(588.161, -5.2).tsts;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               equal(GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid, uvec4(84711u, 170057u, 125787u, 150644u));
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
            {
            }
           else
            {
             ;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             while(bvec2(true, true)[0])
              {
               ;
               ;
               mat2 _GLF_SWITCH_4_30v;
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 bvec3(false, true, true);
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   mat4x3(-6.6, 4.0, 5.2, 7996.0220, 47.32, 24.15, 636.697, -432.429, -6970.6702, 317.969, -5387.1196, 0.8);
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               uvec3 _GLF_SWITCH_4_31v[34], _GLF_SWITCH_4_32v, _GLF_SWITCH_4_33v;
               uint _GLF_SWITCH_4_34v;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           mat4(-0.3, 47.92, 5009.6774, -371.334, -9586.9271, -65.38, 508.682, -111.898, -426.047, -619.099, -300.260, -4.1, -6827.0680, 192.578, 304.188, -42.19);
           while(_GLF_SWITCH_4_27v)
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               mat4x2(-2.3, 74.49, -8113.6053, -2.9, 71.83, 5.7, -262.540, 1.1);
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             151329u;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 mat3x2(mat3x4(23.12, 1.2, 124.745, 92.46, -700.845, 4.2, -9974.6741, 1.6, -67.92, 2.2, 0.8, 3.7));
                }
              }
             uvec3 _GLF_SWITCH_4_35v, _GLF_SWITCH_4_36v;
             -98730;
             if(_GLF_DEAD(false))
              barrier();
             -1255.7806;
             mat4x2(-2931.0036, 1.7, 380.798, 56.61, 20.06, 6.4, 386.806, -4.3);
             ;
            }
           notEqual(bvec3(true, true, true), bvec3(false, true, true));
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           int _GLF_SWITCH_4_37v;
          }
         (- 70784);
         for(int _injected_loop_counter = (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 83:
             _GLF_SWITCH_4_25v;
             case 0:
             case 7:
             case 92:
             case 80:
             case 58:
             case 62:
             case 8:
             case 21:
             case 89:
             vec3(340.422, 0.3, 1.2);
             break;
             case 37:
             ;
             case 67:
             tan(vec3(-44.75, -871.888, 4.1));
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         while(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(0.0, injectionSwitch.x)))))))
            {
             case 7:
             bitfieldExtract(uvec3(195319u, 77553u, 71025u), -66607, -66382);
             case 94:
             if((mat3x4(-9.3, 588.815, -1.3, -3957.5610, 44.36, 970.414, 41.81, 33.82, -45.76, -4.5, -1.7, 72.66) != (-6101.0585 - mat3x4(551.118, -5.0, 63.87, -73.58, 7438.9202, 2.8, -8.1, 74.20, 34.83, 1.6, -6.1, 2.9))))
              {
               mat4x2 _GLF_SWITCH_6_0v[71], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
               if(_GLF_DEAD(false))
                barrier();
               ;
              }
             else
              {
               (uvec3(163347u, 95411u, 114278u) & 43555u);
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 bitfieldReverse(118622u);
                }
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               vec4 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[18];
               ;
               bool _GLF_SWITCH_6_5v;
               (bitfieldInsert(uvec3(50305u, 5607u, 75165u), GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size, -99625, -67851) << 102073u);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               vec3(61.52, 9089.5005, -5.2);
              }
             case 0:
             for(ivec2 _GLF_SWITCH_4_38v, _GLF_SWITCH_4_39v, _GLF_SWITCH_4_40v[40]; false; bool(8.0))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 (mat4x2(-77.51, -61.89, -2047.2678, -402.597, 5.7, 7.7, 1.7, -617.822) - 1110.3991);
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat3x2 _GLF_SWITCH_4_41v[92];
               mat3(155.722, 9.8, -985.796, 9168.3714, -4.2, -8.7, -7573.6511, 4.5, -9.6);
               GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
               (vec3(-4.8, -8.4, 9121.9198) == vec3(5.4, -3100.1613, -3.1));
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                  {
                   mat3x2(-6.6, -35.33, 7.0, 882.784, -4.4, 8.9);
                  }
                }
               mat4x3 _GLF_SWITCH_4_42v;
              }
             ivec4 _GLF_SWITCH_4_43v, _GLF_SWITCH_4_44v[59];
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               mat3(-5.7, -103.477, -85.04, 64.16, 736.104, -714.385, 4116.8749, -24.04, 6616.5655);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 1 * (int(3)))))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))));
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                  barrier();
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
             case 72:
             while((vec4(21.29, 44.12, 6.8, 12.31) == vec4(54.16, 5635.1009, -0.1, 368.858)))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 12:
                 case 61:
                 mat2x4(-5427.2867, -4.9, 178.014, -6.6, 2385.2262, 6.8, 46.05, -52.46);
                 vec2 _GLF_SWITCH_4_45v[22], _GLF_SWITCH_4_46v, _GLF_SWITCH_4_47v[1];
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   (-71.66 - mat3x4(2.2, -3270.6334, 6729.3356, -3.3, -900.224, 4054.7083, 9503.1859, 9188.3538, 77.73, -4.4, -6114.7458, 494.325));
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 vec3(-604.797, -547.019, 0.0);
                 int _GLF_SWITCH_4_48v;
                 break;
                 case 65:
                 vec3(-4.1, 6.1, -1.9);
                 case 36:
                 mat3x4 _GLF_SWITCH_5_0v[38], _GLF_SWITCH_5_1v[88], _GLF_SWITCH_5_2v;
                 default:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              barrier();
             case 93:
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | 0)); _injected_loop_counter --)
              {
               for(               mat2x4(-9497.1242, 5852.0507, -2.1, -6.7, 7.3, 1316.3495, 7.5, 4.5);
 any(bvec3(true, false, false)); ivec3(67004, 32702, 27338))
                {
                 mat4 _GLF_SWITCH_4_49v[95], _GLF_SWITCH_4_50v;
                 mat3 _GLF_SWITCH_4_51v, _GLF_SWITCH_4_52v[59], _GLF_SWITCH_4_53v[56];
                 mat3x2 _GLF_SWITCH_4_54v[90], _GLF_SWITCH_4_55v;
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(int(int(5))))))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     else
                      {
                       mat3x2(0.8, atanh(5280.9868), 6.9, 3366.4638, 110.195, 6.0);
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 _GLF_SWITCH_4_24v;
                 mat2x3 _GLF_SWITCH_4_56v[60], _GLF_SWITCH_4_57v, _GLF_SWITCH_4_58v[68];
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 bvec2 _GLF_SWITCH_4_59v[58], _GLF_SWITCH_4_60v, _GLF_SWITCH_4_61v[60];
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 mat3x4 _GLF_SWITCH_4_62v[96], _GLF_SWITCH_4_63v;
                }
              }
             if((111218u < 90354u))
              {
              }
             if(true)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 mat2(6.0, 5.2, -80.16, 2018.1725);
                 (((+ 39487u) << 54114u) * GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1);
                 ivec2(-49079, 87672);
                }
               while(true);
              }
             case 17:
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             {
              if(_GLF_DEAD(false))
               barrier();
              bvec4(false, false, false, true);
              vec4 _GLF_SWITCH_4_64v, _GLF_SWITCH_4_65v;
              if(_GLF_DEAD(false))
               barrier();
              mat3x4(90.77, 5.7, -7.5, -66.15, 1.3, 1788.8550, 33.32, -3381.7156, 3.5, -3.0, 4113.7817, -8732.4530);
             }
             break;
             case 24:
             mat4x2(-3.2, -6.5, -4159.9710, -85.12, 397.317, -9.2, 4014.3775, -556.603);
             default:
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   1;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       default:
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           1;
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.y = num_workgroup;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 26:
     ;
     case 96:
     {
     }
     case 0:
     case 80:
     case 90:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     case 95:
     case 87:
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     break;
     case 98:
     for(     mat2(7.6, 822.520, 7.7, 8.5);
 (ivec2(-53621, -23960) != ivec2(70397, -85502)); mat2x3(mat4(-3.9, -5.9, -16.65, 45.44, 42.91, 3.3, 1.7, -9185.0112, -4.4, -24.88, -5.4, 3.7, -0.8, 730.913, 5340.8210, 7.9)))
      {
       for(       (bvec2(true, false) , GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1);
 all(bvec2(true, false)); bvec3(false, false, false))
        {
         while(((false ^^ false) ? false : bvec2(true, false)[0]))
          {
           bool _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[33];
          }
        }
       {
        while(true)
         {
         }
        if(false)
         {
          mat2x4 _GLF_SWITCH_7_2v, _GLF_SWITCH_7_3v[2], _GLF_SWITCH_7_4v;
          ivec3 _GLF_SWITCH_7_5v, _GLF_SWITCH_7_6v[29], _GLF_SWITCH_7_7v;
          findMSB(atomicMax(num_workgroup, subgroup_local_id));
          do
           {
            (step(-1.6, -66.59) - mat3(326.178, 7.4, 5737.0127, 7.8, -18.27, 2756.0135, -40.26, -9.6, 2913.2217));
           }
          while(_GLF_WRAPPED_LOOP(false));
          bvec3(true, bvec2(false, true));
          float _GLF_SWITCH_7_8v[3], _GLF_SWITCH_7_9v[66], _GLF_SWITCH_7_10v[70];
         }
        else
         {
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            mat3x2(-99.01, 8.1, 2.6, 516.976, -2.2, 72.74);
           }
          else
           {
           }
          bool _GLF_SWITCH_7_11v[78];
         }
        while(false)
         {
         }
        mat2 _GLF_SWITCH_7_12v, _GLF_SWITCH_7_13v[70], _GLF_SWITCH_7_14v;
       }
       for(       uvec2(124424u, 113542u);
 true; uvec3(92690u, 98202u, 155717u))
        {
         (mat2x3(-62.24, -6440.5695, -655.668, -233.199, 4999.2836, -6307.6431) / -3.1);
         while((mat3(19.67, -10.87, 296.577, -6.5, 7.1, -650.022, -994.555, -6.4, -8599.6471) != mat3(7241.2794, -612.482, 7602.1885, -1.1, -964.206, 494.111, -7.5, 7.2, -4.4)))
          {
           do
            {
             (mat2x3(-531.773, 7154.1153, 9.1, -60.59, -1.2, 0.6) / 688.695);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
           mat2x3(-59.76, 2.6, 961.998, 5.4, 76.57, 9.0);
           ivec4(-88203, -31281, -44988, 7318);
          }
         do
          {
           while((mat4x3(5.4, -2412.8315, 2965.3257, -631.894, -5578.9720, 5.5, -9997.1332, -903.288, 8.5, 8079.1437, -58.20, 7658.8348) == mat4x3(-2.8, -5.4, -93.84, 8.8, -618.941, 9.1, -5.4, 322.648, 3.3, 2444.7074, 698.880, 6.1)))
            {
             notEqual(ivec2(1932, -78123), ivec2(-28574, -44813));
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid;
              }
             GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1;
             ;
             mat3x2 _GLF_SWITCH_7_15v[86], _GLF_SWITCH_7_16v, _GLF_SWITCH_7_17v[9];
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(true)
            {
             uvec4 _GLF_SWITCH_7_18v, _GLF_SWITCH_7_19v[72], _GLF_SWITCH_7_20v;
             int _GLF_SWITCH_7_21v[81], _GLF_SWITCH_7_22v;
             ;
             ivec3 _GLF_SWITCH_7_23v;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           while((mat4x2(200.789, 2.6, -947.914, 0.2, 6113.6681, 610.220, -652.790, -2.2) != mat4x2(-303.455, -4.8, -88.22, 0.4, 9683.3021, 9400.2820, -2.4, 21.11)))
            {
             bvec2(true, false);
             vec3 _GLF_SWITCH_7_24v;
             ivec2(-19505, -36736).yyyy;
             ivec4 _GLF_SWITCH_7_25v, _GLF_SWITCH_7_26v[47];
             mat4 _GLF_SWITCH_7_27v, _GLF_SWITCH_7_28v[84];
             mat4x3 _GLF_SWITCH_7_29v[59];
             mat3(mat2x3(3.1, -26.96, -324.416, -988.160, -7055.0735, 6.3));
            }
          }
         else
          {
          }
         (mat3x2(-174.697, 63.79, -3.9, 3.1, -3145.1943, 48.56) / mat3x2(-5.0, -5623.1106, -4.1, 1.1, 4292.1536, -838.712));
         {
          ;
          mat4(mat3x2(1.8, 343.824, -2241.4756, 1.2, -7.9, 778.289));
         }
         mat2x4(47.08, -45.06, 8.4, 8.5, 8.8, -9320.1855, -32.68, -7026.2283);
        }
       vec2 _GLF_SWITCH_7_30v, _GLF_SWITCH_7_31v, _GLF_SWITCH_7_32v;
       ivec4 _GLF_SWITCH_7_33v, _GLF_SWITCH_7_34v, _GLF_SWITCH_7_35v;
       true;
       for(ivec4 _GLF_SWITCH_7_36v[32], _GLF_SWITCH_7_37v, _GLF_SWITCH_7_38v; any(bvec4(false, false, false, true)); (uvec3(130586u, 163906u, 124494u) == min(uvec3(197027u, 159428u, 88630u), GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size)))
        {
         if((mat4(8.0, 84.86, -58.06, -98.56, 8.3, 6.9, -1.9, -7.8, 4.6, -853.112, 578.958, 58.94, 7.8, -1148.0529, -895.636, 112.315) == mat4(mat3x4(2.0, -6.0, -803.205, 200.611, -3.2, -8.6, 9.7, -7.2, -88.63, -619.987, -7182.6610, -714.572))))
          {
           -787.062;
           mat3 _GLF_SWITCH_7_39v, _GLF_SWITCH_7_40v, _GLF_SWITCH_7_41v[65];
          }
         else
          {
           mat2x4(7.4, 2.7, -9702.5596, 3295.1876, -5.2, -81.86, 0.8, 3.6);
           int _GLF_SWITCH_7_42v, _GLF_SWITCH_7_43v[54], _GLF_SWITCH_7_44v;
           bvec2 _GLF_SWITCH_7_45v, _GLF_SWITCH_7_46v[97], _GLF_SWITCH_7_47v;
           mat4x3(7.1, 2.9, -5.8, -61.18, -4778.6631, -7716.7822, 7.0, -164.508, 8402.4886, 7906.2413, 45.19, -9.7);
           uvec3 _GLF_SWITCH_7_48v, _GLF_SWITCH_7_49v, _GLF_SWITCH_7_50v;
          }
         if((mat3(mat4(-44.82, -90.58, -271.651, -5564.7363, 0.0, 9.3, 1947.5860, 977.044, 947.550, -9946.8079, -82.03, 2.3, 994.475, -830.495, 76.69, -5.9)) == mat3(7.9, -47.89, 8764.8215, 561.669, -43.97, 8.0, 24.49, -3.5, -3.9)))
          {
          }
         (mat4x2(296.169, -2045.6514, -9.3, -56.84, 50.33, 4.9, -5863.9987, 319.872) / 994.911);
         for(ivec4 _GLF_SWITCH_7_51v[26]; (mat2(-4.8, -53.23, 46.45, -59.03) != mat2(-5.9, 1.5, -7.4, -0.2)); ((subgroup_local_id + (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size * uvec3(10905u, 196702u, 126924u))) << subgroup_size))
          {
           vec4(-9788.8803, 361.327, 0.5, -341.012);
           ;
           -16414;
           17382;
           ;
           mat3(mat3x4(59.32, 0.8, 4714.1543, 0.6, 3.2, 4425.4088, 41.29, 2924.4897, 7.6, 30.84, -6.9, 6.5));
          }
         mat3x4(2737.7268, -461.567, 144.836, 8.9, -9.9, -5.3, 27.59, -717.601, 8193.0613, -1734.3255, 6.6, -918.915);
         mat3(-9.8, -9.2, 5.2, 69.22, 9.0, -508.327, -4352.0643, -9916.9599, 73.09);
        }
      }
     case 64:
     ;
     default:
     do
      {
       1;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z + ((subgroup_local_id + 1) % GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z);
 GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.w = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x = GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.w;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1.w = read_1;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) / 1))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(subgroup_local_id + 1 < GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.z)
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 18:
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 29:
                   case 4:
                   case 5:
                   case 95:
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (39792 & 0)); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(int(1), int(1)))))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   case 47:
                   if(isinf(vec3(1.9, -18.54, -3.9)).b)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      else
                       {
                       }
                      if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                       {
                        switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                         {
                          case 0:
                          case 65:
                          if(_GLF_DEAD(false))
                           barrier();
                          case 1:
                          switch(_GLF_SWITCH(0))
                           {
                            case 0:
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                 }
                                else
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                   {
                                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                     }
                                    else
                                     {
                                      barrier();
                                     }
                                   }
                                  else
                                   {
                                   }
                                 }
                               }
                              else
                               {
                               }
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             {
                              do
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 0, 1)))))))
                               {
                                case 0:
                                case 56:
                                case 50:
                                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                 {
                                  if(_GLF_WRAPPED_IF_TRUE(true))
                                   {
                                    barrier();
                                   }
                                  else
                                   {
                                   }
                                 }
                                break;
                                case 67:
                                vec2(-853.694, -9792.5419);
                                if(_GLF_DEAD(false))
                                 barrier();
                                case 45:
                                do
                                 {
                                  do
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                   }
                                  while(_GLF_WRAPPED_LOOP(false));
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                                (+ mat4x3(-1.4, -1.9, -844.705, 3.5, -18.98, 416.756, 5.2, 9.7, 305.021, -1261.6857, -3077.6008, 641.878));
                                default:
                                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                 {
                                  if(_GLF_DEAD(false))
                                   barrier();
                                 }
                                do
                                 {
                                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                   {
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                      switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                       {
                                        case 17:
                                        mat4x3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                                        case 0:
                                        case 16:
                                        if(_GLF_DEAD(false))
                                         barrier();
                                        case 34:
                                        case 74:
                                        case 19:
                                        barrier();
                                        break;
                                        default:
                                        1;
                                       }
                                     }
                                    switch(_GLF_SWITCH(0))
                                     {
                                      case 52:
                                      uvec2 _GLF_SWITCH_6_0v[98], _GLF_SWITCH_6_1v;
                                      case 50:
                                      ;
                                      case 0:
                                      case 80:
                                      case 78:
                                      case 57:
                                      case 81:
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      case 17:
                                      if(_GLF_DEAD(false))
                                       barrier();
                                      case 9:
                                      case 53:
                                      case 93:
                                      1;
                                      break;
                                      case 6:
                                      (ivec2(31331, 98631) != ivec2(-21760, -11086));
                                      default:
                                      1;
                                      if(_GLF_DEAD(false))
                                       {
                                        if(_GLF_WRAPPED_IF_FALSE(false))
                                         {
                                         }
                                        else
                                         {
                                          barrier();
                                         }
                                       }
                                     }
                                   }
                                 }
                                while(_GLF_WRAPPED_LOOP(false));
                               }
                             }
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              vec4(-364.745, 0.5, 152.408, 95.14);
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                barrier();
                               }
                             }
                            else
                             {
                              for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                               {
                                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                 {
                                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                   {
                                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                     }
                                    else
                                     {
                                      barrier();
                                     }
                                   }
                                 }
                                else
                                 {
                                 }
                               }
                             }
                            bvec3(false, true, true).grrg;
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                             }
                            case 58:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                barrier();
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                if(_GLF_DEAD(false))
                                 barrier();
                                barrier();
                               }
                              do
                               {
                                for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 1 * (int(2))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
                                 {
                                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                   {
                                    if(_GLF_DEAD(false))
                                     barrier();
                                   }
                                  barrier();
                                 }
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                barrier();
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            bvec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            do
                             {
                              do
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 {
                                  if(_GLF_WRAPPED_IF_FALSE(false))
                                   {
                                   }
                                  else
                                   {
                                    barrier();
                                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                     {
                                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                       {
                                        barrier();
                                       }
                                     }
                                   }
                                 }
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(false));
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            do
                             {
                              do
                               {
                                switch(_GLF_SWITCH(0))
                                 {
                                  case 0:
                                  mat3x2(-7.0, 8.8, 18.74, -9881.3631, 26.05, -5.8);
                                  break;
                                  case 76:
                                  mat3x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[46];
                                  default:
                                  1;
                                 }
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             barrier();
                            break;
                            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                             barrier();
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_WRAPPED_IF_FALSE(false))
                               {
                               }
                              else
                               {
                                barrier();
                               }
                              for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                             }
                            case 95:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            bvec2 _GLF_SWITCH_2_0v[63], _GLF_SWITCH_2_1v;
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            default:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             {
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             }
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                barrier();
                               }
                              else
                               {
                               }
                             }
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                1;
                               }
                              else
                               {
                               }
                             }
                            do
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            barrier();
                           }
                          break;
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          case 4:
                          if(_GLF_DEAD(false))
                           barrier();
                          for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              barrier();
                             }
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          (ivec3(-96496, 61650, 78268) | -24459);
                          if(_GLF_DEAD(false))
                           barrier();
                          case 20:
                          mat3x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                          default:
                          1;
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                       }
                      else
                       {
                       }
                     }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           while(true)
                            {
                             vec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               ;
                               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             false;
                             mat2x4 _GLF_SWITCH_0_6v;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 barrier();
                                }
                              }
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 switch(_GLF_SWITCH((0 | 0)))
                                  {
                                   case 97:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[71], _GLF_SWITCH_3_2v;
                                   case 0:
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                   case 25:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   case 8:
                                   case 38:
                                   case 30:
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                                      barrier();
                                     barrier();
                                    }
                                   case 46:
                                   do
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                   case 71:
                                   case 79:
                                   case 57:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                   break;
                                   case 72:
                                   ;
                                   default:
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     1;
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                     do
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     bool _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
                     ;
                     if(_GLF_DEAD(false))
                      barrier();
                     mat3x2 _GLF_SWITCH_0_9v;
                    }
                   else
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       while((uvec2(62053u, 15996u) != uvec2(176948u, 119098u)))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           (-0.7 + mat3x4(-0.9, -3.9, 6.3, -0.2, -69.70, 5.4, 37.03, -2.6, -8.2, 8482.9072, -140.412, -957.743));
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         do
                          {
                           ;
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           do
                            {
                             false;
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         uvec4(59270u, 2201u, 185361u, 72123u);
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             bvec4(bvec2(true, true), bvec2(true, true));
                            }
                           else
                            {
                            }
                          }
                         mat4x2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v[72];
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         ;
                         for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), int(ivec3(int(3), 0, 0))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                {
                                 case 86:
                                 bvec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                  barrier();
                                 case 0:
                                 case 46:
                                 case 34:
                                 case 2:
                                 case 27:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 case 78:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                      }
                                    }
                                  }
                                 else
                                  {
                                  }
                                 case 98:
                                 case 7:
                                 case 30:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 85:
                                 barrier();
                                 break;
                                 default:
                                 1;
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             else
                              {
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           barrier();
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           ivec3(-32872, 52394, 26433);
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     for(ivec2 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v[44]; (mat3(842.692, 3.0, -358.689, -2.8, 4.6, -1935.2575, 58.64, -80.40, -5.9) == mat3(-4146.7228, -43.39, 100.569, 712.084, 81.64, 223.428, 0.7, -34.60, -0.4)); mat3x4(-513.976, -8.5, 2.5, 2574.3188, -1863.1016, -16.86, 1.1, 1.8, 9.9, 4.8, -3.0, 9.7))
                      {
                       bvec4(lessThan(_GLF_SWITCH_0_12v, ivec2(96405, 7069)), true, true);
                       notEqual(vec3(3.4, 69.95, 990.699), vec3(-174.052, -9.0, 705.809));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         (0.7 + mat3x4(588.337, -368.698, -8.0, 2.2, 60.59, 9.3, -6025.7544, -4.7, 9.5, -4.6, -6.6, 0.6));
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false))))))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (-59456 & 0)); _injected_loop_counter --)
                          {
                           barrier();
                          }
                        }
                       findMSB(virtual_gid);
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                             if(_GLF_DEAD(false))
                              {
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                            }
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        barrier();
                       mat2 _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
                       if(_GLF_DEAD(false))
                        barrier();
                       ;
                       uvec2 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1)))))); _injected_loop_counter ++)
                        {
                         switch(_GLF_SWITCH((0 & (58597 & -83799))))
                          {
                           case 67:
                           read_1;
                           if(_GLF_DEAD(false))
                            barrier();
                           case 29:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             findMSB(mix(_injected_loop_counter, _injected_loop_counter, false));
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                            }
                           case 0:
                           case 54:
                           ;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           default:
                           1;
                          }
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         exp(2038.8505);
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     bool _GLF_SWITCH_0_19v, _GLF_SWITCH_0_20v[75], _GLF_SWITCH_0_21v;
                     while(_GLF_SWITCH_0_19v)
                      {
                      }
                     bitfieldReverse(subgroup_local_id);
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
                            barrier();
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     bvec4(true, false, true, false);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 60:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               8.7;
                              }
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           else
                            {
                            }
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           case 63:
                           if(_GLF_DEAD(false))
                            barrier();
                           mat4x2 _GLF_SWITCH_5_0v[31];
                           case 0:
                           case 55:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           break;
                           case 32:
                           uvec4(171807u, 66923u, 99289u, 131352u);
                           default:
                           1;
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      mat4x2 _GLF_SWITCH_0_22v;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          barrier();
                         }
                        else
                         {
                         }
                       }
                      injectionSwitch;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          do
                           {
                            barrier();
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      ;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        ;
                       }
                      for(int _injected_loop_counter = (((1 & 1) | 0) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      bool _GLF_SWITCH_0_23v[6], _GLF_SWITCH_0_24v;
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 91:
                          ;
                          case 16:
                          (bvec4(true, true, true, false) == bvec4(true, true, false, true));
                          case 0:
                          case 77:
                          case 11:
                          case 60:
                          if(_GLF_DEAD(false))
                           {
                            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                             {
                              case 0:
                              case 62:
                              case 74:
                              case 11:
                              case 6:
                              case 89:
                              case 98:
                              case 18:
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                               {
                                switch(_GLF_SWITCH((int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)))
                                 {
                                  case 0:
                                  if(_GLF_DEAD(false))
                                   barrier();
                                  break;
                                  case 48:
                                  mat3x2(vec2(-0.2, 960.967), injectionSwitch, vec2(-5814.6224, -5.0));
                                  case 13:
                                  _GLF_SWITCH_0_22v;
                                  default:
                                  1;
                                 }
                               }
                              else
                               {
                               }
                              barrier();
                              if(_GLF_DEAD(false))
                               barrier();
                              break;
                              case 42:
                              mat4x3(-3100.9831, 7.8, -8813.6210, -75.54, 56.09, 8.6, -31.63, 25.25, -0.8, 8.3, 273.912, 5.7);
                              case 81:
                              vec3 _GLF_SWITCH_7_0v[4];
                              default:
                              1;
                             }
                           }
                          case 55:
                          case 42:
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          else
                           {
                           }
                          case 32:
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            equal(vec4(-1.8, 2878.4987, 0.7, -2262.8838), vec4(27.98, -714.205, -9.3, -9.3));
                           }
                          else
                           {
                           }
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 0:
                              case 12:
                              case 92:
                              case 41:
                              case 8:
                              case 79:
                              case 9:
                              case 46:
                              if(_GLF_DEAD(false))
                               barrier();
                              break;
                              case 28:
                              GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size;
                              default:
                              1;
                             }
                           }
                          break;
                          case 30:
                          mat3x2(3.4, -2.1, -2155.9393, -6700.9006, -9.6, -18.40);
                          case 69:
                          ivec4(-62831, 74855, -61195, 43752);
                          default:
                          1;
                         }
                       }
                     }
                     if((uvec2(84897u, 150043u) == uvec2(7426u, 188466u)))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       ivec3(-21256, -71028, 7387);
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                       uint _GLF_SWITCH_0_25v[66], _GLF_SWITCH_0_26v[42];
                      }
                     else
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                          }
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (61861 & 0)); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       ivec3 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v[29];
                       mat2x3 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                          barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       do
                        {
                         ;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                        }
                       mat3x4 _GLF_SWITCH_0_31v[61], _GLF_SWITCH_0_32v[18], _GLF_SWITCH_0_33v;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         (ivec3(23937, 5464, 17314) ^ ivec3(-56605, -84169, 39869));
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 35:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 34:
                           case 25:
                           barrier();
                           break;
                           case 99:
                           ((-7713.4528 - mat2x4(761.190, 156.683, -514.674, -4757.6208, 5.2, -5426.8909, 684.973, -2.7)));
                           case 16:
                           uvec4(153722u, 137046u, 147890u, 64330u);
                           default:
                           1;
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       ivec4 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
                       ;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         else
                          {
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   break;
                   case 32:
                   ;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             case 14:
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4(49.21, 3.0, 38.59, 9140.5840, -83.28, -137.001, -3.3, 7.4, -3.2, -11.36, 88.95, -8363.2992, 7119.7915, 9386.3255, 5770.1306, 39.56);
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             case 0:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = (((0 >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(1), int(1))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       switch(_GLF_SWITCH((-92869 & 0)))
                        {
                         case 0:
                         case 45:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 74:
                         case 51:
                         case 52:
                         case 35:
                         case 83:
                         case 79:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                         break;
                         case 38:
                         mat3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                         default:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         1;
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             case 26:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             case 67:
             int i = 0;
             atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x], uint(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1.w == read_2) + 1, 4, 64, 4);
             break;
             case 10:
             if(true)
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               switch(_GLF_SWITCH(((-73269 & int(123189u)) & 0)))
                {
                 case 41:
                 ivec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                 case 0:
                 case 86:
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 9:
                 do
                  {
                   greaterThan(ivec2(-5802, 76838), ivec2(-82423, 34255));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -72813)); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 bvec2(true, false);
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 64:
                       read_1;
                       case 48:
                       notEqual(bvec4(true, false, true, false), bvec4(true, false, true, true));
                       case 0:
                       injectionSwitch;
                       case 55:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                       break;
                       case 78:
                       uvec3 _GLF_SWITCH_7_0v;
                       default:
                       1;
                      }
                    }
                  }
                 if((uvec3(64036u, 193941u, 29887u) == uvec3(157432u, 168371u, 103420u)))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   (ivec2(-60519, 81235) & (ivec2(-35764, 34665) | ivec2(-17632, 93285)));
                   bvec4(false, false, (ivec4(63497, 59112, 33769, 28178) != (ivec4(53666, 25102, 92100, 46337) / ivec4(99508, 14948, -54203, -89940))), false);
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   ivec3 _GLF_SWITCH_0_36v, _GLF_SWITCH_0_37v;
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 68:
                       injectionSwitch;
                       case 0:
                       case 28:
                       case 80:
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             barrier();
                            }
                          }
                        }
                       case 78:
                       case 73:
                       case 8:
                       case 62:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       break;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   (+ mat4x3(-10.53, 0.8, -261.824, -5.7, -1.3, 519.725, 3.2, 7.9, 7720.3647, -2876.2995, -6.6, -2497.4050));
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -42906)); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(false)
                    {
                     vec3 _GLF_SWITCH_0_38v;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                        {
                         (mat4x3(-1523.1358, -571.368, 871.720, -636.933, 3.8, 6853.6697, -9.1, 7.2, -6.5, 8.5, 7.1, 134.721) / mat4x3(13.17, -9.1, 5.8, -347.309, 62.57, 5.4, 96.95, -997.502, 989.856, 119.430, 90.64, 3.1));
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       do
                        {
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     do
                      {
                       do
                        {
                         for(int _injected_loop_counter = _GLF_IDENTITY((1 & int(_GLF_ONE(1.0, injectionSwitch.y))), max((1 & int(_GLF_ONE(1.0, injectionSwitch.y))), (1 & int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            {
                             switch(_GLF_SWITCH((0 ^ 0)))
                              {
                               case 0:
                               case 2:
                               do
                                {
                                 barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 19:
                               mat4x2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                               case 47:
                               ivec4 _GLF_SWITCH_7_3v[76];
                               default:
                               do
                                {
                                 1;
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           barrier();
                          }
                        }
                      }
                     else
                      {
                      }
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(i) : int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                            {
                             switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
                              {
                               case 0:
                               case 21:
                               case 14:
                               case 97:
                               case 50:
                               case 92:
                               case 89:
                               case 32:
                               case 4:
                               case 56:
                               switch(_GLF_SWITCH(0))
                                {
                                 case 96:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   (mix(40832, -13376, true) < _injected_loop_counter);
                                  }
                                 else
                                  {
                                  }
                                 case 0:
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     transpose(mat4x3(0.6, 2818.0618, -873.263, 801.987, 7263.7922, 3.9, -2.4, 222.693, -9266.6126, -50.25, 5.6, -7.2));
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                 break;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 default:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 1;
                                }
                               break;
                               default:
                               do
                                {
                                 1;
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     mat4(-4253.8529, -39.63, -168.035, -7690.9147, 676.291, 252.980, -490.607, -9.0, 1337.8163, 938.214, 8.7, 7.2, -5274.9382, -21.69, -48.41, -29.12);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       barrier();
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (_GLF_IDENTITY(~ (int(5)), (false ? _GLF_FUZZED(i) : ~ (int(5)))))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         barrier();
                        }
                      }
                     greaterThan(uvec2(128850u, 185571u), bitfieldInsert(uvec2(177852u, 174002u), uvec2(73127u, 30085u), i, -57389));
                     ;
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
                      {
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               barrier();
                              }
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       barrier();
                      }
                     uint _GLF_SWITCH_0_39v[84], _GLF_SWITCH_0_40v;
                     vec4 _GLF_SWITCH_0_41v[61], _GLF_SWITCH_0_42v, _GLF_SWITCH_0_43v;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             barrier();
                            }
                           else
                            {
                            }
                          }
                         switch(_GLF_SWITCH(0))
                          {
                           case 81:
                           pow(vec2(-4.4, 5920.5850), vec2(7569.6373, -8.7));
                           case 0:
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           case 41:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 12:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 25:
                           case 28:
                           case 46:
                           if(_GLF_DEAD(false))
                            {
                             do
                              {
                               barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           case 47:
                           case 95:
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                           break;
                           case 29:
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             num_workgroup;
                            }
                           default:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             1;
                            }
                           else
                            {
                            }
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       (GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x + uvec2(156464u, 66810u));
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (-90313 & 0)); _injected_loop_counter --)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           barrier();
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 | 0))); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  barrier();
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
                        barrier();
                      }
                     else
                      {
                       barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))));
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                  }
                 case 17:
                 if(_GLF_DEAD(false))
                  barrier();
                 findMSB(ivec3(-8920, -28518, 96496));
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 bvec3(false, false, false);
                 case 92:
                 for(bvec4 _GLF_SWITCH_0_44v; (bvec3(false, false, true) == bvec3(false, false, true)); bvec3(true, true, false))
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                    {
                     case 38:
                     if(_GLF_DEAD(false))
                      barrier();
                     mat4(-66.44, -556.161, -414.087, -1117.4731, -2096.6221, -44.04, 4.0, 6.4, 7031.4007, 5891.7725, -7.8, 1423.0786, 210.555, 9625.0875, 6.7, -37.94);
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     case 0:
                     case 45:
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 >> _GLF_IDENTITY(int(1), int(1))))); _injected_loop_counter --)
                      {
                       vec3(697.187, 683.769, -37.17);
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     vec2(-8.3, -0.7);
                     case 85:
                     if(_GLF_DEAD(false))
                      barrier();
                     ;
                     vec2 _GLF_SWITCH_0_45v;
                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                      {
                       uvec2(95682u, 132054u);
                      }
                     uvec2 _GLF_SWITCH_0_46v;
                     case 76:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0)))))
                          {
                           case 59:
                           ;
                           case 11:
                           vec3(3592.2428);
                           case 0:
                           case 61:
                           case 48:
                           ivec3(-3728, -24280, -55350);
                           break;
                           default:
                           1;
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                     break;
                     case 20:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                      }
                     else
                      {
                      }
                     true;
                     case 43:
                     mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v;
                     default:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 19:
                           case 5:
                           barrier();
                           break;
                           case 45:
                           injectionSwitch;
                           case 11:
                           do
                            {
                             mat2(-6.9, -40.76, 9340.7837, 9118.6752);
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           default:
                           1;
                          }
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       1;
                      }
                     else
                      {
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 64:
                     ;
                     case 51:
                     mat4x3 _GLF_SWITCH_7_0v[78], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[20];
                     case 0:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 4:
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                     break;
                     case 63:
                     mat4x2(-5.1, 514.256, 4.5, 80.55, -8.0, -2.1, 5974.6615, 406.204);
                     default:
                     1;
                    }
                  }
                 break;
                 case 2:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   ivec3(62624, -45182, -69072);
                  }
                 default:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   1;
                  }
                 else
                  {
                  }
                }
              }
             case 38:
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(bvec3(false, false, false)[2])
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 46:
                   mat4x2(10.51, 49.01, -6.7, -7236.7047, 484.852, -23.37, 470.240, -2.6);
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 69:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   uvec2(192582u, 15027u);
                   case 0:
                   case 44:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     ;
                    }
                   case 4:
                   (false ? matrixCompMult(mat3(-2.8, 6561.7164, -130.894, 1818.5482, -730.322, 7.9, 1.7, 8667.9398, -9.3), mat3(-3.8, 40.90, 1.7, 0.2, -7.5, 9095.6270, -0.2, 2.8, -6.3)) : mat3(7616.8744, 0.3, 743.967, 91.56, 5.9, 5.0, 323.860, 133.473, 248.799));
                   for(int _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v; bool(subgroup_local_id); mat3x2(cos(-31.23)))
                    {
                     switch(_GLF_SWITCH((0 & 47709)))
                      {
                       case 11:
                       mat4(2790.1124, -8.9, 9818.6759, 155.419, 6584.5343, 214.814, -6.3, 3.7, 35.24, 2387.4203, -0.4, -3347.1641, -86.11, 6.6, -2210.1006, -7.2);
                       if(_GLF_DEAD(false))
                        barrier();
                       case 0:
                       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(i) : int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 93:
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       mat2x4 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v[25];
                       ;
                       break;
                       if(_GLF_DEAD(false))
                        barrier();
                       case 32:
                       subgroup_local_id;
                       case 75:
                       do
                        {
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       2.6;
                       default:
                       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           1;
                          }
                        }
                      }
                    }
                   break;
                   default:
                   1;
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             default:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             1;
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
             else
              {
              }
             case 88:
             case 1:
             case 19:
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             case 25:
             case 70:
             case 81:
             case 20:
             case 53:
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 62:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 53:
               case 84:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               case 74:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               case 79:
               case 44:
               switch(_GLF_SWITCH(0))
                {
                 case 79:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 for(                 bvec2((uvec3(22664u, 56632u, 16630u) != uvec3(16371u, 170948u, 33853u)), false);
 true; mat2x3(6.0, 735.393, -62.50, -610.829, -9.5, 4.7))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 1:
                     mat2x4 _GLF_SWITCH_3_0v[92], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                     if(_GLF_DEAD(false))
                      barrier();
                     case 0:
                     case 53:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 82:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     case 11:
                     case 52:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                      }
                     case 17:
                     case 2:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       ;
                      }
                     else
                      {
                      }
                     case 59:
                     case 67:
                     ((mat2x3(-5.1, -3.7, -8881.7417, 7.5, -9.3, 9938.2114) == mat2x3(9.4, 3.9, 270.100, 95.28, 3.2, 441.786)) ? mix(injectionSwitch, injectionSwitch, bvec2(true, true)) : injectionSwitch);
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     if((ivec4(10543, -55218, 92516, -98012) != ivec4(37324, 35925, 96904, -19001)))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 40:
                               vec3 _GLF_SWITCH_7_0v[23], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                               case 34:
                               vec2 _GLF_SWITCH_7_3v;
                               case 0:
                               case 99:
                               case 69:
                               case 94:
                               case 11:
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   barrier();
                                  }
                                 else
                                  {
                                  }
                                }
                               break;
                               case 64:
                               int _GLF_SWITCH_7_4v, _GLF_SWITCH_7_5v;
                               default:
                               1;
                              }
                            }
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       vec3(468.028, 0.9, 15.67);
                       ivec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[87], _GLF_SWITCH_1_2v;
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         else
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               case 13:
                               case 1:
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               else
                                {
                                }
                               do
                                {
                                 switch(_GLF_SWITCH((0 & int(true))))
                                  {
                                   case 0:
                                   case 97:
                                   case 13:
                                   case 35:
                                   case 71:
                                   case 17:
                                   case 19:
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 46:
                                     ;
                                     case 0:
                                     case 11:
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                     break;
                                     case 16:
                                     bvec3(true, false, false);
                                     default:
                                     1;
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                    }
                                   break;
                                   case 82:
                                   mat3x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               break;
                               case 29:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 63:
                                   vec3 _GLF_SWITCH_7_0v;
                                   case 37:
                                   mat2x3 _GLF_SWITCH_7_1v[60], _GLF_SWITCH_7_2v;
                                   case 0:
                                   case 87:
                                   case 80:
                                   case 56:
                                   case 85:
                                   case 77:
                                   case 26:
                                   case 67:
                                   case 65:
                                   case 17:
                                   _GLF_SWITCH_3_1v;
                                   break;
                                   default:
                                   1;
                                  }
                                }
                               case 58:
                               mat3x4(-6.0, -3045.6409, -778.303, -8.4, 4.1, 7873.3536, -498.607, 301.940, -457.309, 43.65, -61.50, -37.42);
                               default:
                               1;
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       uvec4 _GLF_SWITCH_1_3v[68], _GLF_SWITCH_1_4v, _GLF_SWITCH_1_5v;
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       barrier();
                      }
                     break;
                     default:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     1;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 case 0:
                 case 39:
                 case 53:
                 case 12:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 10:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 case 6:
                 case 85:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         barrier();
                        }
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 case 43:
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), 0 + (int(8)))))); _injected_loop_counter --)
                  {
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 0), (false ? _GLF_FUZZED(-47897) : (0 ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       barrier();
                      }
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                 do
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       do
                        {
                         atomicStore(buf[GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid.xyz.x], uint(GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1.w == read_2) + 1, 4, 64, 4);
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     else
                      {
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | 0)); _injected_loop_counter ++)
                    {
                     do
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                        }
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   do
                    {
                     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0)))))
                      {
                       case 58:
                       mat3x4 _GLF_SWITCH_7_0v[88];
                       case 0:
                       case 44:
                       case 85:
                       case 35:
                       case 62:
                       case 48:
                       case 79:
                       case 25:
                       case 72:
                       if(_GLF_DEAD(false))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 64:
                           ;
                           case 0:
                           case 31:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 43:
                           case 24:
                           case 13:
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               barrier();
                              }
                             else
                              {
                              }
                            }
                           do
                            {
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               barrier();
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           break;
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           case 68:
                           ;
                           default:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           1;
                          }
                        }
                       break;
                       default:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         1;
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 1;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               break;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               case 21:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 7:
                   if(_GLF_DEAD(false))
                    barrier();
                   bvec2 _GLF_SWITCH_5_0v[95], _GLF_SWITCH_5_1v;
                   case 0:
                   case 18:
                   case 93:
                   case 6:
                   case 4:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 25:
                   case 59:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   case 57:
                   case 69:
                   case 32:
                   for(                   (ivec3(-69539, 4228, -68513) ^ -82683);
 true; mat2(mat4x2(-9.5, -50.84, 14.17, -85.73, -4.5, 8.7, 4772.2421, -4.1)))
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 0:
                       case 56:
                       case 18:
                       case 37:
                       case 81:
                       case 35:
                       case 77:
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           do
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 1:
                               case 86:
                               if(_GLF_DEAD(false))
                                barrier();
                               case 27:
                               case 81:
                               do
                                {
                                 do
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               break;
                               default:
                               1;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
                          }
                        }
                       else
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           case 16:
                           case 93:
                           case 24:
                           case 50:
                           case 52:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 53:
                           case 47:
                           case 81:
                           case 28:
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           mat2x4(-4.1, -15.13, -240.026, 993.895, 3965.3355, -5.8, 8.1, 416.382);
                           break;
                           if(_GLF_DEAD(false))
                            barrier();
                           default:
                           if(_GLF_DEAD(false))
                            barrier();
                           1;
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       break;
                       case 99:
                       bvec3(true, false, true);
                       case 62:
                       floatBitsToInt(vec2(0.3, 6.4));
                       default:
                       1;
                      }
                    }
                   break;
                   case 87:
                   do
                    {
                     25738;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   case 12:
                   mat4 _GLF_SWITCH_5_2v;
                   default:
                   1;
                  }
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               case 38:
               ivec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[79];
               default:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 1;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             break;
             case 46:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 for(uvec3 _GLF_SWITCH_4_0v[9], _GLF_SWITCH_4_1v; (mat2x3(7406.4333, 2.5, -3535.6649, 0.7, -6.1, -4496.7631) != mat2x3(7.1, -2.9, -26.01, -91.68, -20.74, -5.4)); false)
                  {
                   int _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v;
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   do
                    {
                     vec4(-8.0, -1425.9292, 6664.6218, -8.5);
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   GLF_merged2_0_3_74_3_1_16GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizenext_virtual_gid;
                   true;
                   int _GLF_SWITCH_4_4v, _GLF_SWITCH_4_5v[93];
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 8:
                         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) >> 0)))); _injected_loop_counter --)
                          {
                           injectionSwitch;
                          }
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 91:
                         case 37:
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         default:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                   bvec3 _GLF_SWITCH_4_6v[48];
                   bvec3 _GLF_SWITCH_4_7v[10], _GLF_SWITCH_4_8v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             case 98:
             outerProduct(injectionSwitch, vec2(-271.724, 7200.0595));
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1))) ^ 1)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) >> 0)))))
        {
         case 50:
         if(true)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             ivec2(99330, 39294);
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           vec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
           do
            {
             ivec4(97626, -28883, -68276, 24663);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           mat3x4(9912.1507, -99.59, -256.201, -6.5, -400.432, -6.9, -7284.9073, 5697.1110, 0.0, 61.50, 9.6, -9233.1057);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             mat3x2(mat3(234.159, -8263.5934, 1128.3538, 64.08, 386.374, 3.7, -7842.2341, 6770.8771, -2.6));
             (workgroup_size & uvec2(78966u, 123434u));
             mat4x3 _GLF_SWITCH_6_2v;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if((subgroup_local_id < GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_size.p))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) >> 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               GLF_merged2_0_3_74_3_1_6GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_sizeread_1.xy;
              }
            }
           vec2 _GLF_SWITCH_6_3v;
          }
         case 0:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         case 81:
         case 60:
         case 52:
         case 59:
         switch(_GLF_SWITCH(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(-28371)))))
          {
           case 0:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 57:
           case 21:
           case 68:
           case 53:
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           case 66:
           case 81:
           case 58:
           case 92:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           break;
           case 11:
           do
            {
             vec4(-209.030, 13.72, -783.546, 6.7);
            }
           while(_GLF_WRAPPED_LOOP(false));
           case 55:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat4x3(-450.425);
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           default:
           1;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         default:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           1;
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}
