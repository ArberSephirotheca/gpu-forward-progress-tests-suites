#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(max(int(6), int(6)), (true ? max(int(6), int(6)) : _GLF_FUZZED(_injected_loop_counter))))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((87968 & 0), max(_GLF_IDENTITY((87968 & 0), 1 * ((87968 & 0))), (87968 & 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true))))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)), false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (true)), false)))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), false || (_GLF_IDENTITY(true && (true), (true && _GLF_IDENTITY((true), ((true)) || false)) && true)))), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_IDENTITY(true, true && (true)), false)))))), false, false)))))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
          }
        }
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, 0 ^ (4))))), (int(4)) - 0))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(int(4), min(int(4), int(4))))), _GLF_IDENTITY(int(ivec3(~ (~ (_GLF_IDENTITY(int(4), min(int(4), int(4))))), 0, 0)), (int(ivec3(~ (~ (_GLF_IDENTITY(int(4), min(int(4), int(4))))), 0, _GLF_IDENTITY(0, (0) | (0))))) * 1)))) ^ (0 ^ 0))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)))))) && true), false, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)))))) && true), false, true, true)), (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true))))), ((! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)))))) && true), false, true, true))) || false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))) && true))))), false, true))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
    }
   else
    {
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec2(_GLF_WRAPPED_LOOP(false), false))));
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, true))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), ((! (true))) || false)) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), true)))))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))), false, false), bvec3(bvec3(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))), false, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (false))))), false, false), bvec3(bvec3(bvec3(bool(bvec3(true, false, _GLF_IDENTITY(false, ! (! (false))))), false, false)))))))))))))))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
     else
      {
      }
    }
  }
 else
  {
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) / 1u);
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(569.584, max(_GLF_IDENTITY(569.584, min(569.584, 569.584)), 569.584))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(714.271)), bool(false))))) - 0.0) > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, ~ (~ (workgroup_base + subgroup_id * subgroup_size)))) - 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec2(workgroup_base, uint(_GLF_ONE(1.0, injectionSwitch.y))))))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ((0u ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))) << _GLF_IDENTITY(uint(7u), uint(7u))) | (virtual_gid))], 0u + (buf[_GLF_IDENTITY(virtual_gid, ((0u ^ _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, max(0u, 0u))))) << _GLF_IDENTITY(uint(7u), uint(7u))) | (virtual_gid))])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)), (_GLF_IDENTITY(0, 1 * (0))) | (7422 & 0)) ^ (int(ivec2(1, 1))))) < subgroup_size)
    {
     switch(_GLF_SWITCH(0))
      {
       case 15:
       mat4x3(mat3x4(-6403.6131, 460.383, -3.1, -9087.4661, -4927.5384, -5.9, -3.1, 8.4, 8.5, -714.676, -9.6, 8.3));
       if(_GLF_DEAD(false))
        return;
       case 78:
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(5600) : int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), ~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), clamp(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1))))))))), 0 + ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), ~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), clamp(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1), ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))), 0 + ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) | (0 >> _GLF_IDENTITY(int(6), int(6))))))), 0, 1, 1)))))))))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), ! (! (bool(bvec2(! (true), false)))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, true, true)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            {
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
              {
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) / 1)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (1 | (0 << _GLF_IDENTITY(int(1), int(1)))), true && (_injected_loop_counter != (_GLF_IDENTITY(1 | (0 << _GLF_IDENTITY(int(1), int(1))), min(1 | (0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(1 | (0 << _GLF_IDENTITY(int(1), int(1))), (true ? 1 | (0 << _GLF_IDENTITY(int(1), int(1))) : _GLF_FUZZED(_injected_loop_counter))))))))); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                }
              }
             else
              {
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])).x > injectionSwitch.y))))))
                {
                 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((~ (_injected_loop_counter)), ((~ (_injected_loop_counter))) | ((~ (_injected_loop_counter))))) > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(any(bvec4(false, true, true, false)))
                {
                 ;
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  bool _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v[25];
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
                     {
                      do
                       {
                        return;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  mat4 _GLF_SWITCH_0_3v[66], _GLF_SWITCH_0_4v;
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      mat4x3(-5.0, -5.8, -73.01, 350.337, -530.189, 67.59, _GLF_IDENTITY(-6.7, (_GLF_IDENTITY(-6.7, mix(float(_GLF_FUZZED(-1.2)), float(-6.7), bool(true)))) - 0.0), -8.5, -8251.4550, -9094.8222, -113.212, _GLF_IDENTITY(-4.8, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -4.8 : _GLF_FUZZED(atanh(acosh(-2.9)))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -4.8 : _GLF_FUZZED(atanh(acosh(-2.9)))), float(mat2(_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -4.8 : _GLF_FUZZED(atanh(acosh(-2.9)))), (false ? _GLF_FUZZED(2.9) : (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -4.8 : _GLF_FUZZED(atanh(acosh(-2.9)))))), 1.0, 0.0, 0.0)))) / 1.0)));
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      return;
                      if(_GLF_DEAD(false))
                       break;
                     }
                    else
                     {
                     }
                   }
                  if(_GLF_DEAD(false))
                   break;
                  for(int _injected_loop_counter = ((_GLF_IDENTITY(1 ^ 1, clamp(1 ^ 1, 1 ^ 1, 1 ^ 1))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((int(3)), _GLF_IDENTITY(0 + ((_GLF_IDENTITY(int(3), (int(3)) | (int(3))))), _GLF_IDENTITY(clamp(0 + ((int(3))), 0 + ((int(3))), _GLF_IDENTITY(0 + ((int(3))), ~ (~ (0 + ((int(3))))))), (clamp(0 + ((int(3))), 0 + ((int(3))), _GLF_IDENTITY(0 + ((int(3))), ~ (~ (0 + ((int(3)))))))) << 0))) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    mat2x3(-0.7, -95.39, 5.6, -8176.4915, 6.9, 7.8);
                   }
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    mat4x2(mat2(-72.43, _GLF_IDENTITY(_GLF_IDENTITY(74.49, (74.49) / 1.0), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(74.49, (74.49) / 1.0), (false ? _GLF_FUZZED(-252.968) : _GLF_IDENTITY(74.49, (74.49) / 1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 62.03, -2106.6090));
                    if(_GLF_DEAD(false))
                     return;
                   }
                  mat2(36.26, -329.096, 8.9, -3.0);
                  ivec3 _GLF_SWITCH_0_5v;
                  uvec3((subgroup_local_id / uvec4(77081u, _GLF_IDENTITY(22508u, _GLF_IDENTITY(0u, (0u) ^ 0u) ^ (22508u)), 142316u, 30764u)));
                  if(_GLF_DEAD(false))
                   return;
                 }
                 mat3 _GLF_SWITCH_0_6v;
                 mat3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                }
               else
                {
                 ;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   bvec2(true, false);
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     ;
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     (mat3x2(8358.6891, -9.6, 589.404, _GLF_IDENTITY(-8.3, clamp(-8.3, _GLF_IDENTITY(-8.3, max(_GLF_IDENTITY(-8.3, (-8.3) * 1.0), -8.3)), -8.3)), 939.564, 5386.3963) , bvec3(true, true, true));
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
                          return;
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
                          {
                           if(_GLF_DEAD(false))
                            return;
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                        }
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.4)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.5, -41.43)))).y))))
                      {
                      }
                     else
                      {
                       mat4x3(_GLF_IDENTITY(461.301, min(_GLF_IDENTITY(461.301, clamp(_GLF_IDENTITY(461.301, clamp(461.301, 461.301, 461.301)), 461.301, _GLF_IDENTITY(461.301, 0.0 + (461.301)))), 461.301)), 3523.3554, _GLF_IDENTITY(_GLF_IDENTITY(-27.57, _GLF_IDENTITY(clamp(-27.57, _GLF_IDENTITY(-27.57, clamp(-27.57, _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(-27.57, float(_GLF_IDENTITY(mat4x3(-27.57, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, cos(0.0), 1.0, 0.0), (_GLF_IDENTITY(mat4x3(-27.57, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, cos(0.0), 1.0, 0.0), mat4x3(mat4x3(mat4x3(-27.57, 1.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, cos(0.0), 1.0, 0.0))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0 + (-27.57)))), -27.57), clamp(_GLF_IDENTITY(clamp(-27.57, _GLF_IDENTITY(-27.57, clamp(-27.57, _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(-27.57, min(-27.57, _GLF_IDENTITY(-27.57, float(mat2(-27.57, 1.0, 1.0, 0.0))))), 0.0 + (-27.57)))), -27.57), min(clamp(-27.57, _GLF_IDENTITY(-27.57, clamp(-27.57, _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), _GLF_IDENTITY(-27.57, 0.0 + (-27.57)))), -27.57), clamp(-27.57, _GLF_IDENTITY(-27.57, clamp(-27.57, _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), _GLF_IDENTITY(-27.57, 0.0 + (-27.57)))), -27.57))), clamp(-27.57, _GLF_IDENTITY(_GLF_IDENTITY(-27.57, round(length(normalize(1.0))) * (-27.57)), clamp(-27.57, _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), _GLF_IDENTITY(-27.57, 0.0 + (-27.57)))), -27.57), clamp(-27.57, _GLF_IDENTITY(-27.57, clamp(-27.57, _GLF_IDENTITY(_GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), clamp(_GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))), (false ? _GLF_FUZZED(-410.590) : _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))))), _GLF_IDENTITY(-27.57, mix(float(_GLF_FUZZED(-7.4)), float(-27.57), bool(true))))), _GLF_IDENTITY(-27.57, 0.0 + (-27.57)))), -27.57)))), 0.0 + (-27.57)), -5.5, -6.0, -7032.5126, -7.0, 28.25, _GLF_IDENTITY(0.9, (0.9) / _GLF_IDENTITY(abs(1.0), min(abs(1.0), _GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-2.0)), float(1.0), bool(true)), (mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.0), clamp(_GLF_FUZZED(-2.0), _GLF_FUZZED(-2.0), _GLF_IDENTITY(_GLF_FUZZED(-2.0), (_GLF_FUZZED(-2.0)) / 1.0)))), float(1.0), bool(true))) - sin(0.0)))), clamp(abs(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0))), abs(1.0), _GLF_IDENTITY(abs(1.0), (_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0)))) * 1.0)))))), -74.95, _GLF_IDENTITY(-7.5, max(-7.5, -7.5)), 553.221);
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       ;
                       if(_GLF_DEAD(false))
                        continue;
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                   mat4 _GLF_SWITCH_0_10v;
                   mat3x4(-8464.0824, -7.4, -643.136, -97.20, 271.443, -3.1, 9.5, 98.77, 629.655, -9101.5200, 3.8, _GLF_IDENTITY(-5022.4855, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, sin(0.0), 0.0)), float(mat3x2(float(vec4(1.0, 1.0, sin(0.0), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 1.0, sin(0.0), 0.0)), float(mat3x2(float(vec4(1.0, 1.0, sin(0.0), 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0)))))) * (-5022.4855)));
                   mat2x4 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   true;
                  }
                 mat3 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v[71];
                }
              }
             for(int _injected_loop_counter = (((0 | 0) | 0) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) / 1)) + 0)); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   while((mat2x4(-502.143, -6.9, -1.9, -777.044, 3991.9191, _GLF_IDENTITY(866.958, (_GLF_IDENTITY(866.958, float(mat2(866.958, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)))) * 1.0), 4088.5774, -537.895) != mat2x4(acosh(_GLF_IDENTITY(6359.9713, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(6359.9713, (6359.9713) + 0.0), 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), 1.0, 0.0), _GLF_IDENTITY(mat2x4(mat4(mat2x4(_GLF_IDENTITY(6359.9713, (6359.9713) + 0.0), 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (mat2x4(mat4(mat2x4(_GLF_IDENTITY(6359.9713, (6359.9713) + 0.0), 0.0, exp(0.0), _GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, abs(1.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-6.6) : 1.0))) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), sqrt(_GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0))), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), (float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(6359.9713, (6359.9713) + 0.0), 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), _GLF_IDENTITY(mat2x4(mat4(mat2x4(_GLF_IDENTITY(6359.9713, (6359.9713) + 0.0), 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))), (mat2x4(mat4(mat2x4(_GLF_IDENTITY(6359.9713, (6359.9713) + 0.0), 0.0, exp(0.0), 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0))), 784.187, -9.0, log(-818.820), _GLF_IDENTITY(vec3(_GLF_IDENTITY(-6.9, (-6.9) * 1.0), _GLF_IDENTITY(8.9, (8.9) + sin(0.0)), 1.7).y, mix(float(_GLF_FUZZED(910.372)), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-6.9, (-6.9) * 1.0), _GLF_IDENTITY(8.9, (8.9) + sin(0.0)), 1.7).y, clamp(vec3(_GLF_IDENTITY(-6.9, (-6.9) * 1.0), _GLF_IDENTITY(8.9, (8.9) + sin(0.0)), 1.7).y, vec3(_GLF_IDENTITY(-6.9, (-6.9) * 1.0), _GLF_IDENTITY(8.9, (8.9) + sin(0.0)), 1.7).y, vec3(_GLF_IDENTITY(-6.9, (-6.9) * 1.0), _GLF_IDENTITY(8.9, (8.9) + sin(0.0)), 1.7).y))), bool(true))), 3212.3699, -3.6, 30.87)))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) | (int(_GLF_ONE(1.0, injectionSwitch.y)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) > 0, (_injected_loop_counter > 0) || false)), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || false), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))); _injected_loop_counter --)
                        {
                         mat3x4(400.936, -7.4, 20.11, 6.2, -421.149, 34.20, 8.3, 6275.7247, 72.46, _GLF_IDENTITY(-66.12, float(mat3x2(-66.12, determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(-393.056, float(mat2x4(-393.056, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(28.94)), float(1.0), bool(true))))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) * mat3(1.0)), vec3(1.0, 0.0, 0.0))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), 1.0, 0.0))), 339.326);
                        }
                      }
                     else
                      {
                      }
                     _GLF_IDENTITY(findMSB(uvec3(166919u, 106852u, 128098u)), _GLF_IDENTITY(ivec3(0, 0, 0) ^ (findMSB(uvec3(166919u, 106852u, 128098u))), (ivec3(0, 0, 0) ^ (findMSB(uvec3(166919u, 106852u, 128098u)))) | ivec3(0, 0, 0)));
                     if(_GLF_DEAD(false))
                      break;
                     ivec3 _GLF_SWITCH_0_16v;
                     83713;
                     float _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((true ? -757.345 : -61.87) - 55.32))), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (! (true)))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, max(injectionSwitch.y, injectionSwitch.y))))))
                      return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               else
                {
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
              break;
             mat4x2 _GLF_SWITCH_0_20v[98], _GLF_SWITCH_0_21v[37];
             if(_GLF_DEAD(false))
              return;
             if(true)
              {
               for(int _injected_loop_counter = (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 | (7))) ^ _GLF_IDENTITY(0, (0) >> 0))))))), _GLF_IDENTITY((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7)))))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7))))), max(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7)))))))), ((((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7)))))) | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7))))), max(((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7))))), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 1 * (_GLF_IDENTITY(int(7), int(7))))))))) ^ 0)) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
                  {
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) < injectionSwitch.y)))), ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))) < injectionSwitch.y))))) && true))))))
                    {
                     do
                      {
                       not(bvec2(true, true));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))));
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_IDENTITY(isnan(1.8), false || (isnan(1.8))))
                  {
                   ivec2 _GLF_SWITCH_0_22v;
                   mat3x2 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[89], _GLF_SWITCH_0_25v;
                  }
                 else
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false)))) && true))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-911.369)), bool(false)))))))
                    return;
                   mat3x2 _GLF_SWITCH_0_26v[87], _GLF_SWITCH_0_27v[97], _GLF_SWITCH_0_28v;
                   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), (0 ^ (1)) - 0)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || _GLF_IDENTITY(false, false || (false))), true, true))))))))); _injected_loop_counter --)
                    {
                     for(int _injected_loop_counter = ((0 & 36670) & int(5011.5382)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                        {
                        }
                       else
                        {
                         _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))))) + ivec3(0, 0, 0)), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> _GLF_IDENTITY(0, int(ivec2(0, 0)))), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) - 0)))), 0))))) | (ivec3(_GLF_IDENTITY(-18876, clamp(-18876, -18876, -18876)), 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))))), ivec3(1, 1, 1) * (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-18876, 58372, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), max(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))))) * (1 | 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), max(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))))) * (1 | 1)), 0)))), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), max(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), clamp(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)))))), _GLF_IDENTITY(1, (1) + 0), 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), max(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), clamp(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)))))), _GLF_IDENTITY(1, (1) + 0), 1)) ^ ivec3(0, 0, 0)))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), int(ivec2((0 << _GLF_IDENTITY(int(2), int(2))), 1))), 0))))) | (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), 1))), (_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))), _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), (_GLF_IDENTITY(ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, _GLF_IDENTITY((_GLF_IDENTITY(-50530, (false ? _GLF_FUZZED(_injected_loop_counter) : -50530))) >> 0, ~ (~ (_GLF_IDENTITY((-50530) >> 0, min((-50530) >> 0, (-50530) >> 0)))))), -50530)), (true ? _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, _GLF_IDENTITY((-50530), min((-50530), (-50530))) >> 0), -50530)) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(_injected_loop_counter, _injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : atomicAnd(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))))))), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, _GLF_IDENTITY(-50530, (-50530) | (_GLF_IDENTITY(-50530, (-50530) ^ 0))), -50530)), (-50530) >> 0), -50530)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))))) | (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))))))) | ivec3(0, 0, 0)))).br, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0))))), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))))) + ivec3(0, 0, 0)), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> _GLF_IDENTITY(0, int(ivec2(0, 0)))), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) - 0)))), 0))))) | (ivec3(_GLF_IDENTITY(-18876, clamp(-18876, -18876, -18876)), 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY((1) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))))), ivec3(1, 1, 1) * (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(-18876, 58372, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), max(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))))) * (1 | 1)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), (_GLF_IDENTITY(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), max(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))), _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))))) * (1 | 1)), 0)))), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), max(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), clamp(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)))))), _GLF_IDENTITY(1, (1) + 0), 1), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), max(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), clamp(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)), _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, -50530, -50530)), (-50530) >> 0))), -50530)))))), _GLF_IDENTITY(1, (1) + 0), 1)) ^ ivec3(0, 0, 0)))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(2), int(2))), int(ivec2((0 << _GLF_IDENTITY(int(2), int(2))), 1))), 0))))) | (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), 1))), (_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, clamp(2, 2, 2))))), _GLF_IDENTITY(0, clamp(0, 0, 0)))))))), (_GLF_IDENTITY(ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, _GLF_IDENTITY((_GLF_IDENTITY(-50530, (false ? _GLF_FUZZED(_injected_loop_counter) : -50530))) >> 0, ~ (~ (_GLF_IDENTITY((-50530) >> 0, min((-50530) >> 0, (-50530) >> 0)))))), -50530)), (true ? _GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, _GLF_IDENTITY((-50530), min((-50530), (-50530))) >> 0), -50530)) : _GLF_FUZZED(_GLF_IDENTITY(atomicAnd(_injected_loop_counter, _injected_loop_counter), (false ? _GLF_FUZZED(_injected_loop_counter) : atomicAnd(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0))))))), _GLF_IDENTITY(1, (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0)))), (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(_GLF_IDENTITY(-50530, clamp(-50530, _GLF_IDENTITY(-50530, (-50530) | (_GLF_IDENTITY(-50530, (-50530) ^ 0))), -50530)), (-50530) >> 0), -50530)), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) + 0), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))))) | (ivec3(-18876, 58372, _GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, int(ivec3(_GLF_IDENTITY(-50530, max(_GLF_IDENTITY(-50530, (-50530) >> 0), -50530)), _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), (1), (1))) + 0, clamp((1) + 0, (1) + 0, (1) + 0))), 1))), (0 << _GLF_IDENTITY(int(2), int(2))), 0))))))) | ivec3(0, 0, 0)))).br) ^ ivec2(0, 0));
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))))))
                        continue;
                      }
                    }
                   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false)), (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))) && true))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      continue;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         do
                          {
                           return;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false) && true)))
                    return;
                   (_GLF_IDENTITY(true, ! (! (true))) ? mat2x3(-1.1, 2.8, -2.8, 2.2, 585.548, 13.77) : mat2x3(-0.4, -7.2, _GLF_IDENTITY(_GLF_IDENTITY(4.9, (4.9) / 1.0), float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-816.998 * 3266.1240))), float(0.0), bool(true))), 1.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), min(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-8355.1145, -43.76, -531.810, 97.25)) : vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0), vec4(mat2x3(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0), 0.0, 1.0))), mix(vec4((_GLF_IDENTITY(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-816.998 * 3266.1240))), float(0.0), bool(true))), 1.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), min(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-8355.1145, -43.76, -531.810, 97.25)) : vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0), vec4(mat2x3(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0), 0.0, 1.0))))[0], (_GLF_IDENTITY(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-816.998 * 3266.1240))), float(0.0), bool(true))), 1.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), min(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-8355.1145, -43.76, -531.810, 97.25)) : vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0), vec4(mat2x3(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0), 0.0, 1.0))))[1], _GLF_FUZZED(3591.6626), _GLF_FUZZED(9899.2794)), vec4(_GLF_FUZZED(818.867), _GLF_FUZZED(1.9), (_GLF_IDENTITY(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-816.998 * 3266.1240))), float(0.0), bool(true))), 1.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), min(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-8355.1145, -43.76, -531.810, 97.25)) : vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0), vec4(mat2x3(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0), 0.0, 1.0))))[2], (_GLF_IDENTITY(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-816.998 * 3266.1240))), float(0.0), bool(true))), 1.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), min(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(vec4(-8355.1145, -43.76, -531.810, 97.25)) : vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, 1.0))))))), 1.0), vec4(mat2x3(vec4(4.9, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0), 1.0, 1.0, 1.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), 1.0), 0.0, 1.0))))[3]), bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), 81.11, 882.726, 1.3));
                   uvec4(195264u, 169453u, 47652u, 88947u);
                   equal(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(123982u, 8508u), (uvec2(_GLF_IDENTITY(123982u, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(123982u, ~ (~ (123982u)))), ((_GLF_IDENTITY(123982u, ~ (~ (123982u))))) >> 0u), clamp(_GLF_IDENTITY((_GLF_IDENTITY(123982u, ~ (~ (123982u)))), ((_GLF_IDENTITY(123982u, ~ (~ (123982u))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(123982u, ~ (~ (123982u)))), ((_GLF_IDENTITY(123982u, ~ (~ (123982u))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(123982u, ~ (~ (123982u)))), ((_GLF_IDENTITY(123982u, ~ (~ (123982u))))) >> 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(123982u, ~ (~ (123982u)))), ((_GLF_IDENTITY(123982u, ~ (~ (123982u))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(123982u, ~ (~ (123982u)))), ((_GLF_IDENTITY(123982u, ~ (~ (123982u))))) >> 0u))))) | (123982u)), 8508u)) * uvec2(1u, 1u)), (uvec2(123982u, 8508u)) >> uvec2(0u, _GLF_IDENTITY(0u, 1u * (0u)))), uvec2(116561u, 32873u));
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   for(                   ivec3(1522, -56165, _GLF_IDENTITY(92852, min(92852, 92852)))[1];
 _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true); mat4x3(-780.422, 8.6, -45.12, 4004.0980, 9.5, _GLF_IDENTITY(13.57, _GLF_IDENTITY(min(13.57, 13.57), _GLF_IDENTITY(max(min(13.57, 13.57), min(13.57, 13.57)), mix(float(_GLF_FUZZED(vec4(96.26, -678.632, 6.4, 4325.6614).y)), float(max(min(13.57, 13.57), min(13.57, 13.57))), bool(true))))), -2.3, _GLF_IDENTITY(-6592.8298, max(-6592.8298, -6592.8298)), -15.83, -2647.5779, _GLF_IDENTITY(-7.8, max(-7.8, -7.8)), _GLF_IDENTITY(-30.91, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(injectionSwitch[1]) : 0.0)), 0.0, 0.0, 0.0)), 1.0)), clamp(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0)))))), mix(float(dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x4(1.0, 1.0, 0.0, 0.0, abs(0.0), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))) * mat3(1.0))))))), float(_GLF_FUZZED((vec4(58.18, -8.2, 3.3, -8.7).b))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), dot(vec2(0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(determinant(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))))), 1.0), max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(step(490.016, -376.234)))), float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-961.547) : 0.0))), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0)))))), mix(vec2(_GLF_FUZZED(31.70), _GLF_FUZZED(38.49)), vec2((_GLF_IDENTITY(vec2(determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), (mat3x4(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))))))) * mat3(1.0))), _GLF_IDENTITY(mat2(mat2(mat2(_GLF_IDENTITY(mat3x4(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), (mat3x4(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))))))) * mat3(1.0))))), mat2(mat4(mat2(mat2(mat2(_GLF_IDENTITY(mat3x4(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), (mat3x4(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))))))) * mat3(1.0)))))))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))))), 1.0), max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) - 0.0))))))))[0], (_GLF_IDENTITY(vec2(determinant(_GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))) - 0.0)) + 0.0)))), (mat2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0)))) - 0.0)) + 0.0))))) * mat2(1.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))))), 1.0), _GLF_IDENTITY(max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), clamp(max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY((max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0)))))) * mat2(1.0), ((max(vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))), 1.0))))))), 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))))), _GLF_IDENTITY(1.0, float(mat4(1.0, log(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 0.0, 1.0, tan(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, abs(abs(0.0)), 1.0, 1.0, 1.0, 1.0, 1.0)))))) * mat2(1.0)) * mat2(1.0)))))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), dot(vec2(0.0, 1.0), vec2(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0))))) * (_GLF_IDENTITY(-30.91, 1.0 * (-30.91))))))
                    {
                     ;
                     while(true)
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         continue;
                        }
                       if(_GLF_DEAD(false))
                        break;
                       vec3(-8965.3843, -6729.5625, -747.181);
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), false))))))))
                        continue;
                       mat4x2(-76.97, -323.169, 45.38, -2.0, 406.207, -6.9, -53.09, 5.1);
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true)))))))) && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, false, true, false)))))))), true && ((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, false, true, false)))))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true))))))), true && (bool(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true))))))))))))), ! (! (bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))))) || false))) && true))), false)))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true)))))))) && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, false, true, false)))))))), true && ((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, false, true, false)))))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true))))))), true && (bool(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true))))))))))))), ! (! (bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))))) || false))) && true))), false)))))))), bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (true), ! (! (! (true)))), true)))))))) && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, false, true, false)))))))), true && ((! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), _GLF_IDENTITY(false, (false) || false) || (bool(bvec4(false, false, true, false)))))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true)))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true))))))), true && (bool(! (_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), bool(bvec4(bool(_GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)), bool(bool(bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))))) && true))), false)))))), false, true, true))))))))))))), ! (! (bool(bvec2(! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), false || (bool(bvec4(false, false, true, false))))))) || false))) && true))), false)))))))), false)))))))))))))
                        break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, 1.0, sin(0.0), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 1.0, cos(0.0), cos(_GLF_IDENTITY(0.0, (0.0) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), 1.0, 0.0))) > injectionSwitch.y))))
                        continue;
                       do
                        {
                         for(int _injected_loop_counter = ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 | (1)), 1, 1))) ^ 0) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
                          {
                           ;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
                       (mat4x2(vec2(-5.5, 59.43), _GLF_IDENTITY(smoothstep(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))), (false ? _GLF_FUZZED(-6150.1263) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))))), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0)))), _GLF_IDENTITY(vec2(0.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 1.0))))), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0)))))) + 0.0), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, clamp(_GLF_IDENTITY((1.0) - 0.0, float(vec4((1.0) - 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((1.0) - 0.0, clamp((1.0) - 0.0, (1.0) - 0.0, (1.0) - 0.0)), (1.0) - 0.0))) : _GLF_FUZZED(-420.472))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(vec3(vec2(1.0, 0.0), 1.0))), _GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 0.0)))), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(6.5, -76.72, 7.5, -63.18, 8.3, 5.5, -42.02, -68.09, 30.02, -3.7, -4.4, 72.24))))))))))), injectionSwitch), clamp(_GLF_IDENTITY(smoothstep(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472), (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472)) - 0.0))), (false ? _GLF_FUZZED(-6150.1263) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) / 1.0)))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-12.31))), 1.0)), (1.0) - 0.0) : _GLF_FUZZED(-420.472))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(6.5, -76.72, 7.5, -63.18, 8.3, 5.5, -42.02, -68.09, 30.02, -3.7, -4.4, 72.24))))))))))), injectionSwitch), vec2(_GLF_IDENTITY(mat4x2(smoothstep(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(_GLF_IDENTITY(-420.472, clamp(-420.472, -420.472, -420.472))))), (false ? _GLF_FUZZED(-6150.1263) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(6.5, -76.72, 7.5, -63.18, 8.3, 5.5, -42.02, -68.09, 30.02, -3.7, -4.4, 72.24))))))))))), injectionSwitch), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4x2(smoothstep(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))), (false ? _GLF_FUZZED(-6150.1263) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (bool(_GLF_IDENTITY(true, true && (true))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (true))), ! (! (bool(_GLF_IDENTITY(true, true && (true)))))))) || false)) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0))), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(6.5, -76.72, 7.5, -63.18, 8.3, _GLF_IDENTITY(5.5, (5.5) / exp(0.0)), -42.02, _GLF_IDENTITY(-68.09, float(mat2(-68.09, 1.0, 1.0, 0.0))), 30.02, -3.7, -4.4, 72.24))))))))))), injectionSwitch), 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 1.0)))))), smoothstep(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))), (false ? _GLF_FUZZED(-6150.1263) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))), (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2117.7089)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 1.0, 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (true)) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(_GLF_IDENTITY(-420.472, float(mat2x4(-420.472, _GLF_IDENTITY(dot(vec3(abs(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(abs(0.0), 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec2(0.0, 0.0)), dot(vec2(1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), length(vec2(0.0, 0.0)))))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8639.4478)), float(1.0), bool(true))), 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(6.5, -76.72, 7.5, -63.18, 8.3, 5.5, -42.02, -68.09, 30.02, -3.7, -4.4, 72.24))))))))))), injectionSwitch), smoothstep(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(vec2((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))), (false ? _GLF_FUZZED(-6150.1263) : _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(-420.472))))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (dot(vec2(0.0, 1.0), vec2(1.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))) ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(min(6.7, -722.464)) : (1.0))) - 0.0) : _GLF_FUZZED(-420.472))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), max(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(6.5, -76.72, 7.5, -63.18, 8.3, 5.5, -42.02, -68.09, 30.02, -3.7, -4.4, 72.24))))))))))), injectionSwitch))), vec2(96.40, -4506.8653), injectionSwitch) - 24.56);
                       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(758.524), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((+ -4566.1770))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                          break;
                         continue;
                        }
                       uvec3 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & (+ 67423))); _injected_loop_counter --)
                          {
                           return;
                          }
                        }
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(87.93), _GLF_FUZZED(6.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < injectionSwitch.y))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false)))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x), (min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) - 0.0)) < injectionSwitch.y)))))))) && true))))
                        break;
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true), false, false), true))))))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(false, false || (false))))) || false))))
                          break;
                         ;
                         if(_GLF_DEAD(false))
                          break;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       ;
                       bvec3 _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v;
                       mat4 _GLF_SWITCH_0_34v[25], _GLF_SWITCH_0_35v;
                      }
                     int _GLF_SWITCH_0_36v[63], _GLF_SWITCH_0_37v[34];
                     do
                      {
                       ivec4(63049, -76831, -56815, 6549);
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false)), (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(false, ! (! (false))), false))) || false)))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         return;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       else
                        {
                        }
                      }
                     for(                     (ivec4(-58199, 29972, 16971, -52322) * 73613);
 (uvec4(38268u, 35996u, 72051u, 94696u)[0] >= uvec3(121635u, 27208u, 38910u)[0]); matrixCompMult(mat3x2(2.9, -17.95, 5344.4750, -461.575, 3.3, 23.68), (-7997.8480 / mat3x2(-7.6, -6.7, 635.920, 36.76, -925.274, -666.900))))
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                     if(false)
                      {
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         _GLF_IDENTITY(_GLF_IDENTITY(vec3(-9.5, -7824.4768, -8398.3041), (false ? _GLF_FUZZED(vec3(5868.4910, _GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, mix(float(_GLF_FUZZED(-8070.8359)), float(534.110), bool(true))), 534.110)), 534.110)), -1439.7485)) : vec3(-9.5, -7824.4768, -8398.3041))), clamp(_GLF_IDENTITY(vec3(-9.5, -7824.4768, -8398.3041), (false ? _GLF_FUZZED(vec3(5868.4910, _GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, mix(float(_GLF_FUZZED(-8070.8359)), float(534.110), bool(true))), 534.110)), 534.110)), -1439.7485)) : vec3(-9.5, -7824.4768, -8398.3041))), _GLF_IDENTITY(vec3(-9.5, -7824.4768, -8398.3041), (false ? _GLF_FUZZED(vec3(5868.4910, _GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, mix(float(_GLF_FUZZED(-8070.8359)), float(534.110), bool(true))), 534.110)), 534.110)), -1439.7485)) : vec3(-9.5, -7824.4768, -8398.3041))), _GLF_IDENTITY(vec3(-9.5, -7824.4768, -8398.3041), (false ? _GLF_FUZZED(vec3(5868.4910, _GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, min(_GLF_IDENTITY(534.110, mix(float(_GLF_FUZZED(-8070.8359)), float(534.110), bool(true))), 534.110)), 534.110)), -1439.7485)) : vec3(-9.5, -7824.4768, -8398.3041)))));
                         if(_GLF_DEAD(false))
                          return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
                          break;
                         if(_GLF_DEAD(false))
                          break;
                         break;
                        }
                       mat4x3(_GLF_IDENTITY(-5528.2743, _GLF_IDENTITY((-5528.2743) - 0.0, clamp((-5528.2743) - 0.0, _GLF_IDENTITY((-5528.2743) - 0.0, mix(float(_GLF_FUZZED(-9991.4883)), float((-5528.2743) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) + abs(0.0)) : _GLF_FUZZED(-5.6)))), bool(true))), (-5528.2743) - 0.0))), 902.097, 121.576, 8654.5818, 9.4, _GLF_IDENTITY(-8.9, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-8.9, (false ? _GLF_IDENTITY(_GLF_FUZZED(97.81), (_GLF_IDENTITY(_GLF_FUZZED(97.81), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(55.83) : _GLF_FUZZED(97.81)))) - log(1.0)) : -8.9)), 0.0, 1.0, 1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(-8.9, (false ? _GLF_IDENTITY(_GLF_FUZZED(97.81), _GLF_IDENTITY(float(mat2x4(_GLF_FUZZED(97.81), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)), (float(mat2x4(_GLF_FUZZED(97.81), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))) * 1.0)) : -8.9)), 0.0, 1.0, 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(8.9, 143.453, 516.440, 695.483)) : transpose(mat2(_GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(97.81) : -8.9)), 0.0, 1.0, 1.0)), (false ? _GLF_FUZZED(mat2(8.9, 143.453, 516.440, 695.483)) : transpose(mat2(_GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(97.81) : -8.9)), 0.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), mat2(mat4(transpose(mat2(_GLF_IDENTITY(-8.9, (false ? _GLF_FUZZED(97.81) : -8.9)), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat3(float(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3(float(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0)))))), float(_GLF_FUZZED(685.103)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), -62.03, 3.4, -803.722, 742.361, -2.3, 3.2);
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        continue;
                       ivec2 _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
                      }
                     else
                      {
                      }
                     true;
                     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 40:
                           _GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(true))), false, true, true))), (true) && _GLF_IDENTITY(true, true && (true))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.7)), float(1.0), bool(true)))) * (injectionSwitch)).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))) || false)))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)), false || (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false)))) && (false)), true))))))))));
                           case 0:
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           case 69:
                           if(_GLF_DEAD(false))
                            continue;
                           case 75:
                           for(                           (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(13228u, 0u ^ (13228u)), 88079u, 26383u, 188673u) + (_GLF_IDENTITY(num_workgroup >> virtual_gid, (num_workgroup >> virtual_gid) | (num_workgroup >> virtual_gid))), max(uvec4(_GLF_IDENTITY(13228u, 0u ^ (13228u)), 88079u, 26383u, 188673u) + (_GLF_IDENTITY(num_workgroup >> virtual_gid, (num_workgroup >> virtual_gid) | (num_workgroup >> virtual_gid))), uvec4(_GLF_IDENTITY(13228u, 0u ^ (13228u)), 88079u, 26383u, 188673u) + (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, num_workgroup, num_workgroup)) >> virtual_gid, (num_workgroup >> virtual_gid) | (num_workgroup >> virtual_gid))))), max(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(13228u, 0u ^ (13228u)), 88079u, 26383u, 188673u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(13228u, (13228u) | (_GLF_IDENTITY(13228u, 0u ^ (13228u)))), 0u ^ (13228u)), 88079u, _GLF_IDENTITY(26383u, _GLF_IDENTITY(uint(uvec4(26383u, 0u, 1u, 1u)), 0u | (_GLF_IDENTITY(uint(uvec4(26383u, 0u, 1u, 1u)), (uint(uvec4(26383u, 0u, 1u, 1u))) + 0u)))), 188673u)) / uvec4(1u, 1u, 1u, 1u)) + (_GLF_IDENTITY(num_workgroup >> virtual_gid, (num_workgroup >> virtual_gid) | (num_workgroup >> _GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))))), uvec4(_GLF_IDENTITY(13228u, 0u ^ (13228u)), 88079u, 26383u, 188673u) + (_GLF_IDENTITY(num_workgroup >> virtual_gid, (num_workgroup >> virtual_gid) | (num_workgroup >> virtual_gid))))));
 false; -3919)
                            {
                            }
                           break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, sqrt(0.0))), 0.0, sqrt(1.0), 1.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.x, determinant(mat2(0.0, 0.0, 1.0, sqrt(0.0))), 0.0, sqrt(1.0), 1.0, 0.0)))))) > injectionSwitch.y))))
                              break;
                             break;
                            }
                           default:
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                              {
                               return;
                              }
                             else
                              {
                              }
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           1;
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             break;
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false))))
                          continue;
                         break;
                        }
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) && true)), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (false) && true)))))))) && true)))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
                        return;
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
          }
         else
          {
          }
        }
       case 0:
       case 21:
       int i = 0;
       if(_GLF_DEAD(false))
        break;
       do
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            continue;
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) + 0u), 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       break;
       case 96:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec2(false, false)))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
          }
        }
       vec2 _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[41];
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       case 57:
       ivec3 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v;
       default:
       do
        {
         1;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
       do
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false)))))))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _injected_loop_counter)), (_injected_loop_counter) / 1) : _GLF_FUZZED(findLSB(read_2)), 0 | (true ? _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0), _injected_loop_counter)), (_injected_loop_counter) / 1) : _GLF_FUZZED(findLSB(read_2)))))) != 0); _injected_loop_counter --)
      {
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u))))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u)))))), clamp((_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u)))))), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u)))))), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u)))))))))), _GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u))))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(_GLF_IDENTITY(uvec2(uint(read_1 == read_2) + 1, 0u), clamp(uvec2(uint(read_1 == read_2) + 1, 0u), uvec2(uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) + 1, 0u), uvec2(uint(read_1 == read_2) + 1, 0u))))))), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), _GLF_IDENTITY(int(ivec4(4, 0, 1, (0 | 0))), min(int(ivec4(4, 0, 1, (0 | 0))), int(ivec4(4, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 ^ (1))) | (1)), (0 | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) << 0), 1, 0)))) << 0))))))))), ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 1, (0 | 0))), min(int(ivec4(4, 0, 1, (0 | 0))), int(ivec4(4, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1)), 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (1)))), (0 | _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (0) << 0), 1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(71780) : _GLF_IDENTITY(0, (0) / 1)))) - 0))))) << 0)))))))))))), 4)));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
}
