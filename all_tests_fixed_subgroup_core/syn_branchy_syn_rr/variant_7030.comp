#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 uvec2 _f0;
 mat3x2 _f1;
 vec4 _f2;
 bvec3 _f3;
 mat4x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_26 {
 vec2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_28 {
 uvec3 _f0;
 _GLF_struct_26 _f1;
 mat3 _f2;
 vec4 _f3;
 mat2x3 _f4;
 _GLF_struct_27 _f5;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
 ivec2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 vec2 _f1;
 mat3x4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_22 {
 mat3x4 _f0;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 vec4 _f1;
 uint _f2;
 ivec2 _f3;
 vec4 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 ivec4 _f1;
 uint _f2;
 uvec3 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_29 {
 mat4 _f0;
 _GLF_struct_25 _f1;
 vec3 _f2;
 _GLF_struct_28 _f3;
 uint next_virtual_gid;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
 ivec2 _f1;
 vec2 _f2;
 mat4x2 _f3;
 ivec2 _f4;
 uvec3 _f5;
 uint _f6;
} ;

struct _GLF_struct_16 {
 uvec3 _f0;
 mat2x4 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_18 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 float _f2;
} ;

struct _GLF_struct_14 {
 bvec3 _f0;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 _GLF_struct_14 _f1;
 float _f2;
 vec4 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat3x2 _f1;
 mat2 _f2;
 vec2 _f3;
 bvec3 _f4;
 vec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_11 {
 int _f0;
 mat4 _f1;
 vec3 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
 ivec4 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_13 {
 bool _f0;
 _GLF_struct_11 _f1;
 _GLF_struct_12 _f2;
} ;

struct _GLF_struct_19 {
 _GLF_struct_13 _f0;
 uvec3 _f1;
 ivec4 _f2;
 mat3x4 _f3;
 _GLF_struct_15 _f4;
 mat3 _f5;
 int i;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 uvec3 _f1;
 bool _f2;
 uvec2 _f3;
 ivec4 _f4;
 vec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 uvec2 _f1;
 mat2x3 _f2;
 uint _f3;
 vec2 _f4;
 int _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 mat2 _f1;
 float _f2;
 mat2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_9 {
 ivec3 _f0;
 _GLF_struct_6 _f1;
 vec3 _f2;
 _GLF_struct_7 _f3;
 ivec4 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_10 {
 uint subgroup_id;
 _GLF_struct_9 _f0;
} ;

struct _GLF_struct_3 {
 mat4x3 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 bool _f1;
 mat2x3 _f2;
 ivec3 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat2 _f1;
 int _f2;
 bvec4 _f3;
 uvec3 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 mat4x3 _f1;
 mat4 _f2;
 bvec3 _f3;
 mat2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 vec2 _f3;
 float _f4;
 _GLF_struct_3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_5 {
 uint subgroup_local_id;
 _GLF_struct_4 _f0;
 vec3 _f1;
 mat4x3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(gl_SubgroupID, _GLF_struct_9(ivec3(1), _GLF_struct_6(mat3x4(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(40.15)), bool(false)))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), 1.0, mat2(1.0), mat3x2(1.0)), vec3(1.0), _GLF_struct_7(mat3(1.0), uvec2(1u), mat2x3(_GLF_IDENTITY(1.0, 0.0 + (1.0))), 1u, vec2(1.0), 1, mat2x4(1.0)), ivec4(1), _GLF_struct_8(_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.1) : 1.0))), _GLF_IDENTITY((true ? mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.1) : 1.0))) : _GLF_FUZZED(mat2(-12.93, -78.16, -4349.5326, 8.3))), mat2(1.0) * ((true ? mat2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.1) : 1.0))) : _GLF_FUZZED(mat2(-12.93, -78.16, -4349.5326, _GLF_IDENTITY(8.3, mix(float(_GLF_FUZZED(-4849.9847)), float(_GLF_IDENTITY(8.3, float(float(8.3)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), uvec3(1u), true, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | (uvec2(1u))), ivec4(1), vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(48542))), float(1.0), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(65558u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(65558u, 0u), max(uvec2(65558u, 0u), _GLF_IDENTITY(uvec2(65558u, 0u), (uvec2(65558u, 0u)) >> uvec2(0u, 0u))))), (uint(_GLF_IDENTITY(uvec2(65558u, 0u), max(uvec2(65558u, 0u), _GLF_IDENTITY(uvec2(65558u, 0u), (uvec2(65558u, 0u)) >> uvec2(0u, 0u)))))) - (118626u & 0u))), 97609u), (_GLF_IDENTITY(uvec2(65558u, 97609u), _GLF_IDENTITY((uvec2(65558u, 97609u)), min((uvec2(65558u, 97609u)), (uvec2(65558u, 97609u)))) / _GLF_IDENTITY(((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))), min(((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))), _GLF_IDENTITY(((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))), (((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u)))) / uvec2(1u, 1u)))))) ^ uvec2(0u, 0u))))), min(_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(65558u, _GLF_IDENTITY(97609u, (_GLF_IDENTITY(97609u, ~ (~ (97609u)))) ^ 0u)), (uvec2(65558u, 97609u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))) ^ uvec2(0u, 0u)))), (_GLF_IDENTITY((true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(65558u, _GLF_IDENTITY(97609u, (_GLF_IDENTITY(97609u, ~ (~ (97609u)))) ^ 0u)), (uvec2(65558u, 97609u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))) ^ uvec2(0u, 0u)))), max((true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(65558u, _GLF_IDENTITY(97609u, (_GLF_IDENTITY(97609u, ~ (~ (97609u)))) ^ 0u)), (uvec2(65558u, 97609u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))) ^ uvec2(0u, 0u)))), (true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(65558u, _GLF_IDENTITY(97609u, (_GLF_IDENTITY(97609u, ~ (~ (97609u)))) ^ 0u)), (uvec2(65558u, 97609u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))) ^ uvec2(0u, 0u))))))) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(65558u, (false ? _GLF_FUZZED(124983u) : 65558u)), 97609u), (uvec2(65558u, 97609u)) / (_GLF_IDENTITY((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u)), clamp((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u)), (uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u)), (uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))))) ^ uvec2(0u, 0u))))), uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(65558u, 97609u), (uvec2(_GLF_IDENTITY(65558u, (65558u) / 1u), 97609u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(_GLF_IDENTITY(7u, 0u ^ (7u))))))) ^ uvec2(0u, 0u))))), uvec2(uvec2(_GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(_GLF_IDENTITY(uvec2(65558u, 97609u), (_GLF_IDENTITY(uvec2(65558u, 97609u), (uvec2(65558u, 97609u)) / ((uvec2(1u, 1u) << _GLF_IDENTITY(uvec2(7u), uvec2(7u))) >> _GLF_IDENTITY(uvec2(7u), uvec2(7u))))) ^ uvec2(0u, _GLF_IDENTITY(0u, max(0u, 0u)))))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) || (false)), ((_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! (false))) && true), (! _GLF_IDENTITY((! (false)), ((! (false))) && true)) && true)) || (false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, sin(0.0), 1.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, sin(0.0), 1.0))) - 0.0)) < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), false || (_GLF_IDENTITY((false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, sin(0.0), 1.0)), (float(mat2x3(injectionSwitch.x, sqrt(1.0), 0.0, 0.0, sin(0.0), 1.0))) - 0.0)) < injectionSwitch.y)), ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), true, true, false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(gl_SubgroupInvocationID, _GLF_struct_4(_GLF_struct_0(bvec3(true), mat4x3(1.0), mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bvec3(true), mat2(1.0), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0)))), _GLF_struct_1(mat4x2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(1.0), 1, bvec4(true), _GLF_IDENTITY(uvec3(1u), clamp(uvec3(1u), uvec3(1u), _GLF_IDENTITY(uvec3(1u), ~ (~ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) >> uvec3(0u, 0u, 0u))))))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, (false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, (false ? _GLF_FUZZED(-10.87) : 1.0) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.3)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-10.87, max(-10.87, -10.87))) : 1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-10.87) : 1.0) / 1.0)), min((false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-10.87), min(_GLF_FUZZED(-10.87), _GLF_IDENTITY(_GLF_FUZZED(-10.87), mix(float(_GLF_FUZZED(-10.87)), float(_GLF_FUZZED(4.6)), bool(false))))) : 1.0, (false ? _GLF_FUZZED(-10.87) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.1)), bool(false)))) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-10.87), mix(float(_GLF_FUZZED((-426.121 * -11.45))), float(_GLF_FUZZED(-10.87)), bool(true))) : _GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0))))))))), mix(float(_GLF_FUZZED(-4.9)), float(((_GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, 1.0 * (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-10.87, max(-10.87, -10.87))) : 1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (false ? _GLF_FUZZED(-10.87) : 1.0) / 1.0)), min((false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-10.87), min(_GLF_FUZZED(-10.87), _GLF_IDENTITY(_GLF_FUZZED(-10.87), mix(float(_GLF_FUZZED(-10.87)), float(_GLF_FUZZED(4.6)), bool(false))))) : 1.0, (false ? _GLF_FUZZED(-10.87) : _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.1)), bool(false)))) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(false ? _GLF_FUZZED(-10.87) : 1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-10.87), mix(float(_GLF_FUZZED((-426.121 * -11.45))), float(_GLF_FUZZED(-10.87)), bool(true))) : _GLF_IDENTITY(1.0, max(1.0, 1.0))) / 1.0)))))))))), bool(true))) + 0.0)))), _GLF_struct_2(mat2x3(1.0), true, mat2x3(1.0), ivec3(1), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))) ^ 0) << _GLF_IDENTITY(int(5), int(5)))))), vec2(1.0), 1.0, _GLF_struct_3(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) - 0.0)), float(_GLF_FUZZED(vec2(-1.7, -369.415).x)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), min(_GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(-880.612)), float(_GLF_FUZZED(-9.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-9.2)))), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3.8)), float(1.0), bool(true)))), bool(true))), _GLF_IDENTITY((1.0), min((1.0), _GLF_IDENTITY((1.0), min((1.0), (1.0))))) + 0.0), 1.0), clamp(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.2), (_GLF_FUZZED(-9.2)) - _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), mix(float(_GLF_FUZZED(-880.612)), float(_GLF_FUZZED(-9.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-9.2)))), float(1.0), bool(true))), (1.0) + 0.0), 1.0), mix(float(clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), min(_GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(-880.612)), float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(-9.2), max(_GLF_IDENTITY(_GLF_FUZZED(-9.2), (_GLF_FUZZED(-9.2)) / 1.0), _GLF_IDENTITY(_GLF_FUZZED(-9.2), min(_GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2))))), _GLF_FUZZED(-9.2), _GLF_FUZZED(-9.2)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-9.2)))), float(1.0), bool(true))), (1.0) + 0.0), 1.0)), float(_GLF_FUZZED(-5708.7678)), bool(false))), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), min(_GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(-880.612)), float(_GLF_FUZZED(-9.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-9.2)))), float(1.0), bool(true))), (1.0) + _GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-9.2, (-9.2) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, abs(0.0)), vec3(1.0, 0.0, sqrt(0.0))), dot(vec3(1.0, 0.0, abs(0.0)), vec3(1.0, 0.0, sqrt(0.0)))))), min(_GLF_IDENTITY(_GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(-880.612)), float(_GLF_FUZZED(-9.2)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FUZZED(-9.2)))), float(1.0), bool(true))), (1.0) + 0.0), 1.0)))), float(mat2x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, min(-9.2, -9.2)))), float(1.0), bool(true)), float(vec4(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, min(-9.2, -9.2)))), float(1.0), bool(true)), tan(0.0), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), (1.0) + 0.0), 1.0)), 0.0, 1.0, log(1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), _GLF_IDENTITY(false, false || (false)), true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, 0.0 + (-9.2)))), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(bvec4(bool(true), false, true, false)), ! (! (bool(bvec4(bool(true), false, true, false)))))))))), (1.0) + 0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8580.6373), mix(float(_GLF_FUZZED(483.748)), float(_GLF_FUZZED(-8580.6373)), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0), mat4x2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), max(float(mat2x3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), _GLF_IDENTITY(float(mat2x3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), min(float(mat2x3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), float(mat2x3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))))))))), 0.0, 1.0, 0.0, 0.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(159628u))), bool(false)))) + determinant(mat3(0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0))), 0.0, 0.0) + (mat4x2(float(1.0), length(vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), sin(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0))))), float(_GLF_FUZZED(-743.288)), bool(false))))) + 0.0), bool(true))), (1.0) + 0.0)), bool(true))), 1.0)))), clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), (1.0) + 0.0), 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(1.0, cos(0.0) * (1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.1)), float(1.0), bool(true)))) - 0.0), 1.0)))), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, _GLF_IDENTITY(min(_GLF_IDENTITY(-9.2, (false ? _GLF_FUZZED(injectionSwitch.t) : -9.2)), -9.2), (min(_GLF_IDENTITY(-9.2, (false ? _GLF_FUZZED(injectionSwitch.t) : -9.2)), -9.2)) + 0.0)))), float(1.0), _GLF_IDENTITY(bool(true), (bool(true)) || false))), (1.0) + 0.0), 1.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false))))), _GLF_IDENTITY((mix(float(_GLF_IDENTITY(_GLF_FUZZED(-9.2), max(_GLF_IDENTITY(_GLF_FUZZED(-9.2), float(vec4(_GLF_FUZZED(-9.2), 0.0, 0.0, 1.0))), _GLF_FUZZED(-9.2)))), float(1.0), bool(true))), _GLF_IDENTITY(0.0 + ((mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true)))), min(0.0 + ((mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true)))), 0.0 + ((mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))))))) - 0.0)), (1.0) + 0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(9077.1461)), float(float(mat3x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, mix(float((1.0) / 1.0), float(_GLF_FUZZED(3367.0730)), bool(false)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(true)))))), (1.0) + 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-5.3)), float(1.0), bool(true))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)), mat4(1.0) * (mat2x4(1.0, 1.0, 1.0, 0.0, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, log(1.0), 0.0), vec3(1.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)))))), clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-718.482)), bool(false)))), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(86.60)), bool(false))), 1.0, 1.0)))), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0), (mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(400.673)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0))), bool(true)))) - 0.0), 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0)) * mat2(1.0)))), 1.0, 0.0, 0.0)))), bool(true))), (1.0) + 0.0))) : _GLF_FUZZED(exp(2750.2114)))), 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec2(1.0, 0.0), vec2(0.0, 0.0) + (vec2(1.0, 0.0)))))), float(_GLF_FUZZED(-9144.1312)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))) + 0.0), 1.0))))) + 0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, (_GLF_IDENTITY(-9.2, (-9.2) * _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) - 0.0))), float(1.0), bool(true))), (1.0) + 0.0), 1.0))))), (false ? _GLF_FUZZED(2328.0917) : clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) * 1.0)), (1.0) + 0.0), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) * 1.0)), (1.0) + 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) * 1.0)), (1.0) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) * 1.0)), (1.0) + 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) * 1.0)), (1.0) + 0.0), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)))), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))))), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), clamp(mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false)))), mix(float(_GLF_FUZZED(-9.2)), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false, true, false)))))), mix(float(_GLF_FUZZED(-9.2)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, true, false))))))) * 1.0)), (1.0) + 0.0), 1.0, length(vec2(0.0, 0.0)), 0.0))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-8580.6373), mix(float(_GLF_FUZZED(_GLF_IDENTITY(483.748, _GLF_IDENTITY(float(vec4(483.748, log(1.0), sqrt(1.0), 1.0)), clamp(float(vec4(483.748, log(1.0), sqrt(1.0), 1.0)), float(vec4(483.748, log(1.0), sqrt(1.0), 1.0)), float(vec4(483.748, log(1.0), sqrt(1.0), 1.0))))))), float(_GLF_FUZZED(-8580.6373)), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), _GLF_IDENTITY(float(1.0), (_GLF_IDENTITY(float(1.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(944.601) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))), 0.0, 1.0, 0.0, 0.0)))), mix(float(float(_GLF_IDENTITY(mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0), mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4x2(float(1.0), length(vec3(0.0, 0.0, 0.0)), sin(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))))), float(_GLF_FUZZED(-743.288)), bool(false))))) + 0.0), bool(true))), (1.0) + 0.0)), bool(true))), 1.0)))), clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))))), (1.0) + 0.0), 1.0)))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_ZERO(0.0, injectionSwitch.x) + (1.0)), 1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9.2, min(_GLF_IDENTITY(-9.2, (false ? _GLF_FUZZED(injectionSwitch.t) : -9.2)), -9.2)))), float(1.0), _GLF_IDENTITY(bool(true), (bool(true)) || false))), (1.0) + 0.0), 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-101.573)), float(1.0), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true)), _GLF_IDENTITY((mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), 0.0 + ((mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))))) - 0.0)), (1.0) + 0.0), 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-9506.1322, -4407.7874, -59.17, -28.44, 617.016, -4.7, 3.2, -7.0, -9.4, 8072.0521, -32.63, -2.3)) : mat4x3(1.0, 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)))), min(float(_GLF_IDENTITY(mat4x3(1.0, 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-24.70) : 0.0)) : _GLF_FUZZED(98.09))) : _GLF_FUZZED(-1.7))), 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-9506.1322, -4407.7874, -59.17, -28.44, 617.016, -4.7, 3.2, -7.0, -9.4, 8072.0521, -32.63, -2.3)) : mat4x3(1.0, 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(float(1.0))))), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0)))), float(_GLF_IDENTITY(mat4x3(1.0, 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat4x3(-9506.1322, -4407.7874, _GLF_IDENTITY(-59.17, (false ? _GLF_FUZZED(4.2) : _GLF_IDENTITY(-59.17, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(-59.17, 1.0, 1.0), max(vec3(-59.17, 1.0, 1.0), vec3(-59.17, 1.0, 1.0)))), max(float(_GLF_IDENTITY(vec3(-59.17, 1.0, 1.0), max(vec3(-59.17, 1.0, 1.0), vec3(-59.17, 1.0, 1.0)))), float(_GLF_IDENTITY(vec3(-59.17, 1.0, 1.0), max(vec3(-59.17, 1.0, 1.0), vec3(-59.17, 1.0, 1.0))))))))), -28.44, 617.016, -4.7, 3.2, -7.0, -9.4, 8072.0521, -32.63, -2.3)) : mat4x3(1.0, 0.0, sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat3(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.7))), 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(19.29))), 1.0))), vec4(0.0, 1.0, 1.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0))))))), clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), (1.0) + 0.0), 1.0)))), (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), float(1.0), bool(true))), _GLF_IDENTITY((1.0), clamp((1.0), (1.0), (1.0))) + 0.0), 1.0))))) + 0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.2)), _GLF_IDENTITY(float(1.0), float(mat3(float(1.0), 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, cos(0.0)))), bool(true))), (1.0) + 0.0), 1.0))))))))), mat4x2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec2(1u), vec3(1.0)), bvec4(true)), vec3(1.0), mat4x3(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, false || (false))), true && (bool(_GLF_IDENTITY(false, false || (false)))))))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))), (! (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0))))))).x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true))))), true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false))))), true, true, false))))) || (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(vec2(-175.637, 8.9))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, min(_GLF_struct_replacement_5.subgroup_local_id, _GLF_struct_replacement_5.subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(mat4(1.0), _GLF_struct_25(_GLF_struct_20(bvec4(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ivec4(1), 1u, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 1u * (1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 1u * (1u)))), min(_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 1u * (1u)))), _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, 1u * (1u))))))) - 0u)), mat4x3(1.0)), _GLF_struct_21(mat3x2(1.0), vec4(1.0), 1u, ivec2(_GLF_IDENTITY(1, max(1, 1))), vec4(1.0), mat4(1.0)), _GLF_struct_22(mat3x4(1.0)), _GLF_struct_23(vec4(1.0), vec2(1.0), mat3x4(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_struct_24(uvec2(1u), ivec2(1), mat4x2(1.0))), vec3(1.0), _GLF_struct_28(uvec3(1u), _GLF_struct_26(vec2(1.0), uvec2(1u)), mat3(1.0), vec4(1.0), mat2x3(1.0), _GLF_struct_27(uvec2(1u), mat3x2(1.0), vec4(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1971.4388)), bool(_GLF_IDENTITY(false, ! (! (false))))))), bvec4(true))), workgroup_base + _GLF_struct_replacement_10.subgroup_id * subgroup_size + ((_GLF_struct_replacement_5.subgroup_local_id + 1) % subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec4(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.3, -50.32)))))[0], _GLF_FUZZED(float(62815))), vec2(_GLF_FUZZED(9.9), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0)), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false))))).x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_29.next_virtual_gid], _GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(num_workgroup) : uint(1))), 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) - 0u)], _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_size) : buf[virtual_gid])))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), false))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, false, true))))))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))), false, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), ! (! (false || (_GLF_IDENTITY(false, (false) && true))))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, log(1.0))), 1.0 * (float(mat3x2(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, log(1.0))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, max(_GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY(_GLF_struct_replacement_5.subgroup_local_id, _GLF_IDENTITY((_GLF_struct_replacement_5.subgroup_local_id) | 0u, _GLF_IDENTITY(uint(uint((_GLF_struct_replacement_5.subgroup_local_id) | 0u)), (uint(uint((_GLF_struct_replacement_5.subgroup_local_id) | 0u))) | (uint(uint((_GLF_struct_replacement_5.subgroup_local_id) | 0u)))))))) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_13(true, _GLF_struct_11(1, mat4(1.0), vec3(1.0), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), ivec4(1), uvec2(1u)), _GLF_struct_12(mat2x3(1.0), mat3x2(1.0), mat2(1.0), vec2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))), ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false))))))))) && true)), true))), vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat4x2(1.0))), uvec3(1u), _GLF_IDENTITY(ivec4(1), (ivec4(1)) / ivec4(1, 1, 1, 1)), mat3x4(1.0), _GLF_struct_15(mat3x2(1.0), _GLF_struct_14(bvec3(_GLF_IDENTITY(true, ! (! (true))))), 1.0, vec4(1.0), uvec4(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_2))))), mat3(1.0), 0, _GLF_struct_18(_GLF_struct_16(uvec3(1u), mat2x4(_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0)))), mat4(1.0)), _GLF_struct_17(bvec3(true), ivec2(_GLF_IDENTITY(1, (1) | (1))), vec2(1.0), mat4x2(1.0), ivec2(1), uvec3(1u), 1u), 1.0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), false || ((false)))), (true && _GLF_IDENTITY((_GLF_IDENTITY((false), false || ((false)))), ((_GLF_IDENTITY((false), false || ((false))))) && true)) || false)))), _GLF_IDENTITY(false, ! (! (false)))))), bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), false))), false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_29.next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (uint(read_1 == read_2) + 1))), 4, _GLF_IDENTITY(64, (64) * 1), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))) || false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_29.next_virtual_gid, ~ (~ (_GLF_struct_replacement_29.next_virtual_gid)))], uint(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(_GLF_struct_replacement_29.next_virtual_gid) : _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) >> 0u)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec2(-37.30, -359.791).g), _GLF_FUZZED(-3.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
