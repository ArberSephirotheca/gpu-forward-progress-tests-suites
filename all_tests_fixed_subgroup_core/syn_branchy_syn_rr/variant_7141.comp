#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec3(true, true, false))) && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false)), true && (bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)), ! (! (bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)))))))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))))))), max(gl_NumWorkGroups, gl_NumWorkGroups)))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))) || false)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec3((false) && true, false, false)), _GLF_IDENTITY(true && (bool(bvec3((false) && true, false, false))), ! (! (true && (bool(bvec3((false) && true, false, false)))))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true && (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))), true)))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! _GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || false)))), true, true))))) || (bool(bool(false)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, true)))))), ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))), bool(bvec3(_GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))), false, true))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.2)), vec2(_GLF_FUZZED(-50.91), (injectionSwitch)[1]), bvec2(false, true))))))) : _GLF_FUZZED(clamp(vec2(6.8, -6388.4376), -1122.7462, 900.844))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))) + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), ((subgroup_local_id + 1) % subgroup_size)))) - _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) ^ (_GLF_IDENTITY(0u, (0u) / 1u))));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, min(4, 4)));
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(699.965)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_IDENTITY(_GLF_FUZZED(-9.7), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-9.7), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-9.7), float(float(_GLF_FUZZED(-9.7)))), 1.0, 0.0, 0.0)), (float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-9.7), max(_GLF_FUZZED(-9.7), _GLF_FUZZED(-9.7))), float(_GLF_IDENTITY(float(_GLF_FUZZED(-9.7)), cos(0.0) * (_GLF_IDENTITY(float(_GLF_FUZZED(-9.7)), clamp(float(_GLF_FUZZED(-9.7)), float(_GLF_FUZZED(_GLF_IDENTITY(-9.7, (false ? _GLF_FUZZED(6.1) : _GLF_IDENTITY(-9.7, (-9.7) - 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-9.7), (_GLF_IDENTITY(_GLF_FUZZED(-9.7), mix(float(_GLF_FUZZED((-7.4 + 537.061))), float(_GLF_FUZZED(-9.7)), bool(true)))) * 1.0)), float(vec3(float(_GLF_FUZZED(-9.7)), 1.0, 1.0))))))))), 1.0, 0.0, 0.0))) - 0.0)), tan(0.0), round(length(normalize(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-999.472)))), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))), _GLF_IDENTITY(log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)) + (log(1.0))), 1.0, sqrt(1.0)))) : _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, cos(0.0))))) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, cos(0.0))))) * mat2(1.0), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, cos(0.0))))) * mat2(1.0))[0], _GLF_FUZZED(-55.07)), vec2(_GLF_FUZZED(-24.94), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, cos(0.0))))) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), mix(vec2(_GLF_FUZZED(35.42), _GLF_FUZZED(-1.4)), vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))), max(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))))), min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))), mix(vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))))[1], (false ? _GLF_FUZZED(185.083) : (min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))))[1]))), vec2((min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), max(((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)))))[1]), bvec2(true, true))), max(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true)))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), sqrt(vec2(0.0, 0.0)) + (_GLF_IDENTITY((injectionSwitch), vec2(vec4((injectionSwitch), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(_GLF_IDENTITY(-9.0, mix(float(_GLF_FUZZED(-946.204)), float(_GLF_IDENTITY(-9.0, max(_GLF_IDENTITY(-9.0, float(mat3x4(-9.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -9.0))), bool(true))))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-56.09)), bool(false)))), mix(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0)), _GLF_IDENTITY((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), clamp((vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0), (vec2(_GLF_FUZZED(6978.1011), _GLF_FUZZED(-9.0))) * mat2(1.0)))), vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, true))))))))))[0], _GLF_FUZZED(-1555.6311)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))).y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 1.0, determinant(mat4(0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, exp(0.0)))))))), 0.0, 1.0, 1.0, 0.0, 1.0)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(4, 4, 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! (false))))), ! (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(! (! ((! (false)))), (! (! ((! (false))))) || false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))) && _GLF_IDENTITY(true, (true) && true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false))))))))))), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false))))))))))), true, false, true))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false))))))))))), true, false, true)), bool(bool(bool(bvec4(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)))))))), ! (! (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false)), true && (bool(bvec4(true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(false)) && true)), false, false, false))))))))))), true, false, true))))))))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), false || (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size))) | (subgroup_size)), bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) + (max(subgroup_size, subgroup_size)), (((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ 1u) + (_GLF_IDENTITY(0u, (0u) ^ 0u) + (max(subgroup_size, subgroup_size)))))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size))))))) | (subgroup_size))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)), bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size)))), (~ (_GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size))))) >> 0u)), uint(uvec4((_GLF_IDENTITY(~ (_GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size)))), (~ (_GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size))))) >> 0u)), (0u | (1u ^ 1u)), (60817u & 0u), (0u | 0u)))))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size))))))) | (subgroup_size)))))), bool(bvec3(! (_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)), bool(bool(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size)))), 0u ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u + (max(subgroup_size, subgroup_size))))))) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), ~ (~ (~ (_GLF_IDENTITY(0, max(0, 0))))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, ~ (~ (uint(read_1 == read_2) + 1))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))) + 1, ~ (~ (uint(read_1 == read_2) + 1)))) * 1u, clamp((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))) + 1, ~ (~ (uint(read_1 == read_2) + 1)))) * 1u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))) + 1, ~ (~ (uint(read_1 == read_2) + 1)))) * 1u, _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))) + 1, ~ (~ (uint(read_1 == read_2) + 1)))) * 1u, max((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))) + 1, ~ (~ (uint(read_1 == read_2) + 1)))) * 1u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (! (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) && true)))) + 1, ~ (~ (uint(read_1 == read_2) + 1)))) * 1u))))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, 0 | (4)));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
}
