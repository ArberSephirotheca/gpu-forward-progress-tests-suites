#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(662.278) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) * 1.0), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), ! (! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3(! (! (_GLF_IDENTITY(false, true && (false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (false ? _GLF_FUZZED(GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base) : gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), true))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5124.8423) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(-345.178)), bool(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) && true)) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)) > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.3)), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3992.0570)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED(subgroup_size))), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(648.583, 85.24)) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), 0.0 + (_GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), float(mat3x4(clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x), exp(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false), true, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))), ! (! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false, true, true)))) && true)), false))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4054.5211), _GLF_FUZZED(749.552)), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1], (false ? _GLF_FUZZED(-107.765) : (injectionSwitch)[1]))), bvec2(true, true))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base) - uvec3(0u, 0u, 0u)).y + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(tan(vec2(0.0, 0.0)))).x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), float(mat2x4(max(injectionSwitch.x, injectionSwitch.x), sqrt(0.0), 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-95.15)), float(injectionSwitch.x), bool(true)))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(length(vec2(0.0, 0.0)), max(length(vec2(0.0, 0.0)), length(vec2(0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(length(vec2(0.0, 0.0)), mix(float(_GLF_FUZZED(-2.2)), float(length(vec2(0.0, 0.0))), bool(true))) : _GLF_FUZZED(-5553.2496))), 1.0, 0.0)))) > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, int(ivec2(1, 0)))])), 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), (_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) - 0.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.1)))) - abs(0.0)), 0.0, 0.0, 1.0))).y)), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], max(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1])), max(injectionSwitch[1], injectionSwitch[1])))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0))).y)), (((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 1.0))).y))) && true))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) - 0.0)) * exp(0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-5.3)), (float(_GLF_FUZZED(-5.3))) - 0.0), float(max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * exp(0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(1.4) : injectionSwitch.x, min(false ? _GLF_FUZZED(1.4) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(648.956), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-928.338)), bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))).x, false ? _GLF_FUZZED(1.4) : injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x * GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y + ((subgroup_local_id + 1) % GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, cos(0.0), 0.0, sin(0.0), 1.0, determinant(mat3(1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0)), 1.0, 0.0, 0.0))), (false ? _GLF_FUZZED(vec2(51.12, 2.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5934.0403)), vec2(_GLF_FUZZED(-659.058), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(51.12, 2.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5934.0403)), vec2(_GLF_FUZZED(-659.058), (injectionSwitch)[1]), bvec2(false, true))))).x > injectionSwitch.y), _GLF_IDENTITY(false, (false) || false), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(89.91)), bool(false))))))))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), false))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), false || (bool(bvec2(true, true))))) && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) && true)))))) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), false))), false), false, false))))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), true && ((! (_GLF_DEAD(false))))), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true && _GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), bool(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! _GLF_IDENTITY((_GLF_DEAD(false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))))))), (! _GLF_IDENTITY((((! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), true && (! ((((! (_GLF_DEAD(false))))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false))), true && (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))))) && true)) && true))))), false, true)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))), true, true), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (true)) && _GLF_IDENTITY(((! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), bool(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true))), (_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3((! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) && true)))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)), bvec3(bvec3(bvec3(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)), bvec3(bvec3(bvec3(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false))))))))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), true && ((((! (_GLF_DEAD(false))))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)) && true)))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), true))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, true)), false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)), true, false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)), bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)), true, false))))))))))), false, true)), true))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && _GLF_IDENTITY(((! (_GLF_DEAD(false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), bool(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((((! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((((! (_GLF_DEAD(false))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), true, true))))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (((((! (_GLF_DEAD(false))))))) && true)) || false)))), bool(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), true)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), true)))))))), (true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), bool(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((((! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((((! (_GLF_DEAD(false))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), true, true))))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (((((! (_GLF_DEAD(false))))))) && true)) || false)))), bool(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), true)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((((! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((((! (_GLF_DEAD(false))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), true, true))))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (((((! (_GLF_DEAD(false))))))) && true)) || false)))), bool(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), true)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((((! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((((! (_GLF_DEAD(false))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), true, true))))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (((((! (_GLF_DEAD(false))))))) && true)) || false)))), bool(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), true)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)))), ! (! ((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((((! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((((! (_GLF_DEAD(false))))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2((((! (_GLF_DEAD(false))))), false), false)), false, true)), true, true))))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! _GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (_GLF_IDENTITY(((((! (_GLF_DEAD(false)))))), (((((! (_GLF_DEAD(false))))))) && true)) || false)))), bool(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), true)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), false, false)))) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(true), (bool(true)) || false)), true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))), ((_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))), true && (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))))), true, true, true)))))))))), true, true), false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))), true && _GLF_IDENTITY(((! (_GLF_DEAD(false)))), true && (_GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))))))), bool(bvec3(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, _GLF_IDENTITY(true, ! (! (true))), true)))))))), false, false)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec3(bvec3(bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false))))))) && true)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(((! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (! (((! (_GLF_DEAD(false))))))), false)), (bool(bvec2(_GLF_IDENTITY(((! (_GLF_DEAD(false)))), ! (! (((! (_GLF_DEAD(false))))))), false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(960.907) : injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), false)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))), false, false), false))))))))))), true)))), bvec3(bvec4(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false), false)))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, false)))) && true)))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), _GLF_IDENTITY((! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true, false)))), false)))))))), ! (! ((! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true, false)))), false))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), bvec3(bvec4(bvec3(bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false), true)))))) && true)))), true), false), bvec3(bvec4(bvec3(bvec2((_GLF_IDENTITY(! (((! (_GLF_DEAD(false))))), (! _GLF_IDENTITY((((! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((((! (_GLF_DEAD(false)))))), bool(_GLF_IDENTITY(bool(! ((((! (_GLF_DEAD(false))))))), bool(bvec3(bool(! ((((! (_GLF_DEAD(false))))))), false, false)))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, false || (false)), false))), _GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))) && true)))), true), false), false)))))))), false, true)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false))), true))))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, false))), bool(bvec2(! (bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false))), true, false))), true))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))) && ((! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))))))), true, true), false))))))), false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false), false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, length(vec2(0.0, 0.0)), exp(0.0), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), clamp(max(0u, 0u), max(0u, 0u), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2((0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec2((0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? uvec2((0u), uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(uvec2(42425u, 70249u))))) >> uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2((0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(uvec2((0u), uint(_GLF_ONE(1.0, injectionSwitch.y))), (true ? uvec2((0u), uint(_GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(uvec2(42425u, 70249u))))) >> uvec2(0u, 0u)))) - 0u)) - 0u)) - 0u), 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | 0u)), 1u), uvec4(1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), _GLF_IDENTITY(uint(uvec3(max(1u, 1u), (0u | 0u), 0u)), (_GLF_IDENTITY(uint(uvec3(max(1u, 1u), (0u | 0u), 0u)), max(uint(uvec3(max(1u, 1u), (0u | 0u), 0u)), uint(uvec3(max(1u, 1u), (0u | 0u), 0u))))) / 1u))), 1u, 1u) * (uvec4(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), 0u, 0u, 1u)))))], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), (_GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(read_2, read_2, read_2), (clamp(read_2, read_2, read_2)) << 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))), false)))) && true)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false)))) && true)), (true ? uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), _GLF_IDENTITY(false, (false) && true))))) && true)) : _GLF_FUZZED(subgroup_local_id)))) - 0u), _GLF_IDENTITY(uint(read_1 == read_2), uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | 0u), 0u, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(4u), uint(4u)), ~ (_GLF_IDENTITY(~ (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY((~ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), ((1u ^ 1u) ^ 0u) ^ (uint(4u)))), 1u * (~ (uint(4u)))))), uint(4u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((~ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (uint(4u)), 1u * (~ (uint(4u)))))), uint(4u)))))) - 0u))))))), uint(_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u))) == read_2)), (_GLF_IDENTITY(clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)), (clamp(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))))) | _GLF_IDENTITY((clamp(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)), ! (! (bool(bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))))))), uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), uint(read_1 == read_2))), 1u * (_GLF_IDENTITY((clamp(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))), bool(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(bvec3((! (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), (_GLF_IDENTITY(read_2, min(read_2, read_2))) - 0u)), uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))), uint(uint((clamp(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(read_1 == read_2)), bool(bool(bool(bool(read_1 == read_2))))), ! (! (bool(bool(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2))))))), uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(read_2, (read_2) | (read_2))))))), uint(read_1 == read_2)))))))))) | 0u)))) + 1, 4, 64, _GLF_IDENTITY(4, int(int(4))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, (true) || false)))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_IDENTITY(uvec2(read_2, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(read_2, 0u)), ~ (~ (_GLF_IDENTITY((uvec2(read_2, 0u)), max((uvec2(read_2, 0u)), (uvec2(read_2, 0u))))))), uvec2(uvec2((uvec2(read_2, 0u))))) | (_GLF_IDENTITY(uvec2(read_2, 0u), uvec2(0u, 0u) | (uvec2(read_2, 0u)))))) | uvec2(0u, 0u)))), bool(bvec4(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_IDENTITY(uvec2(read_2, 0u), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(read_2, 0u)), ~ (~ (_GLF_IDENTITY((uvec2(read_2, 0u)), max((uvec2(read_2, 0u)), (uvec2(read_2, 0u))))))), uvec2(uvec2((uvec2(read_2, 0u))))) | (_GLF_IDENTITY(uvec2(read_2, 0u), uvec2(0u, 0u) | (uvec2(read_2, 0u)))))) | uvec2(0u, 0u)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), uint(_GLF_IDENTITY(uint(uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_IDENTITY(uvec2(read_2, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uvec4(0u, (1u | 1u), 1u, 1u))), min(0u, 0u)), 0u))) - 0u)), (_GLF_IDENTITY(uvec2(read_2, 0u), (uvec2(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2)))), 0u)) | uvec2(0u, 0u))) | (uvec2(read_2, 0u)))) | uvec2(0u, 0u)))))), 0u | (uint(uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), uint(_GLF_IDENTITY(uvec2(read_2, 0u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(read_2, 0u), uvec2(uvec2(uvec2(read_2, 0u)))), (uvec2(read_2, 0u)) | (uvec2(read_2, 0u)))) | uvec2(0u, 0u)))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
