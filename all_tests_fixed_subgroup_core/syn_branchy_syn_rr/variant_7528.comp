#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 bvec3 _f0;
 mat2 _f1;
 mat2x3 _f2;
 uvec3 _f3;
 float _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_17 _f0;
 mat2x3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
 vec4 _f1;
 vec2 _f2;
 float _f3;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
} ;

struct _GLF_struct_16 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 uint num_workgroup;
 _GLF_struct_18 _f1;
} ;

struct _GLF_struct_11 {
 vec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
 mat4 _f1;
 bvec2 _f2;
 uint _f3;
 _GLF_struct_11 _f4;
} ;

struct _GLF_struct_9 {
 uvec4 _f0;
} ;

struct _GLF_struct_8 {
 uvec2 _f0;
 mat2 _f1;
 mat2x4 _f2;
 ivec2 _f3;
 mat2x3 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 mat4x2 _f1;
 ivec3 _f2;
 uvec3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 int _f1;
 uvec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_5 {
 vec2 _f0;
 uint _f1;
 bvec2 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_10 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 mat3x4 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_9 _f5;
} ;

struct _GLF_struct_3 {
 uint _f0;
 mat2x3 _f1;
 mat3x2 _f2;
 mat3x2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 mat3x2 _f1;
 int _f2;
 vec3 _f3;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uvec3 _f1;
 ivec4 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec4 _f1;
 mat2x3 _f2;
 bvec4 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat2x4 _f2;
 _GLF_struct_2 _f3;
 vec3 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_13 {
 uint virtual_gid;
 mat3x4 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_10 _f2;
 mat3 _f3;
 _GLF_struct_12 _f4;
 ivec3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), true, true)), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_16(_GLF_struct_14(_GLF_IDENTITY(mat3(1.0), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3(1.0)))), _GLF_struct_15(mat4x2(1.0), vec4(1.0), vec2(1.0), 1.0)), gl_NumWorkGroups.x, _GLF_struct_18(_GLF_struct_17(bvec3(true), _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0)))), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec3(1u), _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0)), mat3x2(1.0)), mat2x3(1.0), uvec3(1u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)), false || (bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), mix(float(_GLF_FUZZED(9774.5571)), float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max(float(vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0)), float(vec3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0))))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(_GLF_FUZZED(-8.8), _GLF_IDENTITY((_GLF_FUZZED(-8.8)) - 0.0, mix(float((_GLF_FUZZED(-8.8)) - 0.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - abs(0.0))), (float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(_GLF_FUZZED(-8.8), _GLF_IDENTITY((_GLF_FUZZED(-8.8)) - 0.0, mix(float((_GLF_FUZZED(-8.8)) - 0.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - abs(0.0)))) + 0.0), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(_GLF_FUZZED(-8.8), _GLF_IDENTITY((_GLF_FUZZED(-8.8)) - 0.0, mix(float((_GLF_FUZZED(-8.8)) - 0.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - abs(0.0))), (float(_GLF_IDENTITY(_GLF_FUZZED(-8.8), (_GLF_IDENTITY(_GLF_FUZZED(-8.8), _GLF_IDENTITY((_GLF_FUZZED(-8.8)) - 0.0, mix(float((_GLF_FUZZED(-8.8)) - 0.0), float(_GLF_FUZZED(3.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - abs(0.0)))) + 0.0), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), _GLF_IDENTITY((vec2(0.0, 0.0)), mix(vec2(((vec2(0.0, 0.0)))[0], ((vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(vec2(-997.270, 1.6).x), _GLF_FUZZED((+ 4503.7790))), bvec2(false, false))))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true))))))), max(_GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true))))))), _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true))))))), min(mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true))))))), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), _GLF_IDENTITY(float(0.0), float(mat4x3(float(0.0), exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, sin(0.0)))), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(-1.1), _GLF_FUZZED(-5891.0790)), vec2((_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false))))[0], (_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false))))[1]), bvec2(true, true)))).y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(6.7))), 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(1.7, 88.44)), mix(vec2(_GLF_FUZZED(-25.09), _GLF_FUZZED(0.1)), vec2((_GLF_FUZZED(vec2(1.7, 88.44)))[0], (_GLF_FUZZED(vec2(1.7, 88.44)))[1]), bvec2(true, true))))))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y)))))))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.0, 0.0)), vec2(1.0, 1.0) * ((vec2(0.0, 0.0)))), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max(_GLF_IDENTITY((vec2(0.0, 0.0)), (true ? (vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) * sqrt(1.0)), 0.0)))), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, _GLF_IDENTITY(88.44, float(mat2x3(88.44, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, 0.0)), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max((vec2(0.0, 0.0)), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y)), true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * _GLF_IDENTITY((vec2(0.0, 0.0)), min(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), max((_GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))))), vec2(0.0, 0.0)))), (vec2(0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.8)), float(0.0), bool(true)))))))) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-284.209), (_GLF_IDENTITY((injectionSwitch), min((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(-49.83)), bvec2(false, false)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-442.011), _GLF_FUZZED(-9157.9701)), bvec2(false, false))), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))), mat2(1.0) * (_GLF_IDENTITY((injectionSwitch), (true ? _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) : _GLF_FUZZED(vec2(1.7, 88.44)))))))))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(373.465)), bvec2(true, false)))).y)))))))))), false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u))), (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))) + uvec3(0u, _GLF_IDENTITY(0u, 1u * (0u)), 0u))), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 1u)))))))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(48332u) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))) | (subgroup_local_id)), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(107798u) : _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)), _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size, _GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size)) + subgroup_local_id)))), mat3x4(1.0), _GLF_struct_4(_GLF_struct_0(bvec3(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, false, false)))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))), mat2x3(1.0), bvec4(true), vec2(1.0)), _GLF_struct_1(bvec2(true), uvec3(1u), ivec4(1), 1u), mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(1345.1826)), float(_GLF_IDENTITY(1.0, 1.0 * (1.0))), bool(true)))), _GLF_struct_2(vec4(1.0), mat3x2(1.0), 1, vec3(1.0)), vec3(1.0), _GLF_struct_3(1u, mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-1274.8544) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mat3x2(1.0), mat3x2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), ivec4(1))), _GLF_struct_10(_GLF_struct_5(vec2(1.0), 1u, bvec2(true), mat3x2(1.0), mat3x2(1.0), mat2x3(1.0)), _GLF_struct_6(vec3(1.0), 1, _GLF_IDENTITY(uvec2(1u), clamp(_GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> (uvec2(0u, 0u) << _GLF_IDENTITY(uvec2(4u), uvec2(4u)))), uvec2(1u), uvec2(1u))), mat3(1.0)), _GLF_struct_7(mat2x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x2(1.0), ivec3(1), uvec3(1u), uvec2(1u)), mat3x4(1.0), _GLF_struct_8(uvec2(1u), mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat2x4(1.0), ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) >> 0)) >> 0)))) | (1))) * ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) | (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))), 1))), mat2x3(1.0), mat3x4(1.0)), _GLF_struct_9(uvec4(1u))), mat3(1.0), _GLF_struct_12(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1))), mat4(1.0), bvec2(_GLF_IDENTITY(true, (true) || false)), 1u, _GLF_struct_11(vec4(1.0), _GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(87634u, 168180u, 115034u, 147330u) & _GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))), (uvec4(87634u, 168180u, 115034u, 147330u) & _GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))) * uvec4(1u, 1u, 1u, 1u))) ^ (uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | ((_GLF_IDENTITY(uvec4(87634u, 168180u, 115034u, 147330u) & _GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))), (uvec4(87634u, 168180u, 115034u, 147330u) & _GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))))), ~ (~ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, min(0u, 0u)), 0u))))))) * uvec4(1u, 1u, 1u, 1u))) ^ (uvec4(1u))))))))), ivec3(1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) ^ 0u) * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u + (_GLF_FUZZED(workgroup_base)))), ((_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u + (_GLF_FUZZED(workgroup_base))))) | (0u | 0u))) : subgroup_id * subgroup_size)))) + ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-11219))), subgroup_local_id + 1))) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), false || (bool(bvec2(false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_13.virtual_gid], clamp(buf[_GLF_struct_replacement_13.virtual_gid], buf[_GLF_struct_replacement_13.virtual_gid], buf[_GLF_IDENTITY(_GLF_struct_replacement_13.virtual_gid, min(_GLF_struct_replacement_13.virtual_gid, _GLF_struct_replacement_13.virtual_gid))])), 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.6))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_13.virtual_gid, (_GLF_struct_replacement_13.virtual_gid) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) && true)) && true) || _GLF_IDENTITY(false, ! (! (false))))))
    barrier();
   return;
  }
 if(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(true, bool(bvec3(true, true, false))) ? _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) >> 0)), 0 ^ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) >> 0)), ~ (~ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) >> 0))))))) - 0) : _GLF_FUZZED(-54282))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8280.2934)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * mat2(1.0), vec2(vec4((vec2(1.0, 1.0)) * mat2(1.0), 1.0, 0.0))))).x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))) || false, ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))) || false) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(uint(uint(read_1 == read_2) + 1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) | (0 >> _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(1), int(1))), (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) | 0) * (64)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))) - 0, clamp((_GLF_IDENTITY(4, 0 | (4))) - 0, (_GLF_IDENTITY(4, 0 | (4))) - 0, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 | (4))) - 0, (false ? _GLF_FUZZED(-21915) : (_GLF_IDENTITY(4, 0 | (4))) - 0))))), 64, _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, 0 + (4))), (min(4, 4)) + 0)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), false || (bool(bvec4(false, false, false, false)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false) && true, true && ((false) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
