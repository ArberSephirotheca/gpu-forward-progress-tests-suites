#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_35 {
 int _injected_loop_counter;
 bvec4 _f0;
} ;

struct _GLF_struct_36 {
 _GLF_struct_35 _f0;
 mat2x4 _f1;
 bvec4 _f2;
 uint _f3;
 mat2 _f4;
} ;

struct _GLF_struct_32 {
 bvec3 _f0;
 uvec3 _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_31 {
 ivec3 _f0;
} ;

struct _GLF_struct_33 {
 _GLF_struct_31 _f0;
 bool _f1;
 mat2x3 _f2;
 _GLF_struct_32 _f3;
} ;

struct _GLF_struct_29 {
 bool _f0;
} ;

struct _GLF_struct_30 {
 mat2 _f0;
 _GLF_struct_29 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_27 {
 vec4 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 bvec4 _f4;
 ivec4 _f5;
 vec4 _f6;
} ;

struct _GLF_struct_26 {
 bvec2 _f0;
} ;

struct _GLF_struct_25 {
 mat4 _f0;
 mat3 _f1;
 ivec2 _f2;
 int _f3;
} ;

struct _GLF_struct_24 {
 ivec2 _f0;
 bvec4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_28 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 _GLF_struct_27 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_34 {
 _GLF_struct_28 _f0;
 _GLF_struct_30 _f1;
 uvec4 GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size;
 float _f2;
 _GLF_struct_33 _f3;
} ;

struct _GLF_struct_21 {
 mat2x4 _f0;
 mat3 _f1;
 vec3 _f2;
 mat2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_20 {
 uint _f0;
 mat3x4 _f1;
 ivec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_22 {
 mat2x4 _f0;
 uint _f1;
 mat2x4 _f2;
 _GLF_struct_20 _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_19 {
 ivec3 _GLF_SWITCH_1_19v;
 uvec4 _f0;
} ;

struct _GLF_struct_17 {
 bvec3 _f0;
} ;

struct _GLF_struct_16 {
 ivec2 _f0;
 ivec4 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_18 {
 float _f0;
 _GLF_struct_16 _f1;
 mat2x4 _f2;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_15 {
 bvec2 _f0;
 uvec2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_13 {
 vec2 _f0;
 float _f1;
 mat3 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_14 {
 ivec3 _f0;
 _GLF_struct_13 _f1;
 mat2x4 _f2;
 mat2x4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 mat4x2 _f1;
 uvec3 _f2;
 mat2x4 _f3;
 mat2 _f4;
 vec2 _f5;
 uvec2 _f6;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_12 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 _GLF_struct_22 _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 ivec4 _f1;
 ivec3 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 int _f1;
 ivec3 _f2;
 vec2 _f3;
 bvec3 _f4;
 ivec2 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_9 {
 mat3x4 _f0;
 bool _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 vec2 _f1;
 uint workgroup_id;
 _GLF_struct_9 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat3 _f1;
 uvec2 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 int _f1;
 float _f2;
} ;

struct _GLF_struct_2 {
 ivec2 _f0;
 float _f1;
} ;

struct _GLF_struct_1 {
 ivec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 mat4x3 _f4;
 ivec3 _f5;
 bool _f6;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 float _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 uvec2 _f2;
 _GLF_struct_5 _f3;
 uint read_2;
 mat3x4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size;
 uvec4 GLF_merged3_0_2_47_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnum_workgroupread_1;
 _GLF_struct_34 _GLF_struct_replacement_34;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 GLF_merged3_0_2_47_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnum_workgroupread_1.xy = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy = GLF_merged3_0_2_47_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnum_workgroupread_1.xy;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(512.032)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.x = subgroup_id, (_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.x = subgroup_id) - 0u);
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.y;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_47_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnum_workgroupread_1.z = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 do
  {
   do
    {
     GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z = workgroup_size;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.w = GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.z;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(mat3x4(1.0), vec2(1.0), gl_WorkGroupID.x, _GLF_struct_9(mat3x4(1.0), true, _GLF_struct_7(bvec3(true), 1, ivec3(1), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat4x2(1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 1.0))))))), bvec3(true), ivec2(1), mat2x3(1.0)), _GLF_struct_8(uvec4(1u), ivec4(1), ivec3(1), mat2x4(1.0), mat2x3(1.0), uvec4(1u)), mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), clamp(_GLF_IDENTITY(float(1.0), mix(float(_GLF_FUZZED(-7894.6111)), float(float(1.0)), bool(true))), float(1.0), float(1.0))))))), mat3x2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.z = _GLF_struct_replacement_10.workgroup_id;
 uint workgroup_base = GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.w * GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.z;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.x * _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w + _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.y = virtual_gid;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.x * _GLF_IDENTITY(_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size, (_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size) | (_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size)).w + (_GLF_IDENTITY((_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z + 1) % _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w, min((_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z + 1) % _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w, _GLF_IDENTITY((_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z + 1) % _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w, ((_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z + 1) % _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w) / 1u))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))));
  }
 atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.y], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_47_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnum_workgroupread_1.w = read_1;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.x = GLF_merged3_0_2_47_2_1_13_3_1_6GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidnum_workgroupread_1.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_0(ivec4(1), 1.0), ivec3(1), uvec2(1u), _GLF_struct_5(_GLF_struct_1(ivec3(1), ivec3(1)), _GLF_struct_2(ivec2(1), 1.0), _GLF_struct_3(vec3(1.0), 1, 1.0), _GLF_struct_4(mat2x3(1.0), mat3(1.0), uvec2(1u), uvec2(1u)), mat4x3(1.0), ivec3(1), true), atomicLoad(buf[_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.xy.y], 4, 64, 0), mat3x4(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.y = _GLF_struct_replacement_6.read_2;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.z + 1 < _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w)
      {
       if(_GLF_DEAD(false))
        barrier();
       switch(_GLF_SWITCH(0))
        {
         case 0:
         case 12:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, true, false))))))))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, abs(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0))) : _GLF_FUZZED(931.018))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))).y))) && true)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
          barrier();
         case 15:
         if(_GLF_DEAD(false))
          barrier();
         case 83:
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         case 38:
         int i = 0;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         case 92:
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              return;
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         case 41:
         if(_GLF_DEAD(false))
          return;
         for(_GLF_struct_36 _GLF_struct_replacement_36 = _GLF_struct_36(_GLF_struct_35(_GLF_IDENTITY(0, (0) | (0)), bvec4(true)), mat2x4(1.0), bvec4(true), 1u, _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (false ? _GLF_FUZZED(mat3x4(-563.230, 2597.8357, -8980.2976, -787.018, -6.2, 172.159, -0.6, -863.100, 3.3, -709.609, 886.998, 8.7)) : mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), transpose(_GLF_IDENTITY(transpose(transpose(mat2(1.0))), (false ? _GLF_FUZZED(matrixCompMult(mat2(-3525.0824, 6.5, 84.06, 3031.7535), mat2(3.6, 6.8, 3.1, -180.881))) : transpose(transpose(mat2(1.0))))))))))))), transpose(transpose(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (false ? _GLF_FUZZED(mat3x4(-563.230, 2597.8357, -8980.2976, -787.018, -6.2, 172.159, -0.6, -863.100, 3.3, -709.609, 886.998, 8.7)) : mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))))))), mat2(mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (false ? _GLF_FUZZED(mat3x4(-563.230, 2597.8357, -8980.2976, -787.018, -6.2, 172.159, -0.6, -863.100, 3.3, -709.609, 886.998, 8.7)) : mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))), transpose(transpose(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (false ? _GLF_FUZZED(mat3x4(-563.230, 2597.8357, -8980.2976, -787.018, -6.2, 172.159, -0.6, -863.100, 3.3, -709.609, 886.998, 8.7)) : mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), _GLF_IDENTITY(mat2(mat3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))), (mat2(mat3(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) - mat2(0.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat3x4(-563.230, 2597.8357, -8980.2976, -787.018, -6.2, _GLF_IDENTITY(172.159, _GLF_IDENTITY(float(mat3(172.159, round(length(normalize(sqrt(1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0)), (true ? float(mat3(172.159, round(length(normalize(sqrt(1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, 1.0)) : _GLF_FUZZED(-699.936)))), -0.6, -863.100, _GLF_IDENTITY(3.3, float(vec4(3.3, 0.0, 0.0, 0.0))), -709.609, 886.998, 8.7)) : mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))), transpose(transpose(mat3x4(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (false ? _GLF_FUZZED(mat3x4(-563.230, 2597.8357, -8980.2976, -787.018, -6.2, 172.159, -0.6, -863.100, 3.3, -709.609, 886.998, 8.7)) : mat3x4(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))))))))))))))))))); _GLF_WRAPPED_LOOP(_GLF_struct_replacement_36._f0._injected_loop_counter != _GLF_IDENTITY(((1 ^ 0) & 1), (((1 ^ 0) & 1)) - (0 | 0))); _GLF_struct_replacement_36._f0._injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         case 79:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         case 14:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x], uint(GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.x == GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.y) + 1, 4, 64, 4);
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         default:
         1;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       switch(_GLF_SWITCH(0))
        {
         case 89:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         vec4(-4386.4413, 8.3, 4.9, 61.01);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
              return;
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         case 0:
         case 35:
         if(_GLF_DEAD(false))
          barrier();
         case 73:
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         case 75:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 11:
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         case 24:
         case 43:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         case 46:
         case 62:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 65:
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[GLF_merged3_0_1_16_1_1_17_2_1_14next_virtual_gidsubgroup_local_idworkgroup_size.x], uint(GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.x == GLF_merged4_0_1_6_1_1_6_2_1_12_3_1_14read_1read_2workgroup_idworkgroup_size.y) + 1, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  continue;
                }
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
          barrier();
         break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 84:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
          }
         for(int _GLF_SWITCH_1_0v[43]; (_GLF_IDENTITY(mat2(275.590, -1.7, 3267.8127, -623.336) != mat2(39.29, 2.1, -4326.5318, 8.3), (mat2(275.590, -1.7, 3267.8127, -623.336) != mat2(39.29, 2.1, -4326.5318, 8.3)) && true)); mat4x3(-980.623, -633.703, -3635.4257, -26.42, 5598.2486, 672.793, 367.144, 24.48, 3.1, 7.4, -9.1, -24.93))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
           for(           ivec4(-33816, -11532, -58979, -37493);
 false; vec4(2.3, 8.9, -358.131, -3.7))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)))) > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                      break;
                     barrier();
                    }
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
              }
             for(bvec3 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v; (mat4x3(5.4, 49.70, -9668.5915, 9523.8355, -9.0, -936.943, 7.4, 2290.4354, 2782.3247, _GLF_IDENTITY(5.4, clamp(5.4, 5.4, _GLF_IDENTITY(5.4, mix(float(5.4), float(_GLF_FUZZED(5.2)), bool(false))))), -8.3, -8335.5536) != mat4x3(-6.6, -8.9, 6.4, -481.862, -3362.2019, 971.578, -1172.3142, 64.86, 7523.5698, -755.126, 303.214, 58.68)); mat4x3(-4.5, -623.583, 263.106, -9128.1824, 0.7, _GLF_IDENTITY(-125.725, (false ? _GLF_FUZZED(-86.07) : _GLF_IDENTITY(-125.725, clamp(-125.725, -125.725, -125.725)))), 42.47, -5.9, 6.5, -1822.7516, 9763.4281, 58.88))
              {
               mat2x3(-9473.0305, -827.705, floor(-26.98), refract(1.9, float(3832), 756.196), 18.28, -80.92);
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 mat2(mat3x2(-3246.4770, 18.30, 3.4, 3543.5381, 6.9, -7410.6488));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat2x3(-89.35, 2.3, 5.1, -8561.0257, 1.7, -980.745);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               mat3(9.5, -54.99, 55.06, -5808.0086, -1.0, 6.2, -4.1, 442.049, -80.38);
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  continue;
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), clamp(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9.0)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))))))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               (_GLF_IDENTITY(true ? (_GLF_IDENTITY((vec4(-795.671, 1564.7286, -8792.9331, -6599.3160) , bvec2(false, true)), bvec2(bvec3((vec4(-795.671, 1564.7286, -8792.9331, -6599.3160) , bvec2(false, true)), false)))) : bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(true ? (vec4(-795.671, 1564.7286, -8792.9331, -6599.3160) , bvec2(false, true)) : bvec2(false, true), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true ? (vec4(_GLF_IDENTITY(-795.671, clamp(_GLF_IDENTITY(-795.671, (-795.671) * 1.0), -795.671, -795.671)), 1564.7286, _GLF_IDENTITY(-8792.9331, (false ? _GLF_FUZZED(701.369) : -8792.9331)), -6599.3160) , bvec2(_GLF_IDENTITY(false, (false) || false), true)) : bvec2(false, true), true), bvec3(bvec3(bvec3(true ? (vec4(-795.671, 1564.7286, _GLF_IDENTITY(-8792.9331, (false ? _GLF_FUZZED(701.369) : -8792.9331)), -6599.3160) , bvec2(_GLF_IDENTITY(false, (false) || false), true)) : bvec2(false, true), true))))))))));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 mat2(4.4, 9842.7738, -892.082, 1.7);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(mat4x2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), min(vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(1.0, cos(0.0), abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, round(length(normalize(1.0)))))), 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))), vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), vec3(mat4(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, cos(0.0), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y)))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 0.0)))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0)))).y))), false, true, false))))) || false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               mat3x4 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[42], _GLF_SWITCH_1_5v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               ;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             uint _GLF_SWITCH_1_6v, _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v[70];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               continue;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if((ivec2(79662, -30670) != clamp(ivec2(-93556, 81964), 43976, 98756)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               faceforward(injectionSwitch, log(vec2(-72.40, -9.6)), vec4(_GLF_IDENTITY(0.8, 1.0 * (_GLF_IDENTITY(0.8, mix(float(_GLF_IDENTITY(0.8, (false ? _GLF_FUZZED(2004.3122) : 0.8))), float(_GLF_FUZZED(-477.752)), bool(false))))), 7959.4175, -41.43, _GLF_IDENTITY(-6.2, max(-6.2, -6.2))).tq);
               ;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 barrier();
                }
               bvec3 _GLF_SWITCH_1_9v, _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[91];
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                 ivec3(16038, 83813, _GLF_IDENTITY(92584, (92584) - 0));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 bvec4(false, true, true, false).yxzx;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 break;
                }
               mat2x3(-5.0, -7.7, 9.1, 9572.3704, -91.63, _GLF_IDENTITY(_GLF_IDENTITY(-6.2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(-6.2, clamp(-6.2, -6.2, -6.2)) : _GLF_FUZZED(748.602))), max(_GLF_IDENTITY(-6.2, (-6.2) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), abs(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, exp(0.0), 0.0, exp(0.0), 1.0, 1.0)), (true ? float(mat4x3(0.0, 0.0, determinant(mat2(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), abs(1.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, exp(0.0), 0.0, exp(0.0), 1.0, 1.0)) : _GLF_FUZZED(24.64))))), -6.2)));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                barrier();
               vec3 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v[49];
              }
             else
              {
               mat4x3(_GLF_IDENTITY(-7.3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? -7.3 : _GLF_FUZZED(-546.372))), 7.3, 6.5, -150.295, -9.5, _GLF_IDENTITY(-513.346, float(mat2x3(-513.346, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, sin(0.0), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, sin(0.0), 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 3.0, 667.120, 2.2, 0.7, 16.79, -9.4);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              mat3x4 _GLF_SWITCH_1_14v[22];
              if(_GLF_DEAD(false))
               barrier();
              mat4x2 _GLF_SWITCH_1_15v;
              if(_GLF_DEAD(false))
               barrier();
              ;
              mat2x3(-115.971, 869.165, -1.9, -5.3, 9.6, 501.849);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  continue;
                 }
                break;
               }
              vec2 _GLF_SWITCH_1_16v, _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v;
              if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    do
                     {
                      barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))))))));
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                 }
               }
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))) - vec2(0.0, 0.0)).y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 continue;
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               barrier();
             }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             _GLF_struct_23 _GLF_struct_replacement_23;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, true, true))))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(true)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             (vec4(7.7, -981.511, 8.4, 10.76)[2] < -556.222);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (_GLF_IDENTITY(uvec3(26869u, 182424u, 62601u) / _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w, (uvec3(26869u, 182424u, 62601u) / _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w) | (uvec3(26869u, 182424u, 62601u) / _GLF_struct_replacement_34.GLF_merged3_0_2_47_2_1_17_3_1_13GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gidsubgroup_local_idsubgroup_size.w)));
             mat4x2(-953.527, 3.0, -580.316, 2.2, -563.122, -41.49, -56.69, 17.06);
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           int _GLF_SWITCH_1_20v[32];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --))) << 0))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           return;
          }
         case 38:
         ;
         default:
         for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
                barrier();
              }
            }
          }
         1;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
