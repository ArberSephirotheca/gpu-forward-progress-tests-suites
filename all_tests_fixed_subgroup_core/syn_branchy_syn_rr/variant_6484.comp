#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)) != 0); _injected_loop_counter --)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)))))
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, (0 | 0) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-754.147)), bool(false)))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), 0 | ((0 << _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter --)
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          continue;
        }
      }
     if(_GLF_DEAD(false))
      continue;
    }
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0 | 0, (0 | 0) / 1)), (false ? _GLF_FUZZED(2810) : int(_GLF_IDENTITY(0 | 0, (0 | 0) / 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0))), true && (_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), min((0), (0))), (0)))), min(~ _GLF_IDENTITY((~ (0)), (_GLF_IDENTITY((~ (0)), max((~ (0)), (~ (0))))) / 1), ~ (~ (0)))))))); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | (0 & -31637))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x))), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)))) / 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(packUnorm4x8(vec4(-7934.7958, _GLF_IDENTITY(-8.4, (_GLF_IDENTITY(-8.4, _GLF_IDENTITY(float(vec3(-8.4, 1.0, 1.0)), mix(float(_GLF_FUZZED(8207.3711)), float(float(vec3(-8.4, 1.0, 1.0))), bool(true))))) / _GLF_ONE(1.0, injectionSwitch.y)), -47.57, -5163.0723))) : 1u)), 0u))))), _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u | (1u)), 0u, 1u), uvec3(uvec4(uvec3(1u, 0u, 1u), 0u))))))) * (subgroup_size));
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
      break;
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9.5)), bool(false)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, true && (false)))))))) || (bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) >> (0 ^ 0))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)))
          {
           return;
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), (! (! (_GLF_WRAPPED_IF_FALSE(false)))) || false))))))
        {
        }
       else
        {
         return;
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 ^ 0), min(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (_GLF_IDENTITY(1 ^ 0, int(ivec2(1 ^ 0, 0)))) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) >> 0) ^ 0))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(1 ^ 0, (true ? 1 ^ 0 : _GLF_FUZZED(_injected_loop_counter)))) | (1 ^ 0), int(ivec3((_GLF_IDENTITY(1 ^ 0, (true ? 1 ^ 0 : _GLF_FUZZED(_injected_loop_counter)))) | (1 ^ 0), 1, 0))))), (_GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) | ((1 ^ 0)))) << 0))), (1 ^ 0)))); _injected_loop_counter ++)
    {
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) >> uvec2(0u, 0u)).x + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(0u, 0u) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) >> _GLF_IDENTITY(uvec2(0u, 0u), ~ (_GLF_IDENTITY(~ (uvec2(0u, 0u)), ~ (~ (~ (uvec2(0u, 0u)))))))).x + subgroup_local_id) ^ 0u, ((workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) >> uvec2(0u, 0u)).x + subgroup_local_id) ^ 0u) >> 0u));
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         return;
         if(_GLF_DEAD(false))
          break;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-6097.0471, 4491.6573, 0.6)[0]) : injectionSwitch.y)))))))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(false, ! (! (false)))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, _GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) || false)))))))), false || (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-1218.1677)), vec2(_GLF_FUZZED(-4.3), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! _GLF_IDENTITY((false), ! (! ((false)))))))) || false)))))))), bool(bool(false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false)), true, true, false)), false || (bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true, true, false)))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false, false, true)))))), (_GLF_IDENTITY(! (! (false)), true && (! _GLF_IDENTITY((! (false)), bool(bool((! (false)))))))) || false))))))))))))), bool(bvec3(false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ((! (false))) && true))))))))))), true, false))))))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, _GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), max(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))), dot(vec2(0.0, 0.0), vec2(1.0, _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9294.6774)), float(0.0), bool(true))), 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-50.80))), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(56.29)))))))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), max(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0)))))) * 1.0), min(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), max((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-30.57, 66.28))))) - vec2(0.0, 0.0)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), max(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) / vec2(1.0, 1.0)))[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), _GLF_IDENTITY(clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)), max(clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0)))))) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), (vec2((injectionSwitch)[0], _GLF_FUZZED(94.22))) * mat2(1.0)), vec2(_GLF_FUZZED(299.511), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), (vec2((injectionSwitch)[0], _GLF_FUZZED(94.22))) * mat2(1.0)), vec2(_GLF_FUZZED(299.511), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), (vec2((injectionSwitch)[0], _GLF_FUZZED(94.22))) * mat2(1.0)), vec2(_GLF_FUZZED(299.511), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) - sqrt(0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), mix(float(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), (vec2((injectionSwitch)[0], _GLF_FUZZED(94.22))) * mat2(1.0)), vec2(_GLF_FUZZED(299.511), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), (vec2((injectionSwitch)[0], _GLF_FUZZED(94.22))) * mat2(1.0)), vec2(_GLF_FUZZED(299.511), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), (vec2((injectionSwitch)[0], _GLF_FUZZED(94.22))) * mat2(1.0)), vec2(_GLF_FUZZED(299.511), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(false, true))).y)))))), determinant(mat2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) - sqrt(0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0)))), float(_GLF_FUZZED(-4517.0806)), bool(false))), (_GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y))), (0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))) - sqrt(0.0))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0))), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(94.22)), vec2(_GLF_FUZZED(299.511), (injectionSwitch)[1]), bvec2(false, true))).y)))), determinant(mat2(0.0, tan(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), (vec3(0.0, 1.0, 0.0)) * abs(vec3(1.0, 1.0, 1.0))), vec3(0.0, 1.0, 0.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0)), 0.0, 0.0, 0.0, exp(0.0)))))) * 1.0))))))));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), 0u | (_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, max(_GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, max(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))) / 1u), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), ~ (~ (min(subgroup_id, subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), (13821u & uint(_GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))))))) * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1))), 0u + ((subgroup_local_id + 1))))), _GLF_IDENTITY(((subgroup_local_id + 1)) ^ 0u, max(((subgroup_local_id + 1)) ^ 0u, _GLF_IDENTITY(((subgroup_local_id + 1)) ^ 0u, ~ (~ (((subgroup_local_id + 1)) ^ _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))))))))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.9)), bool(false))), max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))))) * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ~ (~ ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))) >> 0u)), ((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ~ (~ ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))) >> 0u))) + 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, min((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, max((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))))), ((((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))) | 0u)) >> 0u)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ~ (~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) - 0u))), workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, clamp(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).x + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) ^ 0u, (false ? _GLF_FUZZED(102643u) : ((subgroup_local_id + 1)) ^ 0u))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 0u | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (((_GLF_IDENTITY(subgroup_local_id + 1, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), min(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(uvec2(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), 0u))), 1u, 1u, 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, max(1, 1))))), ((subgroup_local_id + 1)) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * ((_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_local_id + 1))))))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, clamp(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_local_id + 1))))))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_local_id + 1))))))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), (false ? _GLF_FUZZED(num_workgroup) : ~ (subgroup_local_id + 1))))))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * ((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))) | ((_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0), injectionSwitch.y)) * (((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (subgroup_local_id)) + 1), min((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (subgroup_local_id), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) - 0u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), min((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, max((subgroup_local_id) | 0u, _GLF_IDENTITY((subgroup_local_id) | 0u, ((subgroup_local_id) | 0u) - 0u))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) | (subgroup_local_id)) + 0u)) + 1), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) / 1u))))) + 1)))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) * 1u))))))))) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), (false ? _GLF_FUZZED(atomicAdd(virtual_gid, workgroup_id)) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) / 1u)), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7292.5806)), float(1.0), bool(true))), max(1.0, 1.0)), injectionSwitch.y)), clamp(_GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7292.5806)), float(1.0), bool(true))), max(1.0, 1.0)), injectionSwitch.y)), min(uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7292.5806)), float(1.0), bool(true))), max(1.0, 1.0)), injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7292.5806)), float(1.0), bool(true))), max(1.0, 1.0)), injectionSwitch.y)))), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7292.5806)), float(1.0), bool(true))), max(1.0, 1.0)), injectionSwitch.y)), uint(_GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7292.5806)), float(1.0), bool(true))), max(1.0, 1.0)), injectionSwitch.y)))) * (((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, min(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))))) | (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) * uvec2(1u, 1u)))).x))), min(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), uint(uvec3(((subgroup_local_id + 1)), _GLF_IDENTITY(1u, max(1u, 1u)), 0u))) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)))), 1u), (true ? uvec3(((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u) : _GLF_FUZZED(uvec3(141428u, 156877u, 384u))))), uint(uvec2(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (false ? _GLF_FUZZED(workgroup_size) : ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (true ? uvec3((_GLF_IDENTITY((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), (((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ((_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) | 0u))) * 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u) : _GLF_FUZZED(uvec3(141428u, 156877u, 384u))))), 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u), ((subgroup_local_id + 1)) ^ 0u) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(0u, 0u) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).x), uint(_GLF_IDENTITY(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), mix(float(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)), float(_GLF_FUZZED(7417.3885)), bool(false)))) * ((_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(workgroup_size)))) ^ 0u), (subgroup_local_id + 1))) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)) * (((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) ^ 0u) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x), _GLF_IDENTITY(uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)), (uint(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y))) / 1u) * (((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / _GLF_IDENTITY(dot(vec3(round(length(normalize(1.0))), 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(round(length(normalize(1.0))), 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)), (true ? dot(vec3(round(length(normalize(1.0))), 0.0, 0.0), vec3(sqrt(1.0), 0.0, 0.0)) : _GLF_FUZZED(820.331))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ (1 | 1))); _injected_loop_counter ++)
      {
       return;
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), false || (false)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / _GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))))))))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false))))))), false))))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    continue;
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec2(0, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), uint(_GLF_IDENTITY(uint(~ (next_virtual_gid)), max(uint(~ (next_virtual_gid)), uint(~ (next_virtual_gid))))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (next_virtual_gid), uint(_GLF_IDENTITY(uint(~ (next_virtual_gid)), max(uint(~ (next_virtual_gid)), uint(~ (next_virtual_gid))))))), (~ (_GLF_IDENTITY(~ (next_virtual_gid), uint(_GLF_IDENTITY(uint(~ (next_virtual_gid)), max(uint(~ (next_virtual_gid)), uint(~ (next_virtual_gid)))))))) + 0u)))))], uint(1), 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (uvec2(38039u, 99397u) & uvec2(0u, 0u)) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) >> uvec2(0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (uvec2(38039u, 99397u) & uvec2(0u, 0u)) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))) >> uvec2(0u, 0u))) >> (uvec2(0u, 0u) ^ uvec2(0u, 0u))).y, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y), min(~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y), ~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y)))))], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), false, false))), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, false), bvec3(bvec3(bvec3(! (false), false, false)))))))), bool(bvec4(false, false, false, false)))), bool(bvec3(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), _GLF_IDENTITY((bool(bvec4(false, false, false, false))), ((bool(bvec4(false, false, false, false)))) || false) || false), false, true, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false), false, true, true)), false)))))), false, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 uint read_2 = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))), false), true))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id, 1u), (uvec2(subgroup_local_id, 1u)) ^ uvec2(0u, 0u))) | (uvec2(subgroup_local_id, 1u))))) + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ _GLF_IDENTITY((subgroup_local_id), uint(uvec3((subgroup_local_id), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))), 1u))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) | (_GLF_IDENTITY(1, (1) | (1)))) < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, true && (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((subgroup_local_id), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))))), 0u | (0u ^ (subgroup_local_id)))), 1u))) + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u))) + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) ^ 0u)) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))) << 0u)) || false))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u))) + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, uint(uvec4(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, 1u, 0u, 1u))), false || (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u))) + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u))), max(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u))))) + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ! (! (_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 1u))) + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))), false, false))))), false))))
    {
     int i = 0;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      break;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(0.0))))) / vec2(1.0, 1.0)).y))))
            {
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               return;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, true, true)))), true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) || false)))));
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
     do
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, int(ivec3(0, 1, 1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)), ! (! (false || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
             else
              {
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
            return;
          }
         else
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, _GLF_IDENTITY(64, (64) << 0), 4);
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))))) + 1, 4, 64, 4);
        }
      }
    }
  }
}
