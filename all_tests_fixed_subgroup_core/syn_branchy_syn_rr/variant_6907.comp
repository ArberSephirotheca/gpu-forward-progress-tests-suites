#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(265.016), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)), max(float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)), float(mat3((injectionSwitch)[1], 1.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0, 0.0)))))), vec2((injectionSwitch)[0], _GLF_FUZZED((-57.28 + 3847.3995))), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(false, true && (false)), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))))))), true)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true)))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))))), true)))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(true && (false), false, false)))), _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), true)))), false, true)), bool(bvec3(bool(bvec3(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))))))), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true))), false)))), true))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false, true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(true, false || (true))))))))))))), true)))), false, true)), true, true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true)))))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), true))), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), true)), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), true))), false))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), true))), false))), false))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), false)))))))))), true)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), true))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))), false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) || false)), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false)))))))))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), false))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true)))))), false))), true)), false))))), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))), false)))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))))))), false)))))))))), false || (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true), true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)), true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))), true))))))))))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), false, true))), false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))), false)))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false))))))))))))))), false)))))))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, (true) || false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), false)))))))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false), true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))), false, true, true)))))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))))))))))))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))))))))))))))), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), true))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), true)))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))), true))))))))))))))))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))), true))))))))))))))))), false))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, true))))))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || false)))))), false, true), false))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false, true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(false), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(false), false, true)), false)))))))))))))))))))))) || false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-967.074)), float((injectionSwitch)[1]), bool(true)))), vec2(_GLF_FUZZED(-6.0), _GLF_FUZZED(-9881.2608)), bvec2(false, false))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), uint(uvec3(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) - 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) - 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 0u | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) - 0u), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))) / 1u) : _GLF_FUZZED(workgroup_id))))), 1u, 1u)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) << 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), 0u ^ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), ~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(subgroup_id) : ~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), max(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))))))))))), uint(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : ~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)))), 0u ^ ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)))))))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size))), (false ? _GLF_FUZZED((29541u & 139403u)) : (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))), subgroup_size))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) / 1u)) | 0u)), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u))))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (0u | 0u)))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u))))))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED((false ? subgroup_id : num_workgroup))))), max(subgroup_size, subgroup_size)))), 0u)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u))))))) - 0u), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), 1u * (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) * 1u), 0u))))))) - 0u), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)), (_GLF_IDENTITY(uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)), uint(uvec3(uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), uint(uvec4((subgroup_size), 1u, 0u, 0u)))) | (_GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size)))))))) - 0u), max(subgroup_size, subgroup_size)))), 0u)), 0u, 1u)))) | 0u))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u))))))) - 0u))), _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u), max(subgroup_size, subgroup_size)))), 0u))))))) | 0u), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u)))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u))))))), (~ ((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u)))))))) >> 0u)))) - 0u)))) - 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) - 0u))), uint(uvec2(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size)) - (0u ^ 0u)))), (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))) - 0u)), 0u)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (0u ^ 1u)))), (subgroup_size) / 1u), max(subgroup_size, subgroup_size)))), uint(uvec2(~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), 0u))))))))) ^ 0u)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_size))))))) << 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id * subgroup_size)))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u)));
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) + 0u), next_virtual_gid)), (next_virtual_gid) - 0u), next_virtual_gid), clamp(clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) + 0u), next_virtual_gid)), (next_virtual_gid) - 0u), next_virtual_gid), clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) + 0u), _GLF_IDENTITY(next_virtual_gid, (true ? next_virtual_gid : _GLF_FUZZED(subgroup_id))))), (next_virtual_gid) - 0u), next_virtual_gid), clamp(next_virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) + 0u), next_virtual_gid)), (next_virtual_gid) - 0u), next_virtual_gid))))], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, clamp(0, 0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), true, false, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5523.0183) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(vec3(6.4, 9.6, 30.43).y)), min((true ? injectionSwitch.y : _GLF_FUZZED(vec3(6.4, 9.6, 30.43).y)), (true ? injectionSwitch.y : _GLF_FUZZED(vec3(6.4, 9.6, 30.43).y))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))) || false)), false, false, true)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-508.141)), bool(false))))) > injectionSwitch.y), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-508.141)), bool(false))))) > injectionSwitch.y))), (_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-508.141)), bool(false))))) > injectionSwitch.y))), ! (! (bool(bool((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-508.141)), bool(false))))) > injectionSwitch.y))))))) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), max(max(read_1, read_1), max(read_1, read_1)))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_IDENTITY(false, (false) || false))))), true, true, false)), _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))) || false))), true, true, false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, log(1.0), 0.0, 0.0, tan(length(0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), exp(0.0), sin(0.0), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1833.2781))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(714.684)), bool(false))), 1.0, 0.0) : _GLF_FUZZED(mat3(-237.977, 80.29, -7427.0897, -354.156, 7.6, -2.4, 9.8, -9655.9323, -3.2))))), 0.0, exp(0.0), 1.0, 0.0, 0.0), (mat3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1833.2781))), 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), determinant(_GLF_IDENTITY(mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(714.684)), bool(false))), 1.0, 0.0) : _GLF_FUZZED(mat3(-237.977, 80.29, -7427.0897, -354.156, 7.6, -2.4, 9.8, -9655.9323, -3.2))))), 0.0, exp(0.0), 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat3(injectionSwitch.y, 1.0, 0.0, determinant(mat3(0.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y)), (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y))) * vec2(1.0, 1.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, exp(0.0), 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.4)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (bool((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (bool((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (bool((injectionSwitch.x > injectionSwitch.y)))), true && (! (! (bool((injectionSwitch.x > injectionSwitch.y)))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(exp(vec2(0.0, 0.0)))).x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  barrier();
}
