#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))) * (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) ^ 0) << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0)))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) << 0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
    }
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u)))) ^ (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))), _GLF_IDENTITY(((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u)))), (((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u))))) | (_GLF_IDENTITY(((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u)))), max(((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u)))), ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(3u), _GLF_IDENTITY(uvec3(3u), min(uvec3(3u), uvec3(3u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u))), 0u, 0u)))))))))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(bitfieldInsert(workgroup_id, workgroup_id, -44731, -10465)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(mix(subgroup_size, subgroup_local_id, false)) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) | (workgroup_size))))), min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id)))), (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id)))), clamp(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id)))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))) : _GLF_FUZZED(subgroup_local_id))))))) / 1u), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), ((_GLF_IDENTITY(0u, ~ (~ (0u)))) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) >> 0u)))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY(0u, uint(uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 1u, 0u))) | (0u))) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), (min(workgroup_size, workgroup_size)) / 1u)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))), (true ? (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))) : _GLF_FUZZED(max(workgroup_id, workgroup_size))))) : _GLF_FUZZED(subgroup_local_id)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))), (true ? (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))) : _GLF_FUZZED(max(workgroup_id, workgroup_size))))) : _GLF_FUZZED(subgroup_local_id)), min((true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))), (true ? (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))) : _GLF_FUZZED(max(workgroup_id, workgroup_size))))) : _GLF_FUZZED(subgroup_local_id)), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))) | (workgroup_size)))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))), (true ? (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), 0u ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, 0u, 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), 0u ^ _GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), uint(uvec4(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 1u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) : _GLF_FUZZED(178279u))))))) : _GLF_FUZZED(max(workgroup_id, workgroup_size))))) : _GLF_FUZZED(subgroup_local_id)))))))))))))))) * workgroup_id;
 for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), min(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))), int(5))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (int(5)) ^ 0))))))), (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (int(5)) ^ 0))))))), (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (int(5)) ^ 0)))))))) - 0)) | (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(5))), _GLF_IDENTITY(int(5), ~ (~ (_GLF_IDENTITY(int(5), (int(5)) ^ 0))))))))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec4((false) || false, true, false, false))))), false, true, false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, true, false)))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(! (_GLF_IDENTITY(false, (false) || false)), false, true, false)))), false)))))))) || false)))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), 0 ^ (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(7), ~ (~ (int(7))))), ~ (~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))))))) - (51048 & 0)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), min(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))) | (_GLF_IDENTITY(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, _GLF_IDENTITY((3), (true ? _GLF_IDENTITY((3), max((3), (3))) : _GLF_FUZZED(7960))) | (3))) | (3))), int(3)))); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true)))))));
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) - 0u), 1u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), max(subgroup_size, subgroup_size)))), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) << (0u ^ 0u)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 100418u)), uint(uvec3(subgroup_size, 0u, 1u))), (subgroup_size) - 0u), 1u))), subgroup_size)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 100418u)), uint(uvec3(subgroup_size, 0u, 1u))), (subgroup_size) - 0u), 1u))), subgroup_size)), max(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 100418u)), uint(uvec3(subgroup_size, 0u, 1u))), (subgroup_size) - 0u), 1u))), subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 100418u)), uint(uvec3(subgroup_size, 0u, 1u))), (subgroup_size) - 0u), 1u))), subgroup_size))))) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 100418u)), uint(uvec3(subgroup_size, 0u, 1u))), (subgroup_size) - 0u), 1u))), subgroup_size)), (true ? subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) & 100418u)), uint(uvec3(subgroup_size, 0u, 1u))), (subgroup_size) - 0u), 1u))), subgroup_size)) : _GLF_FUZZED(workgroup_size))))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)))), uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))))), subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), uint(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)))))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | 0u), subgroup_size), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u, ~ (~ _GLF_IDENTITY(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u), min(_GLF_IDENTITY(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u), 0u | (_GLF_IDENTITY(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u), (((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u)) + 0u))), ((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), (_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))) | 0u), subgroup_size), _GLF_IDENTITY((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u))), subgroup_size)) ^ 0u, ~ (~ _GLF_IDENTITY(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))) - 0u), 1u))), subgroup_size)) ^ 0u), _GLF_IDENTITY(uint(uint(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))) - 0u), 1u))), subgroup_size)) ^ 0u))), ~ (~ (uint(uint(((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), (subgroup_size))) - 0u), 1u))), subgroup_size)) ^ 0u))))))), 0u | (_GLF_IDENTITY(((max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))))) ^ (subgroup_size)), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(103807u))), subgroup_size)), subgroup_size, subgroup_size)), (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u), (((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ _GLF_IDENTITY(0u, (0u) ^ 0u))) + 0u))), ((max(_GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), 1u))), subgroup_size)) ^ 0u))))))))))) + _GLF_IDENTITY(0u, 1u * (0u))) + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (_GLF_IDENTITY(true, ! (! (true)))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, ! (! (true))))), (! ((_GLF_IDENTITY(true, ! (! (true)))))) && true))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && ((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))), false, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))), false, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(bvec2((true), true), false, true))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) && ((! _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY((true), bool(bvec2((true), _GLF_IDENTITY(true, true && (true)))))), false, false), bvec3(bvec3(bvec3(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))), false, false))))))))))))) || false)) && true)) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), ! (! (true)))) || false)) || false))), bool(bool(((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false), ! (! (true)))) || false)) || false)))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((true), true), false, true))), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((true), true), false, true))), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec2((true), true)))))))))), true, true)))) && true)) || false))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), ((! (true))) || false))))), _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), ! (! ((_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, true, true)))))))), ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! _GLF_IDENTITY((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec2((true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((true), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2((_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))), true), false, true))), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0))))).y)) && ((! _GLF_IDENTITY((true), bool(bool(_GLF_IDENTITY((true), bool(bvec2((true), true))))))))))) && true)) || _GLF_IDENTITY(false, (false) || false)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         else
          {
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, clamp((1) >> 0, _GLF_IDENTITY((1) >> 0, max(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), (1) >> 0)), (1) >> 0))), 1))), max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, clamp((1) >> 0, _GLF_IDENTITY((1) >> 0, max(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), (1) >> 0)), (1) >> 0))), 1))), 0u ^ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, clamp((1) >> 0, _GLF_IDENTITY((1) >> 0, max(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), (1) >> 0)), (1) >> 0))), 1))))), (subgroup_local_id + _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, clamp((1) >> 0, _GLF_IDENTITY((1) >> 0, max(_GLF_IDENTITY((1) >> 0, ((1) >> 0) << 0), (1) >> 0)), (1) >> 0))), 1))))) % subgroup_size, min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + _GLF_IDENTITY(1, clamp(1, 1, 1)))) ^ 0u) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))) * 1)))))), uint(_GLF_IDENTITY(uvec2((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), clamp(1, 1, 1))), 1u), (uvec2((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), 1u)) | (uvec2((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))), 1u))))) % subgroup_size)), (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) >> 0u), min(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) >> 0u), (_GLF_IDENTITY(uint(subgroup_local_id), (uint(subgroup_local_id)) >> 0u)) >> (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) ^ 0)), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) / 1.0))) + (virtual_gid))], 4, _GLF_IDENTITY(64, int(int(64))), 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))), true, true, true)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, false)))), true, true, true))) || false)))))))
          return;
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))) < subgroup_size)
  {
   int i = 0;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))
              continue;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ _GLF_IDENTITY(0, min(0, 0))), ((0 ^ _GLF_IDENTITY(0, min(0, 0)))) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
              }
            }
          }
         else
          {
          }
        }
      }
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || _GLF_IDENTITY(false, true && (false))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
            return;
          }
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, (read_1) / uint(_GLF_ONE(1.0, injectionSwitch.y))) == read_2))) + 1, _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      continue;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(clamp(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 1u), (uvec4(read_2, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u))), 0u | (uint(_GLF_IDENTITY(uvec4(read_2, 1u, 1u, 1u), (uvec4(read_2, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)))))), read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u)))), (clamp(read_2, read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u))))) | (clamp(read_2, read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 1u)))))))) + 1, 4, 64, 4);
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_IDENTITY(true, (true) || false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))))))
        return;
      }
     if(_GLF_DEAD(false))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
