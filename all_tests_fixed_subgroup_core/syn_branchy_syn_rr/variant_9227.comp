#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)))), ! (! (! (_GLF_DEAD(false))))))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float((injectionSwitch.x) - 0.0), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, mix(float((injectionSwitch.x) - 0.0), float(_GLF_FUZZED(-5.6)), bool(false)))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) || false)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY((! (! (false))) || false, ! (! (_GLF_IDENTITY((! (! (false))) || false, ! (! ((_GLF_IDENTITY(! (! (false)), false || (! (! (false))))) || false)))))))))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))))), (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))))))) > injectionSwitch.y, false)))) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(53.58) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(13.76, 52.93)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-94.32, 3.3)))))).x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), min(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))))))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))), true, true)))))), ! (! ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))))))), max(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))))))), min(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))))))), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0)), mat2x3(mat2x3(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, sqrt(1.0))))))))))) > injectionSwitch.y, false)))) || false)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(53.58) : injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(vec2(13.76, 52.93), (vec2(13.76, 52.93)) / vec2(1.0, 1.0))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-94.32, 3.3)))))).x > injectionSwitch.y) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, log(1.0), 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, log(1.0), 0.0, 1.0))))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false || (false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))))), true, true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(false, true))), _GLF_IDENTITY(bool(bvec3(false, false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), false), bvec2(bvec2(bvec2(bool(bvec3(false, false, false)), false))))), bool(bool(bool(_GLF_IDENTITY(bvec2(bool(bvec3(false, false, false)), false), bvec2(bvec2(bvec2(bool(bvec3(false, false, false)), false))))))))), false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, true), true)))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true, true), true)))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), _GLF_IDENTITY((false), false || ((false))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) << 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-7581.7768)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u, max(0u, 0u)) << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (~ _GLF_IDENTITY((uint(_GLF_IDENTITY(3u, (3u) << 0u))), min((uint(3u)), (uint(_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), ~ (~ _GLF_IDENTITY(((3u)), (((_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(3u, (3u) | (3u)), 0u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(3u, (3u) | (3u)), 0u), (false ? _GLF_FUZZED(uvec2(179782u, 53576u)) : uvec2(_GLF_IDENTITY(3u, (3u) | (3u)), 0u))), uvec2(_GLF_IDENTITY(3u, (3u) | (3u)), 0u)))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u))))))))) | (subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)) | ((_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size)));
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (0) / 1)), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ _GLF_IDENTITY((0), int(ivec2((0), 0))), 0 ^ (~ _GLF_IDENTITY((0), int(ivec2((0), 0)))))), int(ivec2(int(~ (0)), 0))))))) + (4)), min(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))), ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) ^ 0), (0)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0)))))))))) + (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))), ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) ^ 0), (0)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0)))))))))) + (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))), ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ _GLF_IDENTITY((0), min(_GLF_IDENTITY((0), ((0)) ^ 0), (0)))), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) | 0)))))))))) + (4))) << 0)) << 0), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ (0)), 0))))))) + (4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ (0)), 0))))))) + (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ (0)), 0))))))) + (4)), _GLF_IDENTITY(4, _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(_GLF_IDENTITY(int(~ (0)), int(ivec2(int(~ (0)), 0))))))) + (4)))))), 4)), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-39.63) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-39.63) : _GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).y) || false))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true, false)))))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) / 1), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u)) / (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 0u + (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u, clamp((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u)), (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)) >> 0u)))) / (1u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uvec3(virtual_gid, 0u, (((0u ^ _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) - 0u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (_GLF_IDENTITY(~ (~ (1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((virtual_gid + virtual_gid)) : ~ (~ (1u))))) / (0u | 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u), 1u, 1u, 0u)))) | (_GLF_IDENTITY(1u, ~ (~ (1u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) - 0u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) - 0u, uint(uvec4((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) - 0u, 0u, 0u, (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))))), ((_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(uvec3(virtual_gid, 0u, _GLF_IDENTITY((((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))) * 1u))), (uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) | (uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))) - 0u) << 0u), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(6u)) << 0u), uint(6u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, max(6u, 6u))) | (6u))), uint(6u))))))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) >> 0u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) >> 0u)))))) - 0u)), 1u)), (false ? _GLF_FUZZED(subgroup_id) : uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((_GLF_IDENTITY(0u ^ 1u, 0u | (_GLF_IDENTITY(0u ^ 1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(0u ^ 1u, (0u ^ 1u) / 1u)))))) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) * 1u))))))))))) - 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) / 1u)), (uint(_GLF_IDENTITY(6u, (6u) / 1u))) | 0u)) - 0u), uint(6u))))))) - 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(~ (~ (uint(6u))), (_GLF_IDENTITY(~ (~ (uint(6u))), (~ (~ (uint(6u)))) ^ 0u)) - 0u))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, ((_GLF_IDENTITY((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u)), ((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u)))))))) | ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) * 1u), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(~ (~ (uint(6u))), (_GLF_IDENTITY(~ (~ (uint(6u))), (~ (~ (uint(6u)))) ^ 0u)) - 0u))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, ((_GLF_IDENTITY((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u)), ((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u)))))))) | ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) * 1u)) | (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(~ (~ (uint(6u))), (_GLF_IDENTITY(~ (~ (uint(6u))), (~ (~ (uint(6u)))) ^ 0u)) - 0u))) / ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, ((_GLF_IDENTITY((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u)), ((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) | 0u)) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), uint(6u)))))))) | ((_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))) * 1u))) - 0u) << 0u), (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (_GLF_IDENTITY(((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), 0u + (_GLF_IDENTITY(((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), ((_GLF_IDENTITY((0u ^ 1u), ((0u ^ 1u)) >> (0u & 67307u)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) | (((0u ^ 1u) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))) - 0u, (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, ~ (~ (6u)))) / 1u))) ^ 0u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(uint(uint(1u))), (false ? _GLF_FUZZED(subgroup_id) : uint(uint(uint(1u))))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (true ? _GLF_IDENTITY(uvec3(virtual_gid, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size)))) << 0u), (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (true ? uint(1u) : _GLF_FUZZED((uvec2(46742u, 5621u) , virtual_gid)))), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec3(0u, 0u, 0u) | (uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) | 0u))))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), max(_GLF_IDENTITY(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(_GLF_IDENTITY(uint(1u), clamp(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), _GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u))), uint(1u)))))))))), uint(uvec3(uint(6u), 1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))), ((0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))))) / 1u)))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec3(0u, 0u, 0u) | (uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), uint(uvec3(uint(6u), _GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))), ~ (~ (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))), _GLF_IDENTITY(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (1u) - 0u)), uint(uint(uint(1u)))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(_GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (false ? _GLF_FUZZED(uvec3(53889u, 56670u, 30861u)) : uvec3(virtual_gid, 0u, (((0u ^ 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u)))))))), min(uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))))))), uint(uvec3(uint(6u), 1u, (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), uint(uint(uint(1u))))))))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))))) : _GLF_FUZZED(uvec3(90797u, 127225u, 119903u))))))) - 0u)), 1u))))), ((virtual_gid) - 0u) ^ 0u))], 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-92815))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.4), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-3.4), max(_GLF_FUZZED(-3.4), _GLF_FUZZED(-3.4))), 1.0, 1.0, 0.0))) : injectionSwitch.y)))), false)), (bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.0) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.3, 975.417, vec2(39.76, -895.422)))))[1], _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[1]), max(clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])), injectionSwitch[1]), clamp(injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], injectionSwitch[1])))))).y)))), false))) || false)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3.4), float(mat2(_GLF_IDENTITY(_GLF_FUZZED(-3.4), max(_GLF_FUZZED(-3.4), _GLF_FUZZED(-3.4))), 1.0, 1.0, 0.0))) : injectionSwitch.y)))), false)), (bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(755.149)), bool(false))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.3, 975.417, vec2(39.76, -895.422)))))[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], float(_GLF_IDENTITY(mat3x4(injectionSwitch[1], 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0), mat3x4(mat4(mat3x4(injectionSwitch[1], 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(smoothstep(-0.3, 975.417, vec2(39.76, -895.422)), clamp(smoothstep(-0.3, 975.417, vec2(39.76, -895.422)), smoothstep(-0.3, 975.417, vec2(39.76, -895.422)), smoothstep(-0.3, 975.417, vec2(39.76, -895.422)))))))[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) * abs(vec2(1.0, 1.0))).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.0) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.3, 975.417, vec2(39.76, -895.422)))))[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(smoothstep(-0.3, 975.417, vec2(39.76, -895.422)))))[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]))))) * abs(vec2(1.0, 1.0))).y)))))), false))) || false))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec2(false, true))), true && (_GLF_IDENTITY(true && (bool(bvec2(false, true))), (_GLF_IDENTITY(true && (bool(bvec2(false, true))), false || (true && (bool(bvec2(false, true)))))) && true))), ! (! (_GLF_IDENTITY(true && (bool(bvec2(false, true))), (_GLF_IDENTITY(true && (bool(bvec2(false, true))), bool(bool(true && (bool(bvec2(false, true))))))) || false)))))), _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false || (false), true, true), bvec3(bvec3(bvec3(false || (false), true, true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true, true)), (bool(bvec3(false || (false), true, true))) || false), true, true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2) + 1, (_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1))) - ((0u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-911.537)), float(injectionSwitch.x), bool(true))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-77.75)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0)), (float(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0))) + 0.0)), mix(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0)), (float(mat3(injectionSwitch.x, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 0.0))) + 0.0))), float(_GLF_FUZZED(float(false))), bool(false))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(injectionSwitch, -2.9)))).y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))) && true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(0u | _GLF_IDENTITY(0u, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u), clamp(_GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u), uint(uvec2(_GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u), 0u))), _GLF_IDENTITY((~ (0u)), ((~ (0u))) << 0u)))), (0u | 0u) >> 0u)) ^ (_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))))], _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), max(read_2, read_2))))), min(_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(next_virtual_gid) : uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u))))), uint(read_1 == read_2))) + 1, 4, 64, _GLF_IDENTITY(4, (4) | ((0 >> _GLF_IDENTITY(int(7), int(7))) & 67856)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, false))).y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
