#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), false))))) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, (0u | 0u), 0u)))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! ((false)))))), ! (! (! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))))) || false))))))), false || ((! (false)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), false)))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (! (_GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(tanh(915.942)) : injectionSwitch.y))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(uvec3(workgroup_size, 0u, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), ! (! (! (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), ! (! (! (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))), ! (! ((_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), ! (! (! (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))))).y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))))))))))))))))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bool((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(vec3(1.0, 1.0, 1.0))))) > injectionSwitch.y)))), ! (! (bool(bvec3((! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true && (bool(bvec3(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u))) * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u)), (uint(uvec3((subgroup_local_id + 1) % subgroup_size, 1u, 0u))) / 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))) || _GLF_IDENTITY(false, bool(bool(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), false || ((! (false))))) || false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u), (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) | 0u)], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0)), max(_GLF_IDENTITY((0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0)), 1 * (_GLF_IDENTITY((0), ((0)) | 0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0)))), (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0))))), 0 | (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0), min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((0), 0 | ((0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0)), 1 * ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | (0))) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0)))), (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0 | 0) | (0))) - 0))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((false ? _GLF_FUZZED((read_1)) : virtual_gid), min((_GLF_IDENTITY(false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (max(virtual_gid, virtual_gid)))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (max(virtual_gid, virtual_gid)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) - _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))), virtual_gid)), 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid), ~ (~ (clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid))))), 0u))), (false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid), ~ (~ (clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid))))), 0u)))) / 1u), (false ? _GLF_FUZZED(workgroup_size) : false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), 0u))))), _GLF_IDENTITY(false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (0u & 57327u)))))), 0u))), uint(uvec2(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), _GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, (0u & 57327u)))))), 0u))), 1u))), (false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), (_GLF_IDENTITY(max(virtual_gid, virtual_gid), _GLF_IDENTITY(uint(uvec4(max(virtual_gid, virtual_gid), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec4(max(virtual_gid, virtual_gid), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(max(virtual_gid, virtual_gid), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), virtual_gid)), 0u))), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), 0u))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), 0u)))))) / 1u, ((uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), 0u)))))) / 1u) | ((uint(uint(_GLF_IDENTITY(virtual_gid, uint(uvec2(_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), virtual_gid)), 0u)))))) / 1u))))) ^ 0u)))), (false ? _GLF_FUZZED((read_1)) : _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))))))], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), min(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), min(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1)))), (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), clamp(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1)) / ivec4(1, 1, 1, 1)))), ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1)), ~ (~ (min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0))) >> 0), (4))) | (4))) + 0), (1 & 1), 0, 1), _GLF_IDENTITY(clamp(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1)) / ivec4(1, 1, 1, 1))), (true ? clamp(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), 0, 1), ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4))) | (4)), (1 & 1), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(7568) : 0)))), 0)), 1), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ((_GLF_IDENTITY(4, min(4, 4)))) >> 0), (4))) | (4)), (1 & 1), 0, 1), (ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp((4), _GLF_IDENTITY((4), ((4)) >> 0), (4)) : _GLF_FUZZED(38346)))) | (4)), (1 & 1), 0, _GLF_IDENTITY(1, (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) | 1) * (_GLF_IDENTITY(1, min(1, 1)))))) / ivec4(1, 1, 1, 1))) : _GLF_FUZZED(ivec4(6086, -68100, 12275, 20469))))), ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1)))))))) | (int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), min(ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1), ivec4(_GLF_IDENTITY(4, (4) | (4)), (1 & 1), 0, 1))))))) ^ 0)), 4, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED((-85042 % -7175)))))), 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) << 0, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) << 0), (~ ((0) << 0)) << 0), min(~ ((0) << 0), ~ ((0) << 0))), min(_GLF_IDENTITY(~ ((0) << 0), min(~ ((0) << 0), ~ ((0) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0)))), min(~ ((0) << 0), ~ ((0) << 0))), (_GLF_IDENTITY(~ ((0) << 0), _GLF_IDENTITY(min(~ ((0) << 0), ~ ((0) << 0)), (min(~ (_GLF_IDENTITY((0) << 0, (true ? _GLF_IDENTITY((0) << 0, int(int((0) << 0))) : _GLF_FUZZED(-23505)))), ~ ((0) << 0))) | (min(~ ((0) << 0), ~ ((0) << 0)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), 1 * ((0))) << 0), min(~ ((0) << 0), ~ ((0) << 0)))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) << 0), (~ ((0) << 0)) << 0), min(_GLF_IDENTITY(~ ((0) << 0), 0 | (~ ((0) << 0))), ~ ((0) << 0))), min(_GLF_IDENTITY(~ ((0) << 0), min(~ ((0) << 0), ~ ((0) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0)))), min(~ ((0) << 0), ~ ((0) << 0))), (_GLF_IDENTITY(~ ((0) << 0), _GLF_IDENTITY(min(~ ((0) << 0), ~ ((0) << 0)), (min(~ ((0) << 0), ~ ((0) << 0))) | (min(~ ((0) << 0), ~ ((0) << 0)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), 1 * ((0))) << 0), min(~ ((0) << 0), ~ ((0) << 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) << 0), (~ ((0) << 0)) << 0), min(~ ((0) << 0), ~ ((0) << 0))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY((0) << 0, int(_GLF_IDENTITY(int((0) << 0), ~ (~ (int((0) << 0))))))), min(~ ((0) << 0), ~ ((0) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0)))), min(~ ((0) << 0), ~ ((0) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) << 0), (~ ((0) << 0)) ^ 0), _GLF_IDENTITY(min(~ ((0) << 0), ~ ((0) << 0)), (min(~ ((0) << 0), ~ _GLF_IDENTITY(((0) << 0), (((0) << 0)) + 0))) | (min(~ ((0) << 0), ~ ((0) << 0)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), 1 * ((0))) << 0), min(~ ((0) << 0), ~ ((0) << 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ ((0) << 0), (_GLF_IDENTITY(~ ((0) << 0), min(~ ((0) << 0), _GLF_IDENTITY(~ ((0) << 0), max(_GLF_IDENTITY(~ ((0) << 0), 1 * (~ ((0) << 0))), ~ ((0) << 0)))))) << 0), min(~ ((0) << 0), ~ ((0) << 0))), min(_GLF_IDENTITY(~ ((0) << 0), min(~ ((0) << 0), ~ ((0) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0)))), min(~ ((0) << 0), ~ ((0) << 0))), (_GLF_IDENTITY(~ ((0) << 0), _GLF_IDENTITY(min(~ ((0) << 0), ~ ((0) << 0)), (min(~ ((0) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((+ -50569))))), ~ ((0) << 0))) | (min(~ ((0) << 0), ~ ((0) << 0)))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY((0), 1 * ((0))) << 0), min(~ ((0) << 0), ~ ((0) << 0)))))))))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u + _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u))), subgroup_local_id)) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(75360) : _GLF_IDENTITY(1, (1) - 0)))))) < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, (4) | (4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true), true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), true)), _GLF_IDENTITY(true, (true) || false))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, _GLF_IDENTITY(false, (false) && true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true)))))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true)))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true)))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true)))))), true))), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true)))))))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))) && true, _GLF_IDENTITY(false, ! (! (false)))), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))))))))))) && true) && true))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), false))))))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2(_GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), false), true)))))))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)))) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec4(bvec2((false) && true, false), true, false))), bvec2(bvec3(bvec2((false) && true, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2((false) && true, false), bvec2(bvec3(bvec2((false) && true, false), true))))))))))))))) && true) && true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), true)), true)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true)), true)))))), false))), false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], float(mat4((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0))), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), vec2(_GLF_FUZZED(-779.713), _GLF_FUZZED(-9.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(mat4(vec4(0.0, 1.0, 0.0, 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))), 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672)), max((true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672)), (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], float(mat4((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4387.6867)), bool(false))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0))), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), vec2(_GLF_FUZZED(-779.713), _GLF_FUZZED(-9.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(mat4(vec4(0.0, 1.0, 0.0, 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))))), 1.0, 0.0, 0.0, 0.0, 1.0)))), mix(vec2(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672)), max((true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672)), (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], float(mat4((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[0], _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.7)), float(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4387.6867)), bool(false))), 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))), bool(true))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 1.0, 0.0, 1.0, 0.0))), (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) / 1.0) : _GLF_FUZZED(-7565.8672))), float(vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)))))[1]), vec2(_GLF_FUZZED(-779.713), _GLF_FUZZED(-9.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))).x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) || false)) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-3.7 - -6.3)), _GLF_FUZZED(-2.2)), bvec2(false, false))), 0.0, 0.0))).y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))))))
    barrier();
  }
}
