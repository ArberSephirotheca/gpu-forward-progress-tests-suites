#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(floor(vec2(-274.092, 650.363))))).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base;
 for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = (0 & 35614); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 | (_GLF_IDENTITY(0, (0) << 0) >> _GLF_IDENTITY(int(1), int(1)))) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), clamp(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(1), int(1))))))) >> _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))) | 0))))); _injected_loop_counter ++)
        {
         do
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (1 | 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter < (1 | 1)))); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - (0 ^ 0)))
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y = _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id));
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), ! (! (bool(bool(false))))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.x = num_workgroup;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + (uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u))).x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(47.72, -0.6))))) * vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)).x > injectionSwitch.y))))
        barrier();
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8))))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, clamp(0, 0, 0)) | (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), clamp(int(8), int(8), int(8)))))))))); _injected_loop_counter --)
          {
           do
            {
             _GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size, (_GLF_IDENTITY(GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size, (true ? GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size : _GLF_FUZZED(workgroup_size)))) - 0u);
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0)) | (_injected_loop_counter)) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   do
    {
     do
      {
       GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), min(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
          barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), bool(bvec4(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true, true, false)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, float(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, 1.0))) > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base, (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base) + 0u);
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (injectionSwitch)))))).y, 1.0)), clamp(float(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0)), float(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, 1.0)))))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w, ~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w))) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, 0u, 0u), ~ (~ (uvec3(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y, 0u, 0u))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z = virtual_gid;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 uint next_virtual_gid = GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.w + subgroup_id * subgroup_size + ((GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + _GLF_IDENTITY(1, (1) * 1)) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1067.8691)), float(injectionSwitch.y), bool(true))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, 64, 4);
    }
  }
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z], 4, 64, 0);
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.z], 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14num_workgroupsubgroup_local_idvirtual_gidworkgroup_base.y + 1 < subgroup_size)
    {
     int i = 0;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = (1 & (0 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), max(int(0), int(0)))) / int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-16957))), int(int(int(_GLF_IDENTITY(0, int(ivec2(0, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)), clamp((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)), max((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1)))), (1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 | (int(1))))) >> _GLF_IDENTITY(int(1), int(1))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) | (_injected_loop_counter)) != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     barrier();
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_id) : read_2)))), read_2))), (~ (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, max(read_2, _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_id) : read_2)))), read_2)))) - 0u))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(read_2, uint(uvec2(read_2, (1u ^ 0u)))), _GLF_IDENTITY(1u, (1u) | 0u)), clamp(uvec2(read_2, _GLF_IDENTITY(1u, (1u) | (1u))), uvec2(read_2, 1u), uvec2(read_2, 1u)))))) + 1, 4, 64, 4);
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0))))).x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 | 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) & 1)); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bool(_GLF_WRAPPED_LOOP(false)))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(true && (bool(bvec2(false, true))), true && (true && (_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))), true))))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), true && (bool(bvec2(false, true)))))), ! (! ((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))))), (! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), bool(bvec3(true && (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true, true)))), (! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true, true))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true, true))), true, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), bool(bvec3((! (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true, true))), true, true, false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))))))))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
              {
               barrier();
              }
             else
              {
              }
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
             else
              {
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)), injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
          {
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat4(-763.883, 2.3, -3.4, -154.201, 4469.7487, 4.4, 8930.0407, 6.1, 453.438, 3.7, 85.20, 9899.4590, -67.87, 59.45, -9197.1136, 98.42)))), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(2.8, 9311.3284, -82.93, 2.8, -61.62, _GLF_IDENTITY(1.1, clamp(1.1, 1.1, 1.1)), 6.7, -236.316, 1.4, -28.70, -5.7, 13.53, -5.7, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0)), -117.930, 2.5)))) * (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.9) : 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), _GLF_IDENTITY(1.0, log(1.0) + (1.0)), 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat4(4.6, 9.2, 2042.2620, -0.8, -46.25, 9.7, 412.977, -35.97, 727.722, -5481.3959, 5.7, -5.5, 0.3, -87.52, 445.662, -8014.1743)) : _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-732.754) : 0.0)))), 0.0)), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, _GLF_IDENTITY(28.69, max(28.69, 28.69)), 3.0, -7.7, 8.8, 3.6, _GLF_IDENTITY(3380.1329, max(3380.1329, _GLF_IDENTITY(3380.1329, (false ? _GLF_FUZZED(833.425) : 3380.1329)))), -3.4, 263.670, _GLF_IDENTITY(5.0, max(5.0, 5.0)), 456.833, 4.7)))))))).y)), false)), bool(_GLF_IDENTITY(bvec2(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), _GLF_IDENTITY(clamp(float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), 0.0, 0.0))), clamp(clamp(float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(_GLF_IDENTITY(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), transpose(transpose(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)))))), clamp(float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))), clamp(float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)), float(mat2(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0))))))), sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))), _GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(_GLF_IDENTITY(2.8, (2.8) / 1.0), _GLF_IDENTITY(9311.3284, clamp(9311.3284, 9311.3284, 9311.3284)), -82.93, 2.8, -61.62, 1.1, 6.7, -236.316, 1.4, -28.70, -5.7, 13.53, -5.7, 0.0, -117.930, 2.5)))) * (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY((false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(_GLF_IDENTITY(4.6, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(-7249.6511) : _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, max(4.6, 4.6))) * 1.0))), max(_GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(-7249.6511) : _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, max(4.6, 4.6))) * 1.0))), _GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(-7249.6511) : _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, max(4.6, 4.6))) * 1.0))))), 9.2, 2042.2620, -0.8, -46.25, 9.7, 412.977, -35.97, 727.722, -5481.3959, 5.7, -5.5, 0.3, -87.52, 445.662, -8014.1743)) : _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-616.723))), 1.0, sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 1.0))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-48.22))), 0.0, 1.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), length(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)))))), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * ((false ? _GLF_FUZZED(_GLF_IDENTITY(mat4(_GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(-7249.6511) : _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, max(4.6, 4.6))) * 1.0))), 9.2, 2042.2620, -0.8, -46.25, 9.7, 412.977, -35.97, 727.722, _GLF_IDENTITY(-5481.3959, (-5481.3959) - 0.0), 5.7, -5.5, 0.3, -87.52, 445.662, -8014.1743), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(-7249.6511) : _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, max(4.6, 4.6))) * 1.0))), 9.2, 2042.2620, -0.8, -46.25, 9.7, 412.977, -35.97, 727.722, _GLF_IDENTITY(-5481.3959, (-5481.3959) - 0.0), 5.7, -5.5, 0.3, -87.52, 445.662, _GLF_IDENTITY(-8014.1743, min(-8014.1743, _GLF_IDENTITY(-8014.1743, (-8014.1743) - 0.0)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_FUZZED(mat4(2.5, 4.8, 8783.6250, 86.50, 357.022, 2.2, 71.99, -61.33, 76.71, -8.7, 3.3, 7.7, 421.460, 9419.0536, 1.5, -5734.2806)) : mat4(_GLF_IDENTITY(4.6, (false ? _GLF_FUZZED(-7249.6511) : _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, max(4.6, 4.6))) * 1.0))), 9.2, 2042.2620, -0.8, -46.25, 9.7, 412.977, -35.97, 727.722, _GLF_IDENTITY(-5481.3959, (-5481.3959) - 0.0), 5.7, -5.5, 0.3, -87.52, 445.662, _GLF_IDENTITY(-8014.1743, (-8014.1743) - 0.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-616.723))), 1.0, sin(0.0), length(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4962.1255)), float(0.0), bool(true)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-580.421))))), 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-48.22))), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, _GLF_IDENTITY(5.0, float(mat3x4(5.0, 0.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))), min(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))))), (_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))))), (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))) / vec2(1.0, 1.0))) * sqrt(vec2(1.0, 1.0)))), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (false ? _GLF_FUZZED(171.796) : dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(intBitsToFloat(-530))))), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0))), 1.0, sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(318.785)), bool(false))))), 1.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0))), (float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(318.785)), bool(false))))), 1.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(196552u))), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)))) * 1.0)), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))), vec2(mat4((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, exp(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), (false ? _GLF_FUZZED(171.796) : dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))))))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) : _GLF_FUZZED(intBitsToFloat(-530))))), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / determinant(mat3(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, abs(1.0), 0.0, 1.0))), 1.0, sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(318.785)), bool(false))))), 1.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0))), (float(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(318.785)), bool(false))))), 1.0, abs(1.0), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(196552u))), bool(false))), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0)))) * 1.0)), 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, round(length(normalize(1.0)))), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))))), dot(vec4(0.0, 1.0, 0.0, round(length(normalize(1.0)))), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), sqrt(1.0), abs(1.0), 0.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, 0.0))), mix(vec2((mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), min(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) + 0.0), 0.0, 0.0, 1.0)), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, _GLF_IDENTITY(8.8, (8.8) / 1.0), 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)), _GLF_IDENTITY(mat4(1.0) * (true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), min(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))), (false ? _GLF_FUZZED(mat4(47.93, 669.466, 9813.7519, -6537.0720, -341.280, 60.69, 5.4, 34.75, -6.6, 4.8, 218.017, 5941.6441, 7.3, -7.4, -0.6, 0.7)) : _GLF_IDENTITY(mat4(1.0) * (true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), min(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))), (mat4(1.0) * _GLF_IDENTITY((true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-837.786)), float(0.0), bool(true))), abs(0.0), 0.0, 0.0, 1.0)), 1.0)), min(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.4))))), 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))), (_GLF_IDENTITY((true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-837.786)), float(0.0), bool(true))), abs(0.0), 0.0, 0.0, 1.0)), 1.0)), min(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.4))))), 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))), transpose(transpose((true ? mat4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-837.786)), float(0.0), bool(true))), abs(0.0), 0.0, 0.0, 1.0)), 1.0)), min(float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0)), float(mat3x2(1.0, 0.0, 0.0, sqrt(0.0), determinant(mat4(1.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3.4))))), 1.0, 0.0, exp(0.0), 0.0, 0.0, 1.0, 0.0, abs(0.0), 0.0, 0.0, 1.0)), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7))))))) * mat4(1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))[0], _GLF_FUZZED(-8.0)), vec2(_GLF_FUZZED(-2.0), (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))))[1]), bvec2(false, true))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) - 0.0), 0.0)))), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))), clamp(mat2(1.0) * _GLF_IDENTITY((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5038.7040))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-2728.2558)))))), 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, _GLF_IDENTITY(456.833, float(mat2(456.833, 1.0, 1.0, 1.0))), 4.7)))))), mix(vec2(_GLF_FUZZED(vec4(55.37, vec2(5761.9331, 540.369), -32.47).r), _GLF_FUZZED(6.4)), vec2(((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5038.7040))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-2728.2558)))))), 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, _GLF_IDENTITY(456.833, float(mat2(456.833, 1.0, 1.0, 1.0))), 4.7)))))))[0], ((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5038.7040))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0)), (true ? float(mat2x3(1.0, 1.0, 0.0, 1.0, 1.0, 0.0)) : _GLF_FUZZED(-2728.2558)))))), 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, _GLF_IDENTITY(456.833, float(mat2(456.833, 1.0, 1.0, 1.0))), 4.7)))))))[1]), bvec2(true, true))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(1.0))), min(float(mat4(0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, sqrt(1.0))), float(mat4(0.0, sqrt(0.0), exp(0.0), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))))), 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, ! (! (true))) ? mat4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5.6)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), injectionSwitch)), 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-0.4)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), 0.0, 0.0, 1.0, sin(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, _GLF_IDENTITY(28.69, max(28.69, 28.69)), 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.7)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), float(_GLF_FUZZED(9070.4017)), bool(false))), 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, _GLF_IDENTITY(5.0, clamp(5.0, 5.0, _GLF_IDENTITY(5.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(5.0, max(5.0, 5.0)), 1.0, 1.0)), (float(vec3(_GLF_IDENTITY(5.0, max(5.0, 5.0)), 1.0, 1.0))) - 0.0)))), -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))))))))).y)), false)), false), bvec2(bvec3(bvec2(bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0))))), mix(float(0.0), float(_GLF_FUZZED(563.784)), bool(false))), 1.0, sin(0.0), length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 1.0)), 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat4(1.0))), (true ? mat4(1.0) : _GLF_FUZZED(mat4(2.8, 9311.3284, -82.93, 2.8, -61.62, _GLF_IDENTITY(1.1, max(_GLF_IDENTITY(1.1, (true ? _GLF_IDENTITY(1.1, (true ? 1.1 : _GLF_FUZZED(-7109.5157))) : _GLF_FUZZED(-90.82))), 1.1)), 6.7, -236.316, 1.4, -28.70, -5.7, 13.53, -5.7, 0.0, -117.930, 2.5)))) * (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(mat4(4.6, 9.2, 2042.2620, -0.8, -46.25, 9.7, 412.977, _GLF_IDENTITY(-35.97, _GLF_IDENTITY(min(-35.97, -35.97), min(_GLF_IDENTITY(min(-35.97, -35.97), max(min(-35.97, -35.97), min(-35.97, -35.97))), _GLF_IDENTITY(min(-35.97, -35.97), float(mat2(min(-35.97, -35.97), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))))), 727.722, -5481.3959, 5.7, _GLF_IDENTITY(-5.5, float(mat3x4(-5.5, 0.0, length(log(vec2(1.0, 1.0))), 0.0, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0))), 0.3, _GLF_IDENTITY(-87.52, float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(-87.52, _GLF_IDENTITY(float(mat3x2(-87.52, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0))), (float(mat3x2(-87.52, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(0.0)))) / 1.0)), min(-87.52, -87.52)), 0.0))), 445.662, -8014.1743)) : _GLF_IDENTITY(mat4(injectionSwitch, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), _GLF_IDENTITY(length(0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(0.0) : _GLF_FUZZED(-63.16))), 1.0, 1.0, 0.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))))))), mat2(1.0) * (vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-585.077 + -7494.7241))), bool(false))), 0.0), (true ? mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), length(0.0), 1.0, 1.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4(3.7, 1237.3213, 5.0, -5.8, 380.067, 28.69, 3.0, -7.7, 8.8, 3.6, 3380.1329, -3.4, 263.670, 5.0, 456.833, 4.7)))))))).y)), false)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(94346) : _GLF_IDENTITY(2, (2) / 1)))), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], uint(read_1 == read_2) + 1, 4, 64, 4);
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                }
              }
            }
           else
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     do
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
