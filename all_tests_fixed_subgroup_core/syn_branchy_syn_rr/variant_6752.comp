#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true))), false)), (bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), false))) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uvec2 GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy = GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_id;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true)), (bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true))) && true)), ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))) && true))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uvec2 GLF_merged2_0_1_6_1_1_6read_1read_2;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw = GLF_merged2_0_1_6_1_1_6read_1read_2;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.x = subgroup_id;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.3)), bool(false))), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, 0.0, exp(0.0))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x)))))); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
        {
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       continue;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), (bool(bool(! (false)))) || false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       continue;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(5645.6505)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(refract(-748.729, (mat2x4(-4396.6735, -1.4, 0.0, -1897.9766, 9104.6488, 48.12, -344.817, 506.340) , 26.89), -43.13))))), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))))))))))
          barrier();
         if(_GLF_DEAD(false))
          break;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         continue;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(float(true))))))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (39175 & _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) / 1))), (false ? _GLF_FUZZED(62402) : _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) / 1))), (true ? _GLF_IDENTITY((0), ((0)) | (_GLF_IDENTITY((0), ((0)) / 1))) : _GLF_FUZZED(-72853))))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0)))) - 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | 0)), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), false)))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.35), _GLF_FUZZED(32.24)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.35), _GLF_FUZZED(32.24)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.35), _GLF_FUZZED(32.24)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.35), _GLF_FUZZED(32.24)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.35), _GLF_FUZZED(32.24)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(true)))), false, true)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), false)))))))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
                  break;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   continue;
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
              continue;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0, 0.0, sqrt(0.0)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      break;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), int(6)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) + 0))
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false)))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, false)))))))))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), true, true)), bool(bvec4(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), false, true, false))))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))), false))))))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))))) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), true && (_GLF_IDENTITY(true, ! (! (true))))), true, false, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))) != (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ (_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_injected_loop_counter) : 0)) >> _GLF_IDENTITY(int(8), int(8)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-49.04)), bool(false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            continue;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          break;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(321.498)), min(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(321.498)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(321.498)), vec2(mat4x2(vec2(_GLF_FUZZED(-4.4), _GLF_FUZZED(321.498)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), vec2((_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))[0], (_GLF_IDENTITY(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))))[1]), bvec2(true, true)))), min(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)))))))), clamp(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x, 1.0 * (injectionSwitch.x))), 0.0), min(vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), clamp(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0), float(0.0), float(0.0))))), injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, 0.0))), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2258.0889) : injectionSwitch.x))), 0.0)))), min(float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x))), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))), float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) - 0.0))), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), float(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), (_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), max(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)))) + sqrt(vec2(0.0, 0.0))))))))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
                  break;
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 | (1 ^ 0)))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec4(bvec3(bvec2(false, true), false), true)))))))))
                  continue;
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
              }
             return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                  barrier();
                 return;
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.y = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.z;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.y, _GLF_IDENTITY((workgroup_size * GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.y), ~ (~ ((workgroup_size * GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.y)))) >> _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)), (~ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u))) << 0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y = workgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.z = GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.z + GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.x * GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x + GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = _GLF_IDENTITY(virtual_gid, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.y = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(float(true))), bool(_GLF_IDENTITY(false, (false) && true))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))) || false)))))
            break;
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         continue;
         if(_GLF_DEAD(false))
          continue;
        }
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          break;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint next_virtual_gid = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.z + GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.xy.x * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x, (GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x) | 0u) + _GLF_IDENTITY(((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + _GLF_IDENTITY(1, (1) - 0)) % GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x), (((GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + _GLF_IDENTITY(1, (1) - 0)) % GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x)) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 << _GLF_IDENTITY(int(0), int(0)))), (false ? _GLF_FUZZED(_injected_loop_counter) : 1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(0), int(0))) | 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      break;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9.0)), bool(false))) > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(_GLF_IDENTITY(6, (6) >> 0), 6))), int(6))), 1)), max(_GLF_IDENTITY(int(ivec3(4, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), (int(6)) ^ 0), _GLF_IDENTITY(int(6), 0 + (int(6))))), int(6)))) >> 0)) | 0), 1)), int(ivec3(int(ivec3(4, (0 >> _GLF_IDENTITY(int(6), int(6))), 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED(15844) : 1)), 0))), int(ivec3(4, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ (0 >> _GLF_IDENTITY(int(6), int(6)))))), 1)))), (int(ivec3(4, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, clamp(6, _GLF_IDENTITY(6, (6) | (6)), 6))), int(_GLF_IDENTITY(6, (6) | (6)))), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(6), int(6)), ~ (~ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(6), int(6))), ~ (~ ((0 >> _GLF_IDENTITY(int(6), int(6))))))))) | 0)), 1))) / 1))) << 0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 & (1 ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           continue;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base, uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) ^ (GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base)).y], ((~ 103474u) & (1u ^ 1u)) | (_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base, uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) ^ (GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base)).y], uint(uvec2(buf[_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base, uvec3(0u, _GLF_IDENTITY(0u, (0u) * 1u), 0u) ^ (GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base)).y], 0u))))), 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (64) >> 0))), _GLF_IDENTITY(0, (0) | (0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(7.8, -9.0)), (_GLF_IDENTITY(_GLF_FUZZED(vec2(7.8, -9.0)), (_GLF_FUZZED(vec2(7.8, -9.0))) * vec2(1.0, 1.0))) / abs(vec2(1.0, 1.0))) : injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.x = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     break;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    break;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.x;
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.y, max(GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.y, GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base.y))], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | ((0))) * 1)) >> 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    break;
   _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y = read_2, _GLF_IDENTITY(1u * _GLF_IDENTITY((GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y = read_2), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) : (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y = read_2))), 1u * (1u * _GLF_IDENTITY((GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y = read_2), (false ? _GLF_FUZZED(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x) : (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y = read_2))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(inversesqrt(injectionSwitch)) : injectionSwitch)).y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))) || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     continue;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x + 1 < GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         break;
        }
       int i = 0;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-1.4, 4.3)) : injectionSwitch)).y))))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true && (injectionSwitch.x > injectionSwitch.y))))))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))));
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_DEAD(false))
            break;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, true && _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(true, ! (! (true)))), true, true), false)))))))))))))))), ! (! (false)))))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false || (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY((false) && true, ((false) && true) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true)))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true)))))), bool(bvec3((! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), false, true)))))), false, true)))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true)))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true))))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), true && (! (! (_GLF_IDENTITY(false, (false) && true))))))))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               continue;
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))) || false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         return;
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                     barrier();
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true))), true, true)))))))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, false, true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
              barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(uvec3(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))))), (1u ^ 0u), (1u | 0u))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, 0u ^ (_GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, (uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1) >> 0u))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2) >> uvec4(0u, 0u, 0u, 0u)).zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x) : _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y), (uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) / 1u) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2)).zw, max(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2)).zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2)).zw)), clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (_GLF_IDENTITY(! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y), ! (! (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y))))) && true)))) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))), (true ? (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) : _GLF_FUZZED(uvec2(126540u, 189090u)))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, ~ (~ (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))), GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))), 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true)))) + 1, min(false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true)))) + 1, false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), false)))), true, false, false))))) || false)) + 1))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x) : _GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), false || (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true)))))))) + 1))) << (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))), _GLF_IDENTITY(1u, (1u) | (1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, 0u ^ (_GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, (uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1) >> 0u))), uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2) >> uvec4(0u, 0u, 0u, 0u)).zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x) : _GLF_IDENTITY(_GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y), (uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) / 1u) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2)).zw, max(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2)).zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2, uvec4(0u, 0u, 0u, 0u) | (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2)).zw)), clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (_GLF_IDENTITY(! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y), ! (! (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y))))) && true)))) + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))), (true ? (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) : _GLF_FUZZED(uvec2(126540u, 189090u)))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, ~ (~ (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))), GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw)), uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u | (1u)))), 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true)))) + 1, min(false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true)))) + 1, false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, max(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw) / uvec2(1u, 1u)))))).x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), true), false)))), true, false, false))))) || false)) + 1))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(GLF_merged3_0_1_13_1_1_14_2_1_12subgroup_sizeworkgroup_baseworkgroup_id.x) : _GLF_IDENTITY(uint(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + 1, (false ? _GLF_FUZZED(subgroup_id) : uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true))), false || (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw))) * uvec2(1u, 1u)).y, ! (_GLF_IDENTITY(! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == _GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(uvec4(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, uvec2(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[0], GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw[1])), 0u, 0u))).y), (! (GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.x == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y)) && true)))))))) + 1))) << (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | 0u)))))), _GLF_IDENTITY(1u, (1u) | (1u)))))) | (0u | 0u)), 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
            barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))), true && (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false)))))))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).y))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_WRAPPED_LOOP(false))));
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))), 0u | (next_virtual_gid))) | (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)))], uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw)).x, 1u * (_GLF_IDENTITY(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, clamp(GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw, GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw)).x)) == GLF_merged2_0_2_48_2_2_35GLF_merged2_0_1_11_1_1_12subgroup_idworkgroup_idGLF_merged2_0_1_6_1_1_6read_1read_2.zw.y) + _GLF_IDENTITY(1, ~ (~ (1))), 4, 64, 4);
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), true, true)))));
 if(_GLF_DEAD(false))
  return;
}
