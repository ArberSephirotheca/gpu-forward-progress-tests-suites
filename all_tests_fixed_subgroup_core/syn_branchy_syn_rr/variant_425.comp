#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
    {
     case 13:
     for(     mat4x2(4163.3031, 2.5, 836.835, -5.7, -75.60, 8.0, -7.6, 958.157);
 false; greaterThanEqual((clamp(51610u, workgroup_size, 47939u) & uvec2(77475u, 145113u)), uvec2(104346u, 117675u)))
      {
       while(true)
        {
         for(vec4 _GLF_SWITCH_1_0v; false; vec3(7.7, 1.4, -184.003))
          {
           bvec3(false, false, true);
          }
         (-6.3 + mat3x2(mat2x4(32.95, -14.97, -2.5, -55.67, 6.2, -3081.0145, -3.4, -1.8)));
         mat3x4(8663.7237, 2967.9770, 7.5, 1.0, -81.27, -38.43, -9194.0480, 9.0, 21.30, -636.900, -805.602, -5.2);
         mat2(mat4x2(-9335.4636, 4.5, -0.4, -989.934, -768.917, -2.3, 5.0, -828.083));
        }
       equal(ivec2(88854, 40625), ivec2(56646, -48152));
       if((-283.272 < 6112.6996))
        {
         matrixCompMult(mat2x4(-6.1, -2659.0427, 4.3, -9017.0744, -125.426, -9.4, -2.4, 435.640), mat2x4(9.0, 6.1, -4315.7105, -3.7, -48.06, -7129.7864, 0.2, 7847.9531));
         ivec2 _GLF_SWITCH_1_1v;
        }
       for(       mat4(-4593.8810, 9.5, -8609.0309, -4.8, -2972.0824, 9.8, 530.583, 8.6, 4.7, 747.867, -5.5, -2531.8696, 31.21, -94.08, 905.353, 2784.2962);
 false; mat3(-84.77))
        {
         {
          mat4x2 _GLF_SWITCH_1_2v[65], _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
          mat4x3(-876.824, -256.285, -7120.5889, 12.07, 2.9, -111.993, -886.305, 2622.8740, -309.671, 7.7, -13.65, normalize(-4.2));
          ivec2 _GLF_SWITCH_1_5v;
          (subgroup_size);
          ivec2 _GLF_SWITCH_1_6v[43];
          ;
          ;
          int _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v;
         }
         uvec2 _GLF_SWITCH_1_9v[44], _GLF_SWITCH_1_10v[33];
         lessThanEqual(findLSB(sign(ivec3(-74718, -54970, -14796))), ivec3(91612, 50291, 86116));
         mat3((mat3x4(-318.098, 2.3, 8.2, -1.3, 40.69, -6.8, 9.4, -16.73, -9.8, -513.369, 40.15, 85.85) - -2.8));
         {
          bool _GLF_SWITCH_1_11v, _GLF_SWITCH_1_12v[76], _GLF_SWITCH_1_13v[95];
          mat2x4(sqrt(vec4(2.7, 7.4, 2.4, -55.37)), vec4(-222.687, 5.4, -9.2, 1.3));
          vec3 _GLF_SWITCH_1_14v;
          mat4x2(-906.656, -936.032, 314.679, -7054.6031, -56.41, 1440.8707, -4.3, -1.4);
          mat4x2 _GLF_SWITCH_1_15v[42], _GLF_SWITCH_1_16v;
          mat2x4 _GLF_SWITCH_1_17v, _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
          (_GLF_SWITCH_1_11v);
          bvec2 _GLF_SWITCH_1_20v[10], _GLF_SWITCH_1_21v;
          mat3x4(942.174, -394.351, -558.590, 3.4, -0.4, 6.1, -125.408, 64.45, -37.04, 4.4, -4.8, -82.10);
         }
        }
      }
     case 0:
     case 15:
     switch(_GLF_SWITCH(0))
      {
       case 88:
       {
        unpackHalf2x16(workgroup_base);
        ;
        if(true)
         {
          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
           {
            case 84:
            mix(bvec3(true, false, true), bvec3(true, false, true), bvec3(false, false, false));
            case 4:
            bvec3(true, true, true);
            case 0:
            case 95:
            case 80:
            while((ivec2(-60442, -39071) == (ivec2(-70701, 71511) ^ -56125)))
             {
              switch(_GLF_SWITCH(0))
               {
                case 0:
                float _GLF_SWITCH_0_0v;
                case 66:
                mat4x2 _GLF_SWITCH_0_1v[35];
                case 11:
                mat4x3(1651.8414, -2.4, -388.006, 58.28, 3350.2618, 2310.1707, -4.8, -45.29, 9905.1236, 660.766, 734.359, 2348.8439);
                bvec3 _GLF_SWITCH_0_2v;
                case 22:
                ivec4 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v[17], _GLF_SWITCH_0_5v;
                break;
                case 23:
                float _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v[2];
                default:
                1;
               }
             }
            case 30:
            while(false)
             {
              atanh(vec4(1.2, -8369.8527, -3651.9011, 2.6));
              mat4x3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
              bool _GLF_SWITCH_0_8v;
              ivec3 _GLF_SWITCH_0_9v[54];
              mat3 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v[51];
             }
            vec3(5752.2987, -53.00, 708.567);
            case 91:
            vec4(82.28, -38.63, -52.47, -26.71);
            break;
            case 54:
            ;
            case 70:
            mat4x2 _GLF_SWITCH_1_0v[50], _GLF_SWITCH_1_1v[73], _GLF_SWITCH_1_2v;
            default:
            1;
           }
         }
        uvec3(133471u, 35731u, 177922u);
        (vec2(663.930, 8035.8272) / injectionSwitch);
        while((mat3(883.312, -328.438, -9.2, -607.739, -53.53, 8.9, 2413.9087, -84.35, 5235.7700) != (mat3(125.547, -6341.2437, 1.0, -0.8, 66.25, 1440.3507, -8853.2612, -7.8, 335.911) / (mat3(876.035, -8331.7454, 6.2, -1.9, -6973.7555, -4224.9969, 7.4, -73.49, -12.16) - mat3(-9.4, -123.554, 108.609, -3.8, -2341.0858, 97.21, 383.192, 7.6, -2.2)))))
         {
          while(bvec2(true, true)[1])
           {
            ;
            mat4x2(mat3x2(6.9, 737.647, 67.95, -6317.1144, 3.7, 2042.4888));
            mat3x4 _GLF_SWITCH_0_13v[42], _GLF_SWITCH_0_14v, _GLF_SWITCH_0_15v;
            mat3x4 _GLF_SWITCH_0_16v;
            vec3 _GLF_SWITCH_0_17v[49], _GLF_SWITCH_0_18v[9];
            uvec4(58975u, 129976u, 63054u, 64327u);
            vec4(9.6, -0.5, 7336.7564, 4.3);
            ;
            ivec3(-83634, 84323, -48741);
           }
          bvec4 _GLF_SWITCH_0_19v;
          mat3x4 _GLF_SWITCH_0_20v[74], _GLF_SWITCH_0_21v, _GLF_SWITCH_0_22v;
          while(false)
           {
            bvec4 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v;
            bvec2 _GLF_SWITCH_0_25v;
            mat3(-335.726);
            vec3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
            uvec4(132695u, 68105u, 27617u, 152045u);
            bvec4 _GLF_SWITCH_0_29v[13];
            mat4x2(-70.27, -749.096, -9.5, 1038.0800, 29.14, 975.265, 6.9, -7.9);
            (false ? mat3(-4747.1390, 2.8, 157.648, -19.86, -5026.3292, 5863.0682, -7.9, 5.9, 3.5) : mat3(5194.7908, 13.63, -52.98, -1.9, 700.883, -6.5, -4671.7374, 2.2, 4.2));
            _GLF_SWITCH_0_25v;
           }
         }
        {
        }
        bool _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
       }
       case 0:
       int i = 0;
       case 35:
       atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
       break;
       case 7:
       ldexp(vec2(9.3, 1.1), ivec2(-72831, -20173));
       default:
       1;
      }
     break;
     case 63:
     bvec3(false, false, true);
     case 64:
     (uvec4(19655u, 72894u, 190987u, 173935u) * uvec4(98841u, 6438u, 146852u, 94568u));
     default:
     1;
    }
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 17:
     while(((-15811 & findMSB(ivec4(32873, -85493, -20610, -8858))) == ivec4(-29920, 45784, 99647, 50425)))
      {
       while((ivec4(51240, -60278, 10890, -42618) == ivec4(-55804, -23550, -73878, 57346)))
        {
         (ivec3(2977, 48583, -9797) - 16661);
         if(false)
          {
           bvec2(false, true);
          }
        }
       uvec4(69815u, 90806u, 137495u, 116982u);
       float _GLF_SWITCH_2_0v[63], _GLF_SWITCH_2_1v[51];
      }
     case 96:
     vec3(1.6, -4203.3062, 1.3);
     case 0:
     case 89:
     case 42:
     case 49:
     case 13:
     switch(_GLF_SWITCH(0))
      {
       case 3:
       ;
       case 2:
       while(false)
        {
        }
       case 0:
       atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
       break;
       default:
       1;
      }
     break;
     default:
     1;
    }
  }
}
