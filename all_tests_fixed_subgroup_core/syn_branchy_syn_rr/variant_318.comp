#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, bool(bvec3(_injected_loop_counter != 1, false, false)))); _injected_loop_counter ++)
      {
       do
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(int(int(1)), (int(int(1))) | 0))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         do
                          {
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y)))); _injected_loop_counter ++)
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 do
                                  {
                                   do
                                    {
                                     return;
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))))));
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
  }
 else
  {
  }
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) * 1) != _GLF_IDENTITY(0, (0) | (0)), (_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0))) && true)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (bool(bool(false))), bool(bvec2(! _GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) || false), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (((false) || _GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3(! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), true, false, false))))), true, true))))), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (((false) || _GLF_IDENTITY(false, bool(bool(false))))))), bool(bvec3(! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true)), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), true), true, false)))), true, false, false))))), true, true)))))))), false || ((false) || _GLF_IDENTITY(false, bool(bool(false))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) / ((_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), int(_GLF_IDENTITY(int(~ _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), ((_GLF_IDENTITY(1, clamp(1, 1, 1)))) << 0)), (int(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))) | (int(~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))))))))) ^ 0) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))), ((~ (_injected_loop_counter --))) ^ _GLF_IDENTITY(0, (0) - 0))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-81.13) : injectionSwitch.y))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-81.13) : injectionSwitch.y))) : _GLF_FUZZED((-86.93 + -3.5)))) / 1.0)))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(int(int(0)), _GLF_IDENTITY((int(int(0))) + 0, (_GLF_IDENTITY((int(int(0))), ~ (~ ((int(int(0)))))) + 0) ^ _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))))))), (false ? _GLF_FUZZED(51448) : _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), (int(int(0))) ^ 0), _GLF_IDENTITY((_GLF_IDENTITY(int(int(0)), clamp(_GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0)))), _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0)))), int(int(0))))) + 0, (_GLF_IDENTITY((int(int(0))), ~ (~ (_GLF_IDENTITY((int(int(0))), (false ? _GLF_FUZZED(89316) : _GLF_IDENTITY((int(int(0))), max((int(int(0))), (int(int(0)))))))))) + _GLF_IDENTITY(0, (0) >> 0)) ^ 0)))))))), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(int(int(0)), (_GLF_IDENTITY(int(int(0)), ~ (~ (_GLF_IDENTITY(int(int(0)), ~ (~ (int(int(0))))))))) ^ 0)) + 0))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 0, 1))) != 1, (_injected_loop_counter != 1) && true)); _injected_loop_counter ++)
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                }
               else
                {
                }
              }
            }
          }
        }
      }
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, max(gl_WorkGroupSize.x, gl_WorkGroupSize.x));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], uint(uvec4(gl_WorkGroupID[1], 0u, 0u, 0u))), gl_WorkGroupID[2])).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) + 0u)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u))), workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id) ^ 0u, 0u + ((workgroup_size * workgroup_id) ^ 0u))), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)))), (~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, 0u + (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u)) >> 0u)))) ^ 0u), 1u, 1u, 0u))))) | 0u))))), (true ? uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id) | (false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id))), 0u | ((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))) : workgroup_size * workgroup_id))))), (true ? _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u))), workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u))), ~ (_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)))), (~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) | (workgroup_id))) ^ 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) | (_GLF_IDENTITY(1u, 1u * (1u)))), 1u, 0u))))) | 0u))))), (true ? uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u)) : workgroup_size * workgroup_id), 0u | ((false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (workgroup_size)) * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), workgroup_id, workgroup_id))) + 0u))), workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), (_GLF_IDENTITY((workgroup_size * workgroup_id), (true ? (workgroup_size * workgroup_id) : _GLF_FUZZED(subgroup_local_id)))) << 0u) ^ 0u), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u)))))) | (1u)), 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) | (1u)))))) | (1u)), 0u)))))), ~ (_GLF_IDENTITY(~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)))), (~ (~ (uint(uvec4(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(uvec3(191801u, 173250u, 40586u)[1]))), workgroup_id, workgroup_id)), (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u))))) | 0u))))), (true ? uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), 1u, 1u, 0u)) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id), 0u | ((false ? _GLF_FUZZED(workgroup_size) : workgroup_size * workgroup_id)))))) * (0u | 1u)) : _GLF_FUZZED(subgroup_size))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, _GLF_IDENTITY(1 ^ 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((_injected_loop_counter ++)) : 0)) ^ (1 ^ 1))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               do
                {
                 for(int _injected_loop_counter = _GLF_IDENTITY((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1))), int(_GLF_IDENTITY(int(_GLF_IDENTITY((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1))), (_GLF_IDENTITY((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1))), ((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1)))) | ((1 | _GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1)), ~ (~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1))))))))) / 1)), (int(_GLF_IDENTITY((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1))), (_GLF_IDENTITY((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1))), ((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1)))) | ((1 | _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> 0), 1)), 1)))))) / 1))) | 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(0.0), 0.0, 0.0))), clamp(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(0.0), 0.0, 0.0))), _GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), abs(0.0), 0.0, 0.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), abs(0.0), 0.0, 0.0), (mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (_GLF_IDENTITY(min(0.0, 0.0), max(min(0.0, 0.0), min(0.0, 0.0)))) / round(length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(abs(0.0), float(vec2(_GLF_IDENTITY(abs(0.0), (abs(0.0)) - 0.0), round(length(normalize(vec2(1.0, 1.0))))))), 0.0, 0.0)) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2(0.0, 0.0, 0.0, 0.0))))))))))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch))[1])).x))); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = ((_GLF_IDENTITY(0 & 81683, (0 & 81683) | 0)) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec3(_injected_loop_counter > 0, true, true)))))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> _GLF_IDENTITY(0, (0) << 0)))
                    {
                     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) && (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) && (injectionSwitch.x < injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-24.05))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))))))))) && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))) || false), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, cos(0.0), 1.0)), _GLF_IDENTITY(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, cos(0.0), 1.0)), float(vec2(dot(vec4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec4(1.0, 0.0, cos(0.0), 1.0)), 1.0)))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true))))))) && (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) && true))))))) && (injectionSwitch.x < injectionSwitch.y))))))) || false))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))) && (injectionSwitch.x < injectionSwitch.y))))))))) || false), false || (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))))))))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         do
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               return;
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 7.5)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))) : _GLF_FUZZED(vec2(1662.9108, -8021.0266)))).y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false, (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 7.5)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))) : _GLF_FUZZED(vec2(1662.9108, -8021.0266))), vec2(mat3x2((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), max(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))) : _GLF_FUZZED(vec2(1662.9108, -8021.0266))), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ZERO(0.0, injectionSwitch.x))))).y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false, (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false) || false))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((+ 7.5)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, 0.0))) : _GLF_FUZZED(vec2(1662.9108, -8021.0266)))).y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false, _GLF_IDENTITY((((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false), ! (! (_GLF_IDENTITY((((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))) || false)))))) || false)))))))))))));
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(-969.101), (_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), clamp(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(1493.7554, 5292.4617)) : mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))[1]), _GLF_IDENTITY(vec2((mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_FUZZED(13.80)), max(vec2((mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_FUZZED(13.80)), vec2((mix(vec2(_GLF_FUZZED(3.3), _GLF_FUZZED(-588.840)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))[0], _GLF_FUZZED(13.80)))), bvec2(true, false)))), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), clamp(vec2(1.0, 0.0), vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0))))).y))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y))))))), false, false))));
    }
  }
 else
  {
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(11449))), 1))), 0u + ((subgroup_local_id + 1))) % subgroup_size, ~ (~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))), 0u + ((subgroup_local_id + 1))) % subgroup_size))));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), min(float(vec2(injectionSwitch.y, 1.0)), _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), 1.0 * (float(vec2(injectionSwitch.y, 1.0)))))))))))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ 0), min(4, 4)), 4)), 64, 4);
              }
            }
           else
            {
            }
          }
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid])), 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(985.561), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))) >> _GLF_IDENTITY(int(6), int(6))))))], max(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))) >> _GLF_IDENTITY(int(6), int(6))))))], max((injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))) >> _GLF_IDENTITY(int(6), int(6))))))], (injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))) >> _GLF_IDENTITY(int(6), int(6))))))])), (injectionSwitch)[_GLF_IDENTITY(0, int(ivec2(0, ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6))))) >> _GLF_IDENTITY(int(6), int(6))))))])), _GLF_FUZZED(2459.9092)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) || false))))
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     do
                      {
                       do
                        {
                         for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
                          {
                           do
                            {
                             if(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)), subgroup_local_id + 1)))) < subgroup_size)
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_DEAD(false))
                                        return;
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               else
                                {
                                }
                               int i = 0;
                               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), ~ (~ (uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))))))) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) + 1, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ (~ (4))))))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) | (64))) / 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) >> 0));
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))
                                  {
                                   do
                                    {
                                     do
                                      {
                                       do
                                        {
                                         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) + 1, max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))), ! (! (bool(bool(read_1 == read_2)))))), true, true, false)))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2x4(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, exp(0.0), determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0)), _GLF_ZERO(0.0, injectionSwitch.x)))))).y)) && true, bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true, false, true))))), false || (bool(bool(_GLF_IDENTITY(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true, bool(bvec3(((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) && true, false, true)))))))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(_GLF_IDENTITY((read_1 == read_2), bool(bool(_GLF_IDENTITY((read_1 == read_2), bool(bvec2((_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec4(read_1, (0u | 1u), 0u, 1u)), (uint(uvec4(read_1, (0u | 1u), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(0u, 0u, 0u, 0u)))) / uvec4(1u, 1u, 1u, 1u)))), 1u))) | 0u)) == read_2), true)))))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))), false)), false)), bool(bvec3(bool(_GLF_IDENTITY(bvec2(bool(bvec4((read_1 == read_2), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false)), false), bvec2(bvec3(bvec2(bool(bvec4((read_1 == read_2), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)), false), true)))), false, true))))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (((0 | 1) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) * (_GLF_IDENTITY(1, _GLF_IDENTITY((1), (_GLF_IDENTITY((1), ((1)) + 0)) ^ 0) ^ 0))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == _GLF_IDENTITY(read_2, (read_2) | (read_2))), _GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(135500u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ ((read_2) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (true ? _GLF_IDENTITY(4u, min(4u, 4u)) : _GLF_FUZZED(floatBitsToUint(-337.176))))))))))))), max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, (_GLF_IDENTITY((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, 1u, 1u, 0u), max(uvec4((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, 1u, 1u, 0u)))), (uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, 1u, 1u, 0u), max(uvec4((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, 1u, 1u, 0u), uvec4((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u, 1u, 1u, 0u))))) | 0u))) | ((_GLF_IDENTITY(read_2, min(read_2, read_2))) >> 0u))))), (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(read_2, max(read_2, read_2))))) | (read_2))))) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_IDENTITY(_GLF_FUZZED(135500u), max(_GLF_FUZZED(135500u), _GLF_FUZZED(135500u))))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ ((read_2) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_2, uint(uint(read_2))), (read_2) | (_GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), min(read_2, read_2))) >> 0u))), (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> (0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(read_2, max(read_2, read_2))))) | (read_2))))) : _GLF_FUZZED(subgroup_size))) * 1u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(135500u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ ((read_2) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> _GLF_IDENTITY((0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), ((0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u), (true ? (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) | (_GLF_IDENTITY(read_2, 0u | (read_2))))) >> (0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec2(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), 0u))), uint(4u)))) : _GLF_FUZZED(workgroup_id))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))) : _GLF_FUZZED(subgroup_size)), ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(135500u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ ((read_2) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> _GLF_IDENTITY((0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), ((0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u), (true ? (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) | (_GLF_IDENTITY(read_2, 0u | (read_2))))) >> (0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec2(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), 0u))), uint(4u)))) : _GLF_FUZZED(workgroup_id))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))) : _GLF_FUZZED(subgroup_size))) | ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(135500u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ ((read_2) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> _GLF_IDENTITY((0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), ((0u | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u), (true ? (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), min((read_2), (read_2))) | (_GLF_IDENTITY(read_2, 0u | (read_2))))) >> (0u | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(uvec2(_GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))), 0u))), uint(4u)))) : _GLF_FUZZED(workgroup_id))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))) : _GLF_FUZZED(subgroup_size)))), uint(uvec4((true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(135500u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ (_GLF_IDENTITY((read_2), max((read_2), (read_2))) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u))))))))), (uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(135500u))) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), ~ (~ (_GLF_IDENTITY((read_2), max((read_2), (read_2))) | _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), ~ (~ ((read_2))))) | (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) | (read_2))))), (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) | (read_2)))))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) | (read_2))))), (false ? _GLF_FUZZED((workgroup_size * subgroup_id)) : uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) | (read_2))))))))), uint(uvec4(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((read_2) | (read_2))))), 0u, _GLF_IDENTITY(1u, (1u) / 1u), 1u))), clamp(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) >> 0u))), (_GLF_IDENTITY(read_2, (read_2) | (read_2))) >> (0u | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(4u), uint(4u)), clamp(0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u << _GLF_IDENTITY(uint(4u), uint(4u)), 0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))), uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (read_2))))), uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) | (read_2)), (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | 0u)))) : _GLF_FUZZED(subgroup_size)), 0u, 0u, 0u)))))) + 1, uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), max(uint(uint(read_1)), _GLF_IDENTITY(uint(uint(read_1)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false)) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) | 0u)), uint(uint(uint(uint(read_1))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), _GLF_IDENTITY((uint(read_1)), 1u * (_GLF_IDENTITY((uint(read_1)), clamp(_GLF_IDENTITY((uint(read_1)), 0u | ((uint(read_1)))), (uint(_GLF_IDENTITY(read_1, (read_1) - 0u))), (uint(read_1)))))) | 0u)), uint(uint(_GLF_IDENTITY(uint(uint(read_1)), (uint(uint(read_1))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), (uint(read_1)) | 0u)), uint(uint(uint(uint(read_1))))))) * 1u)))))))) == read_2) + 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) && true)), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) << 0u)) - 0u), uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))) == read_2) && true), (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))), (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u))))))) >> 0u) == read_2) && true)) || false)) || false)) && true))), min((uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) << 0u)) - 0u), uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))) == read_2) && true), (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))), (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u))))))) >> 0u) == read_2) && true)) || false)) || false)) && true))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) << 0u)) - 0u), uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))) == read_2) && true), (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))), (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u))))))) >> 0u) == read_2) && true)) || false)) || false)) && true))), ((uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) << 0u)) - 0u), uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))) == read_2) && true), (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u)))))), (_GLF_IDENTITY(read_1, uint(_GLF_IDENTITY(uvec4(read_1, 1u, 0u, 1u), ~ (~ (uvec4(read_1, 1u, 0u, 1u))))))) >> 0u) == read_2) && true)) || false)) || false)) && true)))) ^ 0u))) | (uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((read_1 == read_2) || false)))) && true)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 1u))), 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)), 1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, 0u ^ (_GLF_IDENTITY(read_1, max(read_1, _GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(38753u) : read_1)))))) == read_2), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), min(~ (uint(read_1 == read_2)), ~ (uint(read_1 == read_2))))), (0u | 0u) ^ (~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), min(~ (uint(read_1 == read_2)), ~ (uint(read_1 == read_2))))))))) / 1u), 1u, 1u)), _GLF_IDENTITY(min(uint(uvec3(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, 1u * (read_2))), (uint(read_1 == read_2)) / 1u), 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u))) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (min(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), (uint(read_1 == read_2)) / 1u), 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (_GLF_IDENTITY(~ (_GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u))), 1u, 1u))))) << _GLF_IDENTITY(0u, (0u) | (0u))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (1u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), 1u)), min(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (1u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), 1u)), uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (1u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), 1u))))), (true ? (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), 1u))) : _GLF_FUZZED(37382u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, min(1u, 1u))), 1u, 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u))))) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), 1u))), (true ? (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 0u ^ (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), 1u))) : _GLF_FUZZED(37382u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (~ (min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2)))) << 0u), (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))) + 0u) == read_2)) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41859u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), (uint(read_1 == read_2)) / 1u))), 1u, 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) | (~ (read_2)))))), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u))), 1u, 1u), clamp(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u), uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u), (uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)) | (uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)), 1u)))))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(subgroup_size)))), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicXor(read_1, workgroup_id)) : _GLF_IDENTITY(1u, 0u | (1u))))), 1u, 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), ~ (~ (~ (uint(read_1 == read_2))))))), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u ^ (1u)) : _GLF_FUZZED(next_virtual_gid))), max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY(0u, (0u) | 0u)), max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> 0u) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))) / 1u) | 0u)))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (1u) * 1u), ((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ 0u))) / 1u) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) * 1u), 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) ^ 0u), ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), _GLF_IDENTITY(uint(uint(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)))), min(uint(uint(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)))), uint(uint(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)))))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u))) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), _GLF_IDENTITY(1u, max(1u, 1u)), 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_id) : read_1)) == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, bool(bool(read_1 == read_2))))) / 1u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) | (read_1)) == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), min((uint(read_1 == read_2)), (uint(read_1 == read_2))))))) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), 0u ^ ((uint(read_1 == read_2)))) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2)))) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))))))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))))), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) ^ 0u)) << 0u))), ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, _GLF_IDENTITY(0u, (0u) ^ 0u))) | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (read_1), (~ (read_1)) | (~ (read_1))))) == read_2)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), clamp(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(read_1 == read_2), uint(read_1 == read_2)))) / 1u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) || false))) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) - (0u ^ 0u)))) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)), clamp((uint(read_1 == read_2)), (uint(read_1 == read_2)), (uint(read_1 == read_2)))) / 1u) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))) | (read_2))), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)), clamp((uint(read_1 == read_2)), (uint(read_1 == read_2)), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) + 0u))) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), _GLF_IDENTITY(uint(uvec4(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), 1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), 1u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, 0u ^ (read_1)) == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 0u))), read_1)) == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) << 0u, ~ (_GLF_IDENTITY(~ ((uint(read_1 == read_2)) << 0u), (_GLF_IDENTITY(~ ((uint(read_1 == read_2)) << 0u), min(~ ((uint(read_1 == read_2)) << 0u), ~ ((uint(read_1 == read_2)) << 0u)))) - 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) / 1u)) | ((uint(read_1 == read_2)))) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u))) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), false || (bool(bool(read_1 == read_2))))))) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))) / 1u, ((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)), max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), (_GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), min(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))))) * 1u)), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)), max((uint(read_1 == read_2)), (uint(read_1 == read_2)))))) / 1u) | 0u)))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) - (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) - 0u))) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, max(read_2, read_2))) / 1u))) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, min((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u))) | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u)))), ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))) == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2)))) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), max((uint(read_1 == read_2)), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) ^ 0u))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read_1 : _GLF_FUZZED(workgroup_base))), read_1)) == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u))) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), read_1, read_1)), read_1)) == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), 0u + (uint(read_1 == read_2))))))) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) / _GLF_IDENTITY(1u, min(1u, 1u)), ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(1u, ~ (~ (1u)))))) | 0u)))), 1u, 1u)), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(1u, ~ (~ (1u)))))) | 0u)))), 1u, 1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(97152u, 198000u, 107284u)) : (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(1u, ~ (~ (1u)))))) | 0u)))), 1u, 1u))))) ^ uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, min((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u)), ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) << 0u)) * 1u))) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), 0u | (uint(read_1 == read_2)))) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) << 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) << 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) << 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))) / uvec3(1u, 1u, 1u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) << 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) << 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), (true ? (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) << 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)) : _GLF_FUZZED(uvec3(112675u, 157178u, 148054u))))) | uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(((uint(read_1 == read_2)) / 1u) << 0u, ~ (~ (((uint(read_1 == read_2)) / 1u) << 0u)))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(workgroup_size) : read_1)) == read_2)) / 1u, _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), clamp(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), clamp(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)))), _GLF_IDENTITY(0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), (0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) + 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (1u) | 0u)) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))))) : _GLF_FUZZED(workgroup_base))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, 0u ^ (read_1)), read_1)) == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), uvec3(0u, 0u, 0u) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) + (uint(read_1 == read_2)))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(((uint(read_1 == read_2)) / 1u) << 0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (((uint(read_1 == read_2)) / 1u) << 0u))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2))))))) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) | 0u) == read_2)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << (0u | 0u))))), ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << (0u | 0u)))))) | ((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << (0u | 0u))))))) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(((uint(read_1 == read_2)) / 1u), 0u ^ (((uint(read_1 == read_2)) / 1u))) | 0u)))), 1u, 1u)), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))))))))))), (~ (uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, 0u + (read_2)))) / 1u), 1u, 1u))) + uvec3(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u)))), ~ (~ ((_GLF_IDENTITY(~ (min(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u * (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), (_GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))), ((uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2))))) >> 0u)) | ((uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)))))) / 1u), 1u, 1u)), 0u + (uint(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u))))) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2)) / 1u), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u))), _GLF_IDENTITY(1u, (1u) ^ 0u)))), (true ? (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u)), ~ (~ (min(_GLF_IDENTITY(1u, 0u + (1u)), _GLF_IDENTITY(1u, (1u) / 1u)))))), 1u))) : _GLF_FUZZED(37382u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (~ (min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(41859u) : _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u))), 1u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u)), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(bvec2(bvec2(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false)))))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(1u, 1u), ~ (_GLF_IDENTITY(~ (uvec2(1u, 1u)), clamp(~ (uvec2(1u, 1u)), ~ (uvec2(1u, 1u)), ~ (uvec2(1u, 1u))))))))) >> uvec2(0u, 0u))), (uint(_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(uvec2(1u, 1u), uvec2(0u, 0u) | (uvec2(1u, 1u)))) >> uvec2(0u, 0u)))) / 1u)), (false ? _GLF_FUZZED(atomicXor(read_1, workgroup_id)) : _GLF_IDENTITY(1u, 0u | (1u))))), 1u, 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u))) / 1u) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) | (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id)))))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, _GLF_IDENTITY(1u, (1u) | (1u)))), clamp(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, 0u | (1u)), ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), min(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) * (0u ^ uint(_GLF_ONE(1.0, injectionSwitch.y)))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), uint(uvec4((uint(read_1 == read_2)), (0u << _GLF_IDENTITY(uint(5u), uint(5u))), 0u, 0u))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_1, (read_1) | (read_1)), 1u, 0u)), 0u | (uint(uvec3(_GLF_IDENTITY(read_1, (read_1) | (read_1)), 1u, 0u))))) == read_2)) / 1u) | 0u)))), 1u, 1u))) >> uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2)))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uint(uint(read_1 == read_2))), (0u ^ 0u) ^ (uint(uint(uint(read_1 == read_2))))))), min((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uint(uint(read_1 == read_2))), (0u ^ 0u) ^ (uint(uint(uint(read_1 == read_2))))))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uint(uint(read_1 == read_2))), (0u ^ 0u) ^ (uint(uint(uint(read_1 == read_2))))))))) << _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u | (0u)), 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) >> 0u)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), (~ (uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u))))) | uvec3(0u, 0u, 0u)) | ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(((uint(read_1 == read_2)) / 1u), (_GLF_IDENTITY(((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(read_2)))), _GLF_IDENTITY((_GLF_IDENTITY(((uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)) / 1u), (((uint(read_1 == read_2)) / 1u)) | 0u)), ~ (~ ((_GLF_IDENTITY(((uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)) / 1u), (((uint(read_1 == read_2)) / 1u)) | 0u))))) | (_GLF_IDENTITY(((uint(read_1 == read_2)) / 1u), (((uint(read_1 == read_2)) / 1u)) ^ 0u)))) ^ 0u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)), (max(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), max((uint(read_1 == read_2)), _GLF_IDENTITY((uint(read_1 == read_2)), 0u ^ ((uint(read_1 == read_2)))))) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u))) >> 0u))), 1u, 1u)), min((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(next_virtual_gid)))) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (1u) | (1u)), ((uint(read_1 == read_2)) / 1u) << 0u), (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u)) - 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u) | 0u)))), 1u, _GLF_IDENTITY(1u, 0u ^ (1u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u), min(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u), (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec4(uint(read_1 == read_2), 0u, 0u, 0u)))) / 1u) | 0u)) / (1u ^ 0u))))), 1u, 1u)))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, clamp(read_2, read_2, read_2)), _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(44657u) : read_2)))))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / _GLF_IDENTITY(1u, 0u + (1u)), (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, min(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, uint(uint((uint(read_1 == read_2)) / 1u)))) * 1u), (uint(read_1 == read_2)) / 1u))) << 0u))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u)), ~ (~ ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) << 0u, ~ (~ ((uint(read_1 == read_2)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (109582u & 0u) + (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u)))) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, 0u | (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY(((uint(read_1 == read_2)) / 1u) << 0u, (false ? _GLF_FUZZED(num_workgroup) : ((uint(read_1 == read_2)) / 1u) << 0u))))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) | 0u)))), 1u, 1u))))))), (~ (uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), 1u, 1u))) + uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), clamp(0u, 0u, 0u)))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u))))))))), (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))) : uint(read_1 == read_2), min(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))) : uint(read_1 == read_2), false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))) : uint(read_1 == read_2)))))) << 0u)) / 1u), _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_2) : 1u)), 1u))) | 0u)) - 0u)) + _GLF_IDENTITY(1, 0 ^ (1)), max(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true && _GLF_IDENTITY((read_1 == read_2), bool(bvec4((read_1 == read_2), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (_GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec4(bool(bvec2(true, false)), true, false, true)))), true))) && true)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) + _GLF_IDENTITY(1, (1) ^ 0), max(uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)))) == read_2) + _GLF_IDENTITY(1, (1) | 0), uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uint(read_1)), min(uint(uint(read_1)), uint(uint(read_1))))) == read_2) + 1)))), _GLF_IDENTITY(uint(read_1 == read_2) + 1, max(uint(read_1 == read_2) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), bool(bvec4((_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))))))), false))))) + _GLF_IDENTITY(1, (1) ^ 0), max(uint(read_1 == read_2) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1)))))) * 1), uint(_GLF_IDENTITY(read_1, uint(uint(read_1))) == read_2) + 1)))))), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4))))))) - (0 << _GLF_IDENTITY(int(3), int(3)))))) ^ 0, max(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))))) ^ 0, ((_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), ~ (~ ((4))))))) ^ 0))))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), min(0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))))) ^ 0) | ((_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), 0 ^ (int(4))))), int(ivec4(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), 0 ^ (int(4))))), 0, 1, 1)))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), int(ivec4(0 >> _GLF_IDENTITY(int(4), int(4)), 0, 0, 0))))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), ~ (~ (int(_GLF_IDENTITY(int(4), 0 ^ (int(4))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))))))) ^ 0, ((_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (_GLF_IDENTITY(int(4), min(int(4), int(4)))))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), min(_GLF_IDENTITY(0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))), ~ (~ (0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))))))), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))))) ^ 0) | ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), (int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(0, (0) - 0) ^ (int(4))))) + 0), clamp(int(_GLF_IDENTITY(int(4), 0 ^ _GLF_IDENTITY((int(_GLF_IDENTITY(4, max(4, 4)))), ((int(_GLF_IDENTITY(4, max(4, 4))))) / ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5)))))) >> _GLF_IDENTITY(int(5), int(5)))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))))))) ^ 0))) - 0), (_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), clamp(int(_GLF_IDENTITY(int(4), 0 ^ (int(4)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + (41802 & 0))) << 0)), 0 ^ (int(_GLF_IDENTITY(4, (4) ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) | (4))), int(4)), ~ (~ (0 >> _GLF_IDENTITY(int(4), int(4))))))))))), int(_GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(0 ^ (int(4)), max(0 ^ (int(4)), _GLF_IDENTITY(0 ^ (int(4)), (0 ^ (int(4))) >> 0))), (_GLF_IDENTITY(0 ^ (int(4)), max(0 ^ (int(4)), _GLF_IDENTITY(0 ^ (int(4)), (0 ^ (int(4))) >> 0)))) * 1))))))) ^ 0))), 64, 4);
                                        }
                                       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))), ! (! (! (false))))))), (bool(false)) || false)))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (bool(false)) || false)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(bvec3(bool(bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true, true)))), (bool(false)) || false)))))))))));
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                               for(int _injected_loop_counter = (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (true ? 0 >> _GLF_IDENTITY(int(4), int(4)) : _GLF_FUZZED(67872)))) | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), min((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))) | 0))); _injected_loop_counter ++)
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
                                      {
                                       do
                                        {
                                         do
                                          {
                                           return;
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(refract(69.44, 163.150, 9076.7054)) : _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch + vec2(-3.2, -39.10))) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x), _GLF_ZERO(0.0, injectionSwitch.x)))) / 1.0)))) + (injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * vec2(1.0, 1.0) : _GLF_FUZZED(vec2(9.4, -81.34))))).y, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(((injectionSwitch))[0], mix(float(_GLF_FUZZED(-6.9)), float(((injectionSwitch))[0]), bool(true))), _GLF_FUZZED(5768.4759)), vec2(_GLF_FUZZED(-553.504), ((injectionSwitch))[1]), bvec2(false, true))) * vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-6.7), ((injectionSwitch) * vec2(1.0, 1.0))[1]), vec2(((injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), 1.0 * (_GLF_IDENTITY((1.0), mix(float(_GLF_FUZZED(1.6)), float((1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) - length(_GLF_IDENTITY(sqrt(0.0), 1.0 * (sqrt(0.0)))))))[0], _GLF_FUZZED((- -6.2))), bvec2(true, _GLF_IDENTITY(false, (false) && true))))).y, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6083.1194), _GLF_FUZZED(-0.8)), bvec2(_GLF_IDENTITY(false, ! (! (false))), false))))), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))))).y, _GLF_IDENTITY(0.0, float(vec3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(max(0.0, 0.0)), float(_GLF_FUZZED(8062.0210)), bool(false)))), _GLF_IDENTITY(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(0.0) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), 1.0)) * (0.0)), 1.0)) - mat4x2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0))))))));
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                }
                              }
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-3.1, -6.4).g)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))));
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-908.015) : injectionSwitch.x))) - 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 1.0))).y, true && (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-908.015) : injectionSwitch.x))) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(58.12)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false))))))));
              }
             else
              {
              }
            }
           else
            {
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             do
                              {
                               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), true), false)))), (_GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true)), true && (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), true))))) || false)))))
                                        {
                                        }
                                       else
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(true, ! (! (true)))), false))))))))))
                                              {
                                               return;
                                              }
                                             else
                                              {
                                              }
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))));
        }
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
