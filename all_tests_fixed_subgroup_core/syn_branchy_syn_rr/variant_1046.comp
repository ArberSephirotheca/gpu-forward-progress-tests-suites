#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
      {
       return;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u)) >> 0u);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(348.488)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(77.54) : injectionSwitch.x)))), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))) ^ _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) - 0), 0, 0)))) | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), subgroup_id * subgroup_size)), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(workgroup_id))), subgroup_id * subgroup_size)))), (0u ^ 0u), 0u))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(floatBitsToUint(-56.64)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size)))), (~ (uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))))) ^ 0u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))), clamp(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))), uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size))), uint(uint(uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size)))))))), uint(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u), _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))), subgroup_size)))))), uint(uvec4(uint(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), _GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u)))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
  }
 else
  {
  }
 do
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))) / 1u)], 4, 64, 0);
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 0u))))))], (buf[virtual_gid]) | (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
  {
   do
    {
     for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))), true && (bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != 1)))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0) && true), false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0) && _GLF_IDENTITY(true, ! (! (true)))))))))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), false || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, int(ivec3(0, 0, 1))), (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), (_injected_loop_counter > 0) && true)))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(false, (false) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0), ! (! ((_injected_loop_counter > 0)))) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) && true, (_GLF_IDENTITY((_injected_loop_counter > 0) && true, ! (! (_GLF_IDENTITY((_injected_loop_counter > 0) && true, ! (! ((_injected_loop_counter > 0) && true))))))) && true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 0, 1))) > 0), bool(bvec4((_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 0, 1))) > 0), true, true, true))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 0, 1)), ~ (~ (_GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 0, 1)), ~ (~ (int(ivec3(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), 0, 1))))))))) > 0), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter))) | (_injected_loop_counter)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)))), min(_injected_loop_counter, _injected_loop_counter)), 0, 1))) > 0), true, _GLF_IDENTITY(true, true && (true)), true))))) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(27659))), (_injected_loop_counter > 0) && true)))))), true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(degrees(vec2(83.69, 1.4))) : injectionSwitch)).y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, (false ? _GLF_FUZZED(radians(-193.863)) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, float(float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, (false ? _GLF_FUZZED(radians(-193.863)) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, float(float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, (false ? _GLF_FUZZED(radians(-193.863)) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, max(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y, float(float(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter))))) > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), true), false, false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)), false), true, true))))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), true), false, false))))) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), false)))) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 1.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, log(abs(1.0)))), mix(vec2(_GLF_FUZZED(2905.0717), _GLF_FUZZED(9.2)), vec2((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 1.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, log(abs(1.0)))))[0], _GLF_IDENTITY((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 1.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, log(abs(1.0)))))[1], ((vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 0.0, 1.0, sin(0.0), 1.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 0.0, log(abs(1.0)))))[1]) / 1.0)), bvec2(true, true)))).y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bvec3(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), true, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > 0, (_injected_loop_counter > 0) && true))), ! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true))))), true && (bool((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true))))))))))), (bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true)))), bool(_GLF_IDENTITY(bool((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true))))), true && (bool((! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 0)))) | 0))))) && true)))))))))))) || false)))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(ivec3(_injected_loop_counter, 0, 0)))) * 1) > 0, true && (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 0), (_GLF_IDENTITY(ivec3(_injected_loop_counter, 0, 0), (ivec3(_injected_loop_counter, 0, 0)) ^ ivec3(0, 0, 0))) << ivec3(0, 0, 0))))) * 1) > 0)), (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec2((_injected_loop_counter > 0), false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec2((_injected_loop_counter > 0), false)))), ! (! (! (_GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec2((_injected_loop_counter > 0), false)))))))))))) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, ! (_GLF_IDENTITY(! (_injected_loop_counter > 0), (_GLF_IDENTITY(! (_injected_loop_counter > 0), bool(bvec2(! (_injected_loop_counter > 0), true)))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec2(_GLF_IDENTITY((_injected_loop_counter > 0), ((_injected_loop_counter > 0)) || false), false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec2((_injected_loop_counter > _GLF_IDENTITY(0, (0) | (0))), false)))), ! (! (! (_GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec2((_injected_loop_counter > 0), false)))))))))))) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)), ~ (_GLF_IDENTITY(~ (int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, 0))), (~ (int(ivec3(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))) >> 0))))) && true))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_injected_loop_counter > 0))) && true))), bool(bvec2((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), false)))))), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))), ! (! ((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false))) && true))) ? _GLF_FUZZED(-5542.9376) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), injectionSwitch, injectionSwitch)), injectionSwitch)).y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))), 0, 0))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3087.2808), _GLF_FUZZED(float(164036u))), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)) : _GLF_FUZZED(vec2(4.6, -2.5)))))).y))))))))))) && true))))))) && _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0), false || (! (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0)))))) && true))), (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))) > 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0), false || (! (_GLF_IDENTITY(_injected_loop_counter, (-60949 & (0 & 72788)) | (_injected_loop_counter)) > 0)))))) && true)))) && true), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_injected_loop_counter > 0))) && true)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true, false), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))))) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)))) > 0) && true))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true, _GLF_IDENTITY(false, (false) && true)), true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)))) > 0) && true))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true, _GLF_IDENTITY(false, (false) && true)), true)))))), ((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, int(int(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)))) > 0) && true))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true, _GLF_IDENTITY(false, (false) && true)), true))))))) && true)) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))))) && true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))))) && true, false, true, true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0))))), ! (! ((_GLF_IDENTITY(_injected_loop_counter > 0, true && (_GLF_IDENTITY(_injected_loop_counter > 0, false || (_injected_loop_counter > 0)))))))) && true, false, true, true)))))))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)), (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true))) && true))), (_injected_loop_counter > 0) && true))))))))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, max(0, 0)), _GLF_IDENTITY((_injected_loop_counter > 0), false || ((_injected_loop_counter > 0))) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, clamp(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_injected_loop_counter), 1 * (~ (_injected_loop_counter))))), _injected_loop_counter, _injected_loop_counter)) > 0) && true)) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0) && true, false || ((_injected_loop_counter > 0) && true))))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bvec2(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), true)))), ((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))) || false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), (bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))) || false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), (bool(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))) || false))))) && true))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)) > 0, _GLF_IDENTITY((_injected_loop_counter > 0) && true, false || (_GLF_IDENTITY((_injected_loop_counter > 0) && true, bool(bvec2((_injected_loop_counter > 0) && true, false))))))))))), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))), false || ((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))), false || ((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)))))), bool(bool(! (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))), false || ((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true))))))))), false, false, false))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, injectionSwitch.y))))), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y, injectionSwitch.y)))))))))))))))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) - int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_injected_loop_counter > 0) && true, ((_injected_loop_counter > 0) && true) || false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false)), true, true))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false)), true, true))))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false)), true, true))))), true))))))))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), bool(bvec4(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), false, false, false))))))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0))), (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4((! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, (true ? _injected_loop_counter : _GLF_FUZZED(-44920))) > _GLF_IDENTITY(0, min(0, 0))) && true))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0))), (_injected_loop_counter > 0) && true)))))), false, false, true)), (bool(bvec4((! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true && ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! _GLF_IDENTITY((_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2((_injected_loop_counter > 0), true), bvec2(bvec3(bvec2((_injected_loop_counter > 0), true), false))))))), _GLF_IDENTITY((_injected_loop_counter > 0) && true, ((_injected_loop_counter > 0) && true) || false))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! _GLF_IDENTITY((_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2((_injected_loop_counter > 0), true), bvec2(bvec3(bvec2((_injected_loop_counter > 0), true), false))))))), _GLF_IDENTITY((_injected_loop_counter > 0) && true, ((_injected_loop_counter > 0) && true) || false))))), bool(bvec3(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! _GLF_IDENTITY((_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2((_injected_loop_counter > 0), true), bvec2(bvec3(bvec2((_injected_loop_counter > 0), true), false))))))), _GLF_IDENTITY((_injected_loop_counter > 0) && true, ((_injected_loop_counter > 0) && true) || false))))), false, false)))))))), false, false, true))) || false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, false || _GLF_IDENTITY((true), (_GLF_IDENTITY((true), ((true)) && true)) && true)))) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))) > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec3(_injected_loop_counter > 0, false, false))), (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(80247), clamp(true ? _injected_loop_counter : _GLF_FUZZED(80247), _GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(80247), (false ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, _injected_loop_counter)) : true ? _injected_loop_counter : _GLF_FUZZED(80247))), true ? _injected_loop_counter : _GLF_FUZZED(80247))))) > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(80247), clamp(true ? _injected_loop_counter : _GLF_FUZZED(80247), _GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(80247), (false ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, _injected_loop_counter)) : true ? _injected_loop_counter : _GLF_FUZZED(80247))), true ? _injected_loop_counter : _GLF_FUZZED(80247))))) > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))), (_GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(80247), clamp(true ? _injected_loop_counter : _GLF_FUZZED(80247), _GLF_IDENTITY(true ? _injected_loop_counter : _GLF_FUZZED(80247), (false ? _GLF_FUZZED(atomicExchange(_injected_loop_counter, _injected_loop_counter)) : true ? _injected_loop_counter : _GLF_FUZZED(80247))), true ? _injected_loop_counter : _GLF_FUZZED(80247))))) > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))) || false)))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0), bool(bvec3((_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) > 0), true, true))) && true)))))), true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((-60949 & (0 & 72788)) | (_injected_loop_counter), min(_GLF_IDENTITY((-60949 & (0 & 72788)) | (_injected_loop_counter), ((-60949 & (0 & 72788)) | (_injected_loop_counter)) | 0), (-60949 & (0 & 72788)) | (_injected_loop_counter)))) > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (0)), 0, 0)), (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > _GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1)))) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-23.44, -408.673)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(true, true && (true)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(true, true && (true)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), _GLF_IDENTITY(bool(bvec3((! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(true, true && (true)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), true, true)), true && (bool(bvec3((! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(true, true && (true)) && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), false || (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))))), true, true)))))))))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))))))))))))), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, bool(bvec2(true, true)))), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && _GLF_IDENTITY(true, ! (! (true))), bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))))))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))), (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))) && true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), true)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))))), bool(bvec3((bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))) < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))), bool(bool(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)))))), true && (! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)))) && true)) && true)))))))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))))))))))))))))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) > 0, (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) > 0, (_injected_loop_counter > 0) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_injected_loop_counter > 0))) && true)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, ! (! (true))))) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, 0 + (0)), (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (((! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-57562))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) > 0, (_injected_loop_counter > 0) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) > _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-57562))), (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0) > 0, (_injected_loop_counter > 0) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec3(bvec3(bvec3(! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))))))))))))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), true && ((! (_GLF_IDENTITY(_injected_loop_counter > 0, _GLF_IDENTITY((_injected_loop_counter > 0), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_injected_loop_counter > 0))) && true)))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, ! (! (true))))) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, 0 + (0)), (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), ! (! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true), _GLF_IDENTITY((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && _GLF_IDENTITY(true, ! (! (true))))) && true, bool(bvec3((_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))), ! (! ((! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true))))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, 0 + (0)), (_injected_loop_counter > 0) && true))), ! (! (! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) && true)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), false, true))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5542.9376) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))), false, false)))) && true))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) - (0 ^ 0)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         do
          {
           do
            {
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))));
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u, (0u ^ 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u, (0u ^ 1u)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u, (0u ^ 1u)))), 1u)), 0u | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u, (0u ^ 1u)))), 1u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), 0u, (0u ^ 1u)))))))
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         int i = 0;
         do
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0, max(0, 0)) | 0)); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(4, ~ (~ (4))), 64, 4);
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter))), (_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter)))) * 1) < 1) || false)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                break;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
          }
         else
          {
           atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1), clamp(uint(read_1), _GLF_IDENTITY(uint(read_1), min(uint(read_1), uint(read_1))), _GLF_IDENTITY(uint(read_1), (uint(read_1)) >> 0u))), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1), clamp(uint(read_1), _GLF_IDENTITY(uint(read_1), min(uint(read_1), uint(read_1))), _GLF_IDENTITY(uint(read_1), (uint(read_1)) >> 0u))), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1), clamp(uint(read_1), _GLF_IDENTITY(uint(read_1), min(uint(read_1), uint(read_1))), _GLF_IDENTITY(uint(read_1), (uint(read_1)) >> 0u))), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1), clamp(uint(read_1), _GLF_IDENTITY(uint(read_1), min(uint(read_1), uint(read_1))), _GLF_IDENTITY(uint(read_1), (uint(read_1)) >> 0u))), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) | (1u)))))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))), (0u << _GLF_IDENTITY(uint(5u), uint(5u))) | (uint(_GLF_IDENTITY(uint(read_1), uint(uvec4(uint(read_1), 0u, 1u, 1u)))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1), clamp(uint(read_1), _GLF_IDENTITY(uint(read_1), min(uint(read_1), uint(read_1))), _GLF_IDENTITY(uint(read_1), (uint(read_1)) >> 0u))), uint(uvec4(uint(read_1), 0u, 1u, 1u))))))))))) == read_2) + 1, 4, 64, 4);
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))) && true))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(47212) : 2))) + 0)), _GLF_IDENTITY(int(2), (int(2)) ^ 0))) >> _GLF_IDENTITY(int(2), int(2)))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, true && (false))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! ((_GLF_IDENTITY(false, true && (false))) && true)))))), (injectionSwitch.x > injectionSwitch.y))));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
}
