#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   for(int _injected_loop_counter = ((1 ^ 0) & 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)), false, false)), false || (bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != 0, (_injected_loop_counter != 0) && true)), false, false))))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _injected_loop_counter -- : _GLF_FUZZED(-76434))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)))) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)) && true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)) && true))))))), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)), true && (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sqrt(0.0)) < injectionSwitch.y)) && true))))))), false, false, true))) && true)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || false))))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 1.0, 0.0, log(1.0), 0.0, length(0.0), 1.0, 0.0, 0.0)), min(float(mat3(injectionSwitch.y, 1.0, 0.0, log(1.0), 0.0, length(0.0), 1.0, 0.0, 0.0)), float(mat3(injectionSwitch.y, 1.0, 0.0, log(1.0), 0.0, length(0.0), 1.0, 0.0, 0.0)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 | 1) ^ 1)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
  return;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(true, true && (true)) ? int(_GLF_IDENTITY(4, (4) << 0)) : _GLF_FUZZED(-50856))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 & 1))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      break;
    }
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(uvec3(164451u, 28444u, 190995u)) : gl_WorkGroupSize))[0], _GLF_IDENTITY(gl_WorkGroupSize[1], clamp(gl_WorkGroupSize[1], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[1], (true ? _GLF_IDENTITY(gl_WorkGroupSize[1], max(gl_WorkGroupSize[1], gl_WorkGroupSize[1])) : _GLF_FUZZED(subgroup_local_id))))), gl_WorkGroupSize[2]), ((uvec3(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * (_GLF_IDENTITY(uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]), uvec3(0u, 0u, 0u) ^ (uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))).x)), uint(uvec3(_GLF_IDENTITY(gl_WorkGroupSize.x, (true ? gl_WorkGroupSize.x : _GLF_FUZZED(99879u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(0.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) - 0.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0))), min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(-4782.8696, 23.63, -90.76)))), vec3(1.0, 1.0, 1.0))) + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), mix(vec2(_GLF_FUZZED(4.2), (vec2(1.0, 0.0))[1]), vec2((vec2(1.0, 0.0))[0], _GLF_FUZZED((99.52 - 95.68))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec2(1.0, 0.0))), 1.0))))))), clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), max(_GLF_IDENTITY((injectionSwitch.x), float(mat3x2((injectionSwitch.x), 1.0, sin(0.0), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 0.4))), float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(9570.7292)))))), bool(true))), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(5477.7612))) : _GLF_FUZZED(-243.126))), 0.0))), (injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u)), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) + 0u))), ~ (~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))), ~ (~ ((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))))))), 0u ^ (uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))), ~ (~ ((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u)))))))))), 0u ^ (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))), ~ (~ ((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))))))), 0u ^ (uint(_GLF_IDENTITY((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u))), ~ (~ ((_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | _GLF_IDENTITY(0u, uint(uint(0u)))), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), _GLF_IDENTITY(1u, (1u) ^ 0u))) | (uvec2((1u) / 1u, 1u)))))))), 1u)))))))))))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), (~ ((1u))) << 0u))) / 1u) | 0u), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), 1u)) | (uvec2((1u) / 1u, 1u)))))))), 1u))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), (~ ((1u))) << 0u))) / 1u) | 0u), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(uvec2((1u) / 1u, 1u), (uvec2((1u) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(180965u))), 1u)) | (uvec2((1u) / 1u, 1u)))))))), 1u))))))) ^ 0u))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))), 1u, 1u)), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) / 1u), 1u))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u), max(1u, 1u)), _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) << 0u)), 1u)))), ~ (~ (~ (~ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY(_GLF_IDENTITY((1u), uint(uvec2((1u), 0u))) / 1u, 0u | ((1u) / _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | 0u)))))) / 1u), ((1u) / 1u) | 0u), _GLF_IDENTITY((1u) / 1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((1u) / 1u, uint(uint(_GLF_IDENTITY((1u) / 1u, min((1u) / 1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), ((1u)) >> 0u)) >> 0u) / 1u))))), 1u), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | (uvec2((1u) / 1u, 1u))), _GLF_IDENTITY((uvec2((1u) / 1u, 1u)) | (uvec2((1u) / 1u, 1u)), ((uvec2((1u) / 1u, 1u)) | (uvec2((1u) / 1u, 1u))) >> uvec2(0u, 0u)))))))), 1u))))))))))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))));
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(0u ^ (gl_WorkGroupID.x), 0u | (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (true ? uvec3(8u) : _GLF_FUZZED(uvec3(98637u, 96255u, _GLF_IDENTITY(170218u, ~ (~ (170218u))))))), uvec3(8u)))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) - (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (true ? uvec3(8u) : _GLF_FUZZED(uvec3(98637u, 96255u, 170218u)))), uvec3(8u)))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) + (0u << _GLF_IDENTITY(uint(2u), uint(2u)))))), 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) - (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)))))).x, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (true ? uvec3(8u) : _GLF_FUZZED(uvec3(98637u, 96255u, 170218u)))), uvec3(8u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (true ? uvec3(8u) : _GLF_FUZZED(uvec3(98637u, 96255u, 170218u)))), uvec3(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(8u), (true ? uvec3(8u) : _GLF_FUZZED(uvec3(98637u, 96255u, 170218u)))), uvec3(8u)))))), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) >> _GLF_IDENTITY(uvec3(8u), uvec3(8u))))) - (uvec3(0u, 0u, 0u) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u)))))).x)))) * 1u)))))) >> 0u);
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        continue;
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), cos(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0)), 1.0 * (float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))), cos(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0))), 1.0))))) > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))))), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-787.246)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), float(float(1.0 * (0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), min(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))))))))), bool(true))), length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false)))) || false)))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.8 / 7.4))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(67.96)))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5700.4928), _GLF_FUZZED((- vec4(-63.11, -617.692, -2.1, -20.42).p))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0))))) > injectionSwitch.y)))) && true, (((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0))), mat2(mat4(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0)))))))) > injectionSwitch.y)))) && true) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ 8.7), ((+ 8.7)) * 1.0)), (_GLF_FUZZED((+ 8.7))) * sqrt(exp(0.0)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-787.246)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), float(float(1.0 * (0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), min(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))))))))), bool(true))), length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false)))) || false)))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.8 / 7.4))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(67.96)))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5700.4928), _GLF_FUZZED((- vec4(-63.11, -617.692, -2.1, -20.42).p))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0))))) > injectionSwitch.y)))) && true, (((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0))), mat2(mat4(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0)))))))) > injectionSwitch.y)))) && true) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ 8.7), ((+ 8.7)) * 1.0)), (_GLF_FUZZED((+ 8.7))) * sqrt(exp(0.0)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), true)), bool(bool(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), sqrt(0.0), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-787.246)), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(1.0 * (0.0), float(float(1.0 * (0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(6.3) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), min(max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))))))))), bool(true))), length(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))).y, ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false)))) || false)))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-7.8 / 7.4))), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(67.96)))), bool(true))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5700.4928), _GLF_FUZZED((- vec4(-63.11, -617.692, -2.1, -20.42).p))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch)).x > injectionSwitch.y), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-9.5) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), _GLF_IDENTITY(((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0))))) > injectionSwitch.y)))) && true, (((! ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0))), mat2(mat4(_GLF_IDENTITY(mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-32.22, 7766.7407, 9120.9970, 29.91)) : mat2(injectionSwitch.x, sqrt(0.0), 0.0, 1.0)))))))) > injectionSwitch.y)))) && true) || false)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY((+ 8.7), ((+ 8.7)) * 1.0)), (_GLF_FUZZED((+ 8.7))) * sqrt(exp(0.0)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), true)))))))), (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) || false))), true))) && true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, exp(0.0), 0.0, 1.0, 0.0, exp(0.0))))) - 0.0), 1.0)))), 0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-9.2) : 1.0))))) > injectionSwitch.y))));
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 1u * (subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) + 0u) | (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), 0u + (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))) | (subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u + (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u))) | (subgroup_local_id)) - 0u)))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id)), clamp(((subgroup_local_id)), ((subgroup_local_id)), _GLF_IDENTITY(((subgroup_local_id)), ~ (~ (((subgroup_local_id))))))) | 0u, (_GLF_IDENTITY(((subgroup_local_id)) | 0u, clamp(((subgroup_local_id)) | 0u, ((subgroup_local_id)) | 0u, ((subgroup_local_id)) | 0u))) << (38411u & 0u))) | (subgroup_local_id)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), max(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (true ? uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) : _GLF_FUZZED(181655u))))))), clamp(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))), _GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))))))), 1u * (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) - 0u) | 0u) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))))))) / 1u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) << 0u) | _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)))), (((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id))))) << 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), subgroup_local_id))) * 1u))) + 1, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | ((subgroup_local_id))) | (subgroup_local_id)) + 1) << 0u)))) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))) | _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) ^ 0u)) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0)))) << _GLF_IDENTITY(int(7), int(7))), ((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0))))) << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) - 0))))) * 1)); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, max(4, 4)));
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(3.8, (_GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, float(float(3.8)))))) - 0.0))), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), vec2(_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), transpose(transpose(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mat2(1.0) * ((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))), injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(3.8, (_GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, float(float(3.8)))))) - 0.0))), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), vec2(_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), transpose(transpose(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mat2(1.0) * ((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))), injectionSwitch)).x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(3.8, (_GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, float(float(3.8)))))) - 0.0))), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), vec2(_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), transpose(transpose(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mat2(1.0) * ((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))), injectionSwitch)).x > injectionSwitch.y))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(3.8, (_GLF_IDENTITY(_GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, float(float(3.8))))), min(_GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, float(float(3.8))))), _GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, float(float(3.8)))))))) - 0.0))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(mat3(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(mat3(mat3(_GLF_IDENTITY(mat3(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat3(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (mat3(mat3(_GLF_IDENTITY(mat3(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (mat3(vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat3(1.0))))), bvec2(false, true)), vec2(_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bool(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), transpose(transpose(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))))))))))), mat2(1.0) * ((_GLF_IDENTITY(mat2(mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, abs(0.0)), vec4(0.0, 1.0, 1.0, sqrt(1.0))), dot(vec4(1.0, 0.0, 0.0, abs(0.0)), vec4(0.0, 1.0, 1.0, sqrt(1.0)))), length(vec2(0.0, 0.0)), abs(0.0), round(length(normalize(1.0)))))))[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))))))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0)))))))))), injectionSwitch)).x > injectionSwitch.y)))) || false)) || false))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(3.8, (_GLF_IDENTITY(3.8, max(3.8, _GLF_IDENTITY(3.8, _GLF_IDENTITY(float(float(_GLF_IDENTITY(3.8, clamp(3.8, 3.8, 3.8)))), min(float(float(_GLF_IDENTITY(3.8, clamp(3.8, 3.8, 3.8)))), float(float(_GLF_IDENTITY(3.8, clamp(3.8, 3.8, 3.8)))))))))) - 0.0))), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), vec2(_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.3, float(_GLF_IDENTITY(vec2(-1.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), mat2(1.0) * (vec2(-1.3, determinant(mat4(1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)))))))), (injectionSwitch)[1]), bvec2(false, true)), 0.0, _GLF_ONE(1.0, injectionSwitch.y))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(1.0), float(_GLF_IDENTITY(mat2x3(float(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (false ? _GLF_FUZZED(mat2x3(-194.196, -20.13, 5366.2673, 5748.0504, -4.9, -8.7)) : mat2x3(float(1.0), 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-8.2))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(735.820)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), mat2(1.0) * ((_GLF_IDENTITY(mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, false || (true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true))))))))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x4((false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true))))))))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), (true ? mat3x4((false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true))))))))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(mat3x4(71.51, -8456.7607, -655.825, -5.6, -181.764, -335.586, 9.0, 276.553, -64.76, -8530.3366, 6.2, 7.3))))), mat2(mat2x3(mat2(_GLF_IDENTITY(mat3x4((false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true))))))))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), (true ? mat3x4((false ? _GLF_FUZZED(mat2(321.096, 8632.5601, -3512.4462, 2.5)) : mat2(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), vec2(_GLF_FUZZED(-1.3), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, true), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), true))))))))), true)), false)))), false, true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(mat3x4(71.51, -8456.7607, -655.825, -5.6, -181.764, -335.586, 9.0, 276.553, -64.76, -8530.3366, 6.2, 7.3))))))))))) / mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 1.0)), 1.0, 1.0, 1.0)))))))))), injectionSwitch)).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.2))) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.2))) > injectionSwitch.y)))))), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.2))) > injectionSwitch.y)))))), true, false, false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.5), _GLF_FUZZED(204.454)), bvec2(false, false))).x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-679.689)), bool(false))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-679.689)), bool(false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-679.689)), bool(false)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), float(mat2(float(injectionSwitch.y), 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0))))))), float(_GLF_FUZZED(-679.689)), bool(false)))))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))));
    }
   else
    {
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))])), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(0 | _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), clamp((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-85034) : 4)), 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(4, clamp(4, 4, 4))))), (0 | _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), clamp((_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-85034) : 4)), 4, 4))), (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), int(_GLF_IDENTITY(ivec3(clamp(4, 4, 4), (0 | 0), 0), min(ivec3(clamp(4, 4, 4), (0 | 0), 0), ivec3(clamp(4, 4, _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-54001))), int(_GLF_ONE(1.0, injectionSwitch.y)), 1, 1)))), (0 | 0), 0))))))), (_GLF_IDENTITY(4, clamp(4, 4, 4))))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), 0 ^ ((_GLF_IDENTITY(4, clamp(4, 4, 4))))), (_GLF_IDENTITY(4, clamp(4, 4, 4)))))) / 1)), 64, 0);
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(subgroup_local_id + 1 < subgroup_size)
    {
     int i = 0;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                break;
               break;
              }
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), ! (! (bool(bvec4((false), true, true, _GLF_IDENTITY(true, false || (true)))))))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))), (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))) && true))), ! (! (false)))))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   break;
                  }
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) * 1.0) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) * 1.0) < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) * 1.0) < injectionSwitch.y)) && true))))), true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), (_GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))), true && ((bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))) && true) && true, ((bool(bvec4(_GLF_IDENTITY(true, (true) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) && true) || false)))))))), (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   do
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        break;
                       return;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.3))))))); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) + 1, 4, 64, 4);
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, determinant(mat3(0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), sqrt(0.0), 1.0, 0.0))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0))) > injectionSwitch.y) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0))) > injectionSwitch.y) && true)))))))));
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
        return;
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), (int(0)) | 0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false))))
              return;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) || false))))))));
      }
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)) && true, false || ((_GLF_WRAPPED_IF_TRUE(true)) && _GLF_IDENTITY(true, (true) && true)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.7))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-66.44), _GLF_FUZZED(6290.4270)), bvec2(false, false)))) / vec2(1.0, 1.0)).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-66.44), _GLF_FUZZED(6290.4270)), bvec2(false, false)))) / vec2(1.0, 1.0)).x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.8)), bool(false))), injectionSwitch.x)) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
            break;
           return;
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(read_2, (read_2) / 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), uint(uvec3(uint(2u), 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))) / 1u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), max(~ (_GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u), uint(uvec3(uint(2u), 0u, 1u)))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, (2u) << 0u)))))), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, _GLF_IDENTITY(1u, min(1u, 1u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), max(~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) ^ 0u)), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) / 1u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY(read_2, (read_2) / 1u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), 0u + (uint(2u))), uint(uvec3(uint(2u), 0u, _GLF_IDENTITY(1u, ~ (~ (1u))))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), _GLF_IDENTITY(0u, min(0u, 0u)), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))), (_GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u)))) / 1u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), clamp(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(_GLF_IDENTITY(2u, ~ (~ (2u)))), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), max(~ (_GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (uint(2u)) << 0u), uint(uvec3(uint(2u), 0u, 1u)))))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(2u, 2u, _GLF_IDENTITY(2u, (2u) << 0u)))))), ~ (_GLF_IDENTITY(~ (((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, _GLF_IDENTITY(1u, min(1u, 1u))))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), max(~ (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(2u, (2u) ^ 0u)), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), (_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) / 1u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), (uint(uvec4(read_2, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), clamp(1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), 1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u)))), 1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), uint(uvec3(uint(2u), 0u, 1u))))))) >> _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, _GLF_IDENTITY((_GLF_IDENTITY(2u, 1u * (2u))) - 0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(2u, _GLF_IDENTITY(1u, 0u | (1u)) * (2u))) - 0u, (false ? _GLF_FUZZED(packSnorm4x8(vec4(-8.9, 123.879, -531.113, -356.511))) : (_GLF_IDENTITY(2u, 1u * (2u))) - 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2u, 1u * (2u))) - 0u, ((_GLF_IDENTITY(2u, 1u * (2u))) - 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(2u, 1u * (2u))) - 0u, 0u | ((_GLF_IDENTITY(2u, 1u * (2u))) - 0u)))), (false ? _GLF_FUZZED(packSnorm4x8(vec4(-8.9, 123.879, -531.113, -356.511))) : (_GLF_IDENTITY(2u, 1u * (2u))) - 0u)))) << 0u))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) | 0u)), max(read_2, read_2))) + 1, 4, 64, 4);
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
      }
    }
  }
}
