#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) | (0))))
        {
         case 0:
         case 34:
         case 23:
         case 50:
         case 26:
         case 57:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 73:
         if(_GLF_DEAD(false))
          barrier();
         case 32:
         case 24:
         if(_GLF_DEAD(false))
          barrier();
         case 52:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 5:
         for(         uvec4(154166u, 72036u, 70382u, 58148u);
 true; vec3(7.8, 830.763, 686.534))
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         case 95:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         bvec2(false, false);
         default:
         if(_GLF_DEAD(false))
          barrier();
         1;
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 64:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 43:
           ivec4 _GLF_SWITCH_5_0v;
           default:
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
        {
         case 0:
         case 76:
         case 23:
         case 49:
         case 44:
         case 13:
         if(_GLF_DEAD(false))
          barrier();
         case 94:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         break;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
    {
     case 77:
     (0.9 / (-96.34 / mat3x2(-5.5, 2452.6272, 89.36, -8518.8697, -1.4, 525.499)));
     case 0:
     case 2:
     case 74:
     case 37:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))))
        {
         case 74:
         if(false)
          {
           ;
           mat3(-16.96, 2.5, -785.269, -4.4, 19.09, 2792.3004, -12.19, 38.64, 3.0);
           bvec2(true, true);
           for(           uvec3(67215u, 73895u, 19578u).ggr;
 false; ivec2(-44046, -12980)[1])
            {
             float _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[41], _GLF_SWITCH_5_2v;
             -68.00;
             mat4x3(-100.308, 848.944, 7.5, 44.48, -2.8, -8.0, -3692.4285, 967.677, 78.57, 9.2, 1.3, -6.1);
             bvec3(true, false, true);
             uvec3 _GLF_SWITCH_5_3v[46], _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v[13];
             if(_GLF_DEAD(false))
              barrier();
            }
           mat3x4 _GLF_SWITCH_5_6v;
           if(_GLF_DEAD(false))
            barrier();
           ;
           if(_GLF_DEAD(false))
            barrier();
           {
            if(_GLF_DEAD(false))
             barrier();
            mat2 _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v[40], _GLF_SWITCH_5_9v[58];
            ;
            mat4x3 _GLF_SWITCH_5_10v, _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v[67];
            mat3x4 _GLF_SWITCH_5_13v[58], _GLF_SWITCH_5_14v, _GLF_SWITCH_5_15v;
            mat2x3 _GLF_SWITCH_5_16v, _GLF_SWITCH_5_17v, _GLF_SWITCH_5_18v;
            bool _GLF_SWITCH_5_19v[33], _GLF_SWITCH_5_20v[65], _GLF_SWITCH_5_21v;
            uvec3(116135u, 17443u, 64426u);
            (vec2(4.9, -99.22) - injectionSwitch);
            uvec2(94565u, 159879u);
           }
           for(           mat4(660.768, 580.754, 206.153, 2.6, 56.70, -2.4, 97.51, -32.18, -7053.0291, 946.390, 903.034, -270.645, -126.178, -172.146, -914.321, -41.79);
 false; (false || true))
            {
             ;
             uint _GLF_SWITCH_5_22v;
             mat2 _GLF_SWITCH_5_23v, _GLF_SWITCH_5_24v[31];
             mat2x4(761.711, -7.0, 9.9, 41.43, 2575.6356, -408.080, 3.7, -964.988);
             if(_GLF_DEAD(false))
              barrier();
             9.4;
             if(_GLF_DEAD(false))
              barrier();
             ;
             vec4 _GLF_SWITCH_5_25v;
             false;
            }
          }
         else
          {
           ;
           vec2 _GLF_SWITCH_5_26v[29], _GLF_SWITCH_5_27v;
           for(ivec3 _GLF_SWITCH_5_28v[84], _GLF_SWITCH_5_29v, _GLF_SWITCH_5_30v[61]; ((uvec3(25293u, 65874u, 10027u) | subgroup_size) == uvec3(199132u, 6584u, 40674u)); mat3(-6.8, -40.79, -5834.8094, 3.5, -7.4, -3220.5635, 88.36, -7884.1238, 5.9))
            {
             mat2(5.7, 1.5, -69.83, 62.52);
             if(_GLF_DEAD(false))
              barrier();
             sin(smoothstep(17.28, 5.6, vec2(1.9, -5.5)));
             uvec2(14126u, 133896u);
             fract(-52.29);
             mat4 _GLF_SWITCH_5_31v[2], _GLF_SWITCH_5_32v;
             int _GLF_SWITCH_5_33v, _GLF_SWITCH_5_34v;
             if(_GLF_DEAD(false))
              barrier();
             ivec4 _GLF_SWITCH_5_35v;
            }
           uvec3 _GLF_SWITCH_5_36v, _GLF_SWITCH_5_37v;
           for(mat2 _GLF_SWITCH_5_38v; true; mat4x3(-3346.7332, 3765.5927, 2643.1769, 2.8, 386.411, -4.2, -73.91, -8.4, -28.20, -5680.3992, -4.0, -4822.6611))
            {
             ivec4(91085, 2034, 59302, -83701).qspq;
             if(_GLF_DEAD(false))
              barrier();
             bvec4(true, true, true, false);
             uvec4(13618u, 148049u, 180743u, 44581u);
             workgroup_id;
             if(_GLF_DEAD(false))
              barrier();
             vec4(946.762, -0.3, -0.3, -3.5);
             int _GLF_SWITCH_5_39v[83], _GLF_SWITCH_5_40v;
            }
           for(float _GLF_SWITCH_5_41v[49]; true; ivec4(-11142, -67596, 65057, 8462))
            {
             ivec4 _GLF_SWITCH_5_42v, _GLF_SWITCH_5_43v[26];
             mat3x4 _GLF_SWITCH_5_44v, _GLF_SWITCH_5_45v[90];
             mat4 _GLF_SWITCH_5_46v, _GLF_SWITCH_5_47v;
             if(_GLF_DEAD(false))
              barrier();
            }
           182396u;
          }
         if(_GLF_DEAD(false))
          barrier();
         case 44:
         if(_GLF_DEAD(false))
          barrier();
         for(         greaterThanEqual(mix(ivec2(1386, -7360), clamp(ivec2(-49080, -87888), ivec2(21770, -88543), ivec2(-8740, 88591)), bvec2(false, true)), ivec2(-90409, -6292));
 (-4.1 >= step(-5554.8096, 97.81)); ivec2(85822, 7974))
          {
           mat3x4(7.0, 32.87, -166.637, -5.3, 0.3, 78.83, 854.320, 0.5, 6.7, -7.8, -5039.9306, 493.073);
           mat3x4(52.83, 3912.9649, -1004.8465, -377.888, -55.26, -0.2, -9358.9464, 91.87, 3.1, -9500.9414, -8.3, 1.5);
           (mat3(96.67, -681.938, -8.0, 397.186, -7.4, -459.501, -1.3, 45.77, -460.465) - 109.576);
           if(false)
            {
            }
           else
            {
             mat3 _GLF_SWITCH_5_48v, _GLF_SWITCH_5_49v[64];
            }
           mat3x4(0.1, -3962.6567, -0.5, 5209.3314, 4063.8337, 466.219, -6.3, 467.581, 76.79, 7.5, 82.80, 18.46);
           mat3x4(614.646, -289.279, -44.17, 6499.8928, -3119.7865, 5.8, -7.4, -75.60, -157.356, -7640.5605, 71.94, -6984.7278);
           uvec2(144289u, 87703u);
           mat4 _GLF_SWITCH_5_50v, _GLF_SWITCH_5_51v[34], _GLF_SWITCH_5_52v;
          }
         case 0:
         case 46:
         case 8:
         case 64:
         case 85:
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         break;
         case 58:
         {
         }
         case 93:
         for(ivec2 _GLF_SWITCH_5_53v, _GLF_SWITCH_5_54v; (vec4(4417.3100, 97.33, -13.19, 7255.3563).x != -8067.5330); vec4(6.9, 96.76, -6737.7153, 3.1))
          {
           do
            {
             mat3x4 _GLF_SWITCH_5_55v[59];
             if(_GLF_DEAD(false))
              barrier();
             mat3x4 _GLF_SWITCH_5_56v, _GLF_SWITCH_5_57v, _GLF_SWITCH_5_58v[79];
             int _GLF_SWITCH_5_59v, _GLF_SWITCH_5_60v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             vec4(69.40, -1128.8816, 1.5, -2551.5846);
             (-3585.2834 - inverse(mat2(-292.507, 4273.9256, -355.157, -8.6)));
            }
           while((true && (44974 < -23826)));
           (round(vec3(-182.688, -3045.9371, -167.503)) , mat4x3(-9.5, -7.9, -4.0, 9458.7515, -25.07, 436.914, -392.942, -6.9, -1840.3457, -115.198, 7.5, -7741.6815));
          }
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 22:
     case 51:
     do
      {
       switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
        {
         case 26:
         (workgroup_id & uvec2(24452u, 134713u));
         case 62:
         bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
         case 0:
         case 90:
         case 43:
         case 98:
         case 52:
         case 64:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         break;
         if(_GLF_DEAD(false))
          barrier();
         case 29:
         ivec2 _GLF_SWITCH_5_2v;
         case 25:
         mat4(5009.9145, -723.752, -899.557, 7458.1885, -74.89, -5.7, -3.6, 2211.8703, 9.3, -504.948, 16.38, 80.58, 239.649, 3752.9789, -4.8, -3.3);
         if(_GLF_DEAD(false))
          barrier();
         default:
         1;
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     break;
     case 48:
     if(true)
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         mat2(-3889.3156, 3.3, -3.6, 4.2);
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           float _GLF_SWITCH_4_0v[96];
           if(_GLF_DEAD(false))
            barrier();
           bvec2 _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[4];
           ivec3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[1], _GLF_SWITCH_4_5v;
           ((mat3(1.5, 4.2, 4348.9037, 350.208, 83.11, -499.077, -85.77, 3359.4155, 7317.7433) * mat3(7582.3809, 6446.0888, 65.75, 4.3, -135.800, 55.91, 661.063, 28.79, 5.7)) , vec3(-98.96, 114.496, 9771.4071));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec4 _GLF_SWITCH_4_6v[80];
           int _GLF_SWITCH_4_7v[55];
          }
         while(_GLF_WRAPPED_LOOP(false));
         mat4x3 _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v, _GLF_SWITCH_4_10v[86];
         for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           while(true)
            {
             if(_GLF_DEAD(false))
              barrier();
             uvec2 _GLF_SWITCH_4_11v[81];
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
            }
          }
         {
          vec2 _GLF_SWITCH_4_12v, _GLF_SWITCH_4_13v[79], _GLF_SWITCH_4_14v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           barrier();
          vec2 _GLF_SWITCH_4_15v, _GLF_SWITCH_4_16v, _GLF_SWITCH_4_17v;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
             }
           }
          else
           {
           }
         }
         if(_GLF_DEAD(false))
          barrier();
         bvec2(false, false);
        }
       while(true);
       {
        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
         barrier();
        mat4 _GLF_SWITCH_4_18v[2], _GLF_SWITCH_4_19v[80];
        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         barrier();
        ivec2(-56034, -82722);
        max(ivec4(42701, -46217, 71496, -36155), ivec4(-97663, 31894, -29854, -97438));
        step(-2.5, vec4(-99.80, 197.200, -5.5, -787.143));
       }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       vec3(0.4, -31.57, -5.3);
       {
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         mat2x3 _GLF_SWITCH_4_20v[31], _GLF_SWITCH_4_21v, _GLF_SWITCH_4_22v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
              barrier();
            }
          }
         injectionSwitch;
         (atomicOr(num_workgroup, workgroup_id) % workgroup_base);
         uvec2(100437u, 39921u);
        }
        do
         {
          ivec2 _GLF_SWITCH_4_23v;
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          trunc(vec4(-111.401, -56.59, 7057.5123, -138.686));
          uint _GLF_SWITCH_4_24v, _GLF_SWITCH_4_25v[86], _GLF_SWITCH_4_26v;
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             barrier();
            uvec4(5013u, 174659u, 83065u, 50111u);
            if(_GLF_DEAD(false))
             barrier();
           }
          vec2(-6199.9871, 4.5);
          if(_GLF_DEAD(false))
           barrier();
         }
        while(false);
        if(_GLF_DEAD(false))
         {
          do
           {
            barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
         }
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           mat2x3((step(-6026.6393, 828.869) / vec3(2.5, 589.764, -6589.0051)), vec3(5.5, 9890.7526, 0.6));
          }
         else
          {
          }
         uvec3(17224u, 9981u, 192436u);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         bvec2 _GLF_SWITCH_4_27v;
         mat4x2 _GLF_SWITCH_4_28v;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           ivec2(11817, -81991);
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
         barrier();
        uvec2 _GLF_SWITCH_4_29v, _GLF_SWITCH_4_30v, _GLF_SWITCH_4_31v[93];
        mat3 _GLF_SWITCH_4_32v, _GLF_SWITCH_4_33v[33];
       }
       if(_GLF_DEAD(false))
        barrier();
       for(vec3 _GLF_SWITCH_4_34v, _GLF_SWITCH_4_35v, _GLF_SWITCH_4_36v[4]; false; uvec3(76693u, 90020u, 59398u))
        {
         if(false)
          {
           if(_GLF_DEAD(false))
            barrier();
           vec4(1456.0305, 0.0, 1.7, -3059.0651);
           uvec2 _GLF_SWITCH_4_37v[64], _GLF_SWITCH_4_38v;
           ;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat4(mat3(-6.6));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           (matrixCompMult(mat2x3(4563.8345, 4.4, 7.0, 3443.4396, 6639.4239, 37.71), mat2x3(0.9, -90.16, 3998.8855, 3.1, 8.4, 5816.4824)) * mat4x2(2327.2061, 45.81, 9.1, -8896.6684, -109.837, 541.088, 5.1, -795.812));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             mat3(461.066, 1.9, -25.18, -236.420, 21.32, 8.5, 10.44, 5020.6835, -751.478);
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           greaterThanEqual(uvec3(119330u, 137769u, 73696u), uvec3(132690u, 60400u, 198199u));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ;
            }
           else
            {
            }
           ivec3(-98038, -29226, -74845);
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec3 _GLF_SWITCH_4_39v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
            barrier();
           mat3(-3.9, 528.458, -1171.0214, -7.2, -0.3, 97.85, 60.62, -7.6, 239.144);
           (mat2x4(vec4(-911.044, 73.26, 507.661, -4.3), vec4(530.006, -695.894, -3271.7442, -5876.5842)));
           ivec2 _GLF_SWITCH_4_40v, _GLF_SWITCH_4_41v[86], _GLF_SWITCH_4_42v[67];
           vec4(5985.7461, -50.41, 0.3, -2592.6654);
           mat4x3 _GLF_SWITCH_4_43v;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             _GLF_SWITCH_4_40v;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           uvec2(159237u, 24273u);
           uvec4 _GLF_SWITCH_4_44v[53];
          }
         (ivec4(-21230, -86418, -3949, 31636) ^ (ivec4(-39062, -125, -39620, 55207) | ivec4(50208, 51412, 23149, -13441)));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         mat4x2 _GLF_SWITCH_4_45v, _GLF_SWITCH_4_46v;
         mat2x3(63.45, float(false), 4.3, 46.29, -360.738, 2.3);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         for(         workgroup_id;
 (false ^^ (77081 < 5012)); mat4x3(-1.5, -7619.0112, -7.8, -15.36, 8.5, 371.092, -170.822, 5.6, -17.21, 521.051, 5570.1658, 3.0))
          {
           uint _GLF_SWITCH_4_47v, _GLF_SWITCH_4_48v[40], _GLF_SWITCH_4_49v;
           if(_GLF_DEAD(false))
            barrier();
           bvec3(true, true, true);
           mat2x4 _GLF_SWITCH_4_50v, _GLF_SWITCH_4_51v, _GLF_SWITCH_4_52v;
           ivec4(-78349, 72028, -82579, -1387);
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         while(false)
          {
           bvec3 _GLF_SWITCH_4_53v, _GLF_SWITCH_4_54v;
           if(_GLF_DEAD(false))
            barrier();
           (mat3x2(1.9, -300.053, -6.0, -3184.7038, -5.4, -6618.0003) / mat3x2(-9.9, 43.04, -752.332, -8.4, -924.371, 271.100));
           ivec2 _GLF_SWITCH_4_55v[59];
           mat4 _GLF_SWITCH_4_56v, _GLF_SWITCH_4_57v;
          }
         int _GLF_SWITCH_4_58v[62], _GLF_SWITCH_4_59v;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           ;
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if((greaterThan(ivec4(-26356, 49544, -31756, -62259), ivec4(76328, -34478, -62815, -68635)) != bvec4(true, true, false, false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           mat3((mat3x2(-5.0, -5735.6350, -2.0, -9.1, 2.4, -61.04) + mat3x2(8249.6089, 8.0, 525.213, -808.749, 5.3, -9539.2246)));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             mat4x3(42.48, 9633.8788, 0.5, -88.49, 6.1, 9150.2425, -14.00, -96.65, -252.074, -8.8, 6.1, -519.083);
            }
           else
            {
            }
           mat2x4(-10.22, -4.2, 234.932, 93.87, -479.223, 662.484, 661.288, -11.89);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           bvec4(false, false, false, false);
           mat3x2 _GLF_SWITCH_4_60v, _GLF_SWITCH_4_61v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           bvec4(true, false, true, false);
           ;
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             ;
            }
           if(_GLF_DEAD(false))
            barrier();
           ;
           mat2x4 _GLF_SWITCH_4_62v, _GLF_SWITCH_4_63v[80];
           mat3(-2394.8166, 6.2, -3.8, 765.093, -6039.2585, 3.6, 3.6, -7.1, 41.35);
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         mat3x4 _GLF_SWITCH_4_64v[17], _GLF_SWITCH_4_65v;
         injectionSwitch;
         bool _GLF_SWITCH_4_66v, _GLF_SWITCH_4_67v, _GLF_SWITCH_4_68v;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_SWITCH_4_66v)
            {
             ;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 (false ? ((2.6 / -9.2) != -2.5) : _GLF_SWITCH_4_68v);
                }
              }
             ;
             ;
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (0 | 1))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 (mat2x3(-892.123, 184.080, -8.9, -0.9, 7930.8169, 60.16) - -1.8);
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4x3 _GLF_SWITCH_4_69v[96], _GLF_SWITCH_4_70v;
             mat2x3 _GLF_SWITCH_4_71v;
             max((uvec4(166844u, 58904u, 71347u, 153336u) | uvec4(27870u, 15954u, 35177u, 183797u)), subgroup_size);
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               bvec3(true, true, false);
              }
             if(_GLF_DEAD(false))
              barrier();
             float _GLF_SWITCH_4_72v;
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         ivec2 _GLF_SWITCH_4_73v, _GLF_SWITCH_4_74v, _GLF_SWITCH_4_75v[6];
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(           bvec2(true, true);
 _GLF_SWITCH_4_68v; (mat2(6.5, 760.181, 0.8, 3.0) * mat2(-7.2, -63.82, 964.952, 7.0)))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               ;
              }
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 mat2x4(6.4, 5.9, 8.3, -4.8, -5.6, 9.3, -9360.5063, -6.2);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             mat4x3(mat2(-0.5, -592.178, -5.6, 1353.4565));
             if(_GLF_DEAD(false))
              barrier();
             _GLF_SWITCH_4_67v;
             (mat2x4(-1825.8048, -7096.7172, -1.3, -4933.1054, -1.4, -0.8, -6271.4812, -0.2) * mat3x2(-0.1, -5.8, -896.874, 645.533, 735.435, 4.9));
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               equal(ivec4(10234, 36945, 79567, -93274), ivec4(-96929, -88632, -25947, -40514));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       num_workgroup;
       while((mat4x2(-4475.5185, -2.5, -8.9, -2.9, 3741.8693, -8.3, -523.565, -4.2) != mat4x2(625.487, 3.8, 6.9, 1790.7554, 32.48, 41.67, -5044.1401, 0.1)))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(         ((false ? mat2x3(7.7, -3.2, -1.2, 96.10, -53.48, 3.8) : mat2x3(-8.7, 3.1, -26.57, 803.881, -3.2, -3.5)) , ((+ mat3x4(-56.15, -3929.8112, -6.4, -1.6, -51.89, 9019.1341, 8829.5860, -6.4, 25.50, 8514.2948, -2981.5013, -5288.7411))));
 (367.288 < -49.00); 36.95)
          {
           vec4(3491.8250, 5262.1568, -3.2, 978.555);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             bitfieldExtract(82721, (69050 >> 66461), floatBitsToInt(vec4(7702.5726, 476.934, 6594.6071, -89.24))[0]);
            }
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         bvec3(true, true, true);
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       ;
       for(mat3x4 _GLF_SWITCH_4_76v[96], _GLF_SWITCH_4_77v, _GLF_SWITCH_4_78v; false; mat3(mat2x3(-18.53, -0.1, -6829.9111, -693.537, -17.37, -25.71)))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             step(vec4(1254.2159, -3.5, 8.0, -6.6), vec4(-98.05, -18.02, -9.8, 3980.9186));
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
          }
         if(true)
          {
           mat3x2 _GLF_SWITCH_4_79v[35];
           floatBitsToUint(dot(vec3(-54.08, -1.0, 7.9), vec3(-28.94, 8.6, 6.0)));
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) & 1)); _injected_loop_counter ++)
            {
             workgroup_id;
            }
           (ivec3(27286, -46242, -12134) | (~ 60038));
           (mat2(5.7, -649.184, -1.1, 9067.3789) / cos(43.25));
           ;
          }
         if((bvec3(false, true, true) == bvec3(false, true, false)))
          {
           mat3 _GLF_SWITCH_4_80v;
          }
         else
          {
           any(greaterThan(vec4(6145.4520, 6.6, 682.356, -5758.0228), vec4(692.301, 2212.3868, 2177.8680, 3.8)));
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           else
            {
            }
           vec3(252.499, 9.4, 1219.0735);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           do
            {
             (89304 * -36904);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           mat2x4 _GLF_SWITCH_4_81v, _GLF_SWITCH_4_82v;
           bvec2 _GLF_SWITCH_4_83v;
           mat4x2(-5.9, 8.1, 8409.5863, -1.4, 45.18, 4.0, 355.088, 105.904);
           mat3 _GLF_SWITCH_4_84v[52], _GLF_SWITCH_4_85v[72];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat2 _GLF_SWITCH_4_86v;
          }
         do
          {
           findLSB(175145u);
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
     case 18:
     ivec2(29456, 29103);
     default:
     1;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ (0 >> _GLF_IDENTITY(int(0), int(0))))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       switch(_GLF_SWITCH(0))
        {
         case 23:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH((-57712 & 0)))
            {
             case 32:
             (mat4x3(9.6, 8.8, -7502.2522, -4.7, 7183.1392, -368.682, 3.7, 5.7, -8.4, 5151.4048, -33.62, -287.330) != mat4x3(27.95, -762.421, -836.913, -8.7, -3.0, -6.3, 7273.2019, 6.2, 3422.6592, 5.6, 5466.4794, 0.8));
             case 0:
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             break;
             case 51:
             mat3x2(2.4, -7.8, 318.562, 826.029, -5.3, -802.077);
             case 2:
             mat4x3 _GLF_SWITCH_5_0v;
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         true;
         case 38:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         ivec3 _GLF_SWITCH_1_0v;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             switch(_GLF_SWITCH(0))
              {
               case 42:
               mat3 _GLF_SWITCH_4_0v[25], _GLF_SWITCH_4_1v[52];
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
               case 65:
               case 61:
               case 72:
               case 89:
               if(_GLF_DEAD(false))
                barrier();
               case 48:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                  }
                }
               case 39:
               case 52:
               case 63:
               barrier();
               break;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               case 67:
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), int(int(_GLF_IDENTITY(int(8), (int(8)) | (int(8)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               uvec4 _GLF_SWITCH_4_2v[26], _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
               case 38:
               ;
               default:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 1;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         case 13:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
         break;
         if(_GLF_DEAD(false))
          barrier();
         default:
         1;
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
              barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), int(ivec3(_GLF_IDENTITY(int(2), (int(2)) | (int(2))), 1, 1))))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           else
            {
            }
          }
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     switch(_GLF_SWITCH(0))
      {
       case 89:
       uvec3(103527u, 74141u, 176018u);
       case 34:
       {
        vec4 _GLF_SWITCH_4_0v[71], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[69];
        uvec4 _GLF_SWITCH_4_3v;
        if(_GLF_DEAD(false))
         barrier();
       }
       case 0:
       case 57:
       case 75:
       case 30:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 25:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       case 81:
       case 21:
       case 40:
       case 33:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
       else
        {
        }
       case 94:
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
       default:
       1;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 87:
         -93410;
         if(_GLF_DEAD(false))
          barrier();
         case 0:
         case 29:
         case 57:
         case 80:
         case 32:
         case 6:
         case 50:
         case 42:
         case 54:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 19:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         break;
         case 30:
         bitCount(ivec3(-26783, -65230, 18162));
         default:
         1;
        }
      }
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 92:
       {
        uint _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[99], _GLF_SWITCH_5_2v;
        for(        inverse(mat3(-20.00, 1.5, -956.885, 530.012, 5247.5400, -418.851, 7.0, 7.7, -781.615));
 true; uvec2(110868u, 39691u)[0])
         {
          mat3 _GLF_SWITCH_5_3v[91], _GLF_SWITCH_5_4v;
          ivec3 _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v[51];
          mat4(mat4x2(-740.478, 908.764, 51.97, 4.4, -79.74, -1.9, 33.02, 0.8));
          (vec4(-984.617, -7.6, 1.6, 63.15) - vec4(-2195.7805, 205.239, -0.6, -0.0));
          uvec2((uvec3(41157u, 18532u, 108363u) - uvec3(166298u, 39403u, 142980u)));
          if(_GLF_DEAD(false))
           barrier();
          _GLF_SWITCH_5_4v;
          vec3(-18.70, 98.63, 86.23);
         }
        {
         if(_GLF_DEAD(false))
          barrier();
         vec3 _GLF_SWITCH_5_8v, _GLF_SWITCH_5_9v, _GLF_SWITCH_5_10v[97];
        }
        while((vec3(6.4, -4.4, -3.8).b >= 8898.7810))
         {
          mat4x3 _GLF_SWITCH_5_11v, _GLF_SWITCH_5_12v, _GLF_SWITCH_5_13v;
          uvec2(52374u, 188554u);
          bvec4(false, false, false, true);
          greaterThanEqual(ivec2(-71067, 52409), ivec2(2152, -17775));
          if(_GLF_DEAD(false))
           barrier();
          packHalf2x16(injectionSwitch);
          uvec4(81010u, 108406u, 169591u, 132591u);
          uvec2 _GLF_SWITCH_5_14v[34], _GLF_SWITCH_5_15v, _GLF_SWITCH_5_16v;
          _GLF_SWITCH_5_15v;
         }
        int _GLF_SWITCH_5_17v, _GLF_SWITCH_5_18v[11];
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         int _GLF_SWITCH_5_19v, _GLF_SWITCH_5_20v[8], _GLF_SWITCH_5_21v[56];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         uvec4 _GLF_SWITCH_5_22v, _GLF_SWITCH_5_23v, _GLF_SWITCH_5_24v;
        }
        bvec3 _GLF_SWITCH_5_25v, _GLF_SWITCH_5_26v;
        uvec3 _GLF_SWITCH_5_27v, _GLF_SWITCH_5_28v, _GLF_SWITCH_5_29v[43];
       }
       case 65:
       bvec4(true, true, false, true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 0:
       case 17:
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       if(_GLF_DEAD(false))
        barrier();
       default:
       1;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH((0 & 8374)))
              {
               case 50:
               (i >> i);
               case 0:
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               break;
               if(_GLF_DEAD(false))
                barrier();
               case 60:
               (bvec4(true, false, false, false) , (4052.0353 - mat3(-9455.0425, 9.8, -63.75, -324.865, -2922.1917, 5195.6843, 718.777, -5085.6919, 5193.3253)));
               case 85:
               int _GLF_SWITCH_5_0v;
               default:
               1;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))), false, true, true)))))))
            barrier();
          }
        }
       else
        {
         switch(_GLF_SWITCH(0))
          {
           case 79:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             do
              {
               for(               mat3x2(7.9, -7.6, 645.301, -6870.7451, 9.8, -67.24);
 true; ivec4(-15521, -29325, -55147, 40212))
                {
                 for(int _injected_loop_counter = (-88686 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 mat3x2 _GLF_SWITCH_2_0v;
                 ;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               uvec4 _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[71], _GLF_SWITCH_2_3v;
              }
             else
              {
              }
             uvec4(uvec2(180684u, 162269u), uvec2(24665u, 18278u));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 ;
                 bvec4(false, true, false, true);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     ;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 uvec4 _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[65], _GLF_SWITCH_2_6v;
                 if(_GLF_DEAD(false))
                  barrier();
                 uintBitsToFloat(_GLF_SWITCH_2_4v);
                 float _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v[10], _GLF_SWITCH_2_9v;
                 step(_GLF_SWITCH_2_7v, vec3(19.94, -97.14, 81.64));
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while((uvec4(186249u, 124811u, 128475u, 155530u) != uvec4(114267u, 53920u, 138030u, 112749u)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             mat3x2 _GLF_SWITCH_2_10v[3], _GLF_SWITCH_2_11v, _GLF_SWITCH_2_12v;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               _GLF_SWITCH_2_11v;
               injectionSwitch;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (ivec3(96722, 55700, -47996) | (i / ivec3(-58849, 2369, -48801)));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 (mat3x4(-1.6, -1.7, -35.03, -32.35, -1666.9362, 4877.1047, -74.63, -634.011, 9.8, -80.12, -318.186, -7.0) * mat4x3(-6.7, -283.041, -173.957, 9.2, 2.1, -31.12, 0.4, -1383.8482, -8.5, -8715.8270, 5414.9210, 1.2));
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))
              barrier();
             for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           case 0:
           case 95:
           case 3:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 1:
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           break;
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           case 85:
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           workgroup_id;
           case 76:
           while((-2261 < i))
            {
            }
           default:
           1;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 93:
               ivec4 _GLF_SWITCH_5_0v[83], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
               case 84:
               mat3x4 _GLF_SWITCH_5_3v[64];
               case 0:
               barrier();
               break;
               case 2:
               ;
               case 76:
               sinh(-984.086);
               default:
               1;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
   switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
    {
     case 7:
     while(false)
      {
       for(ivec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[80]; false; (31836 < -84324))
        {
         ivec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v[18];
         bvec4 _GLF_SWITCH_4_5v;
         ivec3 _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[67];
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       for(       mat4(-26.09, -477.200, -8.5, 3.5, 12.90, 9.9, -77.36, 559.435, 67.83, 273.160, -98.42, -3.9, -574.450, 452.384, -49.64, -64.71);
 true; 5.9)
        {
         if(_GLF_DEAD(false))
          barrier();
         uvec2(78227u, 74994u);
         (uvec2(157929u, 40108u) | uvec2(118267u, 181791u));
         ivec2 _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v[33], _GLF_SWITCH_4_10v;
         if(_GLF_DEAD(false))
          barrier();
         uvec2 _GLF_SWITCH_4_11v, _GLF_SWITCH_4_12v[29];
         if(_GLF_DEAD(false))
          barrier();
         if(true)
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           mat2x4(-76.51, 445.069, 6.8, 8.7, 554.690, -6323.9444, -7.5, -4247.2679);
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             vec4(-4.1, -669.961, -81.65, 591.394).pq.yy;
            }
           if(_GLF_DEAD(false))
            barrier();
           trunc(vec2(3482.4221, -2.1));
           if(_GLF_DEAD(false))
            barrier();
           mat2(mat3x4(9.6, -1678.6557, -89.74, -2.7, -4585.7068, -4.2, 585.476, 7.5, -715.630, 5.5, 3.9, -1.5));
           mat2x3 _GLF_SWITCH_4_13v;
           if(_GLF_DEAD(false))
            barrier();
           (-4799 >= 44946);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           ivec3 _GLF_SWITCH_4_14v;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           roundEven(vec2(48.58, -8.1));
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(false))
        barrier();
       if(bvec4(false, true, false, true)[0])
        {
         if(_GLF_DEAD(false))
          barrier();
         ivec4(-30321, 14786, -43286, 88121);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0)))))))
              {
               case 0:
               case 15:
               case 29:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 19:
               case 48:
               if(_GLF_DEAD(false))
                barrier();
               case 77:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               break;
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           (bvec4(false, true, false, false));
          }
         for(mat3x2 _GLF_SWITCH_4_15v[72]; (uvec2(100565u, 1596u) != uvec2(52200u, 96781u)); (mat4x3(mat3x2(-5398.5780, -2.4, -19.25, -1757.6439, -429.436, -1747.8933)) , mat3(-26.22, -17.35, -5035.4347, -6691.7665, -95.29, -0.2, -8817.5105, 1.1, 959.840)))
          {
           subgroup_local_id;
           if(_GLF_DEAD(false))
            barrier();
           mat2x4(3.8, -94.66, 4.7, 6356.2318, 6.8, -4.0, 3.0, -6590.8434);
           uvec3 _GLF_SWITCH_4_16v[74], _GLF_SWITCH_4_17v;
           mat4x2(mat3x4(-4.9, 8034.2677, -2.8, -7.4, -7206.4345, -157.368, 54.06, -3.0, 378.317, -1.7, -7324.0070, -661.979));
           vec3 _GLF_SWITCH_4_18v, _GLF_SWITCH_4_19v[22];
           vec2(-8412.1595, 4631.8552);
           if(_GLF_DEAD(false))
            barrier();
           uvec4(84215u, 79371u, 135294u, 104222u);
           if(_GLF_DEAD(false))
            barrier();
           bvec3 _GLF_SWITCH_4_20v, _GLF_SWITCH_4_21v, _GLF_SWITCH_4_22v;
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(false)
            {
             matrixCompMult(mat4x2(-8.8, 3135.0064, 721.546, -7.9, -6484.4152, -738.530, 53.51, -8593.4119), mat4x2(974.252, 9.2, 61.38, 13.31, -8.9, -3184.3311, 565.284, -53.80));
             ivec4 _GLF_SWITCH_4_23v, _GLF_SWITCH_4_24v;
             if(_GLF_DEAD(false))
              barrier();
             mat2 _GLF_SWITCH_4_25v[81], _GLF_SWITCH_4_26v[54], _GLF_SWITCH_4_27v[51];
             bvec2 _GLF_SWITCH_4_28v, _GLF_SWITCH_4_29v, _GLF_SWITCH_4_30v[49];
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 (ivec2(3399, 95876) / ivec2(83689, 57111));
                }
              }
             mat4 _GLF_SWITCH_4_31v[8];
             ivec4(-67587, -58950, -23172, -6828);
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), (~ (int(8))) - 0)))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             mix(vec4(5.9, -7775.2722, 4.3, -1.3), vec4(-0.0, -4.0, 47.18, 206.163), 6638.3439);
             if(_GLF_DEAD(false))
              barrier();
             (mat2(8.3, 7.5, -3.4, 9145.2025) / mat2(974.699, -3.9, -429.206, -9867.8157));
             mat3x4(-45.11, 84.44, -49.29, 9237.6127, -8.2, 2.7, -0.4, 3.9, 3.7, 589.614, 161.586, -7.4);
             uvec3 _GLF_SWITCH_4_32v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             min(uvec4(1686u, 22721u, 124148u, 71340u), virtual_gid);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             mat4(mat3(7867.8662, -5.1, -9.2, 164.747, 8.6, 1.2, -57.80, 645.129, -72.50));
            }
          }
         mat4 _GLF_SWITCH_4_33v, _GLF_SWITCH_4_34v, _GLF_SWITCH_4_35v;
        }
       else
        {
         mat2x3 _GLF_SWITCH_4_36v, _GLF_SWITCH_4_37v;
         if(_GLF_DEAD(false))
          barrier();
         uvec2(195091u, 171165u);
         ;
         if(true)
          {
           injectionSwitch;
           mat3x2 _GLF_SWITCH_4_38v, _GLF_SWITCH_4_39v;
           mat2x4(-6.1, -290.934, 10.28, 901.851, 4274.1376, 21.22, 1662.8102, -209.005);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             (+ (mat3x4(19.63, 4114.6912, 1.1, -71.15, -4.4, 4.2, 0.1, 9.5, 88.85, 4676.3905, -635.818, 6485.5249) * mat4x3(403.899, 814.534, 43.51, 4.4, -78.22, 5622.7215, -4298.4977, -2.3, 7147.9213, -5.1, 687.056, 10.20)));
            }
           while(_GLF_WRAPPED_LOOP(false));
           vec3 _GLF_SWITCH_4_40v;
           uvec4(82947u, 124130u, 3318u, 167954u);
           uint _GLF_SWITCH_4_41v;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(true)
        {
         ;
         do
          {
           ;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
         if(true)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
          barrier();
         for(         vec3(-792.078, 11.84, -536.660);
 (mat3x2(48.87, 9.9, -643.587, -88.12, -2.4, 9853.6585) == mat3x2(-7.8, 551.222, 7.0, -6.5, -0.6, 0.8)); mat3x2(-543.379, 11.83, -6.7, -5473.1285, 810.763, -5318.1527))
          {
           mat2x3(32.94, 0.7, 258.798, 788.247, 328.289, -8.4);
           ;
          }
         vec4(-201.360, 1.3, 6921.6940, -7.9);
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         for(         mat2x4(7.7, -9356.2878, -8010.4954, -86.99, 5.5, 163.465, 9538.7358, 9.4);
 false; vec4(35.51, 293.435, 37.10, 40.85))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) + 0)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(true)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               mat4x3(8839.9043, 7.2, 89.95, 19.51, 4355.4847, 907.613, 1.8, -1.7, -0.7, 6.2, 8.7, -3.3);
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               findLSB(findMSB(ivec2(-18500, -56295)));
               if(_GLF_DEAD(false))
                barrier();
               ;
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
               ;
               ((vec3(-6.0, 3.7, -0.8) != (7.1 * vec3(160.061, -164.329, -4.4))) ? uvec2(100749u, 34230u) : uvec2(196099u, 142945u));
               clamp(vec4(7.7, 5.2, -9.8, -0.0), -6.0, 5.0);
               mat3 _GLF_SWITCH_4_42v, _GLF_SWITCH_4_43v;
               if(_GLF_DEAD(false))
                barrier();
               mat3 _GLF_SWITCH_4_44v;
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       1344.6995;
       if(_GLF_DEAD(false))
        barrier();
       mat2x4 _GLF_SWITCH_4_45v;
       if(_GLF_DEAD(false))
        barrier();
       if(true)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
          {
           while(true)
            {
             mat4x3(31.65, 606.854, 2.1, 1.1, 5.5, -54.30, 6.8, 2.7, 5.5, -134.853, 41.67, -81.78);
             vec3 _GLF_SWITCH_4_46v[36];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             mat2x4 _GLF_SWITCH_4_47v, _GLF_SWITCH_4_48v[97], _GLF_SWITCH_4_49v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             bvec4(false, true, false, true);
             if(_GLF_DEAD(false))
              barrier();
             mat2(9.0, 990.957, 46.86, -0.4);
             uvec3 _GLF_SWITCH_4_50v, _GLF_SWITCH_4_51v;
             ;
             if(_GLF_DEAD(false))
              barrier();
             int _GLF_SWITCH_4_52v, _GLF_SWITCH_4_53v;
             ivec4 _GLF_SWITCH_4_54v[96], _GLF_SWITCH_4_55v, _GLF_SWITCH_4_56v;
            }
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           mat2x4(5.2, 30.94, -4.8, 63.47, -39.40, -171.896, -68.58, 1.3);
          }
         int _GLF_SWITCH_4_57v[1], _GLF_SWITCH_4_58v[92];
         (! true);
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         -75034;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       bvec2 _GLF_SWITCH_4_59v, _GLF_SWITCH_4_60v[99];
       do
        {
         if((uvec3(72148u, 139462u, 159349u) != uvec3(73960u, 198825u, 132441u)))
          {
           int _GLF_SWITCH_4_61v;
           for(ivec2 _GLF_SWITCH_4_62v[92]; false; mat4x2(-0.0, 1.3, -9.1, -8.9, 4.4, 3363.0632, 0.8, 3078.3011))
            {
            }
           mat3 _GLF_SWITCH_4_63v[67], _GLF_SWITCH_4_64v, _GLF_SWITCH_4_65v;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             _GLF_SWITCH_4_64v;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
            }
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            mat3x2 _GLF_SWITCH_4_66v, _GLF_SWITCH_4_67v;
            ivec3 _GLF_SWITCH_4_68v[50], _GLF_SWITCH_4_69v;
            bool _GLF_SWITCH_4_70v, _GLF_SWITCH_4_71v[21], _GLF_SWITCH_4_72v;
            mat2x4 _GLF_SWITCH_4_73v;
            mat2x3 _GLF_SWITCH_4_74v;
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              if(_GLF_DEAD(false))
               barrier();
              switch(_GLF_SWITCH(0))
               {
                case 73:
                uvec3 _GLF_SWITCH_5_0v[35], _GLF_SWITCH_5_1v;
                case 40:
                _GLF_SWITCH_4_66v;
                case 0:
                case 10:
                case 77:
                case 74:
                case 29:
                if(_GLF_DEAD(false))
                 barrier();
                case 23:
                case 45:
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 barrier();
                case 99:
                if(_GLF_DEAD(false))
                 barrier();
                case 80:
                ((_GLF_SWITCH_4_74v + mat2x3(-53.78, 7.9, -613.136, 4.9, -434.139, 82.40)));
                break;
                case 58:
                bitfieldExtract(ivec4(87910, 72235, -40556, 67679), 55969, _GLF_SWITCH_4_61v);
                case 6:
                uvec2 _GLF_SWITCH_5_2v;
                default:
                1;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
             }
            else
             {
             }
            mat3(28.24, -1808.1360, 5.1, -944.675, -7137.9992, 94.24, -74.04, -692.917, -19.82);
            bvec3(false, true, false);
            if(_GLF_DEAD(false))
             barrier();
           }
           bool _GLF_SWITCH_4_75v, _GLF_SWITCH_4_76v[25], _GLF_SWITCH_4_77v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_SWITCH_4_77v)
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               ;
               uvec4 _GLF_SWITCH_4_78v, _GLF_SWITCH_4_79v[66];
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                 (next_virtual_gid ++);
                 if(_GLF_DEAD(false))
                  barrier();
                }
               bvec3(bvec4(true, false, false, false));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 bvec3(false, true, false);
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               uvec2(43614u, 52963u);
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               (injectionSwitch * acos(injectionSwitch));
               if(_GLF_DEAD(false))
                barrier();
               false;
               ivec4 _GLF_SWITCH_4_80v[26];
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           mat3x4 _GLF_SWITCH_4_81v;
          }
         else
          {
           mat3x4(34.87, -80.24, -3.7, -309.265, -553.935, 957.421, 0.8, -284.942, -8.3, -1.8, -8.6, -988.555);
           mat2x4 _GLF_SWITCH_4_82v;
           for(mat2 _GLF_SWITCH_4_83v; (-661.656 < -8829.9538); bvec3(true, false, false))
            {
             (vec2(9.0, -3.4) * mat2(mat4x2(43.73, -65.62, -9.9, -158.855, -95.26, -845.463, 5705.1587, -850.361)));
             min(vec4(-5.9, -86.92, -9.4, 2.6), vec4(-259.587, -397.802, 85.11, 2.7));
             mat4 _GLF_SWITCH_4_84v[65], _GLF_SWITCH_4_85v;
             (mat3x4(-62.42, -3947.3384, -419.019, 649.087, -7.4, -2083.8908, 801.911, -668.883, 3320.1958, -4.5, 25.06, -621.441) * (degrees(vec3(-3.9, -78.41, 7.8)) * mat3(-4.8, -87.08, -9143.3744, 315.385, 36.14, 9.6, -4.0, 5437.0024, 5.4)));
             uvec4(74054u, 63619u, 183222u, 183704u);
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             bool _GLF_SWITCH_4_86v, _GLF_SWITCH_4_87v, _GLF_SWITCH_4_88v;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 ;
                }
              }
             else
              {
              }
             vec3(-43.01, 3836.5465, 45.82);
            }
           if(_GLF_DEAD(false))
            barrier();
           vec3 _GLF_SWITCH_4_89v;
           if(_GLF_DEAD(false))
            barrier();
           {
            if(_GLF_DEAD(false))
             barrier();
            mat2 _GLF_SWITCH_4_90v, _GLF_SWITCH_4_91v[15], _GLF_SWITCH_4_92v[11];
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
            outerProduct((- vec4(-4.5, 922.939, 68.05, 924.334)), vec3(-9.0, 640.669, 911.632));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
               barrier();
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 22:
                -33768;
                case 0:
                case 58:
                case 60:
                case 71:
                case 19:
                ;
                break;
                default:
                1;
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
            else
             {
             }
            injectionSwitch;
            if(_GLF_DEAD(false))
             {
              for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
                if(_GLF_DEAD(false))
                 barrier();
               }
             }
            if(_GLF_DEAD(false))
             barrier();
           }
           mat3x4(0.6, -9254.6538, 462.890, 1.9, 527.685, 603.167, -3727.3396, -257.879, -22.30, -9787.0169, -84.48, -85.35);
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 | (int(3)))))))
                  {
                   case 9:
                   (uvec3(88019u, 181190u, 33098u) << uvec3(11980u, 167154u, 121329u));
                   case 0:
                   case 7:
                   case 76:
                   case 68:
                   case 92:
                   case 14:
                   case 24:
                   case 28:
                   case 57:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   break;
                   if(_GLF_DEAD(false))
                    barrier();
                   default:
                   1;
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             ivec2(-14278, 86843);
            }
           else
            {
            }
           for(vec4 _GLF_SWITCH_4_93v[31]; true; (+ 3.6))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             int _GLF_SWITCH_4_94v, _GLF_SWITCH_4_95v, _GLF_SWITCH_4_96v;
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               max(ivec2(44213, 28054), ivec2(59404, -47264));
              }
             mat4x3 _GLF_SWITCH_4_97v;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               mat2(-7.0, 4.3, -4064.4823, 2675.5782);
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     case 27:
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                }
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 99:
                       -466.773;
                       case 70:
                       if(_GLF_DEAD(false))
                        barrier();
                       mat4x3(1.9, -6.1, -2327.9046, 4.2, -38.57, 5.8, 2.3, 53.40, 7.6, -961.105, 3.3, -754.153);
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       case 9:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 90:
                       case 36:
                       case 42:
                       case 34:
                       case 24:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 61:
                       case 10:
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                       break;
                       if(_GLF_DEAD(false))
                        barrier();
                       default:
                       if(_GLF_DEAD(false))
                        barrier();
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
              }
            }
           barrier();
          }
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
          {
           switch(_GLF_SWITCH(0))
            {
             case 28:
             findMSB(uvec2(100018u, 3465u));
             case 10:
             mat4((mat4x3(1.2, -9.8, -5437.6887, 199.437, -0.0, 1964.2136, 381.291, 901.115, 8.9, -6034.1983, 2.2, -97.58)));
             case 0:
             case 21:
             if(_GLF_DEAD(false))
              barrier();
             case 16:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 40:
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             break;
             default:
             1;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     break;
     case 40:
     while((false == true))
      {
       if(_GLF_DEAD(false))
        barrier();
       bvec3 _GLF_SWITCH_4_98v;
       int _GLF_SWITCH_4_99v;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
         bvec4(false, false, true, true);
        }
       mat2 _GLF_SWITCH_4_100v, _GLF_SWITCH_4_101v, _GLF_SWITCH_4_102v;
       {
        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
         {
         }
        else
         {
          while(false)
           {
            switch(_GLF_SWITCH(((0 ^ 0) >> _GLF_IDENTITY(int(4), int(4)))))
             {
              case 96:
              vec4(680.592, 7.0, 139.067, 19.48);
              case 0:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              bvec4(true, bvec3(true, false, true));
              if(_GLF_DEAD(false))
               barrier();
              bvec2(false, true);
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 77:
                  mat3x4(vec4(-7.6, -1.4, 239.040, 6.5), vec4(559.318, -2.7, -21.07, -676.396), vec4(-203.552, -83.81, 115.173, -916.579));
                  case 59:
                  vec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[98];
                  if(_GLF_DEAD(false))
                   barrier();
                  case 0:
                  case 9:
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  default:
                  1;
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              break;
              case 14:
              (uvec3(169088u, 136926u, 164645u) - floatBitsToUint(984.468));
              default:
              1;
             }
           }
         }
        if(_GLF_DEAD(false))
         barrier();
        do
         {
          clamp(vec4(-391.117, 0.5, -6.6, -9.9), vec4(7.2, 9121.4740, 40.72, -7.4), vec4(-49.55, 58.29, -3.0, 768.415));
         }
        while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
       }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(all(bvec4(false, true, true, true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               workgroup_base;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 mat2x3(mat3x2(-1.2, 4172.5367, 9.5, 736.459, 930.084, -5197.2553));
                }
               mat3(-5.5, 1.1, 9.7, 5.4, 0.6, 5612.5518, 3884.4099, 9914.7147, -1.5);
               if(_GLF_DEAD(false))
                barrier();
               mat2x3 _GLF_SWITCH_4_103v;
               mat3x2 _GLF_SWITCH_4_104v, _GLF_SWITCH_4_105v[28];
               true;
              }
             else
              {
              }
            }
           {
            uintBitsToFloat(uvec3(31424u, 52099u, 39601u));
            ;
            floor(vec3(-4.4, 174.535, 31.69));
            if(_GLF_DEAD(false))
             barrier();
           }
           if(true)
            {
             (false ? mat3x2((mat4(-4766.7344, 867.734, 33.90, 29.58, 131.922, -665.640, 1621.8734, 7.1, 26.13, 5.7, -9537.4283, 2.7, 31.91, -39.43, 78.65, 254.152) * mat2x4(-6.4, 673.487, 3.8, 115.137, -1.3, 3.9, 1.4, 6797.3423))) : mat3x2(-8.6, 0.1, 4246.6092, -533.606, 90.51, 0.5));
             ((+ uvec2(74241u, 191166u)) == uvec2(182277u, 185407u));
             mat2x3 _GLF_SWITCH_4_106v[61], _GLF_SWITCH_4_107v;
             virtual_gid;
             float _GLF_SWITCH_4_108v;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               uvec3(55041u, 37128u, 48211u);
              }
             else
              {
              }
             uvec4 _GLF_SWITCH_4_109v;
             do
              {
               true;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if((-77628 >= 90232))
            {
             vec3(-64.29, -154.797, -3.8);
            }
           else
            {
             1956.6791;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             ivec3(37984, 18539, -74848);
             vec3(2.0, 64.77, -651.041).ptps;
             if(_GLF_DEAD(false))
              barrier();
             isnan(vec4(-6.5, 1.1, 712.826, -98.36).bbaa);
             acos(injectionSwitch);
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               ivec2(-19982, 52797);
              }
             else
              {
              }
            }
           vec2 _GLF_SWITCH_4_110v, _GLF_SWITCH_4_111v[14], _GLF_SWITCH_4_112v[81];
           for(           (atomicAnd(workgroup_id, workgroup_base) , bvec4(true, false, true, true));
 (vec4(-314.453, 8883.5809, 112.847, 14.31) == vec4(-5519.9615, -1815.9709, -7319.8836, 9030.8625)); mat2x4(-2.9, -0.2, -6584.3605, 36.97, 8.5, -2407.3996, 8.6, -105.447))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              barrier();
             sin(-393.798);
             if(_GLF_DEAD(false))
              barrier();
             mix(read_1, (-- subgroup_local_id), true);
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           mat3x2 _GLF_SWITCH_4_113v, _GLF_SWITCH_4_114v, _GLF_SWITCH_4_115v;
           if(_GLF_DEAD(false))
            barrier();
           false;
           if(true)
            {
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
            barrier();
           for(bvec3 _GLF_SWITCH_4_116v[46], _GLF_SWITCH_4_117v, _GLF_SWITCH_4_118v; true; mat2x3(-6.4, -309.563, -5.0, -8021.4695, 0.6, -66.05))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               int(true);
               if(_GLF_DEAD(false))
                barrier();
              }
             mat4x2(-688.524, 1427.7397, -8.1, -662.934, -850.800, -6.7, 18.91, -0.8);
             960.481;
            }
           uvec4(160382u, 28066u, 45423u, 166236u);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       {
        switch(_GLF_SWITCH((68173 & 0)))
         {
          case 17:
          uint _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
          case 19:
          if(_GLF_DEAD(false))
           barrier();
          greaterThan(uvec3(82145u, 100557u, 16616u), (uvec3(100925u, 79143u, 12366u) * subgroup_local_id));
          if(_GLF_DEAD(false))
           barrier();
          case 0:
          do
           {
            mat4x2 _GLF_SWITCH_4_119v, _GLF_SWITCH_4_120v;
            transpose(mat3x2(8767.1247, 4.6, 14.30, 51.03, 5.2, -2.9));
            if(_GLF_DEAD(false))
             barrier();
            uvec2 _GLF_SWITCH_4_121v;
            ivec4 _GLF_SWITCH_4_122v[13];
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              mat2x4(72.07);
             }
            else
             {
             }
           }
          while(false);
          vec3(-13.54, -4.3, 409.621);
          _GLF_SWITCH_4_99v;
          mat4 _GLF_SWITCH_4_123v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          vec4 _GLF_SWITCH_4_124v[98], _GLF_SWITCH_4_125v;
          if(_GLF_DEAD(false))
           barrier();
          case 35:
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           barrier();
          case 78:
          false;
          true;
          break;
          default:
          1;
         }
       }
       ;
      }
     default:
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       1;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(0))
          {
           case 17:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           if(bvec4(true, false, false, true)[1])
            {
             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
              {
               case 64:
               ivec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[64];
               if(_GLF_DEAD(false))
                barrier();
               case 69:
               if(_GLF_DEAD(false))
                barrier();
               bvec3 _GLF_SWITCH_2_2v, _GLF_SWITCH_2_3v[77], _GLF_SWITCH_2_4v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 0:
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   else
                    {
                    }
                  }
                 barrier();
                }
               case 67:
               if(_GLF_DEAD(false))
                barrier();
               case 12:
               if(true)
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(8), int(8)))))
                    {
                     case 33:
                     mat2(-19.24, -8.2, -9.6, -707.604);
                     case 68:
                     mat2x4(558.792, -8606.2209, 7.7, -7.6, -3.2, 29.57, 3.3, -0.1);
                     case 0:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       while((mat3x2(0.2, 9.7, -9.9, 8129.1902, 9.0, 495.824) != mat3x2(7.2, -48.32, -43.05, -7887.3834, -6711.8662, 9477.6483)))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           matrixCompMult(mat2x3(306.346, 250.520, 8.5, 64.34, 1.6, 401.240), mat2x3(632.138, -0.3, -663.778, -75.00, 59.38, -9.0));
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             switch(_GLF_SWITCH((0 | 0)))
                              {
                               case 67:
                               if(_GLF_DEAD(false))
                                barrier();
                               ;
                               case 0:
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
                                  barrier();
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 0:
                                   case 58:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   case 6:
                                   case 91:
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   case 27:
                                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   case 31:
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                                    barrier();
                                   -4.7;
                                   break;
                                   case 74:
                                   uvec2 _GLF_SWITCH_4_0v[74], _GLF_SWITCH_4_1v[6], _GLF_SWITCH_4_2v;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   default:
                                   1;
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               else
                                {
                                }
                               break;
                               default:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               1;
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                         do
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
                              barrier();
                             barrier();
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     do
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 21:
                         case 17:
                         case 69:
                         case 49:
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                         case 72:
                         bvec3 _GLF_SWITCH_5_0v[68], _GLF_SWITCH_5_1v[41], _GLF_SWITCH_5_2v;
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       ;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     while(false)
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 84:
                         (- (- mat4x2(-6.5, -27.75, -8589.9470, -7918.2855, 33.43, 998.247, 4.5, -9.7)));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                          }
                         case 0:
                         case 37:
                         do
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), true && (! (_GLF_IDENTITY(false, (false) && true))))))))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec2(1, 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               do
                                {
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 95:
                                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                                    barrier();
                                   outerProduct(vec4(4.8, -5.9, 784.487, -16.05), fract(vec4(-5.8, 1680.9456, 9108.6216, -2.3)));
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   case 0:
                                   case 84:
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                   break;
                                   case 87:
                                   mat3(-570.406, 8661.0168, -4460.8751, -0.9, 8555.9674, 6.8, 2.9, -95.70, 80.12);
                                   case 94:
                                   mat2x3(8330.0520, 1809.3476, 609.584, -41.71, -9716.2682, 6.5);
                                   default:
                                   1;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                               if(_GLF_DEAD(false))
                                barrier();
                               do
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 do
                                  {
                                   (uvec4(57688u, 103475u, 54431u, 13989u) ^ atomicExchange(subgroup_id, subgroup_local_id));
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                }
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                          }
                         do
                          {
                           do
                            {
                             ivec3(20221, -71654, -48040);
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         uvec4 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v;
                         ivec3 _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                         uvec3 _GLF_SWITCH_0_5v, _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                            barrier();
                           barrier();
                          }
                         (subgroup_local_id * uvec2(112332u, 72352u));
                         uint _GLF_SWITCH_0_8v, _GLF_SWITCH_0_9v;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 68:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           else
                            {
                            }
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               switch(_GLF_SWITCH(0))
                                {
                                 case 85:
                                 clamp(vec3(-682.204, 8577.1227, -8.2), -12.35, sin(-177.622));
                                 case 0:
                                 case 20:
                                 case 28:
                                 case 2:
                                 case 11:
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 case 52:
                                 case 23:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 22:
                                 case 27:
                                 barrier();
                                 break;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 41:
                                 1149.3424;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 default:
                                 1;
                                }
                              }
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 80:
                         mat4x2 _GLF_SWITCH_0_10v, _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                         vec2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v;
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         break;
                         case 34:
                         ivec2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v[73];
                         if(_GLF_DEAD(false))
                          barrier();
                         default:
                         if(_GLF_DEAD(false))
                          barrier();
                         1;
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                        barrier();
                       barrier();
                      }
                     greaterThanEqual((uvec2(53483u, 36131u) & num_workgroup), (uvec2(71559u, 172110u) - uvec2(128000u, 195517u)));
                     vec2 _GLF_SWITCH_0_15v;
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     _GLF_SWITCH_0_15v;
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       do
                        {
                         if((notEqual(bvec4(false, true, false, false), bvec4(false, true, false, false)) != bvec4(false, false, false, false)))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           mat3x4(8350.2569);
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             mat2x3(mat3x4(-56.20, -47.15, -74.15, 68.33, -184.640, 4.4, 828.299, -3153.5775, -800.382, 4325.2229, -512.289, -0.3));
                            }
                           mat2 _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v;
                           if(_GLF_DEAD(false))
                            barrier();
                           for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(_GLF_IDENTITY(int(1), max(int(1), int(1))), int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 | (int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                              {
                               max(vec4(-7.3, 1980.8670, -59.07, 579.661), -2.9);
                              }
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           mat3(511.188, -865.332, -667.649, 614.268, -183.820, 1.0, -0.5, -12.41, 7.6);
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           bitCount(uvec4(99575u, 21948u, 43412u, 158753u));
                           (_GLF_SWITCH_0_16v / _GLF_SWITCH_0_17v);
                           ivec4(-57699, -72425, 73078, 48450);
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             barrier();
                            }
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     mat4x2 _GLF_SWITCH_0_19v[60], _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[12];
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                          }
                         barrier();
                        }
                      }
                     else
                      {
                      }
                     break;
                     default:
                     if(_GLF_DEAD(false))
                      barrier();
                     1;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 97:
                     if(_GLF_DEAD(false))
                      barrier();
                     injectionSwitch;
                     case 14:
                     uvec3(120291u, 190088u, 39170u);
                     case 0:
                     case 90:
                     case 6:
                     case 19:
                     case 49:
                     case 39:
                     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                      {
                       case 61:
                       if(_GLF_DEAD(false))
                        barrier();
                       (floatBitsToInt(61.19) - ((-22311 | ivec3(61830, 14682, 31160)) - ivec3(92570, -29487, 6143)));
                       if(_GLF_DEAD(false))
                        barrier();
                       case 66:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       {
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            barrier();
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                         }
                        (-11593 , -90272);
                        mat2x4(mat4(6.5, 0.1, -18.07, 66.23, -5.8, -8.5, 4911.5601, 7351.7969, -31.68, 0.8, 3.2, -361.091, 4399.0309, 1241.2316, -7.2, 96.23));
                        if(_GLF_DEAD(false))
                         barrier();
                        mat3x4 _GLF_SWITCH_3_0v;
                        int _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                         {
                          ivec2(68634, -22051);
                         }
                       }
                       case 0:
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       mat2(-79.15);
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 32:
                             mat4x3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v;
                             if(_GLF_DEAD(false))
                              barrier();
                             case 0:
                             case 15:
                             if(_GLF_DEAD(false))
                              barrier();
                             do
                              {
                               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   else
                                    {
                                     barrier();
                                    }
                                  }
                                }
                               else
                                {
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                              barrier();
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-37763 & 0)); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             case 82:
                             case 10:
                             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               mat4(17.38, 45.53, 7.5, 324.334, 8.4, -0.3, 2.3, 947.149, 2.6, -93.47, 0.5, 4.8, 2.8, -996.261, -664.790, -470.184);
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             break;
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               do
                                {
                                 barrier();
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                  barrier();
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             case 26:
                             do
                              {
                               uvec3(97538u, 50553u, 77541u);
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(false))
                              barrier();
                             case 6:
                             if(_GLF_DEAD(false))
                              barrier();
                             ;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             default:
                             do
                              {
                               1;
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -78489)); _injected_loop_counter --)
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 64:
                              mat4x2 _GLF_SWITCH_5_0v;
                              case 79:
                              uvec3(175060u, 108668u, 154868u);
                              case 0:
                              if(_GLF_DEAD(false))
                               barrier();
                              case 49:
                              notEqual(ivec2(-71902, -13825), ivec2(-39635, -21797));
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              case 74:
                              case 63:
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              case 57:
                              case 25:
                              do
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              break;
                              case 21:
                              _injected_loop_counter;
                              case 73:
                              uvec4(60669u, 132532u, 183279u, 92041u);
                              if(_GLF_DEAD(false))
                               barrier();
                              default:
                              1;
                             }
                           }
                          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
                           barrier();
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            do
                             {
                              barrier();
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          uvec4 _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                          break;
                          default:
                          if(_GLF_DEAD(false))
                           barrier();
                          1;
                         }
                       }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       case 11:
                       do
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 0:
                               case 70:
                               case 68:
                               case 56:
                               case 79:
                               case 42:
                               case 5:
                               case 59:
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 barrier();
                                }
                               else
                                {
                                }
                               break;
                               case 1:
                               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                                barrier();
                               mat4(-87.22, -1.9, 486.623, 7.1, -465.041, -2668.4241, 8.7, 347.353, -3.5, -5.2, 459.426, 0.8, 19.31, 42.59, 5.1, -4.6);
                               if(_GLF_DEAD(false))
                                barrier();
                               default:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               1;
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                          }
                         else
                          {
                          }
                         smoothstep(vec3(85.27, 2.2, -473.498), vec3(5.5, 9.6, 8762.2325), vec3(9.1, -2.6, 690.823));
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                        {
                        }
                       else
                        {
                         mat2x4(-1056.3971, 0.8, 68.78, -629.127, -3.0, 8.5, -1.4, -9.0);
                        }
                       case 97:
                       case 41:
                       (vec3(19.97, 2.4, 7.8) * mat4x3(-9249.1104, 5.5, -9.6, 15.02, -1.8, -8059.9801, 3.2, -98.43, 9018.4302, -8.4, -14.19, 8.1));
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 94145)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 60:
                             case 85:
                             case 32:
                             case 11:
                             case 48:
                             case 19:
                             case 47:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             case 52:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             case 92:
                             for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             break;
                             case 22:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                              barrier();
                             mat4x3 _GLF_SWITCH_5_0v[51];
                             case 5:
                             if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                              barrier();
                             ivec4 _GLF_SWITCH_5_1v;
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       case 87:
                       while(true)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         uvec3(197897u, 4343u, 78434u);
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       case 9:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       (workgroup_base % (uvec4(29505u, 157399u, 79281u, 164762u) / next_virtual_gid)).zx;
                       default:
                       1;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     break;
                     case 51:
                     injectionSwitch;
                     default:
                     if(_GLF_DEAD(false))
                      barrier();
                     1;
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               uint _GLF_SWITCH_0_24v[54], _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v[59];
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               case 52:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
                barrier();
               break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               default:
               1;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                }
              }
            }
           case 0:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 26:
                   case 38:
                   case 65:
                   case 83:
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                   if(_GLF_DEAD(false))
                    barrier();
                   default:
                   do
                    {
                     1;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 3:
               case 15:
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
               break;
               if(_GLF_DEAD(false))
                barrier();
               default:
               1;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               break;
               default:
               1;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
            {
             do
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (79930 & 0)); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
                    {
                     do
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         barrier();
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
           break;
           if(_GLF_DEAD(false))
            barrier();
           default:
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & -94555)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 42:
                     case 10:
                     case 18:
                     case 79:
                     case 97:
                     barrier();
                     break;
                     case 65:
                     (mat2x4(-7054.8787, 9.7, 3661.8951, -53.27, -9546.8246, 378.635, 353.722, 0.5) - mat2x4(-817.508, -4.2, -4823.4926, 1217.1910, -491.751, -2.4, 6502.7801, 7795.2347));
                     default:
                     1;
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
                barrier();
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 1)); _injected_loop_counter --)
              {
               switch(_GLF_SWITCH(0))
                {
                 case 69:
                 while(false)
                  {
                   ((mat2x3(3.1, -7372.0665, 67.96, 3.9, -6.5, 20.61) / mat2x3(-8.0, -5315.1404, 470.734, 2.9, 1.4, 6.9)) - 92.06);
                   mat3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                      barrier();
                     barrier();
                    }
                  }
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 1:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 1;
                 break;
                 case 39:
                 if(false)
                  {
                   vec3 _GLF_SWITCH_4_2v[45], _GLF_SWITCH_4_3v;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}
