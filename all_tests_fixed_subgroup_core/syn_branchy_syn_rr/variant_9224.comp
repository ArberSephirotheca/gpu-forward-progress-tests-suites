#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 vec4 _f0;
 bvec3 _f1;
 uvec2 _f2;
 bvec3 _f3;
 uvec2 _f4;
 bvec3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_18 {
 bvec3 _f0;
} ;

struct _GLF_struct_20 {
 mat3 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_16 {
 uint _f0;
 bvec3 _f1;
 vec2 _f2;
 ivec4 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_17 {
 _GLF_struct_16 _f0;
} ;

struct _GLF_struct_14 {
 mat4 _f0;
 vec3 _f1;
 bool _f2;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 uvec3 _f1;
 int i;
 mat3x2 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
} ;

struct _GLF_struct_21 {
 _GLF_struct_15 _f0;
 bvec4 _f1;
 _GLF_struct_17 _f2;
 bvec4 _f3;
 _GLF_struct_20 _f4;
} ;

struct _GLF_struct_11 {
 uint read_1;
 mat4x3 _f0;
} ;

struct _GLF_struct_12 {
 mat2x4 _f0;
 mat4x3 _f1;
 vec4 _f2;
 _GLF_struct_11 _f3;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
 int _f1;
 uvec4 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_6 {
 float _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 uint workgroup_base;
 _GLF_struct_7 _f2;
 _GLF_struct_9 _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat3 _f0;
 uvec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 uint next_virtual_gid;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 vec4 _f1;
 mat3 _f2;
 bool _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false))))), true, false, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * (gl_NumWorkGroups), min(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * (gl_NumWorkGroups), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) * (gl_NumWorkGroups)))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) | (0u)), 0u), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x), ~ (~ (clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 0u)) | (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(127249u) : 0u)))))), (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, 0u), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), clamp(_GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) + uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) >> (0u ^ 0u))) | uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)).x, gl_NumWorkGroups.x), (clamp(gl_NumWorkGroups.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) + 0u)) - 0u), 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(_GLF_IDENTITY(1u, (1u) * 1u), 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)), min(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), min(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))))))))) ^ (gl_NumWorkGroups)), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(uvec2(125840u, 10217u).g) : 1u)), 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (0u) / 1u))), 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)))), _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) ^ (uvec3(uvec3(_GLF_IDENTITY(uvec3(1u, 1u, 1u), min(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) + uvec3(0u, 0u, 0u)), uvec3(1u, 1u, 1u))) ^ uvec3(1u, 1u, 1u))))))))) ^ (gl_NumWorkGroups)))).x, gl_NumWorkGroups.x)) >> 0u)), 0u, 0u)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), min((0u), (0u))) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))) + 0u))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))), clamp((_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(108826u, 97141u, 121147u)))))).x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), (true ? _GLF_IDENTITY((0u), ((0u)) << 0u) : _GLF_FUZZED(subgroup_id))))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, clamp(gl_NumWorkGroups.x, gl_NumWorkGroups.x, gl_NumWorkGroups.x)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) | uvec3(_GLF_IDENTITY(0u, (0u) >> (0u ^ 0u)), 0u, 0u)) + (gl_WorkGroupID)))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false)))))) || false))))))) || false)))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, true, _GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false)))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), (_GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false)))))) || false))))))) || false))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(25.77)), float(injectionSwitch.x), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true, false))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(ivec2(1), _GLF_struct_5(_GLF_struct_4(bvec3(true))), workgroup_size * workgroup_id, _GLF_struct_7(_GLF_struct_6(1.0)), _GLF_struct_9(_GLF_struct_8(ivec2(1)), 1, _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) / uvec4(1u, 1u, 1u, 1u)), mat4(1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((fma(2399.6997, -9.6, 6.1) - vec2(5.8, 268.481))) : injectionSwitch)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))), true, true)))))
    barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_10.workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id));
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1u, 1u * (1u))), ((_GLF_IDENTITY(1u, 1u * (1u)))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, 1u * (1u))), (false ? _GLF_FUZZED(120606u) : ~ (_GLF_IDENTITY(1u, 1u * (1u)))))) / 1u)))), _GLF_struct_replacement_10.workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_struct_0(mat3(1.0), uvec2(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), max(uint(1u), uint(1u)))))), mat4(1.0)), _GLF_struct_1(mat3(1.0), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec2(1), 1, 1), (ivec4(ivec2(1), 1, 1)) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) ^ 0)), 0, _GLF_IDENTITY(0, 0 | (0))), max(ivec4(0, 0, 0, 0), ivec4(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ((0)) | ((_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0), (_GLF_IDENTITY(0, (0) - 0)) / int(_GLF_ONE(1.0, injectionSwitch.y))), 0)), (1 | 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), (0 << _GLF_IDENTITY(int(1), int(1)))))), 0, 0, 0)))), (ivec4(ivec2(1), 1, 1)) << ivec4(0, 0, 0, 0)))), (ivec2(-22060, -10529) & ivec2(0, 0)) + (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(ivec2(1), 1, 1), (ivec4(ivec2(1), 1, 1)) - ivec4(0, 0, 0, 0)), (ivec4(ivec2(1), 1, _GLF_IDENTITY(1, max(1, 1)))) >> _GLF_IDENTITY(ivec4(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), (int(ivec3(0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))) ^ 0)), 0, 0), max(ivec4(0, 0, 0, 0), ivec4(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) - 0), 0)), (1 | 1), (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), (0 << _GLF_IDENTITY(int(1), int(1)))))), 0, 0, 0)))), (ivec4(ivec2(1), 1, 1)) << ivec4(0, 0, 0, _GLF_IDENTITY(0, min(0, 0))))))))) | (ivec2(1)))), ivec2(1)), vec4(1.0), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.8)), bool(false)))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.8)), bool(false)))), mat3(mat3x4(mat3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.8)), bool(false)))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), true);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(false))), bool(bvec3((! (_GLF_DEAD(false))), false, false))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false))))), bool(bvec4(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false))))), true, false, true)))) && true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bvec4(true && (_GLF_DEAD(false)), true, false, true))), false))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false)) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false)) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), false || ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) || false)) || false)), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0)))), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(log(-448.847)) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y)))))))) || false))))))))))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)))), (ivec2(_GLF_IDENTITY((1), clamp((1), (1), (1))), (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0))))) / ivec2(1, 1)))) | (1))), 4, 64, 4);
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat2x4(1.0), mat4x3(1.0), vec4(1.0), _GLF_struct_11(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, ~ (~ (64))))), 0), mat4x3(1.0)));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id)))) ^ 0u), (subgroup_local_id))) | 0u) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_15(_GLF_struct_13(bvec2(true), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? uvec3(uvec4(uvec3(1u), uint(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(uvec3(195064u, 180451u, 186020u)))), ~ (_GLF_IDENTITY(~ (uvec3(uvec4(uvec3(1u), uint(_GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y))))), ~ (~ (~ (uvec3(uvec4(uvec3(1u), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), tan(0.0), determinant(mat2(1.0, 0.0, 0.0, exp(0.0))), 1.0, 0.0, 0.0, 1.0, 1.0))).y))))))))))), 0, mat3x2(1.0)), _GLF_struct_14(mat4(1.0), vec3(1.0), true)), bvec4(true), _GLF_struct_17(_GLF_struct_16(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), ~ (~ (_GLF_IDENTITY(1u, 0u ^ (1u)))))) - (0u | 0u)), _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u)))), bvec3(true), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-9566.2961)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) / 1.0))), ivec4(1), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-30.47)))), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0))) * mat2(1.0)))), bvec4(true), _GLF_struct_20(mat3(1.0), bvec3(true), mat4x2(1.0), _GLF_struct_18(bvec3(true)), _GLF_struct_19(vec4(1.0), bvec3(true), uvec2(1u), bvec3(true), uvec2(_GLF_IDENTITY(1u, ~ (~ (1u)))), bvec3(true), bvec4(true))));
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) && true)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], uint(_GLF_struct_replacement_12._f3.read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_3._f0.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f3.read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_struct_replacement_12._f3.read_1 == read_2))) + 1, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, min(4, 4))), ((_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-68335) : 4)), _GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, int(ivec3(4, 0, 1))), int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(2.3) : _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED(5.3)), bool(false)))), 1, 0))))), 4)))) - 0), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (false ? _GLF_FUZZED(86229) : _GLF_IDENTITY(4, 0 | (4)))))), min(4, 4))), (true ? ~ (_GLF_IDENTITY(4, min(4, 4))) : _GLF_FUZZED(90707))), ~ (_GLF_IDENTITY(4, min(4, 4))))))), _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) | (ivec2(64, 1)))), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) - ivec2(0, 0)))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-5.3 / -1767.7519))), float(injectionSwitch.x), bool(true)))))))), (ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) | (ivec2(64, 1)))), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) - ivec2(0, 0)))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) | (ivec2(64, 1)))), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) - ivec2(0, 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) | (ivec2(64, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), min(ivec2(64, 1), _GLF_IDENTITY(ivec2(64, 1), min(ivec2(64, 1), ivec2(64, 1)))))), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) - ivec2(0, 0)))))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY((ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) | (ivec2(64, 1)))), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) - ivec2(0, 0)), ((ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), (_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) | (ivec2(64, 1)))) | (ivec2(64, 1)))), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, max(0, 0)), 0))))) - ivec2(0, 0))) << ivec2(0, 0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x))))), (ivec2(64, 1)) | _GLF_IDENTITY((ivec2(64, 1)), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | _GLF_IDENTITY((_GLF_IDENTITY((ivec2(64, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) + 0))), ((ivec2(64, 1))) ^ ivec2(0, 0))), _GLF_IDENTITY(ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))), min(ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))), ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0)))))))))) - ivec2(0, 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), _GLF_IDENTITY((ivec2(64, 1)), ivec2(ivec2((ivec2(64, 1))))) * ivec2(1, _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 0 + (int(_GLF_ZERO(0.0, injectionSwitch.x))))))), (ivec2(64, 1)) | _GLF_IDENTITY((ivec2(64, 1)), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 + (0)), (_GLF_IDENTITY(0, 0 + (0))) | (0 << _GLF_IDENTITY(int(0), int(0)))), 0)))), 0))))) ^ 0), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), (ivec2(64, 1)) * _GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))), _GLF_IDENTITY(ivec2(ivec2(ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), injectionSwitch.x)))))), clamp(ivec2(ivec2(ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / (0 ^ 1))) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x)))))), ivec2(ivec2(ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))))), ivec2(ivec2(ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))))))))), (ivec2(64, 1)) | _GLF_IDENTITY((_GLF_IDENTITY(ivec2(64, 1), ivec2(ivec3(ivec2(_GLF_IDENTITY(64, (true ? _GLF_IDENTITY(64, clamp(64, 64, 64)) : _GLF_FUZZED((max(-10264, -94504) << 31555)))), 1), 1)))), (_GLF_IDENTITY((ivec2(64, 1)), (_GLF_IDENTITY((ivec2(64, 1)), clamp((ivec2(64, 1)), (ivec2(64, 1)), (ivec2(64, 1))))) | _GLF_IDENTITY((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))), _GLF_IDENTITY(ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, _GLF_IDENTITY(1, ~ (~ (1)))))) ^ ivec2(0, 0))))), _GLF_IDENTITY(min(ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(_GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5560) : 0)), 0))))), ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0)))))), ~ (~ (_GLF_IDENTITY(min(ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))), ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0)))))), (false ? _GLF_FUZZED(bitfieldInsert(ivec2(39158, 60426), ivec2(-51031, -87693), -44277, -61726)) : min(ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))), _GLF_IDENTITY(ivec2(ivec2((_GLF_IDENTITY((ivec2(_GLF_IDENTITY(64, ~ (~ (64))), 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))), max(ivec2(ivec2((_GLF_IDENTITY(_GLF_IDENTITY((ivec2(64, 1)), ivec2(0, 0) | (_GLF_IDENTITY((ivec2(64, 1)), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((ivec2(64, 1)))))), ((ivec2(64, 1))) ^ ivec2(0, 0))))), ivec2(ivec2((_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))))))))))))))) - ivec2(0, 0)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(64, 1), _GLF_IDENTITY((ivec2(64, 1)), ivec2(ivec2((ivec2(64, 1))))) * ivec2(1, _GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), (ivec2(64, 1)) | _GLF_IDENTITY((ivec2(64, _GLF_IDENTITY(1, (1) * 1))), (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) | (_GLF_IDENTITY((ivec2(64, 1)), ((ivec2(64, 1))) ^ ivec2(0, 0))))) - ivec2(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 + (0)), 0)))), 0))))) ^ 0) : _GLF_FUZZED(20111))) : _GLF_FUZZED(-43037)))), 4);
  }
 if(_GLF_DEAD(false))
  barrier();
}
