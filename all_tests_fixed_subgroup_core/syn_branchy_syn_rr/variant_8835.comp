#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_14 {
 ivec2 _f0;
 int _injected_loop_counter;
 uint _f1;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 int i;
} ;

struct _GLF_struct_10 {
 uint next_virtual_gid;
 mat2 _f0;
 ivec4 _f1;
 mat2x3 _f2;
 mat4 _f3;
 int _f4;
 mat3 _f5;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat4 _f1;
 uvec3 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 float _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_7 {
 uvec3 _f0;
 uvec4 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_6 {
 vec2 _f0;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 ivec4 _f1;
 bvec2 _f2;
 mat3x4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
 _GLF_struct_7 _f6;
 uint workgroup_id;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
 float _f1;
 _GLF_struct_8 _f2;
 mat4x2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 bvec3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2 _f1;
 mat4 _f2;
 bvec4 _f3;
 mat2 _f4;
 ivec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 uint num_workgroup;
 mat3x4 _f1;
 mat2 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
 _GLF_struct_3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
uint subgroup_size = 16;
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y)))) || false); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
            continue;
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))))
            continue;
           if(_GLF_DEAD(false))
            continue;
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false)))))))) || false))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec4(! (injectionSwitch.x > injectionSwitch.y), false, true, true)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   do
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            continue;
           break;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))))))))
                    continue;
                  }
                }
               if(_GLF_DEAD(false))
                return;
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), (int(7)) - 0), int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) << _GLF_IDENTITY(0, (34650 & 0) | (0))), _GLF_IDENTITY((int(7)), (_GLF_IDENTITY((int(7)), clamp((int(7)), (_GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), int(ivec3(int(7), 1, (1 & 1))))))), (int(7))))) >> 0) << 0))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, clamp(7, 7, 7)))))); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 return;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(564.824))), injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
                continue;
              }
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))), 1.0, 1.0, 1.0, sqrt(1.0))), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))), 1.0, 1.0, 1.0, sqrt(1.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) / exp(vec2(0.0, 0.0))).y))))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || ((! (bool(false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
            }
           return;
          }
         return;
        }
       return;
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec4(193757u, 25834u, 61896u, 150135u).rrg, (uvec4(193757u, 25834u, 61896u, 150135u).rrg) + uvec3(0u, 0u, 0u))))), uvec3(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(_GLF_IDENTITY(uvec4(193757u, 25834u, _GLF_IDENTITY(61896u, max(61896u, 61896u)), 150135u).rrg, (uvec4(193757u, 25834u, 61896u, 150135u).rrg) + uvec3(0u, 0u, 0u))))), (0u | 0u)))).x, mat3x4(1.0), _GLF_IDENTITY(mat2(1.0), mat2(mat2x3(mat2(1.0)))), mat2x4(1.0), mat2x3(1.0), _GLF_struct_3(_GLF_struct_0(bvec4(true)), _GLF_struct_1(bvec3(true), mat2(1.0), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)), transpose(transpose(_GLF_IDENTITY((mat4(1.0)), (true ? (mat4(1.0)) : _GLF_FUZZED(mat4(82.80, -1.8, 5653.6637, -9.1, 3707.7552, 8.7, -3.7, -476.222, -0.6, -5084.2031, 7.9, 9209.6189, -78.05, 2218.4674, -0.2, -133.939))))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && true)), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED((mat2(-293.933, 4.5, -3.3, _GLF_IDENTITY(93.91, float(mat4(_GLF_IDENTITY(93.91, min(93.91, 93.91)), _GLF_IDENTITY(dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(tan(0.0), 0.0), vec2(1.0, 1.0))), 0.0, sqrt(log(1.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) / mat2(-0.7, -10.57, -7.9, -5427.1898))), mat2(0.0, 0.0, 0.0, 0.0) + (true ? mat2(1.0) : _GLF_FUZZED((mat2(-293.933, 4.5, -3.3, 93.91) / mat2(-0.7, -10.57, -7.9, -5427.1898))))))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(64471, -18823, 66174)) : ivec3(1)))) << (ivec3(0, 0, 0) | ivec3(0, 0, 0))), mat2x4(1.0)), _GLF_struct_2(uvec4(1u), bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))), mat4x2(1.0))));
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(uvec3(1u), 1.0, _GLF_struct_8(bvec4(true), ivec4(1), bvec2(true), mat3x4(1.0), _GLF_struct_5(mat4x3(1.0), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))))))), _GLF_struct_6(vec2(1.0)), _GLF_struct_7(_GLF_IDENTITY(uvec3(1u), uvec3(0u, 0u, 0u) ^ (uvec3(1u))), uvec4(_GLF_IDENTITY(1u, 0u ^ (1u))), mat3x2(1.0)), gl_WorkGroupID.x), mat4x2(1.0), _GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0)), transpose(transpose(mat4x3(mat3(1.0))))))));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_9._f2.workgroup_id, min(_GLF_struct_replacement_9._f2.workgroup_id, _GLF_struct_replacement_9._f2.workgroup_id)), (workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_9._f2.workgroup_id, min(_GLF_struct_replacement_9._f2.workgroup_id, _GLF_struct_replacement_9._f2.workgroup_id))) | (workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_9._f2.workgroup_id, min(_GLF_struct_replacement_9._f2.workgroup_id, _GLF_struct_replacement_9._f2.workgroup_id))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)))) != _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) << 0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) << 0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))), int(int(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) << 0)))), int(0))) >> _GLF_IDENTITY(int(0), int(0))))))) >> 0)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(345.360) : injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
          {
           return;
          }
         else
          {
          }
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat2(1.0), 1.0, _GLF_struct_11(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), mat4(1.0), uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), uint(_GLF_IDENTITY(uvec4(~ (1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(~ (1u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), 0u | (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(~ (1u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))), _GLF_struct_10(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), clamp(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))))) - 0u) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)))) | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) | 0u), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(uvec3((subgroup_local_id + 1), 1u, (0u | 1u))), 0u + (uint(uvec3((subgroup_local_id + 1), 1u, (0u | 1u)))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((subgroup_local_id + 1))))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1))))))), 0u, 0u)), max(uint(uvec3((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((subgroup_local_id + 1))))), 0u, 0u)), uint(uvec3((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((subgroup_local_id + 1))), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (~ ((subgroup_local_id + 1))))))), 0u, 0u)))))) % subgroup_size)))))) << 0u)), mat2(1.0), ivec4(1), mat2x3(1.0), mat4(1.0), 1, mat3(1.0))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(int(6), int(6))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(5), int(5)), ((0 << _GLF_IDENTITY(int(1), int(1))) << _GLF_IDENTITY(int(5), int(5))) << (0 << _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[_GLF_struct_replacement_12._f2._f3.next_virtual_gid], uint(_GLF_IDENTITY(1, (1) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)), ((int(7))) + 0) | 0))), (false ? _GLF_FUZZED(18723) : _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(int(int(7))), int(int(int(int(int(7)))))))) | 0))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), (7) >> 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0, clamp(_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0, _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0, _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0))))), max(int(7), int(7)))), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), 1 * (int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))))))) / ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, 7, 7)), (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, _GLF_IDENTITY((7) >> 0, clamp((7) >> 0, (7) >> 0, (7) >> 0)))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), _GLF_IDENTITY(0 | (int(_GLF_IDENTITY(7, max(7, 7)))), 0 ^ (0 | (int(_GLF_IDENTITY(7, max(7, 7)))))))))) + 0), max(int(7), int(7)))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, _GLF_IDENTITY((7) >> 0, (true ? (7) >> 0 : _GLF_FUZZED(_injected_loop_counter))))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, clamp(7, 7, 7)), 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), min(_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), (_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), max((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7))))))) ^ 0), (int(_GLF_IDENTITY(7, max(7, 7)))))))) + 0), max(int(7), int(7)))), 0 ^ ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))), 0 + (_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | _GLF_IDENTITY((_GLF_IDENTITY(7, (7) >> 0)), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(7, (7) >> 0)), 0, 0, 0)), (int(ivec4((_GLF_IDENTITY(7, (7) >> 0)), 0, 0, 0))) + 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) ^ 0)), (1 ^ 1) ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0)))), (_GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) ^ 0))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), min(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), _GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), max(_GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), ((7) | (_GLF_IDENTITY(7, (7) >> 0))) + 0), (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, (false ? _GLF_FUZZED(_injected_loop_counter) : 7)))))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), ((7) | (_GLF_IDENTITY(7, (7) >> 0))) * 1))), (~ (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))))) / 1)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, _GLF_IDENTITY((7) >> 0, (_GLF_IDENTITY((7) >> 0, ~ (~ ((7) >> 0)))) * 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), min(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0)), ~ (~ (clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0)))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, (7) + 0))))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), _GLF_IDENTITY((int(7)) | 0, clamp((int(7)) | 0, (int(7)) | 0, _GLF_IDENTITY((int(7)) | 0, ((int(7)) | 0) ^ 0)))))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), ((7) | (_GLF_IDENTITY(7, (7) >> 0))) >> 0))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), 0 | (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, _GLF_IDENTITY((7), int(ivec4((7), 1, 1, 1))) >> 0))), 0 | (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), 0 | (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) / 1), (7) >> 0)))))), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), 0 | (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))) : _GLF_FUZZED(-35686)))))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> _GLF_IDENTITY(0, 0 + (0)))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7))))))) + 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(_GLF_IDENTITY(int(7), clamp(_GLF_IDENTITY(int(7), (int(7)) / 1), int(7), int(7))), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), (true ? (7) | (_GLF_IDENTITY(7, (7) >> 0)) : _GLF_FUZZED(_injected_loop_counter))))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, _GLF_IDENTITY((7), min(_GLF_IDENTITY((7), (false ? _GLF_FUZZED(_injected_loop_counter) : (7))), (7))) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), _GLF_IDENTITY(max(int(7), int(7)), (true ? max(int(7), int(7)) : _GLF_FUZZED(_injected_loop_counter))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) >> 0)))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp(_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), ((int(_GLF_IDENTITY(7, max(7, 7))))) | (_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), ((int(_GLF_IDENTITY(7, max(7, 7))))) - int(_GLF_ZERO(0.0, injectionSwitch.x))))), (int(_GLF_IDENTITY(7, _GLF_IDENTITY(max(7, 7), max(max(7, 7), max(7, 7)))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), min(int(_GLF_IDENTITY(7, max(7, 7))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), max(int(_GLF_IDENTITY(7, max(7, 7))), int(_GLF_IDENTITY(7, max(7, 7)))))))) >> 0)))) + 0), max(int(7), int(7)))), 0, 0, 0), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> _GLF_IDENTITY(0, min(0, 0)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))))) >> 0), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), 0, 0, 0), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> _GLF_IDENTITY(0, min(0, 0)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))))) >> 0), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), 0, 0, 0), (ivec4(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> _GLF_IDENTITY(0, min(0, 0)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))))) >> 0), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), 0, 0, 0)) << (ivec4(0, 0, 0, 0) >> _GLF_IDENTITY(ivec4(5), ivec4(5)))), ivec4(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> _GLF_IDENTITY(0, min(0, 0)))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0)), (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))) | (int(_GLF_IDENTITY(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0))), (_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))) + 0))))) >> 0), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7)))), 0, 0, 0)))) - ivec4(0, 0, 0, 0)))), max((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(7), (int(7)) | 0))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp(_GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, int(int(7))))))), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, int(int(7))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, int(int(7))))))))) : _GLF_FUZZED(_injected_loop_counter))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + _GLF_IDENTITY(0, max(0, 0))), max(int(7), int(7)))), (1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), min(int(7), int(7))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ _GLF_IDENTITY((~ (7)), ((~ (7))) | ((~ (7)))))), (int(7)) | 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), clamp((7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), clamp((7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), clamp((7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), clamp((7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))), max(int(_GLF_IDENTITY(7, _GLF_IDENTITY((7) | (_GLF_IDENTITY(7, (7) >> 0)), clamp((7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)), (7) | (_GLF_IDENTITY(7, (7) >> 0)))))), int(_GLF_IDENTITY(7, (7) | (_GLF_IDENTITY(7, (7) >> 0)))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, max(7, 7)))), clamp((int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))), (int(_GLF_IDENTITY(7, max(7, 7)))))) + 0), max(int(7), int(7))))))))) / 1)))), 4, _GLF_IDENTITY(64, (64) - 0), 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), ! (! (bool(bvec3(false, true, true)))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * mat2(1.0)).y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), (mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))) * mat2(1.0)).y, false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))), false))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))))).y))))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
              {
              }
             else
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
          return;
         return;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
          }
         else
          {
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 + (4)), 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), 1u, 0u, 1u))) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size), ((_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | (subgroup_size)) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                }
               while(_GLF_WRAPPED_LOOP(false));
               return;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))));
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (~ (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
            }
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(mat4x3(1.0), 0);
   for(_GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (~ (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1)))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), ~ (~ (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1)))))))), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(1), ~ (~ (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(1), ivec2(0, 0) ^ (ivec2(1))))))))))))), 0, 1u); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)), ! (! (! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)), (_GLF_IDENTITY((_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)), ((_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1))) || false)) || false), bool(bool(! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)))))) || false), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)), (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)), bool(bool(! (_GLF_WRAPPED_LOOP(_GLF_struct_replacement_14._injected_loop_counter < 1)))))) || false)) && true))); _GLF_struct_replacement_14._injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          break;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            break;
           continue;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[_GLF_struct_replacement_12._f2._f3.next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) >> 0u))), min(uint(read_1 == read_2), uint(read_1 == read_2)))) * 1u)) ^ 0u) + _GLF_IDENTITY(1, clamp(1, 1, 1)), 4, 64, 4);
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))))));
           if(_GLF_DEAD(false))
            return;
          }
        }
       return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_struct_replacement_12._f2._f3.next_virtual_gid], uint(read_1 == read_2) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) | (ivec4(1, 1, 1, 1)))), max(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) | (ivec4(1, 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) | (ivec4(1, 1, 1, 1)))))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) | (ivec4(1, 1, 1, 1)))), max(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) | (ivec4(1, 1, 1, 1)))), int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), ivec4(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) | (0)), 0, 0) | (ivec4(1, 1, 1, 1))))))))) >> 0))), 1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((1))) | 0)) | (1)))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, 0)), int(ivec2(int(ivec2(4, 0)), 0)))), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(620.391, -572.049)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
}
