#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size))))) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u), subgroup_id * subgroup_size))))) | 0u)) | ((108852u >> 147502u) & 0u)) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | (1))))) % subgroup_size, uint(uvec2((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)) | (1), ((_GLF_IDENTITY(1, (1) >> 0)) | (1)) | ((_GLF_IDENTITY(1, (1) >> 0)) | (1))))))) % subgroup_size, 0u)))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(4u), uint(4u))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ 0u)) >> 0u) >> _GLF_IDENTITY(uint(4u), uint(4u)))) + 1, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) + 1, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))) + 1))))) % subgroup_size)));
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, int(ivec2(4, 1))), _GLF_IDENTITY(64, (false ? _GLF_FUZZED(59000) : 64)), 4);
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-24659), _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY(-24659, min(-24659, -24659)))), int(ivec2((_GLF_FUZZED(-24659)), 1))) ^ 0) : 4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-24659), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(-24659), max(_GLF_IDENTITY(_GLF_FUZZED(-24659), min(_GLF_FUZZED(-24659), _GLF_FUZZED(_GLF_IDENTITY(-24659, ~ (~ (-24659)))))), _GLF_IDENTITY(_GLF_FUZZED(-24659), max(_GLF_FUZZED(-24659), _GLF_IDENTITY(_GLF_FUZZED(-24659), max(_GLF_FUZZED(-24659), _GLF_FUZZED(-24659)))))))), (_GLF_IDENTITY((_GLF_FUZZED(-24659)), (false ? _GLF_FUZZED(8133) : (_GLF_FUZZED(-24659))))) >> 0) ^ 0) : 4) << 0)), ((false ? _GLF_FUZZED(-24659) : 4)) >> 0)), _GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(0, int(int(0))));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))) | 0u), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1)))), max(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_local_id + 1)))), ~ _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) + 1)))), clamp((_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) + 1)))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))) + 1)))))))))) / _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 1u, 1u, (0u & 22578u)), (uvec4(1u, 1u, 1u, (0u & 22578u))) + uvec4(0u, 0u, 0u, 0u)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)), ~ (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))) : _GLF_FUZZED(max(subgroup_id, read_1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) ^ (0u & 194108u)) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), _GLF_IDENTITY((~ (1)) >> 0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)) >> 0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0))), max((_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0))), (_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((~ (1)) >> 0, 0 ^ (_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0)))), (_GLF_IDENTITY((~ (1)) >> 0, 0 ^ (_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY((~ (1)) >> 0, 0 ^ (_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0)))), (_GLF_IDENTITY((~ (1)) >> 0, 0 ^ (_GLF_IDENTITY((~ (1)) >> 0, 0 + ((~ (1)) >> 0))))) / 1)) ^ 0), _GLF_IDENTITY((~ (1)) >> 0, 0 ^ (_GLF_IDENTITY((~ _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-86171) : (1)))) >> 0, 0 + ((~ (1)) >> 0))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), subgroup_local_id)) + 1) / 1u)), 0u ^ (uint(uint((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1)))) / 1u))))))) | (subgroup_local_id + 1), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), min(1u, 1u)))))) | (subgroup_local_id + 1), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)), max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))) | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1)))) | (0u | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1, (subgroup_local_id + 1) / 1u)) | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), min((_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), 1 * ((_GLF_IDENTITY(1, 0 + (1))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) << 0u))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)))) ^ 0u, (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) << 0u))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)))) ^ 0u) | (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) << 0u))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)))) ^ 0u)))), (true ? min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u), min(1u, 1u)))))) | (subgroup_local_id + 1), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1)))), _GLF_IDENTITY((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u))))) / 1u)), _GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), (0u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) << 0u))) | (_GLF_IDENTITY(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), 0u + (uint(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))))))), (true ? uint(_GLF_IDENTITY(uint(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), 0u + (uint(max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)) + 1, (subgroup_local_id + 1) / 1u)), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) << 0u) + 1, (subgroup_local_id + 1) / 1u)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u))))))) : _GLF_FUZZED(virtual_gid))))))) | _GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), 0u + ((subgroup_local_id + 1)))) | (0u | 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u) - 0u))) + (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u)), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id))))))) + 1, (subgroup_local_id + 1) / 1u)) | (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, int(ivec2(1, 0))), 1))) | (_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), min((_GLF_IDENTITY(1, 0 + (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, 0 + (1))), 1 * ((_GLF_IDENTITY(1, 0 + (1))))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) << 0u))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))))) ^ 0u, (((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) << 0u))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + 1)))) ^ 0u) | (((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))) / 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_local_id))) << 0u))) + 1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0))))) ^ 0u)))) : _GLF_FUZZED(num_workgroup)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))) < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), clamp(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), vec2(0.0, 0.0) + (vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0)))))), mix(vec2((_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), clamp(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), vec2(0.0, 0.0) + (vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0)))))))[0], _GLF_FUZZED(-8.7)), vec2(_GLF_FUZZED(471.194), (_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), clamp(_GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), vec2(0.0, 0.0) + (vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0))), vec2(mat3x2(_GLF_IDENTITY((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), vec2(mat4x3((injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), exp(0.0), 1.0, 1.0, abs(1.0)))))))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))) * (injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, true, true)))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) == read_2) + 1, _GLF_IDENTITY(~ (~ (uint(read_1 == read_2) + 1)), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((uint(read_1 == read_2) + 1) / 1u, ((uint(read_1 == read_2) + 1) / 1u) - 0u)))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), min(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), 1u)))))))))), ((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u)))) - _GLF_IDENTITY(0u, 0u + (0u))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1))) >> 0u)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))))))))), bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))))))))))))))) ? _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(read_1 == read_2, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(read_1 == read_2, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) + 1), (~ (uint(read_1 == read_2) + 1)) ^ 0u) : _GLF_FUZZED(next_virtual_gid)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) + 1), ~ (~ (~ (uint(read_1 == read_2) + 1)))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) + 1), ~ (~ (~ (uint(read_1 == read_2) + 1))))) << 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((uint(read_1 == read_2) + 1) / 1u, ((uint(read_1 == read_2) + 1) / 1u) - 0u)))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), min(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), 1u)))))))))), ((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u)))) - _GLF_IDENTITY(0u, 0u + (0u))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1))) >> 0u)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))))))))), bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))))))))))))))) ? _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(read_1 == read_2, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(read_1 == read_2, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) + 1), (~ (uint(read_1 == read_2) + 1)) ^ 0u) : _GLF_FUZZED(next_virtual_gid)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) + 1), ~ (~ (~ (uint(read_1 == read_2) + 1)))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) + 1), ~ (~ (~ (uint(read_1 == read_2) + 1))))) << 0u))))), 1u * ((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, _GLF_IDENTITY((uint(read_1 == read_2) + 1) / 1u, ((uint(read_1 == read_2) + 1) / 1u) - 0u)))), ~ (~ ((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), min(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), uint(uvec2(_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u), 1u)))))))))), ((~ (_GLF_IDENTITY(uint(read_1 == read_2) + 1, (uint(read_1 == read_2) + 1) / 1u)))) - _GLF_IDENTITY(0u, 0u + (0u))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1)), (_GLF_IDENTITY(uint(read_1 == read_2) + 1, 0u ^ (uint(read_1 == read_2) + 1))) >> 0u)), (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))), (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))))), _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))))))) || false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(true, false || (true))) && true), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))))))))), bool(bool(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, false || (true)), false)), ! (! (bool(bvec2(_GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) && true)))))))))))))))) ? _GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(read_1 == read_2, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(read_1 == read_2, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec2(bvec2(bvec2(bvec4(bvec2(read_1 == read_2, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) + 1), (~ (uint(read_1 == read_2) + 1)) ^ 0u) : _GLF_FUZZED(next_virtual_gid)))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) + 1), ~ (~ (~ (uint(read_1 == read_2) + 1)))), (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))))) + 1), ~ (~ (~ (uint(read_1 == read_2) + 1))))) << 0u)))))))) | 0u) | (~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), ! (! (! (read_1 == read_2))))))) + 1))))), 4, _GLF_IDENTITY(64, max(_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, 1 * (64)), 64)), 64)), 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(workgroup_id))) == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == _GLF_IDENTITY(read_2, 0u + (read_2))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) + 1, 4, 64, _GLF_IDENTITY(4, 1 * (4)));
  }
}
