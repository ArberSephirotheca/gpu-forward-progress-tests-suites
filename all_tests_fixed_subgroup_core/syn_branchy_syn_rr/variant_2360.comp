#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), false, false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), true, true, false)))), false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(987.825)), float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0)))), bool(true))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_ZERO(0.0, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-1.7 - -0.8))), bool(false))), injectionSwitch.y))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))) && true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))))) || false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))), true, false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6494.9334)))), float(_GLF_FUZZED(float(true))), bool(false))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) && true), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))))) && true))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), mix(float(_GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 0.0 + (max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), float(_GLF_FUZZED(-8.1)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, 0u + (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, 0u | (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) << (1u ^ 1u)), subgroup_size)))) + subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u))), _GLF_IDENTITY(0u, (0u) ^ 0u) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u))), 0u | (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), 1u))))))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) || false)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, ~ (~ (4))), 1))), 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(-7.6)), bvec2(false, _GLF_IDENTITY(false, true && (false))))).y, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.8), _GLF_FUZZED(-7.6)), bvec2(false, false))).y) && true))) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))) || (_GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, ~ (~ (read_1))), read_1)) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) : _GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, uint(uint(read_1))), read_1))) | (_GLF_IDENTITY(read_1, (read_1) * 1u))))) == read_2)))) | _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | 0u), ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(next_virtual_gid) : read_1)) == read_2)))) | _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) | 0u)) / 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), (uint(_GLF_IDENTITY(read_1 == read_2, true && _GLF_IDENTITY((read_1 == read_2), (_GLF_IDENTITY((read_1 == read_2), ! (! ((read_1 == read_2))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) | (uint(read_1 == read_2)))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), _GLF_IDENTITY((read_2), clamp((read_2), (read_2), (read_2))) >> 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(min(read_1, read_1), (min(read_1, read_1)) / 1u)) == _GLF_IDENTITY(read_2, (read_2) >> 0u))), ((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, (read_2) >> 0u)))) | ((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, (read_2) >> 0u))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), _GLF_IDENTITY(min(read_1, read_1), (false ? _GLF_FUZZED(read_1) : _GLF_IDENTITY(min(read_1, read_1), (min(read_1, read_1)) - 0u))), _GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), min(read_1, read_1), min(read_1, read_1))))), (min(read_1, read_1)) / 1u)) == _GLF_IDENTITY(read_2, (read_2) >> 0u))), (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), _GLF_IDENTITY(min(read_1, read_1), (false ? _GLF_FUZZED(read_1) : min(read_1, read_1))), _GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), min(read_1, read_1), min(read_1, read_1))))), (min(read_1, read_1)) / 1u)) == _GLF_IDENTITY(read_2, (read_2) >> 0u))), ((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), _GLF_IDENTITY(min(read_1, read_1), (false ? _GLF_FUZZED(read_1) : min(read_1, read_1))), _GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), min(read_1, read_1), min(read_1, read_1))))), (min(read_1, read_1)) / 1u)) == _GLF_IDENTITY(read_2, (read_2) >> 0u)))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), _GLF_IDENTITY(min(read_1, read_1), (false ? _GLF_IDENTITY(_GLF_FUZZED(read_1), clamp(_GLF_FUZZED(read_1), _GLF_FUZZED(read_1), _GLF_FUZZED(read_1))) : _GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), min(read_1, read_1), min(read_1, read_1))))), _GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), min(read_1, read_1), min(read_1, read_1))))), (min(read_1, read_1)) / 1u)) == _GLF_IDENTITY(read_2, (read_2) >> 0u))), ((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(_GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), _GLF_IDENTITY(min(read_1, read_1), (false ? _GLF_FUZZED(read_1) : min(read_1, read_1))), _GLF_IDENTITY(min(read_1, read_1), clamp(min(read_1, read_1), min(read_1, read_1), min(read_1, read_1))))), (min(read_1, read_1)) / 1u)) == _GLF_IDENTITY(read_2, (read_2) >> 0u)))) >> 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, (read_2) >> 0u)))) | ((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (true ? read_2 : _GLF_FUZZED(read_2))), (_GLF_IDENTITY(read_2, uint(uint(read_2)))) >> 0u))))) : _GLF_FUZZED(121202u))), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(subgroup_id) : read_2)), (read_2) >> 0u))))))), 0u + (uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, ~ (~ (read_2))))))) | (_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(read_1 == read_2)), min(uint(uint(read_1 == read_2)), uint(uint(read_1 == read_2)))), min(_GLF_IDENTITY(uint(uint(read_1 == read_2)), min(uint(uint(read_1 == read_2)), uint(uint(read_1 == read_2)))), _GLF_IDENTITY(uint(uint(read_1 == read_2)), min(uint(uint(read_1 == read_2)), uint(uint(read_1 == read_2))))))))))) | (uint(read_1 == read_2))))))) << 0u)), clamp(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2)))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == read_2))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), uint(read_1 == read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == read_2))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == read_2)))))) | 0u), 1u, 0u)))), 0u + (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? read_2 : _GLF_FUZZED(subgroup_size)), ((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? read_2 : _GLF_FUZZED(subgroup_size))) - 0u))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u)) | (uint(read_1 == read_2)))) | _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) / 1u))), min((uint(read_1 == read_2)), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2))) / 1u)))))))) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(read_1, read_1)), clamp(_GLF_IDENTITY(read_1, min(read_1, read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)), _GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | _GLF_IDENTITY((uint(read_1 == read_2)), _GLF_IDENTITY(0u, (0u) * 1u) ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) / 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u)) == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, (0u) * (1u | 1u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u)) == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, (0u) * (1u | 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) & 1u)) == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << _GLF_IDENTITY(0u, (0u) * (1u | 1u)))))), uint(uint(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u)))) >> 0u))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << 0u))) >> 0u, 0u | (_GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << 0u))) >> 0u, min((~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << 0u))) >> 0u, (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) << 0u))) >> 0u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), ~ _GLF_IDENTITY((~ (uint(read_1 == read_2))), uint(uvec4((~ (uint(read_1 == read_2))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))) | (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2))), uint(read_1 == read_2), uint(read_1 == read_2)))))))))) | (uint(read_1 == read_2)))), min(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == _GLF_IDENTITY(read_2, 1u * (_GLF_IDENTITY(read_2, (read_2) + 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), ~ (~ (uint(read_1 == read_2))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - 0u), min(read_1, read_1)) == read_2), uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2))), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), max(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)))))))))))))) | (uint(read_1 == read_2)))), uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))))))) | (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), uint(read_1 == read_2))), (false ? _GLF_FUZZED(20596u) : _GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, min(read_1, read_1))))) == read_2), uint(read_1 == read_2), uint(read_1 == read_2)))))))))))) | (uint(read_1 == read_2)))))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), uint(uint(_GLF_IDENTITY(0u, (0u) >> 0u)))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) + (uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))))))) << 0u)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true && (false), (true && (false)) && true)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(! (! (! (bool(true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), false, true, false))))))), (! (! (! (bool(true && (false)))))) || false)))))), (_GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(true && (false))), bool(bvec4(_GLF_IDENTITY(! (bool(true && (false))), ! (! (! (bool(true && (false)))))), true, true, true))), _GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) || false))))))) && true)) ? _GLF_FUZZED(workgroup_base) : read_1)) == read_2), 0u + _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(! (! (! (bool(true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && _GLF_IDENTITY((false), ((false)) && true))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))))) ? _GLF_FUZZED(workgroup_base) : read_1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), (_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(true && _GLF_IDENTITY((false), ! (! ((false))))), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))) && true)) || false), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false))))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false || ((! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_base) : read_1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! _GLF_IDENTITY((! (! (bool(true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (! (bool(true && (false))))), bool(bool((! (! (bool(true && (false))))))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(true && (false))), (! (bool(true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_base) : read_1), max((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! _GLF_IDENTITY((! (bool(true && (false)))), bool(bvec3((! (bool(true && (false)))), true, false))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(true && (false)), bool(_GLF_IDENTITY(bool(bool(true && (false))), (bool(bool(true && (false)))) || false)))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((! (bool(true && (false)))), false || (_GLF_IDENTITY((! (bool(true && (false)))), true && ((! (bool(true && (false))))))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))))))))) ? _GLF_FUZZED(workgroup_base) : read_1), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(_GLF_IDENTITY(true, true && (true)) && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(true && _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (! (bool(true && (false))))))), false || ((! (_GLF_IDENTITY(! (bool(true && _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (! (bool(true && (false))))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (! (bool(true && (false)))), false || (! (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(_GLF_IDENTITY(true, (true) || false) && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) ? _GLF_FUZZED(workgroup_base) : read_1)))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(true && (false))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false))))), true && (! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))))))) ? _GLF_FUZZED(workgroup_base) : read_1)), 0u | (((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(! (! (! (bool(true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))))) ? _GLF_FUZZED(workgroup_base) : read_1))))) << 0u)))) == read_2)), uint(uint((uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) && _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))))), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(! (! (! (bool(true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && _GLF_IDENTITY((false), ((false)) && true))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))))) ? _GLF_FUZZED(workgroup_base) : read_1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), (_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(bool(true && _GLF_IDENTITY((false), ! (! ((false))))), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))) && true)) || false), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false))))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false || ((! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_base) : read_1), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | 0u)) - 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! _GLF_IDENTITY((! (! (bool(true && (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (! (bool(true && (false))))), bool(bool((! (! (bool(true && (false))))))))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) / 1.0) < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (bool(true && (false))), (! (bool(true && (false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(workgroup_base) : read_1), max((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! _GLF_IDENTITY((! (bool(true && (false)))), bool(bvec3((! (bool(true && (false)))), true, false))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(true && (false)), bool(_GLF_IDENTITY(bool(bool(true && (false))), (bool(bool(true && (false)))) || false)))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! _GLF_IDENTITY((! (bool(true && (false)))), false || (_GLF_IDENTITY((! (bool(true && (false)))), true && ((! (bool(true && (false))))))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 1.0)))))))))) ? _GLF_FUZZED(workgroup_base) : read_1), (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(_GLF_IDENTITY(true, true && (true)) && (false))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(true && _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (! (bool(true && (false))))))), false || ((! (_GLF_IDENTITY(! (bool(true && _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && (! (bool(true && (false))))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (bool(true && (false)))))) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(! (! (bool(true && (false)))), false || (! (! (bool(true && (false))))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (! (! (bool(true && (false))))), (! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))))))))) && true), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (bool(true && (false))), true && (! (bool(_GLF_IDENTITY(true, (true) || false) && (false))))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)), false)))))))))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false))) ? _GLF_FUZZED(workgroup_base) : read_1)))))), (~ _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(true && (false))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(true && (false)), (bool(true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false))))), true && (! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))))))) ? _GLF_FUZZED(workgroup_base) : read_1)), 0u | (((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(_GLF_IDENTITY(bool(true && (false)), ! (_GLF_IDENTITY(! (bool(true && (false))), _GLF_IDENTITY(! (! (! (bool(true && (false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(! (! (! (bool(true && (false))))), false), bvec2(bvec3(bvec2(! (! (! (bool(true && (false))))), false), false)))))))))))))) ? _GLF_FUZZED(workgroup_base) : read_1))))) << 0u)))) == read_2)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) | (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) - 0u)))))) | (uint(read_1 == read_2)))) | (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))), read_1)) == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec2(read_2, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)))), (uint(uvec2(read_2, 0u))) | (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) - 0u))))), (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec2(read_2, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), 0u)))), (uint(uvec2(read_2, 0u))) | (_GLF_IDENTITY(uint(uvec2(read_2, 0u)), (uint(uvec2(read_2, 0u))) - 0u)))))) | 0u)) | (uint(read_1 == read_2)))) | (uint(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, min(read_1, _GLF_IDENTITY(read_1, ~ (~ (read_1))))), read_1)) == read_2))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(uvec3(read_2, 0u, 1u)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) | 0u)), _GLF_IDENTITY(uint(3u), (uint(3u)) + 0u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_size) : uint(6u))))), (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_size) : uint(6u)))))) >> 0u), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))), 0u | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_size) : uint(6u))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), (_GLF_IDENTITY(uint(7u), uint(7u))) * 1u)) >> _GLF_IDENTITY(uint(7u), uint(7u))))), (uint(uvec3(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (false ? _GLF_FUZZED(workgroup_size) : uint(6u))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (true ? 1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) * 1u)) : _GLF_FUZZED((read_1 % next_virtual_gid))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) >> 0u))))), ((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | 0u)))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(uint(_GLF_IDENTITY(uint(3u), uint(3u))))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) * 1u))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))), max(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u)))) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | 0u), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), uint(_GLF_IDENTITY(uvec3(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (_GLF_IDENTITY(0u, max(0u, 0u)) << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 0u), (false ? _GLF_FUZZED(uvec3(174295u, 46963u, 28939u)) : uvec3(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 0u)))))))))), uint(uvec3(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)), ((uint(read_1 == read_2))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), max(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), _GLF_IDENTITY(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), uint(_GLF_IDENTITY(uvec3(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 0u), (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(174295u, (_GLF_IDENTITY(174295u, (false ? _GLF_FUZZED(2685u) : 174295u))) | 0u), 46963u, 28939u)) : uvec3(clamp(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (false ? _GLF_FUZZED(virtual_gid) : 0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u)) | (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u, 0u)))))))))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((uint(read_1 == read_2)), min((uint(read_1 == read_2)), (uint(read_1 == read_2)))))) | (uint(read_1 == read_2)))), uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u ^ ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), ~ (~ (_GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) | 0u), read_2))), min(uint(read_1 == read_2), uint(read_1 == read_2))))) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(0u ^ ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(0u ^ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), 0u + ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u)) ^ ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), uint(3u))))))))))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) + 0u)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)), max((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) - 0u))))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 0u + (read_1))) | 0u) == read_2)))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (true ? _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_size))))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | _GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | ((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))))) | (uint(read_1 == read_2)))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | _GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | ((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))))) | (uint(read_1 == read_2))))), (~ (uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | _GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | ((uint(read_1 == read_2))))) | ((uint(read_1 == read_2)))))) | (uint(read_1 == read_2)))))) >> 0u))) : _GLF_FUZZED(82864u)))))))) << 0u, (true ? (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2)))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) | (uint(read_1 == read_2)), (_GLF_IDENTITY((uint(read_1 == read_2)), max((uint(read_1 == read_2)), (uint(read_1 == read_2)))) | (uint(read_1 == read_2))) << (0u & 33521u)))) | (uint(read_1 == read_2)))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) ^ (1u ^ 1u)), 0u ^ (read_2)), read_2)))))))) | (uint(read_1 == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u))) | (uint(read_1 == read_2)))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), clamp((uint(read_1 == read_2)), (uint(read_1 == read_2)), (uint(read_1 == read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2)))))))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))) | (uint(read_1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), clamp((uint(read_1 == read_2)), (uint(read_1 == read_2)), (uint(read_1 == read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2)))))))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))) | (uint(read_1 == read_2))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), clamp((uint(read_1 == read_2)), (uint(read_1 == read_2)), (uint(read_1 == read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2)))))))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))) | (uint(read_1 == read_2)))), ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), clamp((uint(read_1 == read_2)), (uint(read_1 == read_2)), (uint(read_1 == read_2)))), (_GLF_IDENTITY((uint(read_1 == read_2)), 0u | (_GLF_IDENTITY((uint(read_1 == read_2)), ~ (~ ((uint(read_1 == read_2)))))))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))) | (uint(read_1 == read_2))))) ^ 0u))), 0u))) | (uint(read_1 == read_2)))), max(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) && true), false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)), ! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)), ! (! (read_1 == _GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) * 1u), (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uint(3u), uint(3u)), 0u, 1u, 0u), (uvec4(_GLF_IDENTITY(uint(3u), uint(3u)), 0u, 1u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), min(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_2, (read_2) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (read_2) | (read_2))) | (_GLF_IDENTITY(read_2, 0u ^ (read_2)))))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec3(bvec3(read_1 == read_2, false, true)))), true)))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2))))))) / 1u))) | (uint(read_1 == read_2)))), uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), max(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == read_2)))) | (uint(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, uint(uint(read_1))), read_1, read_1)) == read_2))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == read_2)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (read_2)))))), (true ? uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) * 1u)) << 0u))))) : _GLF_FUZZED(82864u)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch)).x < injectionSwitch.y)) ? 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (true ? _GLF_IDENTITY(3u, uint(uint(3u))) : _GLF_FUZZED(77727u)))), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, _GLF_IDENTITY(0u, 0u | (0u)) ^ (read_2)), read_2)))))))) | (uint(read_1 == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (_GLF_IDENTITY(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u)) - 0u))) | (uint(read_1 == read_2)))), uint(uvec2((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)))) | (uint(read_1 == read_2)))), 0u))), (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u))) | (uint(read_1 == read_2)))), uint(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u))))))), uint(read_1 == read_2)))) << (158636u & 0u)))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), 0u | (uint(_GLF_IDENTITY(3u, 1u * (3u))))), uint(3u)))) | (uint(read_1 == read_2)))), 0u), (false ? _GLF_FUZZED(uvec2(47466u, 138834u)) : uvec2((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(uint(read_1 == read_2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec2(uint(read_1 == read_2), 1u))))))), uint(read_1 == read_2)))) << (158636u & 0u)))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), 0u | (uint(_GLF_IDENTITY(3u, 1u * (3u))))), uint(3u)))) | (uint(read_1 == read_2)))), 0u))))))) | (uint(read_1 == read_2)))), max(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), min((uint(read_1 == read_2)), (uint(read_1 == read_2)))), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))), read_2)), false, true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))), read_2)), false, true), bvec3(bvec3(bvec3(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))), read_2)), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))), read_2)), false, true), bvec3(bvec3(bvec3(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, uint(uvec2(read_2, 0u))), read_2)), false, true))))), false))))), true)))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1, (read_1) / 1u) == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(read_1 == read_2, false, true), true))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true)))), true))))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), (uint(3u)) ^ 0u)) ^ (0u & 41709u)), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), min(_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), clamp((read_2), (read_2), (read_2))) | (read_2))) | (read_2)))), (true ? _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)), false))), true))))), _GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true)), (_GLF_IDENTITY(bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true)), true && (bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))) && true)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), clamp((read_2), (read_2), (read_2))) | (read_2))) | (read_2), ((_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), clamp((read_2), (read_2), (read_2))) | (read_2))) | (read_2)) / 1u)))) : _GLF_FUZZED(packUnorm4x8(vec4(-6.6, 7991.6781, -48.42, 718.200))))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(read_1, (read_1) ^ (0u ^ (0u | 0u))) == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), ((uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2))))) | ((uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2))))))))) / 1u))) | (uint(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2)))), uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (read_2)))), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))), ((0u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u)), 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == read_2)))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), 1u * (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) << 0u)))), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(bool(read_1 == read_2)), false || (bool(bool(read_1 == read_2)))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), _GLF_IDENTITY(uint(3u), 1u * (uint(3u)))))))))) | (uint(read_1 == read_2)))) - 0u)) - 0u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (read_2)))))), (_GLF_IDENTITY(true ? uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) : _GLF_IDENTITY(_GLF_FUZZED(82864u), 0u | (_GLF_FUZZED(82864u))), uint(_GLF_IDENTITY(uvec3(true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))))))) : _GLF_IDENTITY(_GLF_FUZZED(82864u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), (uint(uvec3(0u, 0u, 0u))) | (uint(uvec3(0u, 0u, 0u))))) | (_GLF_FUZZED(82864u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), (_GLF_IDENTITY(uvec3(true ? uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ _GLF_IDENTITY((read_1), (true ? (read_1) : _GLF_FUZZED(bitfieldExtract(173459u, 78596, 75623)))))) == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) : _GLF_IDENTITY(_GLF_FUZZED(82864u), 0u | (_GLF_FUZZED(82864u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec3(true ? uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) + 0u))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) : _GLF_IDENTITY(_GLF_FUZZED(82864u), 0u | (_GLF_FUZZED(82864u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) | uvec3(0u, 0u, 0u))) | (uvec3(true ? uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2)))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2, ! (! (read_1 == read_2)))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) : _GLF_IDENTITY(_GLF_FUZZED(82864u), 0u | (_GLF_FUZZED(82864u))), 1u, (0u << _GLF_IDENTITY(uint(5u), uint(5u))))))))))))) : _GLF_FUZZED(read_1)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2)), bool(bvec2(read_1 == read_2, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), 0u + (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, ~ (~ (3u)))) - 0u)), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, 0u ^ (read_2)), read_2)))))))) | (uint(read_1 == read_2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec4(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 0u, 1u, _GLF_IDENTITY(0u, (0u) - 0u)))), 0u, 1u, 1u))) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, min(_GLF_IDENTITY(read_2, (read_2) / 1u), _GLF_IDENTITY(read_2, (read_2) | 0u))))), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2))))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u, ((0u << _GLF_IDENTITY(uint(3u), uint(3u))) << 0u) >> 0u)))) | (_GLF_IDENTITY(uint(read_1 == read_2), (true ? _GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2)))) : _GLF_FUZZED(next_virtual_gid)))))), uint(uvec2((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 1u * (3u))), uint(3u))) << 0u)) ^ (0u & 121806u)))) | (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2))))))), 0u))) | (uint(read_1 == read_2)))), max(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : read_2)), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : read_2)), true)))), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true)))), ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true)))))))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), max(_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) / 1u), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), min(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) - (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) | (read_2))) | (read_2)))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, true), bvec3(bvec4(bvec3(read_1 == read_2, false, true), true)))), true))))))) >> (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(uint(3u), uint(3u), uint(3u))), uint(_GLF_IDENTITY(3u, (true ? 3u : _GLF_FUZZED(workgroup_id))))))) | (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), (_GLF_IDENTITY((read_2), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((read_2), ((read_2)) | ((read_2)))))) << 0u) | (read_2))) | (read_2))))))) / 1u))) | (uint(read_1 == read_2)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), max(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), (0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), uint(uvec2(0u ^ (_GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))), 0u)))))) * 1u)) | (uint(read_1 == read_2)))) | (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), min(uint(4u), _GLF_IDENTITY(uint(4u), min(uint(4u), uint(4u))))), uint(4u))) ^ (read_2), (_GLF_IDENTITY(true, ! (! (true))) ? (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), (uint(4u)) | (_GLF_IDENTITY(uint(4u), (uint(4u)) << 0u))), uint(4u))) ^ (read_2) : _GLF_FUZZED(clamp(virtual_gid, num_workgroup, workgroup_size))))))))), (true ? uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, 0u + (read_2))))), _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, ~ (~ (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid))))))) | (read_1)) == read_2, ! (! (read_1 == read_2)))))) >> (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))) << _GLF_IDENTITY(uint(3u), uint(3u)))) | (uint(read_1 == read_2)))) | (uint(read_1 == read_2)))) : _GLF_FUZZED(82864u)))))))) | 0u)) << 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))))))))) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) - 0.0)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0), (mat4x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), false || (bool(injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec3(bool(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}
