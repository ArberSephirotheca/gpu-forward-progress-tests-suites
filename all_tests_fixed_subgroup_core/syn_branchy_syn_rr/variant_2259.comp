#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id;
 uvec4 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), bool(bvec4(false || (! (false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-825.886), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-825.886), clamp(_GLF_IDENTITY(_GLF_FUZZED(-825.886), mix(float(_GLF_FUZZED(99.56)), float(_GLF_FUZZED(-825.886)), bool(true))), _GLF_FUZZED(-825.886), _GLF_IDENTITY(_GLF_FUZZED(-825.886), mix(float(_GLF_FUZZED(-825.886)), float(_GLF_FUZZED(699.019)), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(710.523), (_GLF_FUZZED(710.523)) - length(abs(vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-825.886))), _GLF_FUZZED(-825.886))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))))), true, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))) || false, bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))) || false, false, true, true))))))))), true, true, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true, false))))))))))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886)), mix(float(_GLF_FUZZED(5.8)), float((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))))), true, true, false))))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (true)), false))))), true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(float(true), (_GLF_IDENTITY(float(true), float(mat4x3(float(true), log(1.0), 1.0, 1.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 1.0)))) + 0.0), min(float(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec3(bvec2(! (true), false), true)))))))), float(true))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))))), true, true, false))))), true)), false)))), true, false, false)))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), false, false, true))))), (! (! (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), false, false, true)))))) || false)), (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3(mat2x3(2.2, 72.62, 988.753, -401.669, 5.3, 8.0))) : mat3(injectionSwitch, 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 0.0, 0.0))))).y))), true, true, false))), false, false, true))))))) || false)))), true, true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-825.886), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-825.886), clamp(_GLF_IDENTITY(_GLF_FUZZED(-825.886), mix(float(_GLF_FUZZED(99.56)), float(_GLF_FUZZED(-825.886)), bool(true))), _GLF_FUZZED(-825.886), _GLF_IDENTITY(_GLF_FUZZED(-825.886), mix(float(_GLF_FUZZED(-825.886)), float(_GLF_FUZZED(699.019)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(710.523), min(_GLF_FUZZED(710.523), _GLF_FUZZED(710.523))), (_GLF_FUZZED(710.523)) - length(abs(vec4(0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(-825.886))), _GLF_FUZZED(-825.886))))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))))), true, true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8645.8995), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.3)), bvec2(true, false))))).x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), float(injectionSwitch.y))), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))) || false)))))), true, true, false))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-825.886, mix(float(_GLF_FUZZED(5509.4396)), float(-825.886), bool(true))))), mix(float(_GLF_FUZZED(5.8)), float((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-825.886), clamp(_GLF_FUZZED(-825.886), _GLF_FUZZED(-825.886), _GLF_IDENTITY(_GLF_FUZZED(-825.886), clamp(_GLF_FUZZED(-825.886), _GLF_FUZZED(-825.886), _GLF_FUZZED(-825.886))))))), bool(true)))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))))), true, true, false))))), true)), bool(bvec2(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), injectionSwitch.y))))), true, true, false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))), true, true, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, injectionSwitch.y))), float(_GLF_FUZZED(float(true))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-825.886))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.9)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, true, false))))), true))))), false)))), true, false, false)))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true, true, _GLF_IDENTITY(false, (false) && true))), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), ! (! (_GLF_IDENTITY((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), bool(bvec4((bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false))), false, false, true))))))))), true, true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) : _GLF_FUZZED(-6.2))) > injectionSwitch.y), false)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, determinant(mat2(1.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), 1.0, sqrt(1.0), 0.0, 1.0, sin(0.0))))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 1.0, 1.0, 0.0, exp(0.0), 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, true && (false))))) || false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) || false)))), true, true, false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y = subgroup_local_id;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x)), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, ((0u | 0u) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) * (gl_NumWorkGroups.x))))), (0u | 0u) + (_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, (_GLF_IDENTITY((0u | 0u) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)), min((0u | 0u) ^ uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u | 0u) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))))) * (gl_NumWorkGroups.x))))), uint(uvec2((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, ((0u | 0u) ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) * (gl_NumWorkGroups.x))))), (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))) / _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 0u | (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))))), _GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))));
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.y = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec2(false, false)))), (bool(bvec2(false, false))) && true)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(false, bool(bool(false))) || (bool(bvec2(false, false)))), (bool(bvec2(false, false))) && true))) && true)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id), 1u * (~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y = workgroup_id)))));
 uint workgroup_base = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.w * GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.y;
 GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_base)), max(workgroup_base, workgroup_base));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, clamp(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, (_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, _GLF_IDENTITY((GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z) / 1u, max((GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z) / 1u, (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z) / 1u)))) / 1u))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, clamp(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size, uvec4(1u, 1u, 1u, 1u) * (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size)).z, (GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z) / 1u)) / 1u))))) + subgroup_id * subgroup_size + GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x = virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.z + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) ^ 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size), 1u * ((subgroup_id * subgroup_size))) | (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * subgroup_size)), 0u, 1u, (1u & 1u))), clamp(uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 1u, (1u & _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))), max(1u, _GLF_IDENTITY(1u, (1u) - 0u)))))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u)) | (subgroup_id * subgroup_size)), 0u, 1u, (1u & 1u))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size)), 0u, 1u, (1u & 1u)))))) + ((GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(83.94)))))))
    return;
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x = next_virtual_gid;
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false), ((false)) || false) || false))), true, false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false), ((false)) || false) || false))), true, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acosh(vec2(-9.8, -4.3))) : injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), ((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))) | (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), (true ? (~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id), min(_GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id), _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))))) | (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), uvec2(1u, 1u) * ((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))))))))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))) >> uvec2(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sqrt(1.0), sqrt(1.0), log(abs(1.0)), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)))))) ^ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))), max((_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), ((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))) | (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), (true ? (~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))) | (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), uvec2(1u, 1u) * ((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))))))))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))) >> uvec2(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))), (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, ~ _GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), ((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id), (~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)) ^ uvec2(0u, 0u))), ((_GLF_IDENTITY(~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id), (~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)) ^ uvec2(0u, 0u)))) - uvec2(0u, 0u)), (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), (true ? (~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)) : _GLF_FUZZED(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))) | (_GLF_IDENTITY((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)), uvec2(1u, 1u) * ((~ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))))))))) | (_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id, _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u)) | (uvec2(0u, 0u)))) >> uvec2(_GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (0.0)), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) ^ (GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id)))))).x], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, abs(0.0), 1.0, sin(abs(0.0)), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0))) > injectionSwitch.y))))
    return;
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z = _GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, min(read_1, read_1)), read_1));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint read_2 = atomicLoad(buf[GLF_merged2_0_1_11_1_1_12virtual_gidworkgroup_id.x], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, false || (true)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x = read_2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x = read_2 : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w = GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1120.3534)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), true))))))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1120.3534)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), true))))))) > injectionSwitch.y) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1120.3534)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), true))))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(1120.3534)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec2(bool(true), false), bvec2(bvec3(bvec2(bool(true), false), true))))))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(GLF_merged4_0_1_6_1_1_17_2_1_14_3_1_14read_2subgroup_local_idworkgroup_baseworkgroup_size.y + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
        barrier();
       return;
      }
     return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x], uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w) + 1, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) || false)))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
          return;
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (0 ^ 0) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((_GLF_IDENTITY(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)) | (_GLF_IDENTITY(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810), max(_GLF_IDENTITY(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810), (true ? true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810) : _GLF_FUZZED(21927))), _GLF_IDENTITY(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810), max(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810), true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)))))))), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0)))) ^ (_GLF_IDENTITY(0 | 0, (_GLF_IDENTITY(0 | 0, (0 | 0) ^ 0)) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), min(int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(75810), (_GLF_FUZZED(75810)) | (_GLF_FUZZED(75810)))), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x))), (max(_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), (0 ^ 0) ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (_GLF_IDENTITY(1 | 1, ~ (~ (_GLF_IDENTITY(1 | 1, (1 | 1) | 0))))) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ~ (_GLF_IDENTITY(~ ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))), (~ ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)))) | (~ ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))))))), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0) : _GLF_FUZZED(75810))) + 0), max(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((_GLF_IDENTITY(true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(75810), (_GLF_FUZZED(75810)) >> 0), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(75810), (_GLF_FUZZED(75810)) >> 0)) << (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) >> 0))))) + 0), _GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0))), (_GLF_IDENTITY(_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(_GLF_IDENTITY(75810, max(75810, 75810))))) + 0), (1 | 1) * (_GLF_IDENTITY((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810)), ((true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(75810))) + 0)))) ^ (0 | 0))))))), int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1)), _GLF_IDENTITY(0, int(ivec3(0, 1, 0))), 1))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (0 >> _GLF_IDENTITY(int(6), int(6))))))) - 0))) != (0 & 50001), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY((0 & 50001), ~ (_GLF_IDENTITY(~ ((0 & 50001)), (~ ((0 & 50001))) | (~ ((0 & 50001)))))), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 & _GLF_IDENTITY(50001, int(ivec2(50001, 1))), clamp(0 & _GLF_IDENTITY(50001, int(ivec2(50001, 1))), _GLF_IDENTITY(0 & _GLF_IDENTITY(50001, int(ivec2(50001, 1))), 0 | (0 & _GLF_IDENTITY(50001, int(ivec2(50001, 1))))), 0 & _GLF_IDENTITY(50001, int(ivec2(50001, 1)))))), false || (_injected_loop_counter != (0 & 50001))), true, true, true))), bool(bool(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0) != (0 & 50001))))) && true)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 50001))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) + 0))))))) - 0))) != (0 & _GLF_IDENTITY(50001, 0 | (50001))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & _GLF_IDENTITY(50001, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 50001 : _GLF_FUZZED(-56650)))), _GLF_IDENTITY(false || (_injected_loop_counter != (0 & 50001)), ! (! (false || (_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), (_injected_loop_counter != (0 & 50001)) && true)))))), true, true, true))), bool(bool(_injected_loop_counter != (0 & 50001))))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), _GLF_IDENTITY((~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))), ((~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)))))) | ((~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))))) - 0))) != (_GLF_IDENTITY(0 & _GLF_IDENTITY(50001, 0 | (50001)), min(0 & _GLF_IDENTITY(50001, 0 | (50001)), _GLF_IDENTITY(0 & _GLF_IDENTITY(50001, 0 | (50001)), (false ? _GLF_FUZZED(28304) : 0 & _GLF_IDENTITY(50001, 0 | (50001))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))) - 0))) != (0 & _GLF_IDENTITY(50001, 0 | (50001))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))) - 0))) != (0 & _GLF_IDENTITY(50001, 0 | (50001))), true, false), true)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))) - 0))) != (0 & _GLF_IDENTITY(50001, 0 | (50001))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_injected_loop_counter, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0), (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))) - 0))) != (0 & _GLF_IDENTITY(50001, 0 | (50001))), true, false), true))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(0 & 50001, min(0 & 50001, _GLF_IDENTITY(0 & 50001, min(0 & 50001, 0 & 50001))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (_injected_loop_counter != (0 & 50001)), ! (! (false || (_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), (_injected_loop_counter != (0 & 50001)) && true)))))), true, true, true))), bool(_GLF_IDENTITY(bool(_injected_loop_counter != (0 & 50001)), bool(bool(_GLF_IDENTITY(bool(_injected_loop_counter != (0 & 50001)), bool(bvec4(bool(_injected_loop_counter != (0 & 50001)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))) && true)), false, false, true)), true && (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))) - 0)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0)), (~ (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1)) + 0))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0), _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) + 0))))))) - 0))) / 1)) != (0 & _GLF_IDENTITY(_GLF_IDENTITY(50001, 0 | (50001)), (_GLF_IDENTITY(50001, 0 | (50001))) | (_GLF_IDENTITY(50001, 0 | (50001))))), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), _GLF_IDENTITY(false || (_injected_loop_counter != (0 & 50001)), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), (_injected_loop_counter != (0 & 50001)) && true), ! (! (_GLF_IDENTITY(_injected_loop_counter != (0 & 50001), (_injected_loop_counter != (0 & 50001)) && true))))))))), true, true, true))), bool(bool(_injected_loop_counter != (0 & 50001))))) && true)), false, false, true))))), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 50001)))))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-56.98)), vec2(_GLF_FUZZED(891.070), (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))))[1]), bvec2(false, true))).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.x) + 0u)], _GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w), clamp(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w), _GLF_IDENTITY(uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z == _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w, (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w) | (GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w))), (uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w)) + 0u), uint(GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.z == GLF_merged4_0_1_16_1_1_13_2_1_6_3_1_6next_virtual_gidnum_workgroupread_1read_2.w))) + 1, 4, 64, _GLF_IDENTITY(4, (4) | 0));
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-8.2)))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, true && (true)), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))))) || false)))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
}
