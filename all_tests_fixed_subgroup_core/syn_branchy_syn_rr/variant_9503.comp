#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, true && (false)))))), bool(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2((false), true))))), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec2((false), true))))), false, false, true))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) || false)), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, (false) || false)), true)))))), true, true))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true, false, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, true, false, false))) && true))))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), bvec3(bvec4(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), false))))))))) || false)), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)), ! (! (true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)))))))), false, false))))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u)), ~ (~ (uint(uvec3(subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))))))))))), subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u), ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u))))) | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), min(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))) * 1u)))) | 0u);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint read_1 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), (bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED((-19.78 + -99.21))), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), (_GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), 0u ^ (max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u))))) >> 0u))) | (_GLF_FUZZED(workgroup_id))) : uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (read_1 == read_2), ! (_GLF_IDENTITY(! (false || (read_1 == read_2)), ! (! (! (false || (read_1 == read_2)))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED((-19.78 + -99.21))), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), (_GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), 0u ^ (max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u))))) >> 0u))) | (_GLF_FUZZED(workgroup_id))) : uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (read_1 == read_2), ! (_GLF_IDENTITY(! (false || (read_1 == read_2)), ! (! (! (false || (read_1 == read_2)))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) | ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED((-19.78 + -99.21))), bool(false))), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), (_GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), 0u ^ (max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u))))) >> 0u))) | (_GLF_FUZZED(workgroup_id))) : uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(false || (read_1 == read_2), ! (_GLF_IDENTITY(! (false || (read_1 == read_2)), ! (! (! (false || (read_1 == read_2)))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(4.6))) > injectionSwitch.y))))))) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), _GLF_IDENTITY((_GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), 0u ^ (max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u))))) >> 0u, ((_GLF_IDENTITY(max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u)), 0u ^ (max(_GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) >> 0u))))) >> 0u) ^ 0u)))) | (_GLF_FUZZED(workgroup_id))) : uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec4(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) + 1) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), ~ (~ (_GLF_FUZZED(workgroup_id)))), _GLF_FUZZED(workgroup_id), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u)), (_GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id)))) >> 0u)))) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) << 0u)) + 0u))) : uint(read_1 == read_2))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) << 0u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.8)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (read_2), min(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.9) : 0.0)) : _GLF_FUZZED(6.3))), injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (read_2), min(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (read_2), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))) ^ (read_2))))))) + 0u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), (vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))) * vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(1.4, 5.4)))))).y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2))))))))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))) | 0u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6556.1202), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 1.0, 1.0, 1.0, 1.0, 0.0))), _GLF_FUZZED(-3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))) : uint(_GLF_IDENTITY(read_1, 0u | (read_1)) == read_2)), _GLF_IDENTITY(~ (~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7.1))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), max(~ (_GLF_IDENTITY(~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7.1))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (_GLF_IDENTITY(~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7.1))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7.1))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))) | (~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-7.1))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))) / 1u)), ~ (~ ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch.x : _GLF_FUZZED(-7.1))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) && (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))))))) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)) | (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))))), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)) | (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), (false ? _GLF_FUZZED(workgroup_base) : _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2))))), (bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))))) && true)) && true))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), min(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) ? _GLF_FUZZED(workgroup_id) : uint(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), ~ (~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(29763))), vec2(_GLF_FUZZED(14.53), (injectionSwitch)[1]), bvec2(false, true)))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))))) * vec2(1.0, 1.0)).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), true))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, min(read_2, read_2))))))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0), (mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(0.0, 0.0, 1.0, 1.0))), 1.0, 0.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).x, injectionSwitch.x)) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-5.4), _GLF_FUZZED(-32.05)), bvec2(false, false))).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), (false ? _GLF_FUZZED((~ read_2)) : _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))), (uint(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))) - 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (60973u & 0u) | (read_1)) == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))) | 0u)))))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(read_1) : uint(read_1 == read_2))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u + (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u ^ (_GLF_FUZZED(workgroup_id))), _GLF_FUZZED(workgroup_id))))) : uint(read_1 == read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_IDENTITY(uvec3(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), min(uvec3(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), uvec3(_GLF_FUZZED(workgroup_id), 0u, (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) : uint(read_1 == _GLF_IDENTITY(read_2, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read_2))))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * exp(vec2(0.0, 0.0))))).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == _GLF_IDENTITY(read_2, (read_2) - (0u & 145129u))))))))))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(375.068)), bool(false))))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))))))) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), 0u), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), 0u), (false ? _GLF_FUZZED(uvec2(149892u, 122130u)) : uvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), 0u))), uvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), max((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), 0u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), ~ (~ (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) >> 0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(928.959)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), ~ (~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))) && true)))))) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), clamp(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(_GLF_IDENTITY(vec2(0.0, 0.0), mat2(1.0) * (vec2(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0)))))))).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))), uint(uint(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) * vec2(1.0, 1.0)) : _GLF_FUZZED(step(vec2(-9581.4211, -5.4), vec2(47.41, -68.40))))).y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0))), max(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0))), vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat2(1.0)))))))).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(-46.30, float(mat3x4(_GLF_IDENTITY(-46.30, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(2421.7148) : -46.30)), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, log(1.0), sin(0.0), 0.0, 0.0, 0.0)))) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2)))) >> 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(uint(uint(read_1 == read_2))), uint(_GLF_IDENTITY(uvec3(uint(uint(uint(read_1 == read_2))), 1u, 1u), max(uvec3(uint(uint(uint(read_1 == read_2))), 1u, 1u), uvec3(uint(uint(uint(read_1 == read_2))), 1u, 1u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), 0u, 1u, 0u))))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), uint(uvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2), 0u, 1u, 0u)))))) >> 0u))), ~ (~ (~ ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) : uint(read_1 == read_2))), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == read_2), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : uint(read_1 == read_2)))))))))))))) + 1)) ^ 0u) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(read_2) : _GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u))), uint(uvec4(_GLF_IDENTITY(next_virtual_gid, 0u + (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | 0u))), 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))], uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
}
