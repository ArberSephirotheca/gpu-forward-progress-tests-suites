#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(abs(vec2(872.542, -54.63))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-5068.6460 + -2.5)) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.9)), bool(false))) > injectionSwitch.y))))) && true))))))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, 0.0, 0.0), (vec4(injectionSwitch, 0.0, 0.0)) - tan(vec4(0.0, 0.0, 0.0, 0.0))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((false), true && ((false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 0.0, 1.0))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(vec4(34.77, -830.209, 1.2, -222.542).a), float(mat4(_GLF_FUZZED(vec4(34.77, -830.209, 1.2, -222.542).a), 0.0, 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0)))), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9876.3187)), float(injectionSwitch.y), bool(true)))), bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), float(mat4x3(min(injectionSwitch.y, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4313.9418)), bool(false))))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0)))) - vec2(0.0, 0.0)), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.8)))))))) - 0.0)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, true, false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), min(uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[_GLF_IDENTITY(1, (1) ^ 0)], gl_NumWorkGroups[2])))).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((_GLF_IDENTITY(false, ! (! (false))))) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(52930u) : _GLF_FUZZED(subgroup_size))) : gl_NumWorkGroups.x), ((_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_FUZZED(52930u) : _GLF_FUZZED(subgroup_size))) : _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(3u), uvec3(3u)))).x, (gl_NumWorkGroups.x) - 0u))) | 0u), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, subgroup_id, subgroup_id)), ~ (~ (_GLF_FUZZED(uaddCarry(subgroup_id, subgroup_id, subgroup_id))))) : (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) ^ 0u)), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, subgroup_id, subgroup_id)), ~ (~ (_GLF_FUZZED(uaddCarry(subgroup_id, subgroup_id, subgroup_id))))) : (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) ^ 0u)), (false ? _GLF_IDENTITY(_GLF_FUZZED(uaddCarry(subgroup_id, subgroup_id, subgroup_id)), ~ (~ (_GLF_FUZZED(uaddCarry(subgroup_id, subgroup_id, subgroup_id))))) : (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) : _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u)) ^ 0u))) / 1u)) << 0u))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.4)), float(injectionSwitch.y), bool(true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)))) || false)) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! _GLF_IDENTITY((false), false || ((false))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), max(float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), max(float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), max(float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), float(mat2(float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, log(1.0), determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)))))) > injectionSwitch.y)) && true)) && true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), clamp(_GLF_FUZZED(5151.9657), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 0.0 + (_GLF_FUZZED(5151.9657))), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 1.0 * (_GLF_FUZZED(5151.9657)))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), clamp(_GLF_FUZZED(5151.9657), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 0.0 + (_GLF_FUZZED(5151.9657))), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 1.0 * (_GLF_FUZZED(5151.9657))))))))))), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), clamp(_GLF_FUZZED(5151.9657), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 0.0 + (_GLF_FUZZED(5151.9657))), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 1.0 * (_GLF_FUZZED(5151.9657)))))))))))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), (false ? _GLF_FUZZED(-8.2) : _GLF_IDENTITY(_GLF_FUZZED(5151.9657), clamp(_GLF_FUZZED(5151.9657), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 0.0 + (_GLF_FUZZED(5151.9657))), _GLF_IDENTITY(_GLF_FUZZED(5151.9657), 1.0 * (_GLF_FUZZED(5151.9657))))))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(131584u, 147118u, 56687u))))))))) | (gl_WorkGroupID)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) * 1u), workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-48.71) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-48.71) : injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(2447.0395)))) / 1.0))).x > injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), (bool(false)) && true), (_GLF_IDENTITY(bool(false), (bool(false)) && true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (bool(false)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (bool(false)) && true))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (bool(false)) && true))))), false)))), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (bool(false)) && true))))), bool(bvec2(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (bool(false)) && true))))), false))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec4(bvec3(false, true, false), true)))))), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec4(bvec3(false, true, false), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (bool(bvec3(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, (true) && true), false), bvec3(bvec4(bvec3(false, true, false), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), ! (! (false))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) * uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))) - tan(0.0))))) + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))) | (1)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))) | (1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))) | (1)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))) | (1))))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))) | (1)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0)))) | (1)))))))))) % _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(num_workgroup)), ((true ? subgroup_size : _GLF_FUZZED(num_workgroup))) >> 0u)), (subgroup_size) << 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), (subgroup_size) << 0u), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))));
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)) + 0, (_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)) + 0, ((_GLF_IDENTITY(_GLF_IDENTITY((64), ~ (~ ((64)))), ((64)) + 0)) + 0) | 0)) ^ 0))), 64)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64)), 64), (clamp(_GLF_IDENTITY(64, min(_GLF_IDENTITY(64, 1 * _GLF_IDENTITY(_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)) + 0, (_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)) + 0, ((_GLF_IDENTITY((64), ((64)) + 0)) + 0) | 0)) ^ 0)), 1 * (_GLF_IDENTITY((64), _GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)) + 0, (_GLF_IDENTITY((_GLF_IDENTITY((64), ((64)) + 0)) + 0, ((_GLF_IDENTITY((64), ((64)) + 0)) + 0) | _GLF_IDENTITY(0, (0) * 1))) ^ 0))))), 64)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) | (64)), 64)) << 0)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))) || false), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))))) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, 0 + (0))), (_GLF_IDENTITY((0), (false ? _GLF_FUZZED((99873 + -89722)) : (0))) | (0)) ^ 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, max(64, 64)), 64, 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6562.3192)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))).y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) * abs(1.0))), bool(true)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))), max(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0))), mix(float(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - 0.0)))), float(_GLF_FUZZED(747.644)), bool(false)))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(max(vec2(1.0, 0.0), vec2(1.0, 0.0)), (_GLF_IDENTITY(max(vec2(1.0, 0.0), vec2(1.0, 0.0)), (max(vec2(1.0, 0.0), vec2(1.0, 0.0))) * mat2(1.0))) * vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0)), 1.0, 1.0, sin(0.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-453.561)), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1764.4508)), bool(false)))), bool(true))), 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0), (_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2.3)), float(1.0), bool(true))), 1.0)), 1.0, sin(0.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(0.7) : 1.0)), 0.0, 0.0, 0.0))), 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) - vec2(0.0, 0.0)), 1.0, 1.0, sin(0.0), 0.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 0.0, 0.0, 0.0, exp(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8179.4330))), float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), min(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8179.4330))), float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8179.4330))), float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), float(mat2x3(abs(0.0), 0.0, 1.0, 1.0, length(0.0), 1.0))), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(float(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), max(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), min(float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), max(_GLF_IDENTITY(float(float(1.0)), (_GLF_IDENTITY(float(float(1.0)), (false ? _GLF_FUZZED(-569.596) : float(float(1.0))))) + 0.0), _GLF_IDENTITY(float(float(1.0)), clamp(float(float(1.0)), float(float(1.0)), _GLF_IDENTITY(float(float(1.0)), float(mat4x2(float(float(1.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))))))))), 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, abs(1.0), 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, abs(1.0), 1.0, tan(0.0)), mat2(1.0) * (mat2(1.0, abs(1.0), 1.0, tan(0.0)))))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))), (true ? float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, abs(1.0), 1.0, tan(0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0)))), mat4(1.0) * (mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, abs(1.0), 1.0, tan(0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))) : _GLF_FUZZED(8.6)))), 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, abs(1.0), 1.0, tan(0.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, abs(1.0), 1.0, tan(0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))), (true ? float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, float(mat2(1.0, abs(1.0), 1.0, tan(0.0)))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0), mat4(1.0) * (mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, abs(1.0), 1.0, tan(0.0)), (true ? _GLF_IDENTITY(mat2(1.0, abs(1.0), 1.0, tan(0.0)), transpose(transpose(mat2(1.0, abs(1.0), 1.0, tan(0.0))))) : _GLF_FUZZED(mat2(-13.30, -515.261, 2445.2242, -178.298)))))), 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))) : _GLF_FUZZED(8.6)))), 0.0))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), (true ? _GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-20.23)), float(1.0), bool(true))), 1.0)), 1.0, 1.0)))), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))) : _GLF_FUZZED(560.464))), _GLF_IDENTITY(_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : length(normalize(vec3(1.0, 1.0, 1.0)))))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))))), _GLF_IDENTITY((_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(-3.3))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))))), float(mat4(_GLF_IDENTITY((_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(-3.3))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.3)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(265.137)))))), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))))), float(mat2((_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (true ? dot(vec2(1.0, 0.0), vec2(1.0, 0.0)) : _GLF_FUZZED(-3.3))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(0.0), (abs(0.0)) / 1.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))))), 1.0, 0.0, 0.0))), 0.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), cos(0.0), 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0))) + 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3448.8470) : _GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(-6562.3192, (false ? _GLF_FUZZED((bvec3(true, false, false) , 6275.0234)) : -6562.3192)), round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(float(false))), bool(false))), 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))), _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-0.7)), (float(_GLF_FUZZED(-0.7))) + 0.0), bool(false))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3619.2911) : _GLF_IDENTITY(0.0, (0.0) + 0.0)))) - 0.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.4)))))))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), (log(1.0)) / 1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), float(mat3(length(normalize(vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2076.9591)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0, sqrt(1.0))))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(_GLF_IDENTITY(vec2(1.0, 0.0), (false ? _GLF_FUZZED(vec2(-74.43, 78.16)) : vec2(1.0, 0.0))), vec2(1.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))))), 1.0 * (float(_GLF_FUZZED(_GLF_IDENTITY(-6562.3192, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), (dot(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(57.06)), float(0.0), bool(true)))), vec2(1.0, 0.0))) / 1.0)), 1.0, 1.0, 1.0, abs(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.9)))), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0))))), 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), mix(float(length(vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-9.8)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 1.0, round(_GLF_IDENTITY(length(normalize(vec3(1.0, 1.0, 1.0))), (true ? length(normalize(vec3(1.0, 1.0, 1.0))) : _GLF_FUZZED(roundEven(-79.85))))), 1.0, 1.0)))), max(_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * vec2(1.0, 1.0))) - log(vec2(1.0, 1.0))))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), _GLF_IDENTITY((_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) + 0.0)), max((_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) + 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) + 0.0)), min((_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) + 0.0)), (_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (_GLF_IDENTITY(log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0 + (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))) + 0.0)))))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))), 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))), _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))), _GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)))), (_GLF_IDENTITY(float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-11.30))), 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0)), 1.0 * (float(mat4x3(-6562.3192, round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(54.78)), bool(false))), 1.0, 1.0, abs(0.0), _GLF_IDENTITY(log(1.0), abs(1.0) * (_GLF_IDENTITY(log(1.0), (log(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0))))) - 0.0)))))))))))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), 0.0 + (clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 1.0, 1.0, 0.0, 1.0))), injectionSwitch.y)), injectionSwitch.y))))), bool(_GLF_IDENTITY(true, (true) && true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-8.4, -7110.4830, -593.493, 1.4).s)), bool(false)))) - 0.0) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1050.1948, -8.3)))).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(0.0), 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(0.0), 1.0, 1.0)))) / cos(vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (1) | (1))) - 0u)) >> (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), min(uint(0u), uint(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (0u), clamp(_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))), ~ (0u), ~ (0u))), ~ (~ (~ (0u))))))))), uint(0u)))) < subgroup_size)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false) || false, bool(bvec2((false) || false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true), bvec2(bvec2(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true)))), true)), bvec2(bvec3(bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)), true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), bvec2(bvec3(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true)), false))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, true), true)))))))), bool(bvec4(! (bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(exp(3.1)))), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y)), true))), true, true, false))))))), ((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, log(1.0), _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), max(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))))), 1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-90.15)), float(1.0), bool(true))), log(1.0), tan(0.0), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (injectionSwitch) * mat2(1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), true)))))), false || (bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(! (! (_GLF_IDENTITY(false, false || (false)))), true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), (1.0) + 0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x3(1.0, 1.0, exp(0.0), 1.0, 1.0, cos(0.0), 0.0, 1.0, abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, log(1.0), 0.0), (false ? _GLF_FUZZED(mat4x3(-69.64, -1994.0081, 18.01, _GLF_IDENTITY(-9185.9137, mix(float(_GLF_FUZZED(1423.7500)), float(_GLF_IDENTITY(-9185.9137, (-9185.9137) + 0.0)), bool(true))), -225.022, -74.81, 4686.6298, 19.50, 4406.7116, -6.7, 3.5, -874.542)) : mat4x3(1.0, 1.0, exp(0.0), 1.0, 1.0, cos(0.0), 0.0, 1.0, abs(1.0), 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0)))))))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)), (uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false))) | 0u) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), clamp(true ? 1 : _GLF_FUZZED(-73714), _GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), (_GLF_FUZZED(_GLF_IDENTITY(-73714, min(-73714, _GLF_IDENTITY(-73714, int(ivec4(-73714, 0, 0, 0))))))) * 1), clamp(_GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), (_GLF_FUZZED(_GLF_IDENTITY(-73714, min(-73714, _GLF_IDENTITY(-73714, int(ivec4(-73714, 0, 0, 0))))))) * 1), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), (_GLF_FUZZED(_GLF_IDENTITY(-73714, min(-73714, _GLF_IDENTITY(-73714, int(ivec4(-73714, 0, 0, 0))))))) * 1)) | 0), true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), (_GLF_FUZZED(_GLF_IDENTITY(-73714, min(-73714, _GLF_IDENTITY(-73714, int(ivec4(-73714, 0, 0, 0))))))) * 1), _GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), (_GLF_FUZZED(_GLF_IDENTITY(-73714, min(-73714, _GLF_IDENTITY(-73714, int(ivec4(-73714, 0, 0, 0))))))) * 1), (true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), (_GLF_FUZZED(_GLF_IDENTITY(-73714, min(-73714, _GLF_IDENTITY(-73714, int(ivec4(-73714, 0, 0, 0))))))) * 1)) >> 0))), _GLF_IDENTITY(true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(-73714), int(ivec3(_GLF_FUZZED(-73714), 0, 0))), ~ (_GLF_IDENTITY(~ (true ? 1 : _GLF_FUZZED(-73714)), (_GLF_IDENTITY(true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911), (true ? true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911) : _GLF_FUZZED(-46365)))))))))), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), clamp(true ? 1 : _GLF_FUZZED(-73714), true ? 1 : _GLF_FUZZED(-73714), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), ~ (_GLF_IDENTITY(~ (true ? 1 : _GLF_FUZZED(-73714)), (true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911))))))), 0 | (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), clamp(true ? 1 : _GLF_FUZZED(-73714), true ? 1 : _GLF_FUZZED(-73714), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(-73714)), ((true ? 1 : _GLF_FUZZED(-73714))) / 1), (_GLF_IDENTITY(true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911), clamp(true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911), true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911), true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911)))))))))))), 0, (1 & 1))), (int(ivec3((_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), clamp(true ? 1 : _GLF_FUZZED(-73714), _GLF_IDENTITY(true, false || (true)) ? 1 : _GLF_FUZZED(-73714), _GLF_IDENTITY(true ? 1 : _GLF_FUZZED(-73714), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? 1 : _GLF_FUZZED(-73714)), (true ? ~ (true ? 1 : _GLF_FUZZED(-73714)) : _GLF_FUZZED(-41911)))))))), 0, (1 & 1)))) / 1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-9350))), _GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), _GLF_IDENTITY(max(_GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), 0 + ((false ? _GLF_FUZZED(15203) : 1))), _GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), max((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(15203) : 1), (false ? _GLF_IDENTITY(_GLF_FUZZED(15203), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(15203), clamp(_GLF_FUZZED(15203), _GLF_IDENTITY(_GLF_FUZZED(15203), min(_GLF_FUZZED(15203), _GLF_FUZZED(_GLF_IDENTITY(15203, ~ (~ (15203)))))), _GLF_FUZZED(15203))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(15203), clamp(_GLF_FUZZED(15203), _GLF_IDENTITY(_GLF_FUZZED(15203), min(_GLF_FUZZED(15203), _GLF_FUZZED(15203))), _GLF_FUZZED(15203))), clamp(_GLF_IDENTITY(_GLF_FUZZED(15203), clamp(_GLF_FUZZED(15203), _GLF_IDENTITY(_GLF_FUZZED(15203), min(_GLF_FUZZED(15203), _GLF_FUZZED(15203))), _GLF_FUZZED(15203))), _GLF_IDENTITY(_GLF_FUZZED(15203), clamp(_GLF_FUZZED(15203), _GLF_IDENTITY(_GLF_FUZZED(15203), min(_GLF_FUZZED(15203), _GLF_FUZZED(15203))), _GLF_FUZZED(15203))), _GLF_IDENTITY(_GLF_FUZZED(15203), clamp(_GLF_FUZZED(15203), _GLF_IDENTITY(_GLF_FUZZED(15203), min(_GLF_FUZZED(15203), _GLF_FUZZED(15203))), _GLF_FUZZED(15203)))))) | 0), _GLF_FUZZED(15203), _GLF_FUZZED(15203))) : 1)))), min(max(_GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), clamp((false ? _GLF_FUZZED(15203) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), ((false ? _GLF_FUZZED(15203) : 1)) | ((false ? _GLF_FUZZED(15203) : 1))), (false ? _GLF_FUZZED(15203) : 1))), _GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), _GLF_IDENTITY(max((false ? _GLF_FUZZED(15203) : 1), (false ? _GLF_FUZZED(15203) : 1)), max(max((false ? _GLF_FUZZED(15203) : 1), (false ? _GLF_FUZZED(15203) : 1)), max((false ? _GLF_FUZZED(15203) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), ((false ? _GLF_FUZZED(15203) : 1)) ^ 0)))))), _GLF_IDENTITY(max((false ? _GLF_FUZZED(15203) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(15203) : 1), max((false ? _GLF_FUZZED(15203) : 1), (false ? _GLF_FUZZED(15203) : 1)))), (true ? max((false ? _GLF_FUZZED(15203) : 1), _GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(15203) : 1, ~ (~ (false ? _GLF_FUZZED(15203) : 1)))), max((false ? _GLF_FUZZED(15203) : 1), (false ? _GLF_FUZZED(15203) : 1)))) : _GLF_FUZZED(52875)))))))) << _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, int(ivec4(0, 1, 0, 1))), 0))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0))))) + 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) + 0.0) > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), determinant(mat4(1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), mix(float(_GLF_FUZZED(-2.9)), float(float(0.0)), bool(true))))))), 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0)))), (float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(abs(0.0), clamp(abs(0.0), _GLF_IDENTITY(abs(0.0), min(_GLF_IDENTITY(abs(0.0), (abs(0.0)) * 1.0), _GLF_IDENTITY(abs(0.0), 0.0 + (abs(0.0))))), _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(689.402) : abs(0.0))))), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 0.0, 1.0, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, abs(0.0), 0.0, sqrt(1.0))), sin(0.0), 1.0, 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 0.0))))) + 0.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(79.38), _GLF_FUZZED(8297.6414)), (true ? vec2(_GLF_FUZZED(79.38), _GLF_FUZZED(8297.6414)) : _GLF_FUZZED(vec2(-21.57, 1020.6215)))), vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, sin(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 0.0, 1.0))))[0], (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), false || (_GLF_DEAD(false)))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))), injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? _GLF_IDENTITY((injectionSwitch)[1], (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.6)), float((injectionSwitch)[1]), bool(true)), (true ? _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.6)), float((injectionSwitch)[1]), bool(true)), mix(float(_GLF_FUZZED(-4.7)), float(mix(float(_GLF_FUZZED(8.6)), float((injectionSwitch)[1]), bool(true))), bool(true))) : _GLF_FUZZED(-9343.3945))))) - 0.0) : _GLF_FUZZED(-7731.4592)))), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[1]), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(13552)))], _GLF_FUZZED(-340.570)), vec2(_GLF_FUZZED(-2.2), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cos(injectionSwitch)))))[1]), bvec2(false, true))))[0], _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(420.841), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-683.092)), bvec2(true, false)), max(mix(vec2(_GLF_FUZZED(420.841), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-683.092)), bvec2(true, false)), mix(vec2(_GLF_FUZZED(420.841), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-683.092)), bvec2(true, false)))))))[1]), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(3.2, -0.3)), (_GLF_FUZZED(vec2(3.2, _GLF_IDENTITY(-0.3, (-0.3) * 1.0)))) * mat2(1.0)) : vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED((-888.598 * 720.949))), vec2(_GLF_FUZZED(2809.8856), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[0], min((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-888.598 * 720.949))), vec2(_GLF_FUZZED(2809.8856), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-888.598 * 720.949))), vec2(_GLF_FUZZED(2809.8856), (injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-48639) : _GLF_IDENTITY(1, (1) ^ 0)))]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))[0])), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) + vec2(0.0, 0.0))[_GLF_IDENTITY(1, 0 ^ (1))]))))), vec2(_GLF_IDENTITY(_GLF_FUZZED(-2.0), 1.0 * (_GLF_FUZZED(-2.0))), _GLF_FUZZED(-645.245)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)), (true ? vec2(mat4x2(injectionSwitch, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0)) : _GLF_FUZZED(injectionSwitch)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y)))).y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec4(bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(535.160)), bool(false)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
