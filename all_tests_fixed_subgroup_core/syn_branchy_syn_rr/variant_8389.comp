#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid;
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base, _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz = GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_base) << uvec3(0u, 0u, 0u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)) * mat3(1.0), transpose(transpose((mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)) * mat3(1.0))))))).x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0), _GLF_IDENTITY((mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)) * mat3(1.0), transpose(transpose((mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 1.0, 0.0)) * mat3(1.0))))))).x > injectionSwitch.y)))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), ! (! ((injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && true), false))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)))).y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0), vec2(0.0, 0.0) + (vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0)))))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.w * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, true))), true)))))))
  barrier();
 uint virtual_gid = GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.z + subgroup_id * subgroup_size + subgroup_local_id;
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(_GLF_FUZZED(-132.225)), bool(false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), false), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), false)))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), false), true))))))))))) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      barrier();
     barrier();
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, (true ? GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid : _GLF_FUZZED((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid)))), clamp(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))) / uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u, 1u), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, (true ? GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid : _GLF_FUZZED((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid)))), clamp(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))) / uvec4(_GLF_IDENTITY(1u, ~ (~ (1u))), 1u, 1u, 1u)))).xyz.z + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.w = _GLF_IDENTITY(next_virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : next_virtual_gid));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true))), false || (bool(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true)))))), (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) || false) || false, ((false) || false) && true))), false || (bool(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true))))))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (! ((false) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true))), false || (bool(bool(_GLF_IDENTITY((false) || false, ((false) || false) && true)))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.w], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, exp(0.0), sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)))))).y), max(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, exp(0.0), sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0 * (_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, 0.0)), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(log(1.0), 1.0, 0.0)))))), 1.0, 0.0, 0.0, 1.0, 1.0)))))).y), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, exp(0.0), sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(6.5)), bool(false))))))))).y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (true ? _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(mix(vec2(-2.7, 6945.8396), vec2(-2.0, 3.7), vec2(-57.49, 8.5)))))))), 0.0, exp(0.0), sqrt(1.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6327.1834) : 1.0))) - log(1.0)), 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, log(1.0), 0.0, 0.0, 1.0, 1.0))))), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)))))).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), 0.0, exp(0.0), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0, _GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), float(mat3x2(_GLF_IDENTITY(determinant(mat2(1.0, 1.0, 0.0, 1.0)), clamp(determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)))))).y)))))))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz) | (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, max(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, clamp(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz)), GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz)))))).y, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, min(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, (true ? GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid : _GLF_FUZZED(uvec4(101127u, 117435u, 75534u, 73596u)))), GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid)).xyz) | (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, max(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid), (~ (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid)) / uvec4(1u, 1u, 1u, 1u)))).xyz, GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz)))))).y) << 0u)], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, _GLF_IDENTITY(64, (64) + (0 >> _GLF_IDENTITY(int(3), int(3)))), 64)), min(64, 64)), _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(0, (0) >> 0), (1 ^ 0), _GLF_IDENTITY(1, min(1, 1)), 1)), max(int(ivec4(_GLF_IDENTITY(0, (0) >> 0), (1 ^ 0), 1, 1)), int(ivec4(_GLF_IDENTITY(0, (0) >> 0), (1 ^ 0), 1, 1))))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.y = read_1;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(bool(injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), clamp(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size, (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size) << uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u)))).y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y, 0u | _GLF_IDENTITY((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y), clamp(_GLF_IDENTITY((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y), max((_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid) | (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)))) << _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))).xyz.y), (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y))), _GLF_IDENTITY((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y), uint(uvec3((GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y), 0u, 0u))), (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.y))))], 4, 64, 0);
 GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z = _GLF_IDENTITY(read_2, min(read_2, read_2));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))) && true))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true, bool(bvec2((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))) && true, false)))), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), ((! (_GLF_IDENTITY(false, (false) && true)))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), false, true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, 0.0 + (0.0)))), 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))) && true)), bool(bvec4((_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))))))) && true)), false, true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))) / _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))), true, false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bool(bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6223.8514)), bool(false)))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, abs(0.0), 0.0, 1.0, abs(0.0)), (true ? mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6223.8514)), bool(false)))) + _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)))), 0.0, abs(0.0), 0.0, 1.0, abs(0.0)) : _GLF_FUZZED(mat3x2(813.601, -709.233, -7151.2281, -6.4, -811.738, 22.94))))))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))), 0.0)))) > injectionSwitch.y))))), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false)))))), true))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.5) : 0.0)))))) > injectionSwitch.y))))), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.8)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))) > injectionSwitch.y))))), true, false))), true))))), true)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)), bool(bool(((false))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.1) : injectionSwitch.x)), (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), true), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) && true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), float(_GLF_FUZZED((- 7.5))), bool(false)))), float(_GLF_FUZZED(2599.8129)), bool(false)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), min(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))) > injectionSwitch.y))))), true, false))), true))))), true)))))), false, true))))), false))))))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1532.0914), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.w], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid) >> uvec4(0u, 0u, 0u, 0u)).xyz) | (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz)).x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, bool(bvec4(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, true, true, true))), (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false)) && true)) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x, (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x, (false ? _GLF_FUZZED(read_1) : GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, bool(bvec4(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, true, true, true))), (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false), ! (! (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z, (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) || false))))) || false)) && true)) && true)) || false))))))))))) + 1, uint(uvec2(_GLF_IDENTITY(uint(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) + 1, max(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid[0], GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid[1], GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid[2], GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid[3])), uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), clamp((_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), min((_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))), (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))))))))).xyz, max(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))).xyz, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))), clamp(_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))), _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))), _GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid, uvec4(1u, 1u, 1u, 1u) * (GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid))))))))).xyz)).x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) + 1, uint(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size.z) + 1)), 0u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.w], uint(GLF_merged2_0_3_62_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_14read_1virtual_gidworkgroup_basenext_virtual_gid.xyz.x == _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size, ~ (~ (GLF_merged4_0_1_13_1_1_6_2_1_6_3_1_14num_workgroupread_1read_2workgroup_size))).z) + 1, 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))) && (false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), bool(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(48.34))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)))))))) && true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
}
