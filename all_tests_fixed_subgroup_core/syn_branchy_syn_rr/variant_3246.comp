#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-330.698)), vec2(_GLF_FUZZED(0.8), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0))[1]), bvec2(false, true))))).x, mix(float(_GLF_FUZZED(-9.4)), float(_GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-330.698)), vec2(_GLF_FUZZED(0.8), _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))) + vec2(0.0, 0.0))[1]), bvec2(false, true))))).x), bool(true))) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bvec4(false, true, false, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)) && true))) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / _GLF_IDENTITY(1u, uint(uvec3(1u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) << 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (uint(7u)) << 0u), (_GLF_IDENTITY(uint(7u), (uint(7u)) << 0u)) + 0u), _GLF_IDENTITY(uint(7u), (uint(7u)) << 0u))))), 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) * mat2(1.0)))).x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid))))) | 0u))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832))))) | 0u) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)), (false ? _GLF_FUZZED(94566u) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size)))))), ((true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size))))))) - 0u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid))))))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832))))) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size))))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size))))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832))))), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size))))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832)))))) / 1u)) + _GLF_IDENTITY(0u, (0u) * 1u)) | 0u)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid))))))))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832)))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))) ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, _GLF_IDENTITY(virtual_gid, (true ? virtual_gid : _GLF_FUZZED(workgroup_size))))))), 0u | (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(atomicMin(subgroup_size, virtual_gid)))))))) + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, int(int(1))), 1)) : _GLF_FUZZED(-93832))))) | 0u))) >> 0u))) % subgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(3545.4802)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bool(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), clamp((true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(injectionSwitch))))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 1u * (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(1u, max(1u, 1u)), 0u))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), min(64, 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 0), clamp(ivec3(1, 0, 0), ivec3(1, 0, 0), ivec3(1, 0, 0))))) < _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)))
  {
   int i = _GLF_IDENTITY(0, max(0, 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0), mat3x2(mat4(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).x, 1.0, 1.0, 1.0, 0.0, 1.0)))))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-437.691 - 934.291))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(1.0, float(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))), (true ? injectionSwitch.x : _GLF_FUZZED(3891.7139))))), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))).x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, max(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))))), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) * vec2(1.0, 1.0)).x, float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, sqrt(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0))), 1.0, 1.0, exp(0.0), 0.0))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-3311.9144)), bool(false)), (true ? mix(float(_GLF_IDENTITY(0.0, 0.0 + (0.0))), float(_GLF_FUZZED(-3311.9144)), bool(false)) : _GLF_FUZZED(-3.5))))), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) + vec2(0.0, 0.0)), vec2(1.0, 0.0))), determinant(mat2(_GLF_IDENTITY(0.0, (0.0) - tan(0.0)), 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))), vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), sqrt(1.0))), float(_GLF_IDENTITY(mat4x2(float(mat2x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.5))), 0.0, log(1.0), sqrt(1.0))), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0)), transpose(transpose(mat4x2(_GLF_IDENTITY(float(mat2x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), sqrt(1.0))), log(1.0) + (_GLF_IDENTITY(float(mat2x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), sqrt(1.0))), mix(float(_GLF_FUZZED(-371.506)), float(float(mat2x3(0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, log(1.0), sqrt(1.0)))), bool(true))))), 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, abs(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) + 0.0), 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), injectionSwitch.x)) ^ _GLF_IDENTITY((next_virtual_gid), max(_GLF_IDENTITY((next_virtual_gid), max((next_virtual_gid), _GLF_IDENTITY((next_virtual_gid), uint(uvec3((next_virtual_gid), (0u ^ 0u), 1u))))), (next_virtual_gid))), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.0)), bool(false))), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))))), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), float(vec3(determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, log(1.0)))), cos(0.0), 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0)) : _GLF_FUZZED(-86.71)))), injectionSwitch.x)) ^ (next_virtual_gid)) | (_GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), min(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0, abs(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 1.0, 0.0, 1.0))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), mix(float(_GLF_FUZZED(-3.4)), float(dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), bool(true))), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), max(clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)))), 0.0))), determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, sqrt(1.0), abs(1.0), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.9)), float(1.0), bool(true)))) + 0.0), 1.0)), (normalize(vec3(1.0, 1.0, 1.0))) * mat3(1.0)))), 0.0, _GLF_IDENTITY(length(0.0), float(float(_GLF_IDENTITY(length(0.0), (true ? length(0.0) : _GLF_FUZZED(6.4)))))), tan(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 0.0, sqrt(1.0), 1.0, 0.0, 1.0, 0.0)))), 0.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(mat4x3(mat4(mat4x3(0.0, sqrt(1.0), abs(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(0.0), tan(0.0), 0.0, 0.0, 1.0, 0.0))), (true ? mat4x3(mat4(mat4x3(0.0, sqrt(1.0), abs(1.0), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, length(0.0), tan(0.0), 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(mat4x3(290.826, _GLF_IDENTITY(95.06, max(_GLF_IDENTITY(95.06, min(95.06, 95.06)), 95.06)), 9327.8530, 9.7, 2.5, -7.2, 89.82, -3.3, 2.0, 28.87, _GLF_IDENTITY(-475.266, min(-475.266, _GLF_IDENTITY(-475.266, min(-475.266, _GLF_IDENTITY(-475.266, mix(float(-475.266), float(_GLF_FUZZED(-430.649)), bool(false))))))), 1.8))))))), 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), injectionSwitch.x)), ~ (_GLF_IDENTITY(~ (uint(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(1.0, 0.0))), max(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(1.0, 0.0))))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) - 0.0))))), dot(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), max(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0 * (_GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))))))), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + abs(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(0.9) : _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + abs(vec2(0.0, 0.0)))), min(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + abs(vec2(0.0, 0.0)))), dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) + abs(vec2(0.0, 0.0))))))))), 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)))), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-12.43)))), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(vec2(0.0, 0.0), clamp(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0), vec2(0.0, 0.0)))) * mat2(1.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), (float(mat4x3(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))) + 0.0))))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, max((1.0) * 1.0, _GLF_IDENTITY((1.0) * 1.0, float(mat4x2((1.0) * 1.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))), 0.0))), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-782.187))), abs(0.0), 1.0, 0.0))))))), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? 0.3 : -88.29))), bool(false))), 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(611.186) : _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((false ? _GLF_IDENTITY(0.3, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-87.61) : 0.3)) : -88.29))), bool(false))), 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71))))) / 1.0)) + 0.0), 0.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))), cos(0.0), 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, abs(1.0))), 1.0, sqrt(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.x))), min(~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-88.99 * -1.3))), float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-3418.6004) : _GLF_IDENTITY(0.0, min(0.0, 0.0))))), bool(true)))))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(log(1.0), clamp(log(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(0.0), 1.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), sin(0.0), exp(0.0), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0)))), _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-874.602))), log(1.0)))), 0.0 + (0.0)), 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(24.38) : 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-4.0)), float(_GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-5.2)), float(abs(1.0)), bool(true)))), bool(true))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), min(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), (true ? dot(vec2(1.0, 1.0), vec2(0.0, 0.0)) : _GLF_FUZZED(step(9262.8805, _GLF_IDENTITY(-19.06, clamp(-19.06, -19.06, -19.06))))))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), injectionSwitch.x))), ~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (1.0) * cos(0.0)), _GLF_IDENTITY(0.0, abs(0.0) + (0.0))), vec2(1.0, 0.0))), _GLF_IDENTITY(determinant(mat2(0.0, 0.0, 0.0, 0.0)), (determinant(mat2(0.0, 0.0, 0.0, 0.0))) / 1.0), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8.1)), _GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7.8))))), _GLF_IDENTITY((true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), clamp(vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), clamp(vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0)))) : _GLF_FUZZED(vec2(-9.2, -22.06)))), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)), max(_GLF_IDENTITY((true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), clamp(vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) * mat2(1.0)))), vec2(mat2(vec2(vec2(vec2(0.0, 0.0))), 1.0, 1.0))) : _GLF_FUZZED(max((vec2(-21.83, -3128.5751) + vec2(-539.744, -5.0)), 5.0)))))), 1.0, 1.0, 0.0, 0.0)))), (vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6303.0254)), float(0.0), bool(true))))) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)), (false ? _GLF_FUZZED(-5.8) : (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), clamp(vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))))), 1.0, 1.0, 0.0, 0.0)))), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(vec2(vec2(_GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 1.0, 0.0, 1.0, 0.0, abs(1.0), 1.0))), 0.0))), vec2(mat3x2(_GLF_IDENTITY(vec2(vec2(vec2(0.0, 0.0))), clamp(vec2(vec2(vec2(0.0, 0.0))), vec2(vec2(vec2(0.0, 0.0))), vec2(_GLF_IDENTITY(vec2(vec2(0.0, 0.0)), max(_GLF_IDENTITY(vec2(vec2(0.0, 0.0)), (true ? vec2(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), vec2(vec2(0.0, 0.0))))))), 1.0, 1.0, 0.0, 0.0)))), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71))))), min(_GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 1.0, 0.0)))))), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4609.3265) : 0.0))))), determinant(mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(73.58)), float(0.0), bool(true))), 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71))), _GLF_IDENTITY(float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-268.296))))), 0.0)))) + 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), (true ? float(mat3x4(0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) / 1.0, float(mat2x4(_GLF_IDENTITY((1.0) / 1.0, ((1.0) / 1.0) + length(0.0)), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), float(mat3x4(dot(vec3(1.0, tan(0.0), 0.0), vec3(1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), 1.0)))), 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), abs(1.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) : _GLF_FUZZED(-86.71)))))), injectionSwitch.x))))))) ^ (next_virtual_gid))))], uint(_GLF_IDENTITY(read_1 == read_2, ! _GLF_IDENTITY((! (read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec4(78619u, 124138u, 135353u, 151584u).r) : read_2)))), bool(bvec4(_GLF_IDENTITY((! (read_1 == read_2)), ! (_GLF_IDENTITY(! ((! (read_1 == read_2))), bool(bvec4(! ((! (read_1 == read_2))), false, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))) + 1, _GLF_IDENTITY(4, (4) | 0), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), true))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), false, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true)), true))), false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
  }
}
