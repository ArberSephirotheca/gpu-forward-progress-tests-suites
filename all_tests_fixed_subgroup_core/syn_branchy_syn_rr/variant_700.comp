#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(true && ((_GLF_DEAD(false))), (true && ((_GLF_DEAD(false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), ((! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), ((! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))), true)), false || (_GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), ((! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))), true)), (bool(bvec2((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), false || (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))), false || ((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))), true)), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (_GLF_DEAD(false)))))), ((! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), ((! (! (_GLF_DEAD(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true))))))))))), true))) || false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), true))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), true))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), true))))), ! (! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (! (bool((_GLF_DEAD(false))))))))), false || ((! (_GLF_DEAD(false))))))))), true)), true && (bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))), true))))))))))), true))), _GLF_IDENTITY(true, true && (true)), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x = subgroup_local_id, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x = subgroup_local_id) - 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y), false), true)))), true && (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))))), false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), max(float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), float(_GLF_FUZZED(97.97)), bool(false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y))), _GLF_IDENTITY((! (! ((injectionSwitch.x > injectionSwitch.y)))) && true, false || ((! (! ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(0.0 + (injectionSwitch[0]), max(0.0 + (injectionSwitch[0]), 0.0 + (injectionSwitch[0])))), injectionSwitch[1])).x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0)) >> 0)], _GLF_IDENTITY(0.0 + (injectionSwitch[0]), max(0.0 + (injectionSwitch[0]), 0.0 + (injectionSwitch[0])))), injectionSwitch[1])).x, injectionSwitch.x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sin(-191.237)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), vec2(0.0, 0.0) + ((injectionSwitch) / vec2(1.0, 1.0)))).y, (injectionSwitch.y) / 1.0))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y) / 1.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + log(vec2(1.0, 1.0))).y) / 1.0)) - 0.0))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false)))) && _GLF_IDENTITY(true, bool(bool(true))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false))))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec4((false) || false, _GLF_IDENTITY(true, (true) && true), false, false)), false || (bool(bvec4((false) || false, _GLF_IDENTITY(true, (true) && true), false, false))))))) && true)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(954.369)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(injectionSwitch, injectionSwitch)))).y, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-3662.4708)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), vec2(_GLF_FUZZED(2.2), _GLF_FUZZED(954.369)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y) / round(length(normalize(abs(vec2(1.0, 1.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true && (_GLF_DEAD(false))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (subgroup_id)) * subgroup_size, _GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (_GLF_IDENTITY((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), max((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * _GLF_IDENTITY(subgroup_size, 1u * (subgroup_size)))))) >> 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED(subgroup_size))), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * subgroup_size) ^ 0u))) + GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(workgroup_base)) : _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) ^ uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), min(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (1u | 0u) * (subgroup_id * subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) + (0u & 158264u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), max(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))) / 1u))), ~ (~ (uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), subgroup_size, subgroup_size)), ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY((~ (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (subgroup_size)))), ~ (~ (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), ((~ (subgroup_id * subgroup_size))) / 1u))))) ^ 0u)))))))), 0u))) + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) ^ uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x, _GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, _GLF_IDENTITY(uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base), (true ? uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) : _GLF_FUZZED(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)))), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) | (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)))).x : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).x : _GLF_FUZZED(workgroup_base)), max((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base))))) / 1u))), (uint(uint(_GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).x : _GLF_FUZZED(workgroup_base)), max((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base))))) / 1u)))) | _GLF_IDENTITY((uint(uint(_GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).x : _GLF_FUZZED(workgroup_base)), max((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base))))) / 1u)))), max((uint(uint(_GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).x : _GLF_FUZZED(workgroup_base)), max((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base))))) / 1u)))), (uint(uint(_GLF_IDENTITY((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).x : _GLF_FUZZED(workgroup_base)), max((true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base)), (true ? GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x : _GLF_FUZZED(workgroup_base))))) / 1u))))))))) + 0u)), GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.z + subgroup_id * subgroup_size + _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) << uvec3(0u, 0u, 0u))) ^ uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))).x))) | (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, min(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)).z + subgroup_id * subgroup_size + GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x))));
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y = virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(9.6, (9.6) + 0.0), 36.43), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(9.6, (9.6) + 0.0), 36.43))))) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(944.158) : injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(944.158) : injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 0.0)))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false))))))), true, false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, round(length(normalize(1.0)))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED((-6.5))), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-5.1))), (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3235.7438)), bool(false)))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base, (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) | (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base)), (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) / uvec3(1u, 1u, 1u))).z + subgroup_id * subgroup_size + ((GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)), false || (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)), false || (bool(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) || false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))), false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), ! (! (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y))))))), false, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)), false, true))))) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), max(vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0))), vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(0.0)))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))), mix(vec2(_GLF_FUZZED(-109.031), _GLF_FUZZED(49.04)), vec2(_GLF_IDENTITY(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))), vec2(mat4x2(((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))[0], ((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0)))), (_GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true))))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bvec4(bool(bvec3(false, true, false)), true, false, false)))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(64.39), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(((injectionSwitch)[1]) - 0.0, (((injectionSwitch)[1]) - 0.0) * exp(0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(vec3(-8.6, 2.7, 7710.7378), (_GLF_IDENTITY(vec3(-8.6, 2.7, 7710.7378), clamp(vec3(-8.6, 2.7, 7710.7378), vec3(-8.6, 2.7, 7710.7378), vec3(-8.6, 2.7, 7710.7378)))) / vec3(1.0, 1.0, 1.0)).t)), bvec2(true, false))).y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(64.39), _GLF_IDENTITY((injectionSwitch)[1], ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-8.6, 2.7, 7710.7378).t)), bvec2(true, false))).y))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false)))))))) && true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) / 1.0, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y) / 1.0 : _GLF_FUZZED(radians(-8.3))))), bool(true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), mat2(1.0) * (injectionSwitch)).y))) || false)))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0))), log(1.0), length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.7)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(3325.4592)))), bool(true))), 0.0)), 0.0))).y)), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), mat2(1.0) * (injectionSwitch)).y))) || false))))))) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(30096))), 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y], _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), int(ivec2(~ (~ _GLF_IDENTITY((4), ((4)) - 0)), 0)))), (0 << _GLF_IDENTITY(int(7), int(7)))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(308) : 4), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED(308) : 4)) - (0 >> _GLF_IDENTITY(int(8), int(8))))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y))) + 0u)], (buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, 0u ^ (GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y)), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, clamp(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y, GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.y))) + 0u)]) / 1u), 4, 64, _GLF_IDENTITY(0, (0) >> 0));
 if(GLF_merged3_0_1_17_1_1_11_2_1_14subgroup_local_idvirtual_gidworkgroup_base.x + 1 < _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) | 0u))))
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (0) | _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(max(0, 0), (max(0, 0)) | 0), (true ? _GLF_IDENTITY(_GLF_IDENTITY(max(0, 0), (max(0, 0)) | 0), (_GLF_IDENTITY(max(0, 0), (max(0, 0)) | 0)) | (_GLF_IDENTITY(max(0, 0), (max(0, 0)) | 0))) : _GLF_FUZZED(90191)))), (0) << 0));
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (read_1) - 0u) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))), false, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2)))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)) || false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}
