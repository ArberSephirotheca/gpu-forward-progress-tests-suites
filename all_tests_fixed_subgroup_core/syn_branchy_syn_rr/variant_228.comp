#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(uint(50917)) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u)) * 1u)), uint(1u)))), subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (108413u & 0u)), uint(1u)))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))) * subgroup_size)), ~ (_GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), min(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), _GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size)))))))))) << (0u ^ 0u)), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) - 0u)) : ~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / ((_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, (1u) | (1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))), clamp(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) ^ 0u)))))), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 1u, 1u))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))))) | (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uint((subgroup_id * subgroup_size)))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(19100u)))), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), uint(1u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), uint(1u))) + 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))))))), min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(uint(50917)) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u)) * 1u)), uint(1u)))), subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (108413u & 0u)), uint(1u)))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))) * subgroup_size)), ~ (_GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), min(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), _GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size)))))))))) << (0u ^ 0u)), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) - 0u)) : ~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / ((_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, (1u) | (1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))), clamp(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) ^ 0u)))))), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 1u, 1u))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))))) | (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uint((subgroup_id * subgroup_size)))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(19100u)))), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), uint(1u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), uint(1u))) + 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(uint(50917)) : subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), (_GLF_IDENTITY(1u, (1u) | (0u >> _GLF_IDENTITY(uint(4u), uint(4u))))) - 0u)) * 1u)), uint(1u)))), subgroup_id * subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) >> (108413u & 0u)), uint(1u)))), subgroup_id * subgroup_size)), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))), ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u) >> _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_size))) * subgroup_size)), ~ (_GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), min(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), _GLF_IDENTITY(~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : ~ (~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size)))))))))) << (0u ^ 0u)), (_GLF_IDENTITY(~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, 0u + (subgroup_id * subgroup_size))) ^ 0u), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(1u), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size)), (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base)), ((_GLF_FUZZED(workgroup_base)) | (_GLF_FUZZED(workgroup_base))) - 0u)) : ~ (clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) / ((_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, (1u) | (1u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), ~ (~ (_GLF_IDENTITY(uint(1u), uint(1u))))), clamp(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) ^ 0u)))))), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), uint(uvec3(uint(1u), 1u, 1u))))))))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))))) | (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u), _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))) - 0u), _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) | (_GLF_IDENTITY((subgroup_id * subgroup_size), uint(uint((subgroup_id * subgroup_size)))))) / ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1u : _GLF_FUZZED(19100u)))), uint(1u)), clamp(1u << _GLF_IDENTITY(uint(1u), uint(1u)), 1u << _GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), uint(1u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), 0u | (uint(1u))), uint(1u))) + 0u)))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), subgroup_id * subgroup_size))))))))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(13069) : _GLF_IDENTITY(1, int(ivec3(1, 1, 1)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) * ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-3313))))) ^ (0), int(_GLF_IDENTITY(ivec3((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-3313))))) ^ (0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0), ivec3(0, 0, 0) ^ (ivec3((0 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(-3313))))) ^ (0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)))))), 0 | (0)));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))) < subgroup_size)
  {
   int i = _GLF_IDENTITY(0, min(0, 0));
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(next_virtual_gid), min(uint(next_virtual_gid), uint(next_virtual_gid))), ~ (~ (uint(_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))))))))], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (4)))));
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (bool(read_1 == read_2)))), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1, ~ (~ (read_1))) == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), bool(bool(bool(read_1 == read_2)))), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false || (bool(read_1 == read_2)), ! (_GLF_IDENTITY(! (false || (bool(read_1 == read_2))), ! (! (! (false || (bool(read_1 == read_2))))))))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) || false)) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, max(read_2, read_2)))), (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false, bool(bvec2(false, false))) || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))))), false)))) || false), false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2), (bool(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2)) || false), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false, (false) && true) || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (injectionSwitch.x)) > injectionSwitch.y))))))) && true))))) | (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || _GLF_IDENTITY((bool(read_1 == read_2)), ((bool(read_1 == read_2))) || false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), ! (! (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))), (bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))) || false), false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))))) || false)) && true), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), bool(bool(bool(_GLF_IDENTITY(read_1 == read_2, false || (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))) || false), false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) + _GLF_IDENTITY(dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0), vec3(0.0, 0.0, 0.0)))) > injectionSwitch.y))))))) && true)))))) + 1, max(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))) | (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))) && true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(read_1, max(read_1, read_1)))) == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), false))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, 0u | (read_2))), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), bool(bvec4(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), true, _GLF_IDENTITY(false, (false) || false), false)))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bool(bool(bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, (read_1) | (read_1)) == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || _GLF_IDENTITY(false, ! (! (false)))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))) || false))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))), bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))), bool(bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))))))), true, false, true)))) || false))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))) && true)) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), (read_1 == read_2) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), (read_1 == read_2) && true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), (read_1 == read_2) && true)), false || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), (read_1 == read_2) && true)))), false, true, false)))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false || (bool(read_1 == read_2)), ! (! (false || (bool(read_1 == _GLF_IDENTITY(read_2, (read_2) * 1u))))))))))), false)))) || false), false), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) - 0u)), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), true && (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), ! (! ((_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)), true && (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(read_1) : read_2))), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, true)))), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))) && _GLF_IDENTITY(true, (true) || false)))))) | (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2, (read_1 == read_2) && true))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2)))), false || (bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(num_workgroup) : read_2)), (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), bool(_GLF_IDENTITY(bool(bool(read_1 == read_2)), ! (! (bool(bool(read_1 == read_2))))))))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), bool(bvec4(_GLF_IDENTITY(! (read_1 == read_2), bool(bvec2(! (read_1 == read_2), false))), false, false, true)))))), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, false || (_GLF_IDENTITY((read_1 == read_2) && true, bool(_GLF_IDENTITY(bvec3((read_1 == read_2) && true, false, true), bvec3(bvec4(bvec3((read_1 == read_2) && true, false, true), false)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1, 1u * (read_1)) == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))), false || (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))))))), false)))) || false), false), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))))) && true)))))) + 1) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == _GLF_IDENTITY(read_2, max(read_2, read_2))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) || false), true, true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true), (_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)) && true)) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), false || (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, clamp(_GLF_IDENTITY(read_1, (read_1) | (read_1)), _GLF_IDENTITY(read_1, (read_1) - 0u), read_1)) == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (bool(read_1 == read_2)), false || (! (bool(read_1 == read_2)))))), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (read_1) ^ (0u | 0u)) == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), _GLF_IDENTITY(false, false || (false)) || (bool(read_1 == read_2))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 == read_2) && true, (_GLF_IDENTITY((read_1 == read_2) && true, ((read_1 == read_2) && true) && true)) && true))))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, ! (! (_GLF_IDENTITY((read_1 == read_2) && true, (_GLF_IDENTITY((read_1 == read_2) && true, ((read_1 == read_2) && true) && true)) && true))))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))), (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))))))) || false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(read_1, 0u | (read_1)) == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u))), _GLF_IDENTITY(read_1, (read_1) | (read_1)))) == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(atomicCompSwap(virtual_gid, workgroup_size, mix(workgroup_id, workgroup_size, true))))) == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), 0u ^ (~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))))))) == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), false || (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true))) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, ! (! ((read_1 == read_2) && true)))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) | (read_2)))))) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || _GLF_IDENTITY((bool(read_1 == read_2)), ! (! (_GLF_IDENTITY((bool(read_1 == read_2)), ! (! ((bool(read_1 == read_2))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) || false))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))), ((uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, clamp(read_1, read_1, _GLF_IDENTITY(read_1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))), 0u ^ (~ (_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1))))))))) == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2), false || (_GLF_IDENTITY((read_1 == read_2), ((read_1 == read_2)) && true))) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)) == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY((read_1 == read_2) && true, ! (! ((read_1 == read_2) && true)))))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) | (read_2)))))) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || _GLF_IDENTITY((bool(read_1 == read_2)), ! (! (_GLF_IDENTITY((bool(read_1 == read_2)), ! (! ((bool(read_1 == read_2))))))))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) || false))))))), false)))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(read_1 == read_2), false || (bool(read_1 == read_2))))))), false)))) || false), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))) << 0u)) + 1)), 4, 64, 4);
  }
}
