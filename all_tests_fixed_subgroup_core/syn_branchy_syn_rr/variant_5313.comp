#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, false || (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), true, true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, _GLF_IDENTITY(-11.50, min(-11.50, -11.50)))) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y)))))), false || (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-49.74))), 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))) > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))))))))))), ((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0)))).x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))))))) && true)), ((_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.8))) > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))))))))))), ((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 0.0), (vec3(injectionSwitch, 0.0)) * mat3(1.0)))).x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat4x2(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0)), 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y))))))) && true))) || false)), false || (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y)))))), false || (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0), (_GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0), ((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) > injectionSwitch.y)))))), (_GLF_IDENTITY((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0), (_GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0), ((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) > injectionSwitch.y)))))), bool(bvec3((! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0), (_GLF_IDENTITY((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0), ((mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))) > injectionSwitch.y)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), false || _GLF_IDENTITY((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))))), false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).y))))), ! (_GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, exp(0.0) * (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.7))))), float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat2(-6.8, 6073.9213, 778.433, -11.50)) : _GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0))))), 1.0, 1.0, 0.0)) * mat2(1.0)))))) > injectionSwitch.y)))))), false || (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false), false, true)), false, false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat2(injectionSwitch[1], 1.0, 1.0, 1.0))))).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false)))), true, true)))))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), true))), false))))), false))))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), true, true), false))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)), true, true), bvec3(bvec4(bvec3((_GLF_DEAD(false)), true, true), false))))), false))))))))))), ! (! (! (_GLF_DEAD(false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), true && (bool(bvec4((false), true, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), true && (bool(bvec4((false), true, true, true)))))))), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), true, true, true)), true && (bool(bvec4((false), true, true, true)))))), (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) * uvec3(1u, 1u, 1u)).x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), max(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)))) * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) * workgroup_id, 0u, 1u)), (uint(uvec3(workgroup_size * workgroup_id, 0u, 1u))) + 0u))) | (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) * 1u), (workgroup_id) ^ 0u), min(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u), 0u + (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5.2) : 0.0)), 1.0, 1.0, 1.0))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-8.2)), float(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 0.0))), injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-8.2)), float(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.5)), bool(false))), 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), 1.0, 1.0, 1.0))), bool(true)))) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && true))))), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && true))))), ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) && true))))), ! (! (false))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0))))), injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(vec2(132.407, -2.3)) : injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), true && (bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(23.58)))) - 0.0) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(43.03), _GLF_FUZZED((_GLF_IDENTITY(true ? vec4(5.4, -1.9, -5.8, -519.531).y : 8.5, float(float(true ? vec4(5.4, -1.9, -5.8, -519.531).y : 8.5)))))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), bvec2(true, true))).y) || false)) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(23.58)))) - 0.0) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(43.03), _GLF_FUZZED((_GLF_IDENTITY(true ? vec4(5.4, -1.9, -5.8, -519.531).y : 8.5, float(float(true ? vec4(5.4, -1.9, -5.8, -519.531).y : 8.5)))))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), bvec2(true, true))).y) || false)) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(23.58)))) - 0.0) > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(43.03), _GLF_FUZZED((_GLF_IDENTITY(true ? vec4(5.4, -1.9, -5.8, -519.531).y : 8.5, float(float(true ? vec4(5.4, -1.9, -5.8, -519.531).y : 8.5)))))), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], (injectionSwitch)[1]), bvec2(true, true))).y) || false)) || _GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))))))), false)), false || (bool(bvec2((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec2(! (! (_GLF_DEAD(false))), true)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false, true)))) || false)) && true), true))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)))), true, false, true)))) || false)) && true), true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) || false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-173.527), _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false)))))))), false || (! (! ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-173.527), (_GLF_FUZZED(-173.527)) + sin(0.0)), _GLF_FUZZED(9.5)), vec2(_GLF_IDENTITY((injectionSwitch)[0], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)) || false), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), true, false))))))))))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) | _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, 0u, 1u, 0u)), max(uint(uvec4(0u, 0u, 1u, 0u)), uint(uvec4(0u, 0u, 1u, 0u))))))))))) >> 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id) | (subgroup_local_id), ((subgroup_local_id) | (subgroup_local_id)) | ((subgroup_local_id) | (subgroup_local_id))), (subgroup_local_id) | (subgroup_local_id)))) + 1, _GLF_IDENTITY(0u, min(0u, 0u)) ^ (subgroup_local_id + 1))) % subgroup_size), max(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) - 0u) | (subgroup_local_id)) + 1, _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), clamp(0u ^ (subgroup_local_id + 1), _GLF_IDENTITY(0u ^ (subgroup_local_id + 1), (0u ^ (subgroup_local_id + 1)) << 0u), 0u ^ (subgroup_local_id + 1))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), clamp(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ~ (~ (~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))))))), (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))) + _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), min(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), clamp(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ~ (~ (~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))))))) : _GLF_FUZZED(atomicExchange(subgroup_local_id, workgroup_base)))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (true ? _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u), ~ (~ (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) >> 0u))))) | ((subgroup_local_id))) : _GLF_FUZZED(min(subgroup_id, (_GLF_IDENTITY(subgroup_local_id | workgroup_size, clamp(subgroup_local_id | workgroup_size, _GLF_IDENTITY(subgroup_local_id | workgroup_size, (subgroup_local_id | workgroup_size) << 0u), subgroup_local_id | workgroup_size))))))) | (subgroup_local_id)) + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))))), 0u | (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, _GLF_IDENTITY(1, (1 ^ 1) | (1)))))))), (subgroup_local_id + _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))), ((~ (_GLF_IDENTITY(1, int(ivec2(1, 1)))))) >> 0))) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1, 0u ^ (subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec2(1, 1))))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size))))), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) >> 0u))), max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, (1) | (1)), 0u ^ (subgroup_local_id + 1))) % subgroup_size)) ^ 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), (true && (false)) || false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 | (64)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) || false)), bool(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) || false), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (false)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))), (! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || _GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true))))), bool(bvec2(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))), false))) && true)))))), true))))))) || false)) || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(78.92)), float(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0)))), bool(true))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-395.060))))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))))))))), true && (false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 0.0))))))) * 1.0) > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], uint(uvec4(buf[virtual_gid], 1u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), uint(uvec2(buf[virtual_gid], 0u)))) | 0u), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 1)), (int(ivec2(0, 1))) | 0), (_GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) | 0)) - 0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) - 0u, min((subgroup_local_id) - 0u, (subgroup_local_id) - 0u))) + 1 < subgroup_size, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) << 0u)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) << 0u)) < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || (read_1 == read_2)), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(_GLF_IDENTITY(read_1, (read_1) << (0u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2))))))))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) ^ 0u), (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) | (_GLF_IDENTITY(read_1, (read_1) ^ 0u))), read_1)) == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2))))))))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))))))) && true)), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2)), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(bool(read_1 == read_2)))), true && _GLF_IDENTITY(((read_1 == read_2)), _GLF_IDENTITY(bool(bvec2(((read_1 == read_2)), true)), (bool(bvec2(((read_1 == read_2)), true))) || false))))))), 1u * (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2)), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(_GLF_IDENTITY(read_1, (read_1) << (0u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2))))))))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))))), bool(_GLF_IDENTITY(bvec2(true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(_GLF_IDENTITY(read_1, (read_1) << (0u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2))))))))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(_GLF_IDENTITY(read_1, (read_1) << (0u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2))))))))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))))), false), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bool(read_1 == read_2), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(_GLF_IDENTITY(read_1, (read_1) << (0u | (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))) == read_2))))))))), true && ((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))))), false), false, false)), true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (~ (read_2))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(_GLF_IDENTITY(read_1, (read_1) ^ 0u), read_1)) == read_2, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(read_1 == read_2), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) && true)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) && true)), bool(bvec3(! (_GLF_IDENTITY(bool(read_1 == read_2), (bool(read_1 == read_2)) && true)), false, true)))))))), ! (! (_GLF_IDENTITY(bool(read_1 == read_2), true && (bool(read_1 == read_2))))))))), true && _GLF_IDENTITY(((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false))))), (((_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), (! (read_1 == read_2)) || false)))))) && true)))) && true)), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(read_1, (read_1) | (_GLF_IDENTITY(read_1, min(read_1, read_1)))) == read_2)), true && _GLF_IDENTITY((_GLF_IDENTITY(read_1 == read_2, bool(bool(read_1 == read_2)))), true && ((read_1 == read_2))))))))) + 1, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY((4) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 1.0)))) * mat2(1.0)).x), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), float(_GLF_FUZZED(float(86329u))), bool(false))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, sin(0.0), 1.0)))), 1.0, 1.0, 1.0, 1.0, 1.0)), min(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat2x3(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat2x3(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0)))), float(mat2x3(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0))) - determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0))))), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)))))))), 1 * (_GLF_IDENTITY((4), max((4), (4))) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, 0.0)))), mix(float(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(float(_GLF_FUZZED(float(86329u))), max(_GLF_IDENTITY(float(_GLF_FUZZED(float(86329u))), (float(_GLF_FUZZED(float(_GLF_IDENTITY(86329u, uint(uint(86329u))))))) - 0.0), float(_GLF_FUZZED(float(86329u))))), bool(false))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, false || (true)))), bool(bvec4(bool(! (_GLF_IDENTITY(true, false || (true)))), true, true, true)))), bool(bool(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(true, false || (true)))), bool(bvec4(bool(! (_GLF_IDENTITY(true, false || (true)))), true, true, true)))))))))) ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(-6106.6798))), 1.0, 1.0, 1.0)))), float(mat2x4(_GLF_IDENTITY(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), min(float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat2x3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6106.6798))), 1.0, 1.0, 1.0)))), 1.0, sqrt(1.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)))))))))), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) >> 0)))), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((64), ((64)) >> (_GLF_IDENTITY((~ -50706), max((~ -50706), (~ -50706))) & (0 | 0)))), 0 + (_GLF_IDENTITY((~ _GLF_IDENTITY((64), ((64)) >> ((~ -50706) & (0 | 0)))), min((~ _GLF_IDENTITY((64), ((64)) >> ((~ -50706) & (_GLF_IDENTITY(0 | 0, 0 | (0 | 0)))))), (~ _GLF_IDENTITY((64), ((64)) >> ((_GLF_IDENTITY(~ -50706, (false ? _GLF_FUZZED(i) : ~ -50706))) & _GLF_IDENTITY((0 | 0), clamp((0 | 0), _GLF_IDENTITY((0 | 0), clamp(_GLF_IDENTITY((0 | 0), ((0 | 0)) - 0), (0 | 0), (0 | 0))), (0 | 0))))))))))), (_GLF_IDENTITY(64, max(64, 64))) | 0), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), true && ((false))))), ! (! (! (! (_GLF_IDENTITY((false), true && ((false))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * abs(1.0))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (! (! (_GLF_DEAD(false))))), bool(bvec3((! (! (! (_GLF_DEAD(false))))), true, false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), 1u * (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) ^ 0u))) + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-61759) : 1)), 1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), int(int(~ _GLF_IDENTITY((1), ((1)) - 0))))), (~ (_GLF_IDENTITY(~ (1), int(int(~ _GLF_IDENTITY(_GLF_IDENTITY((1), ((1)) | ((1))), ((1)) - 0)))))) / 1))), clamp(~ (1), ~ (1), ~ _GLF_IDENTITY((1), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) - 0), 0, _GLF_IDENTITY(0, (0) / _GLF_IDENTITY(1, (1) | (1))))) + ((1)))))) ^ _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (0)), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) - 0)) << (0 << _GLF_IDENTITY(int(6), int(6))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), ! (! (bool(bool((false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6513.1580) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6513.1580) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, exp(0.0), 1.0, 1.0)))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6513.1580) : _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-89.01, 1.5, -1648.4671, -268.629)))), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, injectionSwitch.x)))) > injectionSwitch.y), true, false))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))), false, false)), bool(bvec4(bool(bvec3(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false)), true, true, true))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, true && (true))), bvec2(bvec2(bvec2(false, _GLF_IDENTITY(true, true && (true)))))), false)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))) || false, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), bool(bool(_GLF_IDENTITY(false, false || (false)))))) || false)))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y)) || false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-821.418))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
}
