#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 bool _f0;
 bvec3 _f1;
 vec2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_10 {
 ivec3 _f0;
 _GLF_struct_9 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_7 {
 float _f0;
 mat4x2 _f1;
 vec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_8 {
 bool _f0;
 mat3 _f1;
 _GLF_struct_7 _f2;
 mat4x2 _f3;
 bool _f4;
} ;

struct _GLF_struct_5 {
 mat2 _f0;
 ivec2 _f1;
 ivec4 _f2;
 float _f3;
 uvec2 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_4 {
 ivec4 _f0;
 mat4 _f1;
 uvec4 _f2;
 vec4 _f3;
 int _f4;
 uint _f5;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 _GLF_struct_4 _f1;
 uint read_2;
 _GLF_struct_5 _f2;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 mat2 _f1;
 mat3x4 _f2;
 mat2x4 _f3;
 mat4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_0 {
 mat4x2 _f0;
} ;

struct _GLF_struct_3 {
 mat3x4 _f0;
 mat3x2 _f1;
 bvec3 _f2;
 _GLF_struct_0 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_11 {
 _GLF_struct_3 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_8 _f2;
 ivec4 _f3;
 _GLF_struct_10 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((_GLF_IDENTITY(false, ! (! (false)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(-52.22, 770.337)) : _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), true, false, true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), bool(bvec2(false || (_GLF_DEAD(false)), true)))), bool(bvec4(_GLF_DEAD(false), true, false, true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 & int(_GLF_IDENTITY(vec2(7.8, 574.378).y, max(vec2(7.8, 574.378).y, vec2(7.8, 574.378).y))), clamp(_GLF_IDENTITY(0 & int(_GLF_IDENTITY(vec2(7.8, 574.378).y, max(vec2(7.8, 574.378).y, vec2(7.8, 574.378).y))), 0 | (0 & int(_GLF_IDENTITY(vec2(7.8, 574.378).y, max(vec2(7.8, 574.378).y, vec2(7.8, 574.378).y))))), 0 & int(_GLF_IDENTITY(vec2(7.8, 574.378).y, max(vec2(7.8, 574.378).y, vec2(7.8, 574.378).y))), 0 & int(_GLF_IDENTITY(vec2(7.8, 574.378).y, max(vec2(7.8, 574.378).y, vec2(7.8, 574.378).y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), ((1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0 | 0)) | (1 ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), vec2(mat3x4(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), 1.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(log(1.0), float(vec3(log(1.0), 0.0, 1.0))), 0.0, 1.0, exp(0.0), 0.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(944.734), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(vec3(-0.7, 554.688, 6209.9038).z)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, tan(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(944.734), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(vec3(-0.7, 554.688, 6209.9038).z)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(944.734), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(vec3(-0.7, 554.688, 6209.9038).z)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(944.734), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), abs(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(vec3(-0.7, 554.688, 6209.9038).z)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y)))))) ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-0.8), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), min(float(_GLF_FUZZED(-0.8)), _GLF_IDENTITY(float(_GLF_FUZZED(-0.8)), mix(float(float(_GLF_FUZZED(-0.8))), float(_GLF_FUZZED(8.5)), bool(false))))), float(_GLF_FUZZED(2.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_IDENTITY(mat3x4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-0.8)), 0.0, exp(0.0), log(1.0), determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-9.9)), float(0.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0)), 1.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(4.6)), bool(false)))), sqrt(exp(0.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, 0.0, sqrt(_GLF_IDENTITY(0.0, float(vec4(0.0, 0.0, sin(0.0), 1.0)))), 0.0), _GLF_IDENTITY(vec4(abs(1.0), log(1.0), 0.0, _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((refract(-651.725, -8817.1597, 2450.4984) + -148.004)) : log(1.0)))), (vec4(abs(1.0), log(1.0), 0.0, _GLF_IDENTITY(log(1.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((refract(-651.725, -8817.1597, 2450.4984) + -148.004)) : log(1.0))))) - vec4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-37.73))))), 0.0)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))))), 1.0, 0.0, 1.0, sqrt(0.0), sqrt(0.0), 0.0, 0.0), mat4x2(_GLF_IDENTITY(mat4x3(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))))), 1.0, 0.0, 1.0, sqrt(0.0), sqrt(0.0), 0.0, 0.0)), mat4x3(mat4x3(mat4x3(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))), dot(vec4(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0)))), log(1.0)))), mix(float(_GLF_FUZZED(8.1)), float(_GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), _GLF_IDENTITY(0.0, (0.0) + 0.0), log(1.0))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), min(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), abs(1.0))), abs(1.0))), log(1.0), 0.0, log(1.0))))), bool(true))))), 1.0, 0.0, 1.0, sqrt(0.0), sqrt(0.0), 0.0, 0.0))))))))) : _GLF_FUZZED(_GLF_IDENTITY(-867.016, max(-867.016, -867.016)))))), (true ? mat3x4((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-0.8)), 0.0, exp(0.0), log(1.0), _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (true ? determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-8.8))), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), cos(0.0), _GLF_IDENTITY(sqrt(exp(0.0)), (true ? _GLF_IDENTITY(sqrt(exp(0.0)), _GLF_IDENTITY(mix(float(sqrt(exp(0.0))), float(_GLF_FUZZED(9.9)), bool(false)), _GLF_IDENTITY(float(mat2x4(mix(float(sqrt(exp(0.0))), float(_GLF_FUZZED(9.9)), bool(false)), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(intBitsToFloat(-67484)))), 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(float(-21494))), bool(false))))), (true ? float(mat2x4(mix(float(sqrt(exp(0.0))), float(_GLF_FUZZED(9.9)), bool(false)), 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))), 1.0, 0.0, 1.0, 0.0)) : _GLF_FUZZED(-9963.1143))))) : _GLF_FUZZED(1.8))), _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, _GLF_IDENTITY(log(1.0), (true ? log(1.0) : _GLF_FUZZED(-91.82))))), dot(vec4(1.0, 0.0, sqrt(0.0), 0.0), vec4(abs(1.0), log(1.0), 0.0, log(1.0))))) : _GLF_FUZZED(mat3x4(7.7, -121.815, 47.79, 2072.1414, _GLF_IDENTITY(-620.735, (true ? -620.735 : _GLF_FUZZED(162.064))), -2.5, -60.42, -1.5, -86.55, 974.898, -46.64, 42.89)))))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))) : _GLF_FUZZED(-34389)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       for(int _injected_loop_counter = (72481 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))))); _injected_loop_counter ++)
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       else
        {
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        continue;
       barrier();
      }
     continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bool(_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))), false || _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))), bool(bool((! _GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false)))))))))), true && (bool(bool((_GLF_IDENTITY(! (! (false)), ! (! (! _GLF_IDENTITY((! (false)), true && ((! (false))))))))))))), true, false, false)))))))))))))
  barrier();
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (0 << _GLF_IDENTITY(int(5), int(5))) ^ (3))), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (((-48874 + _GLF_IDENTITY(-19718, max(-19718, _GLF_IDENTITY(-19718, ~ (~ (-19718)))))) & 0) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | (gl_WorkGroupID.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) << 0u), 1u), (uvec4(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, min(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), _GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(atomicAnd(workgroup_id, subgroup_size)) : _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)))))), workgroup_size)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)) | (uvec4(workgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 0u)), (uint(uvec3(1u, 1u, 0u))) | (uint(uvec3(1u, 1u, 0u)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 1u, 0u)), (uint(uvec3(1u, 1u, 0u))) | (uint(uvec3(1u, 1u, 0u)))))))) + 0u)))))) * _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-580.321) : injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false)), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true), false)), true)))))) && _GLF_IDENTITY(true, (true) && true))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, exp(0.0), 1.0, 0.0), mix(vec4(_GLF_FUZZED(-5.6), (vec4(injectionSwitch.y, exp(0.0), 1.0, 0.0))[1], (vec4(injectionSwitch.y, exp(0.0), 1.0, 0.0))[2], (vec4(injectionSwitch.y, exp(0.0), 1.0, 0.0))[3]), vec4((vec4(injectionSwitch.y, exp(0.0), 1.0, 0.0))[0], _GLF_FUZZED(-83.53), _GLF_FUZZED(-5717.1291), _GLF_FUZZED(-74.63)), bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) - 0.0)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (true ? GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid : _GLF_FUZZED(uvec2(8344u, 89158u)))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid))).x, (workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, ~ (~ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x)))) >> 0u)), clamp(~ (_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) >> 0u)), ~ (_GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) >> 0u)), ~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) >> 0u)))))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, min(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x))) - 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (-50757 & 0)); _injected_loop_counter --)
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5.3)), float(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true))))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5.3)), float(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true))))) > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5.3)), float(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true))))) > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-5.3)), float(float(mat3x4(mix(float(_GLF_FUZZED(-839.785)), float(injectionSwitch.x), bool(true)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)), log(1.0), 1.0, 1.0, 0.0, 0.0, 0.0))), bool(true))))) > injectionSwitch.y)))))) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true)))) ? _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, (0) >> 0), 0)) : _GLF_FUZZED(_GLF_IDENTITY((bitfieldExtract(ivec4(-83694, 48964, 48864, 47660), _injected_loop_counter, -51067) , 42508), ((_GLF_IDENTITY(bitfieldExtract(ivec4(-83694, 48964, 48864, 47660), _injected_loop_counter, -51067), ~ (~ (bitfieldExtract(_GLF_IDENTITY(ivec4(-83694, 48964, 48864, 47660), min(ivec4(-83694, 48964, 48864, 47660), ivec4(-83694, 48964, 48864, 47660))), _injected_loop_counter, -51067)))) , 42508)) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(93591) : int(5))), clamp(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(93591) : int(5))), _GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(93591) : int(5))), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(93591) : int(5))), (_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(93591) : int(5)))) / 1))))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(int(1)))))), 4, 64, 4);
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, true)), true, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint read_1 = atomicLoad(buf[GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) ^ 0, ((64) ^ 0) - 0)), (64) / 1), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_3(mat3x4(1.0), mat3x2(1.0), bvec3(true), _GLF_struct_0(mat4x2(1.0)), _GLF_struct_1(mat3x2(1.0), ivec2(1)), _GLF_struct_2(uvec4(1u), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat4x2(mat2(1.0))), mat2(mat3x2(mat2(mat4x2(mat2(1.0))))))), mat3x4(1.0), mat2x4(1.0), mat4(1.0), mat2(1.0))), _GLF_struct_6(mat3x2(1.0), _GLF_struct_4(ivec4(1), mat4(1.0), uvec4(1u), vec4(1.0), 1, 1u), atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), min(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (true ? GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid : _GLF_FUZZED(uvec2(32082u, 146257u))))[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])))).y], 4, 64, 0), _GLF_struct_5(mat2(1.0), ivec2(1), ivec4(1), 1.0, uvec2(1u), mat4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-997.451)), bool(false)))) - 0.0)))), _GLF_struct_8(true, mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), min(_GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)), _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))), _GLF_IDENTITY(1.0, (1.0) * sqrt(1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), log(exp(0.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))), _GLF_struct_7(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((88.61))), float(1.0), bool(_GLF_IDENTITY(true, true && (true))))), mat4x2(1.0), vec4(1.0), true), mat4x2(1.0), true), ivec4(1), _GLF_struct_10(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))))), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), ((_GLF_IDENTITY(1, (1) >> 0))) >> 0) + (85226 & (0 << _GLF_IDENTITY(int(1), int(1)))))) | (1)))) >> ivec3(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(- -4501, ~ (~ (_GLF_IDENTITY(- -4501, (- -4501) | (- -4501))))), (_GLF_IDENTITY(_GLF_IDENTITY(- -4501, ~ (~ (_GLF_IDENTITY(- -4501, (- -4501) | (- -4501))))), (false ? _GLF_FUZZED(2787) : _GLF_IDENTITY(- -4501, ~ (~ (_GLF_IDENTITY(- -4501, (- -4501) | (- -4501)))))))) | (_GLF_IDENTITY(- -4501, ~ (~ (_GLF_IDENTITY(- -4501, (- -4501) | (- -4501))))))))) : 0)), 0)), _GLF_struct_9(true, bvec3(true), vec2(1.0), mat3x4(1.0)), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), clamp(uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u)))), uint(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (1u) << 0u))))))) / 1u))))));
 for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * _GLF_IDENTITY((0), min((0), (0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), true && ((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))), _GLF_IDENTITY(! (! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))), (! (! (! (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) / 1u), false)))))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), false, false))))))))))), ! (! (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))) < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))))))), _GLF_IDENTITY(true, false || (true)) && (! ((_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), ! (! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))))))))))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275))) < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), ! (! (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])).x, false))))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), ! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))))), (_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), _GLF_IDENTITY(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), bool(_GLF_IDENTITY(bvec3(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), false, false), bvec3(bvec4(bvec3(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), false, false), true)))))))) && true))))))) && true), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), true && ((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))), _GLF_IDENTITY(! (! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))), (! (! (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) / 1u), (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) / 1u)) ^ 0u), false)))))) && true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (true ? GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x : _GLF_FUZZED(num_workgroup))), false), false, false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), false, false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec4(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false), false, false))))))))))), ! (! (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec2(subgroup_local_id + 1, 1u))) < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))))))), _GLF_IDENTITY(true, false || (true)) && (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), false || (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), false || (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))))))))))))))), _GLF_IDENTITY((! (! (_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275))), clamp(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275))), (false ? _GLF_FUZZED(120339u) : subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275))))), _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275))), (subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275)))) >> 0u), subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(73275))))) < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), ! (! (bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])).x, false))))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)), ! (! (bool(bvec2(_GLF_IDENTITY(subgroup_local_id + 1, ~ (_GLF_IDENTITY(~ (subgroup_local_id + 1), ~ (~ (~ (subgroup_local_id + 1)))))) < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).x, false)), _GLF_IDENTITY(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), bool(bool((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))))), false, false), bvec3(bvec4(bvec3(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), false, false), true)))))))), bool(bool((_GLF_IDENTITY(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, _GLF_IDENTITY(bool(bvec2(subgroup_local_id + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, max(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[0], GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid[1])), GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).x, false)), _GLF_IDENTITY(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), bool(_GLF_IDENTITY(bvec3(! (! _GLF_IDENTITY((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))), bool(bool((bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false))))))), false, false), bvec3(bvec4(bvec3(! (! (bool(bvec2(subgroup_local_id + 1 < GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, false)))), false, false), true))))))))))) && true))))))) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), true)))), true)))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + log(1.0)), injectionSwitch[1])).x > injectionSwitch.y, false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), false))), false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), false, false))), false))))), true)))), true))))))))) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          barrier();
         continue;
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
          }
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     int i = 0;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), false || (bool(_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), 0u + ((read_1))) ^ (_GLF_IDENTITY(0u, (0u) | (0u)) & 27859u)) == _GLF_struct_replacement_11._f1.read_2) + 1, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) - 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ 0)) - 0)) >> 0)) ^ 0), _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, 1 * (4)))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_struct_replacement_11._f1.read_2) + 1, 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) || false)))), true)))))))
  barrier();
}
