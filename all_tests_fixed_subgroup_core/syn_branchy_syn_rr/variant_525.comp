#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, false)))), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(float(161300u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), 0.0 + (mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(float(_GLF_FUZZED(float(161300u))), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(float(161300u))), max(float(_GLF_FUZZED(float(161300u))), float(_GLF_FUZZED(float(161300u))))), float(_GLF_FUZZED(float(161300u))), float(_GLF_FUZZED(float(161300u))))), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9986.9883)), vec2(_GLF_FUZZED(-39.94), (injectionSwitch)[1]), bvec2(false, true))).y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (_GLF_IDENTITY(~ (gl_WorkGroupSize.x), (true ? ~ (gl_WorkGroupSize.x) : _GLF_FUZZED(num_workgroup)))) * 1u)));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_id));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(atomicMax(subgroup_size, subgroup_id)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) + subgroup_local_id) ^ (0u << _GLF_IDENTITY(uint(2u), uint(2u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(2532.4215, -6405.1171)) : injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, false)), false, false), bvec3(bvec3(bvec3(bool(bvec4(_GLF_DEAD(false), true, false, false)), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6425.9337, 489.359)) : injectionSwitch)).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6425.9337, _GLF_IDENTITY(489.359, mix(float(489.359), float(_GLF_FUZZED(-565.459)), bool(false))))) : injectionSwitch)).y)), false || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6425.9337, _GLF_IDENTITY(489.359, mix(float(489.359), float(_GLF_FUZZED(-565.459)), bool(false))))) : injectionSwitch)).y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.3), _GLF_FUZZED(53.56)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uvec2(uint(1), 1u), uvec2(uvec2(uvec2(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (false ? _GLF_FUZZED(2280) : _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec4(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-66249))), 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), min(_GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(5), int(5))))) >> _GLF_IDENTITY(int(5), int(5)), _GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (_GLF_IDENTITY(int(int((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(int(5), int(5)))))), (int(int((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) / 1)) / 1))))) | (ivec4(1, 0, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), clamp(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1))))))))), int(5)), clamp(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), clamp(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1))))))))), int(5)), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), clamp(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1))))))))), int(5)), 1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), clamp(ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1)))), ivec4(5, 1, 0, (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) / 1))))))))), int(5))))) >> _GLF_IDENTITY(int(5), int(5))))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(1, 0, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), (1 << _GLF_IDENTITY(int(5), int(5))) | 0)))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec4(1, 0, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(5), int(5))), ~ (~ ((1 << _GLF_IDENTITY(int(5), int(5))))))) | 0) >> _GLF_IDENTITY(int(5), int(5))))) | (ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))), ~ (~ (_GLF_IDENTITY(ivec4(1, _GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) - 0)), 1, (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(5))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(5))), ((_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(5)))) * 1), (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(5))), (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(_GLF_IDENTITY(5, 0 ^ (5))), int(5))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) >> 0), int(5)))), (_GLF_IDENTITY(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) | (_GLF_IDENTITY(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))), (ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))) + ivec4(0, 0, 0, 0))))))) | (ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))))))), int(_GLF_IDENTITY(ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | 0)))), (ivec4(1, 0, 1, ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), int(5)), 0 ^ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))), min(1 << _GLF_IDENTITY(int(5), int(5)), 1 << _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, int(ivec3(5, 0, 1)))) | (5))) << (0 << _GLF_IDENTITY(int(1), int(1))))))))) | (ivec4(1, 0, 1, ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))))), 1u)))))), 4, 64, 4);
 uint read_1 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], buf[virtual_gid]))), _GLF_IDENTITY(((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_id) : max(buf[virtual_gid], buf[virtual_gid])))))), clamp(((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_id) : max(buf[virtual_gid], buf[virtual_gid])))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_id) : max(buf[virtual_gid], buf[virtual_gid]))))), ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_id) : max(buf[virtual_gid], buf[virtual_gid])))))) >> 0u)), ((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(max(buf[virtual_gid], buf[virtual_gid]), (false ? _GLF_FUZZED(workgroup_id) : max(buf[virtual_gid], buf[virtual_gid])))))))) + 0u)), 4, 64, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), (int(ivec4(0, (0 ^ 0), 1, 1))) | 0), _GLF_IDENTITY(clamp(int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1))), (_GLF_IDENTITY(clamp(int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1))), (clamp(int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)))) | 0)) | (clamp(int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1))))))), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(0, (0 ^ _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1)), max(int(ivec4(0, (0 ^ _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1)), int(ivec4(0, (0 ^ _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, 1)))), clamp(_GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), (int(ivec4(0, (0 ^ 0), 1, 1))) | (int(ivec4(0, (_GLF_IDENTITY(0, int(ivec2(0, 0))) ^ 0), 1, 1)))), int(ivec4(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0), 1, 1)), int(_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0)))), 1, 1), ~ (~ (_GLF_IDENTITY(ivec4(0, _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0)))), 1, 1), min(ivec4(0, _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0)))), 1, 1), ivec4(0, _GLF_IDENTITY((0 ^ 0), ~ (~ ((0 ^ 0)))), 1, 1)))))))))))))) ^ 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-66295) : _GLF_IDENTITY(0, max(0, 0)))) ^ 0), 1, _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0))), int(int(int(_GLF_IDENTITY(ivec4(1, 1, 1, 1), (ivec4(1, 1, 1, 1)) ^ ivec4(0, 0, 0, 0))))))))), clamp(int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1))))), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), clamp(_GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), (int(ivec4(0, (0 ^ 0), 1, 1))) | (int(ivec4(0, (0 ^ 0), 1, 1)))), int(_GLF_IDENTITY(ivec4(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), ((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) << 0)) ^ 0), 1, 1), min(ivec4(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), ((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) << 0)) ^ 0), 1, 1), _GLF_IDENTITY(ivec4(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), ((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) << 0)) ^ 0), 1, 1), (ivec4(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), ((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) << 0)) ^ 0), 1, 1)) | (ivec4(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), ((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) << 0)) ^ 0), 1, 1)))))), int(ivec4(0, (0 ^ 0), 1, 1))))))))) ^ 0)), ~ (~ ((_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), clamp(int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1))))), ~ (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), clamp(_GLF_IDENTITY(int(ivec4(0, (0 ^ 0), 1, 1)), (int(ivec4(0, (0 ^ 0), 1, 1))) | (int(ivec4(0, (0 ^ 0), 1, 1)))), int(ivec4(0, (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0), 1, 1)), int(ivec4(0, (0 ^ 0), 1, 1))))))))) ^ 0)))))) - 0)), 0, _GLF_IDENTITY(0, 0 ^ (0)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))), uint(uint(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))))))))), uint(uvec4((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), _GLF_IDENTITY((uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u), ((uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) / 1u)) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, (0u) | 0u), 0u)), (uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, (0u) | 0u), 0u))) - 0u)))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), 1u, 1u, 1u))) - 0u)), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u)))), (~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u))))) | (~ (_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u))))))))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), _GLF_IDENTITY(uvec3(uvec4(uvec3(buf[virtual_gid], 0u, 0u), 1u)), uvec3(uvec4(uvec3(uvec4(uvec3(buf[virtual_gid], 0u, 0u), 1u)), 1u))))), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), uint(uvec4((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))))), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))))))))))))), 1u, 1u, 1u))) - 0u))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 1u, _GLF_IDENTITY(0u, min(0u, 0u)))))], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), 0u ^ (~ (buf[virtual_gid]))))), 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u), max(~ ((_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u), ~ ((_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u))))))))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, max(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, uint(uvec2(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))) : _GLF_FUZZED((next_virtual_gid * subgroup_size)))))), uint(uvec4((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, 0u | (0u)) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), (uvec3(buf[virtual_gid], 0u, 0u)) >> uvec3(0u, 0u, 0u))))), (uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), (uvec3(buf[virtual_gid], 0u, 0u)) >> uvec3(0u, 0u, 0u)))))) | (0u << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u, (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) >> 0u), _GLF_IDENTITY((((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), ((((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)) + 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), 1u, 1u, 1u))) - 0u)), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(_GLF_IDENTITY(uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) + 0u), virtual_gid, virtual_gid))], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) + 0u), virtual_gid, virtual_gid))], 0u, 0u))) ^ 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), uint(uvec4((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (_GLF_IDENTITY(1u & 1u, 0u | (1u & 1u)))))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))))) / (uint(_GLF_ONE(1.0, injectionSwitch.y)) | ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) << 0u)))))) >> 0u)))))), 1u, 1u, 1u))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), clamp(uvec3(buf[virtual_gid], 0u, 0u), uvec3(buf[virtual_gid], 0u, 0u), uvec3(buf[virtual_gid], 0u, 0u)))))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(workgroup_id) : buf[virtual_gid])), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) * 1u), _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), uint(uvec4((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u)))), ((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))) * (1u & 1u))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, 0u | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))) >> 0u), min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 0u, 1u)))], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), (uvec3(buf[virtual_gid], 0u, 0u)) >> uvec3(0u, 0u, 0u)))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), 1u, 1u, 1u))) - 0u)), uint(uvec2((_GLF_IDENTITY(~ (_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))), _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(uvec3(buf[virtual_gid], 0u, 0u))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))), (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u)))))) >> 0u) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), min(_GLF_IDENTITY(uvec3(buf[virtual_gid], 0u, 0u), (true ? uvec3(buf[virtual_gid], 0u, 0u) : _GLF_FUZZED(uvec3(121963u, 113092u, 170868u)))), uvec3(buf[virtual_gid], 0u, 0u))))))) >> 0u, _GLF_IDENTITY(clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), clamp(_GLF_IDENTITY(clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), clamp(clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u))), clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), _GLF_IDENTITY(clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), max(clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u), clamp(((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (_GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), max(uint(uvec3(buf[virtual_gid], 0u, 0u)), uint(uvec3(buf[virtual_gid], 0u, 0u))))) * 1u)))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))))) >> 0u, ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))))))), uint(uvec4((~ _GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec3(buf[virtual_gid], 0u, 0u)), (uint(_GLF_IDENTITY(uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)], 0u, 0u))))) * (1u & 1u)))), _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, min(((_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) >> 0u), uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, clamp(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, _GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u, (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u) - 0u)) | (((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)), ((_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 0u, 0u))))) >> 0u)))))), 1u, 1u, 1u))) - 0u)), 0u)))))))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (64))) - 0), _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | _GLF_IDENTITY(0, (0) - 0))) | (_GLF_IDENTITY(0, (0) ^ 0)), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | 0)) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ 0))) | _GLF_IDENTITY((0 & 82097), ~ (_GLF_IDENTITY(~ ((0 & 82097)), (~ ((0 & 82097))) >> 0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(outerProduct(vec2(1.1, 36.73), vec3(-4490.4303, -8.9, 982.054))[2]) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(-8326.4860), _GLF_FUZZED((8.1 - 947.310))), bvec2(false, false)))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) << 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) << 0u)))), 0u | (uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) << 0u))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u)), (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u))) - 0u))))))), uint(uint(uint(_GLF_IDENTITY(uint((subgroup_local_id + 1)), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint((subgroup_local_id + 1)), (uint((subgroup_local_id + 1))) << 0u)))))))))))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(read_1, (true ? _GLF_IDENTITY(read_1, (read_1) * 1u) : _GLF_FUZZED(workgroup_size))) == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, 0u ^ (_GLF_IDENTITY(read_2, uint(uvec4(read_2, 1u, 1u, 0u)))))) + _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) - 0), int(int(_GLF_IDENTITY(1, _GLF_IDENTITY((1), min((1), (1))) - 0)))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), false), bvec2(bvec3(bvec2(false, false), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))))))))))), false)), (bool(bvec4(false, true, false, false))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
