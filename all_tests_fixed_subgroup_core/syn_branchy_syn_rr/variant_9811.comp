#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))) || false), true)), false || (bool(bvec2(_GLF_IDENTITY((true) && true, (_GLF_IDENTITY((true) && true, ! (! ((true) && true)))) || false), true)))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), false), true, false)))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), false))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))), _GLF_IDENTITY(false, ! (! (false))) || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)), true, false, true))), true))))))), true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-1304.7242, -939.250)) : (injectionSwitch) * mat2(1.0)))).x, mix(float(_GLF_FUZZED(-2.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (_GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))) || false))))), false, false)))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.9))), injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec2(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), gl_NumWorkGroups.x));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id) >> 0u, uint(uvec2((subgroup_id) >> 0u, 1u))), (false ? _GLF_FUZZED(subgroup_local_id) : (subgroup_id) >> 0u))) * subgroup_size, (_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(5385u), (_GLF_FUZZED(5385u)) - 0u) : min(0u, 0u)))))) ^ 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), min((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), ((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, ((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u) >> (0u ^ 0u)), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, ~ (~ ((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u))), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u))))))) + 0u))), (_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)))), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) >> (0u | 0u))))), max((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(5385u), (_GLF_FUZZED(5385u)) / 1u) : min(0u, 0u))))), max(_GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + (1u ^ ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) : _GLF_FUZZED(num_workgroup))), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u))))), _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))))) ^ 0u), max((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), (0u ^ 0u))), (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u))), max((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))), uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u))))), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (0u) >> 0u), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(5385u), (_GLF_FUZZED(5385u)) - 0u) : min(0u, 0u)))))) ^ 0u), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), min((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)), ((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, ((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u) >> (0u ^ 0u)), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, ~ (~ ((_GLF_IDENTITY(0u, (0u) | 0u)) << 0u))), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u, (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u))))))) + 0u))), (_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) << 0u)))), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) >> (0u | 0u))))), max((workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u) * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_IDENTITY(_GLF_FUZZED(5385u), (_GLF_FUZZED(5385u)) / 1u) : min(0u, 0u))))), max(_GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) + (1u ^ ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))))) : _GLF_FUZZED(num_workgroup))), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u))))), _GLF_IDENTITY(min(0u, 0u), max(min(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(num_workgroup))), 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))))) ^ 0u), max((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), (0u ^ 0u))), (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, clamp(_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u)))), _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(min(0u, 0u), 0u | (min(0u, 0u))), max(min(0u, 0u), _GLF_IDENTITY(min(0u, 0u), (false ? _GLF_FUZZED(5385u) : min(0u, 0u)))))) ^ 0u))), max((_GLF_IDENTITY(0u, 0u | (0u)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (0u)), 0u, 0u)))), uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u)))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)))))) << 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(uint(false)), (_GLF_IDENTITY(_GLF_FUZZED(uint(false)), ~ (~ (_GLF_FUZZED(uint(false)))))) | 0u))), uint(uint(_GLF_FUZZED(uint(false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(uint(false)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, false, true)), bvec3(bvec4(bvec3(bvec3(false, false, true)), true))))))))))), false))))))), 0u)), min(uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), min(_GLF_FUZZED(uint(false)), _GLF_IDENTITY(_GLF_FUZZED(uint(false)), (_GLF_FUZZED(uint(false))) / 1u))), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(uint(false)), 0u)), _GLF_IDENTITY(~ (~ (uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(false, true && (false)))), 0u)))), max(~ (~ (uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(false, true && (false)))), 0u)))), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(false, true && (false)))), 0u)), (uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(false, true && (false)))), 0u))) * (1u ^ 0u)))))))))) : _GLF_FUZZED(subgroup_size), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : 0u)), 0u))) | _GLF_IDENTITY((0u), ((0u)) / _GLF_IDENTITY(1u, (1u) / 1u))) | (true ? _GLF_IDENTITY(_GLF_FUZZED(uint(false)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(uint(false)), 0u)), min(uint(uvec2(_GLF_FUZZED(uint(false)), 0u)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) || (false)), true && (false)))), 0u)), ~ (~ (uint(uvec2(_GLF_FUZZED(uint(false)), 0u)))))))) : _GLF_FUZZED(subgroup_size)))), min((true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uint(false), min(uint(false), _GLF_IDENTITY(uint(false), (uint(false)) | 0u)))), uint(uvec2(_GLF_FUZZED(uint(false)), 0u))) : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uvec2(_GLF_FUZZED(uint(false)), 0u))), (_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), min(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), 0u | (_GLF_FUZZED(uint(false)))), _GLF_FUZZED(uint(false)))), 0u)))) - 0u) : _GLF_FUZZED(subgroup_size), (true ? _GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uvec2(_GLF_FUZZED(uint(false)), 0u))) : _GLF_FUZZED(subgroup_size)) / 1u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uint(_GLF_FUZZED(uint(false))))), (_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uint(_GLF_FUZZED(uint(false)))))) | (_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(_GLF_IDENTITY(uint(_GLF_FUZZED(uint(false))), 1u * (uint(_GLF_FUZZED(uint(false)))))))))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(uint(false)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(_GLF_IDENTITY(uint(false), min(uint(false), uint(false)))), 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(_GLF_IDENTITY(uint(false), min(uint(false), uint(false)))), 0u)), (uint(uvec2(_GLF_FUZZED(_GLF_IDENTITY(uint(false), min(uint(false), uint(false)))), 0u))) | (uint(uvec2(_GLF_FUZZED(_GLF_IDENTITY(uint(false), min(uint(false), uint(false)))), 0u)))))))) : _GLF_FUZZED(subgroup_size))), 0u, 1u, 1u))), max(true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp((uvec2(subgroup_size, 1u)), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)), uvec2(0u, 0u) + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), min(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) + uvec2(0u, 0u)))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))), uvec2(0u, 0u) | ((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))))))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp(_GLF_IDENTITY((uvec2(subgroup_size, 1u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (true ? (uvec2(subgroup_size, 1u)) : _GLF_FUZZED(uvec2(106441u, 133265u))))) ^ uvec2(0u, 0u)))), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))))))), max(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp((uvec2(subgroup_size, 1u)), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)), uvec2(0u, 0u) + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), min(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) + uvec2(0u, 0u)))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))), uvec2(0u, 0u) | ((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))))))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp(_GLF_IDENTITY((uvec2(subgroup_size, 1u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (true ? (uvec2(subgroup_size, 1u)) : _GLF_FUZZED(uvec2(106441u, 133265u))))) ^ uvec2(0u, 0u)))), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp((uvec2(subgroup_size, 1u)), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)), uvec2(0u, 0u) + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), min(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) + uvec2(0u, 0u)))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))), uvec2(0u, 0u) | ((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))))))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp(_GLF_IDENTITY((uvec2(subgroup_size, 1u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (true ? (uvec2(subgroup_size, 1u)) : _GLF_FUZZED(uvec2(106441u, 133265u))))) ^ uvec2(0u, 0u)))), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))))))), (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_size, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), (uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp((uvec2(subgroup_size, 1u)), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)), uvec2(0u, 0u) + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_size, 1u), min(uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), min(uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u))), uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), _GLF_IDENTITY(uvec2(8u), (uvec2(8u)) + uvec2(0u, 0u)))), uvec2(0u, 0u) | (_GLF_IDENTITY((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, max(1u, 1u)), 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u))), uvec2(0u, 0u) | ((uvec2(subgroup_size, _GLF_IDENTITY(1u, max(1u, 1u)))) << (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(8u), uvec2(8u)))))))), uvec2(0u, 0u) | _GLF_IDENTITY((uvec2(subgroup_size, 1u)), clamp(_GLF_IDENTITY((uvec2(subgroup_size, 1u)), uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (_GLF_IDENTITY((uvec2(subgroup_size, 1u)), (true ? (uvec2(subgroup_size, 1u)) : _GLF_FUZZED(uvec2(106441u, 133265u))))) ^ uvec2(0u, 0u)))), _GLF_IDENTITY((uvec2(subgroup_size, 1u)), ((uvec2(subgroup_size, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_size, 1u))))), uvec2(subgroup_size, 1u), uvec2(subgroup_size, 1u)))))))) | 0u))), (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((0u ^ _GLF_IDENTITY(0u, (0u) | 0u)), (0u ^ 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(uint(false)), (true ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(uint(false), clamp(uint(false), uint(false), uint(false)))), uint(uvec2(_GLF_FUZZED(uint(_GLF_IDENTITY(false, bool(bool(false))))), 0u))) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id), ((false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)) | 0u, max((_GLF_IDENTITY(0u, (0u) << 0u)) | 0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) << 0u)) | 0u, ((_GLF_IDENTITY(0u, (0u) << 0u)) | 0u) | 0u))))), (0u ^ 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED((num_workgroup + workgroup_id)), (_GLF_FUZZED((num_workgroup + workgroup_id))) ^ 0u) : _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (0u ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) << 0u)))), (min(0u, 0u)) >> 0u)) ^ 0u), max((0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> ((_GLF_IDENTITY(0u | _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)), (uint(uvec2(_GLF_IDENTITY(0u, (0u) | (0u)), 0u))) >> 0u)), clamp(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec2(0u | 0u, 0u), uvec2(_GLF_IDENTITY(uvec3(uvec2(0u | 0u, 0u), 1u), (false ? _GLF_FUZZED((uvec3(10773u, 24939u, 39690u) << num_workgroup)) : uvec3(uvec2(0u | 0u, 0u), 1u))))))), _GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (_GLF_IDENTITY(0u, max(0u, 0u))) >> 0u)))) | 0u, 0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))) | 0u)), (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) | 0u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), _GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)), (_GLF_IDENTITY(min(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)), min(min(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))), (_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u))))) * 1u)), max((0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec2(0u | 0u, 0u), uvec2(uvec3(uvec2(0u | 0u, 0u), 1u))))), 0u | 0u, 0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), ((_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec2(0u | 0u, 0u), uvec2(uvec3(uvec2(0u | 0u, 0u), 1u))))), 0u | 0u, 0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) | (_GLF_IDENTITY((_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec2(0u | 0u, 0u), uvec2(uvec3(uvec2(0u | 0u, 0u), 1u))))), 0u | 0u, 0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), min((_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec2(0u | 0u, 0u), uvec2(uvec3(uvec2(0u | 0u, 0u), 1u))))), 0u | 0u, 0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(0u | 0u, clamp(_GLF_IDENTITY(0u | 0u, uint(_GLF_IDENTITY(uvec2(0u | 0u, 0u), uvec2(uvec3(uvec2(0u | 0u, 0u), 1u))))), 0u | 0u, 0u | 0u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))))))) | 0u)), (0u ^ 0u))))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) || false))), min(_GLF_FUZZED(uint(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) || false))), _GLF_FUZZED(uint(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) || false))))), (_GLF_FUZZED(uint(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) || false)))) | (_GLF_FUZZED(uint(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) || false))))), (true ? _GLF_IDENTITY(_GLF_FUZZED(uint(false)), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(uint(false)), 0u)), (uint(uvec2(_GLF_FUZZED(uint(false)), 0u))) | (uint(uvec2(_GLF_FUZZED(uint(false)), 0u))))) : _GLF_FUZZED(subgroup_size))), 0u + (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ 0u), max((0u ^ _GLF_IDENTITY(0u, (0u) | 0u)), (0u ^ 0u))), min(_GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, 0u)) ^ _GLF_IDENTITY(0u, min(0u, 0u))), max((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u))) * 1u))), max(0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u))) * 1u))), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u)), (~ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) - 0u)) | 0u))) * 1u)))))), (0u ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, uint(uint(0u))))))) ^ 0u), max((0u ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ((0u)) >> ((0u | 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), min(uint(2u), _GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED((subgroup_id ^ num_workgroup)) : uint(2u))))), uint(_GLF_IDENTITY(2u, (2u) >> 0u))))) | 0u)), (0u ^ 0u)))))) : _GLF_IDENTITY(_GLF_FUZZED(uint(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), true, false, false))) || false))), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uvec2(_GLF_FUZZED(_GLF_IDENTITY(uint(false), (false ? _GLF_FUZZED(subgroup_local_id) : uint(false)))), 0u))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(10551u)))), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) ^ 0u))) : _GLF_FUZZED(10551u))))) >> 0u))))), (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u)) | (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u))))), (subgroup_id) | (subgroup_id)) * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) << _GLF_IDENTITY(0u, (0u) | (0u))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), min((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, (0u) | (0u)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (subgroup_id * subgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))), (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))) : _GLF_FUZZED(workgroup_size)))) * 1u))), _GLF_IDENTITY((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) << 0u))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), (~ (~ (subgroup_id * subgroup_size))) << 0u)))), _GLF_IDENTITY(0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), _GLF_IDENTITY((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, uint(uvec3(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id)), 0u, (1u ^ 1u)))) * subgroup_size), (~ (subgroup_id * subgroup_size)) << 0u))))))) >> uint(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-26.37)), float(0.0), bool(true))), injectionSwitch.x)), ((0u | _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size)))))), ((workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))))) | 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) | ((0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size))))))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u ^ (3u))), uint(3u)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(0u, (0u) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), (true ? 0u << _GLF_IDENTITY(uint(3u), uint(3u)) : _GLF_FUZZED(subgroup_local_id))))))), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), uint(3u), uint(3u))), uint(3u)))), 0u, 0u, 1u)) ^ _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY((uvec4(0u, 0u, 0u, 0u)), ((uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(4u), uvec4(4u))))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(3u), uint(3u)), max(0u << _GLF_IDENTITY(uint(3u), uint(3u)), 0u << _GLF_IDENTITY(uint(3u), uint(3u)))))), 0u, _GLF_IDENTITY(0u, (0u) / 1u), 1u), (uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, (0u) ^ (0u << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u, 1u), (uvec4(_GLF_IDENTITY(0u, (0u) ^ (_GLF_IDENTITY(0u, (0u) - 0u) << _GLF_IDENTITY(uint(3u), uint(3u)))), 0u, 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))))), 0u)) ^ 0u), max((_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (0u) | 0u), (0u ^ _GLF_IDENTITY(0u, (0u) | 0u)) | (_GLF_IDENTITY(0u ^ _GLF_IDENTITY(0u, (0u) | 0u), 0u | (0u ^ _GLF_IDENTITY(0u, (0u) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec4(80788u, 101523u, 54612u, 188873u)[3]) : 0u))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | (_GLF_IDENTITY(0u, (0u) | 0u))), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | (_GLF_IDENTITY(0u, (0u) | 0u))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | 0u), (_GLF_IDENTITY(0u, (0u) | 0u)) * 1u), _GLF_IDENTITY(0u, (0u) | 0u), _GLF_IDENTITY(0u, (0u) | 0u)))))))))), _GLF_IDENTITY((167936u & 0u) | (_GLF_IDENTITY(0u, ~ (~ (0u)))), ((167936u & 0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))) ^ (0u | 0u))) ^ 0u)))) : _GLF_IDENTITY(_GLF_FUZZED(uint(false)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), clamp(_GLF_FUZZED(uint(false)), _GLF_FUZZED(uint(false)), _GLF_IDENTITY(_GLF_FUZZED(uint(false)), (_GLF_FUZZED(uint(false))) << 0u))), 0u))), uint(uvec4(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), uint(uvec2(_GLF_IDENTITY(_GLF_FUZZED(uint(false)), clamp(_GLF_FUZZED(uint(false)), _GLF_FUZZED(uint(false)), _GLF_IDENTITY(_GLF_FUZZED(uint(false)), (_GLF_FUZZED(uint(false))) << 0u))), 0u))), (1u ^ 0u), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) << 0u))))) * 1u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) ^ 0u)) / 1u)))) * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), bool(bvec4(! ((_GLF_DEAD(false))), false, true, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(mat2x4((injectionSwitch.x) / 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), injectionSwitch)))).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)), false || (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))))), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_IDENTITY(_GLF_FUZZED(43624), (_GLF_FUZZED(43624)) ^ 0))), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y))))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) >> 0u)], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6772.9088) : injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true, (true) || false) && (false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, (read_2) - 0u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))))), (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}
