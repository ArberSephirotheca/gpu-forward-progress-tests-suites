#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), (((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))), (((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), bool(bvec3(_GLF_IDENTITY(false || (false || (! _GLF_IDENTITY((false), ! (! ((false)))))), ! (_GLF_IDENTITY(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), bool(bvec3(! (false || (false || (! _GLF_IDENTITY((false), ! (! ((false))))))), false, false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true))))))))))))), true, true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! ((false)))))), false || (! (! ((false))))))))))))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), false || (! (! (_GLF_IDENTITY((false), ((false)) || false))))))))))))))), true, true), false))), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y))))))))))))))))))), true, true), false)), true)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)))) && true), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((false))))))))))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), false || _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((false))))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((false))))))))), ! (! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ! (! ((! _GLF_IDENTITY((false), ! (! ((false)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) || false), true, true), false)), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false) || (true)) || false)), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))) || false)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(3.8, -648.239)))).x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, false || (false)))))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))) && true))))) && true)) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec3(bvec2((false), true), true))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true)))))), false))))))))), ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2((false), true)), bvec2(bvec2(bvec2(bvec2((false), true))))), true, false))))), _GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true)))), true), false)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2((false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((false), true))), bvec2(bvec4(bvec2(bvec2(bvec2((false), true))), false, true)))), true), false)))))))))))))) && true)))) && true))) || false))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(uintBitsToFloat(subgroup_id)) : injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.4), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(49.38)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) - _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.5)), bool(false)))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true), bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true), bvec2(bvec2(bvec2((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), true)))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false))))))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : workgroup_base)), uint(uint(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)))) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4570.7459)), float(injectionSwitch.y), bool(true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id) ^ 0u))), ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id, (false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id) ^ 0u)))))), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)), (_GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(3u), uint(3u)))) : _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(108913u & 0u, uint(uint(108913u & 0u)))) ^ (subgroup_id)), (true ? false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id : _GLF_FUZZED(virtual_gid)))) << 0u)))) - 0u) * subgroup_size, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id)), (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (false)) ? _GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)) : subgroup_id)), (true ? false ? _GLF_IDENTITY(_GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base)), (_GLF_FUZZED(atomicExchange(subgroup_id, workgroup_base))) / 1u) : _GLF_IDENTITY(subgroup_id, max(subgroup_id, _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), 0u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)), _GLF_IDENTITY(0u, (0u) * 1u))), uint(uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | (subgroup_id), 0u | (_GLF_IDENTITY((subgroup_id) | (subgroup_id), ~ (~ (_GLF_IDENTITY((subgroup_id) | (subgroup_id), ((subgroup_id) | (subgroup_id)) ^ 0u))))))), 0u))))))) : _GLF_FUZZED(virtual_gid)))) << 0u)))) - 0u) * subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false), true, true)), false, false)))))), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec2(false, true)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), false))))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) || false))) && true))))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) && true, bool(bvec4((_GLF_IDENTITY(false, false || (false))) && true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true) && true)))))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))))))))), true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec3(bool(bvec4(false, true, false, true)), true, true)))), true, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(1186.4742)), bool(_GLF_IDENTITY(false, ! (! (false)))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0))), 0.0, 1.0, 0.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), sin(0.0), 1.0))), mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1))]), vec2(_GLF_FUZZED(((398.626 - -6.9) / -9.6)), _GLF_FUZZED(_GLF_IDENTITY(91.51, float(vec4(91.51, 0.0, 1.0, cos(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-261.208)), vec2(_GLF_FUZZED(228.784), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4.4), (_GLF_FUZZED(-4.4)) * 1.0)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), false || (bool(true)))))), clamp(mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + tan(0.0))), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true))))), float(_GLF_FUZZED(2305.3965)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))))))))), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.9, -6.5)))))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, ~ (~ ((1) - 0)))))), int(ivec4(1, 1, 0, 0))), 1, 1))]), vec2(_GLF_FUZZED(((398.626 - -6.9) / _GLF_IDENTITY(-9.6, (false ? _GLF_FUZZED(-4.1) : -9.6)))), _GLF_FUZZED(_GLF_IDENTITY(91.51, float(vec4(91.51, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 1.0, cos(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, true))))))), clamp(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))))) / vec2(1.0, 1.0)).x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true))))), float(_GLF_FUZZED(2305.3965)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))))))))), bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(35798, 87885, -60785)) : ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0 ^ (int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(35798, 87885, -60785)) : ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))], injectionSwitch[1])))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(35798, 87885, -60785)) : ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0 ^ (int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(35798, 87885, -60785)) : ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))], injectionSwitch[1])))).x, (false ? _GLF_FUZZED(-173.558) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(35798, 87885, -60785)) : ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))), 0 ^ (int(_GLF_IDENTITY(ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (false ? _GLF_FUZZED(ivec3(35798, 87885, -60785)) : ivec3(0, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))))))))], injectionSwitch[1])))).x))) - 0.0) > injectionSwitch.y))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1), _GLF_IDENTITY(int(int(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1)) ^ 0))), ~ (_GLF_IDENTITY(~ (int(int(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1)) ^ 0)))), (~ (int(int(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) - 0))), int(ivec4(1, 1, 0, 0))), 1, 1)) ^ 0))))) ^ 0)))))]), _GLF_IDENTITY(vec2(_GLF_FUZZED(((398.626 - -6.9) / _GLF_IDENTITY(-9.6, mix(float(_GLF_FUZZED(223.044)), float(-9.6), bool(true))))), _GLF_FUZZED(_GLF_IDENTITY(91.51, float(vec4(91.51, 0.0, 1.0, cos(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true))))), float(_GLF_FUZZED(2305.3965)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))))))))), (_GLF_IDENTITY(vec2(_GLF_FUZZED(((398.626 - -6.9) / -9.6)), _GLF_FUZZED(_GLF_IDENTITY(91.51, float(vec4(91.51, 0.0, 1.0, cos(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), bool(true))))), float(_GLF_FUZZED(2305.3965)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x))))))))), (vec2(_GLF_FUZZED(((398.626 - -6.9) / -9.6)), _GLF_FUZZED(_GLF_IDENTITY(91.51, float(vec4(91.51, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), cos(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(31.17)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(true)), mix(float(_GLF_FUZZED(-4.4)), float(injectionSwitch.x), bool(true))))), float(_GLF_FUZZED(2305.3965)), bool(false)))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))))), injectionSwitch.x)))))))))) * mat2(1.0))) * vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.2) : 1.0)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0)))), bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))), false, true, false)))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))).y))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.6)), bool(false))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.8)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(7948.5485)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-838.100)), bool(false)))))))))))))), true && (! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) || (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-73.92), _GLF_FUZZED(-8.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(2291.8849, 37.96)) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))) || false)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y)))), false || (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), true, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u) == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) - 0u, ~ (_GLF_IDENTITY(~ ((read_2) - 0u), (~ ((read_2) - 0u)) | (~ ((read_2) - 0u)))))), (_GLF_IDENTITY(read_1, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, max(read_1, read_1)), (_GLF_IDENTITY(read_1, max(read_1, read_1))) * 1u)) ^ 0u) == _GLF_IDENTITY(read_2, (read_2) - 0u)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, ! (! (false))))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u) == read_2), uint(uvec2(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u) == read_2), 0u))), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u) == read_2), uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) ^ 0u) == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(0.0, exp(0.0), 0.0))), ((injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.5)), float(0.0), bool(true))), exp(0.0), 0.0)), dot(_GLF_IDENTITY(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(vec4(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), 0.0))), vec3(0.0, exp(0.0), 0.0)))) - 0.0))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(0.0, exp(0.0), 0.0)), dot(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(0.0, exp(0.0), 0.0))), ((injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))), 1.0, 0.0), vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.5)), float(0.0), bool(true))), exp(0.0), 0.0)), dot(_GLF_IDENTITY(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), vec3(vec4(vec3(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0), 0.0))), vec3(0.0, exp(0.0), 0.0)))) - 0.0))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(16477, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(16477, (16477) | (16477)), 0, 0, 0)), (true ? int(ivec4(_GLF_IDENTITY(16477, (16477) | (16477)), 0, 0, 0)) : _GLF_FUZZED(-91484)))) >> 27489), clamp((16477 >> 27489), (16477 >> 27489), _GLF_IDENTITY((16477 >> 27489), ((16477 >> 27489)) | ((_GLF_IDENTITY(16477 >> 27489, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(16477, _GLF_IDENTITY(0, ~ (~ (0))) | (16477)) >> 27489), min((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), _GLF_IDENTITY((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), min((_GLF_IDENTITY(16477, _GLF_IDENTITY(0, min(0, 0)) | (16477)) >> 27489), (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))))) : 4)) : _GLF_FUZZED(-26779), min(true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((16477 >> 27489), clamp((16477 >> 27489), (16477 >> 27489), _GLF_IDENTITY((16477 >> 27489), ((16477 >> 27489)) | ((_GLF_IDENTITY(16477 >> _GLF_IDENTITY(27489, ~ (~ (_GLF_IDENTITY(27489, (true ? 27489 : _GLF_FUZZED(-2814)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489)), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(16477, (_GLF_IDENTITY(16477, _GLF_IDENTITY(int(ivec3(16477, 0, 0)), clamp(int(ivec3(16477, 0, 0)), int(ivec3(16477, 0, 0)), int(ivec3(16477, 0, 0)))))) << (-59907 & 0)), 0 | (16477)) >> 27489))) + 0)))))))) : 4)) : _GLF_FUZZED(-26779), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))))))) ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(16477, int(int(_GLF_IDENTITY(16477, ~ (~ (16477)))))) >> 27489), clamp((16477 >> 27489), (_GLF_IDENTITY(16477, (16477) - 0) >> 27489), _GLF_IDENTITY((16477 >> 27489), ((_GLF_IDENTITY(16477 >> 27489, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), max((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), (_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489))))))) | ((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489))))))))) | ((_GLF_IDENTITY(16477 >> 27489, ~ (~ (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489))))))))) : 4)) : _GLF_FUZZED(-26779)))), (_GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(16477, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(16477, (16477) | (16477)), 0, 0, 0)), (true ? int(ivec4(_GLF_IDENTITY(16477, (16477) | (16477)), 0, 0, 0)) : _GLF_FUZZED(-91484)))) >> 27489), clamp((16477 >> 27489), (16477 >> 27489), _GLF_IDENTITY((16477 >> 27489), ((16477 >> 27489)) | ((_GLF_IDENTITY(16477 >> 27489, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(16477, _GLF_IDENTITY(0, ~ (~ (0))) | (16477)) >> 27489), min((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), _GLF_IDENTITY((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), min((_GLF_IDENTITY(16477, _GLF_IDENTITY(0, min(0, 0)) | (16477)) >> 27489), (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))))) : 4)) : _GLF_FUZZED(-26779), min(true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((16477 >> 27489), clamp((16477 >> 27489), (16477 >> 27489), _GLF_IDENTITY((16477 >> 27489), ((16477 >> 27489)) | ((_GLF_IDENTITY(16477 >> _GLF_IDENTITY(27489, ~ (~ (_GLF_IDENTITY(27489, (true ? 27489 : _GLF_FUZZED(-2814)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489)), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(16477, (_GLF_IDENTITY(16477, _GLF_IDENTITY(int(ivec3(16477, 0, 0)), clamp(int(ivec3(16477, 0, 0)), int(ivec3(16477, 0, 0)), int(ivec3(16477, 0, 0)))))) << (-59907 & 0)), 0 | (16477)) >> 27489))) + 0)))))))) : 4)) : _GLF_FUZZED(-26779), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))))))) ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(16477, int(int(_GLF_IDENTITY(16477, ~ (~ (16477)))))) >> 27489), clamp((16477 >> 27489), (_GLF_IDENTITY(16477, (16477) - 0) >> 27489), _GLF_IDENTITY((16477 >> 27489), ((_GLF_IDENTITY(16477 >> 27489, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), max((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), (_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489))))))) | ((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489))))))))) | ((_GLF_IDENTITY(16477 >> 27489, ~ (~ (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489))))))))) : 4)) : _GLF_FUZZED(-26779)))), int(ivec4((_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(16477, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(16477, (16477) | (16477)), 0, 0, 0)), (true ? int(ivec4(_GLF_IDENTITY(16477, (16477) | (16477)), 0, 0, 0)) : _GLF_FUZZED(-91484)))) >> 27489), clamp((16477 >> 27489), (16477 >> 27489), _GLF_IDENTITY((16477 >> 27489), ((16477 >> 27489)) | ((_GLF_IDENTITY(16477 >> 27489, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(16477, _GLF_IDENTITY(0, ~ (~ (0))) | (16477)) >> 27489), min((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), _GLF_IDENTITY((_GLF_IDENTITY(16477, 0 | (16477)) >> 27489), min((_GLF_IDENTITY(16477, _GLF_IDENTITY(0, min(0, 0)) | (16477)) >> 27489), (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489))))), 1, int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))))))) : 4)) : _GLF_FUZZED(-26779), min(true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((16477 >> 27489), clamp((16477 >> 27489), (16477 >> 27489), _GLF_IDENTITY((16477 >> 27489), ((16477 >> 27489)) | ((_GLF_IDENTITY(16477 >> _GLF_IDENTITY(27489, ~ (~ (_GLF_IDENTITY(27489, (true ? 27489 : _GLF_FUZZED(-2814)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489)), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(16477, (_GLF_IDENTITY(16477, _GLF_IDENTITY(int(ivec3(16477, 0, 0)), clamp(int(ivec3(16477, 0, 0)), int(ivec3(16477, 0, 0)), int(ivec3(16477, 0, 0)))))) << (-59907 & 0)), 0 | (16477)) >> 27489))) + 0)))))))) : 4)) : _GLF_FUZZED(-26779), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, false, false, false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, true && (true))))))), false || (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), (true && (true)) && true))))))) ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(16477, int(int(_GLF_IDENTITY(16477, ~ (~ (16477)))))) >> 27489), clamp((16477 >> 27489), (_GLF_IDENTITY(16477, (16477) - 0) >> 27489), _GLF_IDENTITY((16477 >> 27489), ((_GLF_IDENTITY(16477 >> 27489, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), max((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489)))), (_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489))))))) | ((_GLF_IDENTITY(~ (16477 >> 27489), 0 | (~ (16477 >> 27489))))))))) | ((_GLF_IDENTITY(16477 >> 27489, ~ (~ (_GLF_IDENTITY(16477, 0 | (16477)) >> 27489))))))))) : 4)) : _GLF_FUZZED(-26779)))), 1, 1, 0)))) | 0)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), ~ (~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), ~ (~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), ~ (~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4)))))))))))) + _GLF_IDENTITY(0, (0) >> 0)), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), ~ (~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4)))))))))) + 0, (_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4))))), ~ (~ (_GLF_IDENTITY((4), max((4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(20477) : (4)))))))))) + 0) ^ 0))) ^ 0)) | (_GLF_IDENTITY(4, (4) - 0)))))) - (0 | _GLF_IDENTITY(0, (0) / 1))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (false) && _GLF_IDENTITY(true, (true) && true)))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))), (vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0))), mat2(1.0) * (vec2(_GLF_IDENTITY(vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0))), (vec4(injectionSwitch, 1.0, length(vec2(0.0, 0.0)))) / vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0)))))).x > injectionSwitch.y)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))) || false, _GLF_IDENTITY(bool(bvec4((bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_IDENTITY((bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) && true)), true, true)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, _GLF_IDENTITY(3686.6045, (_GLF_IDENTITY(3686.6045, min(3686.6045, _GLF_IDENTITY(3686.6045, clamp(3686.6045, 3686.6045, _GLF_IDENTITY(3686.6045, _GLF_IDENTITY(max(3686.6045, 3686.6045), max(max(3686.6045, 3686.6045), max(3686.6045, 3686.6045))))))))) / 1.0)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(-3.2, clamp(-3.2, _GLF_IDENTITY(_GLF_IDENTITY(-3.2, mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false))), (_GLF_IDENTITY(-3.2, _GLF_IDENTITY(mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false)), (mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false))) / cos(0.0)))) / 1.0), -3.2)), (_GLF_IDENTITY(-3.2, _GLF_IDENTITY(clamp(-3.2, _GLF_IDENTITY(_GLF_IDENTITY(-3.2, mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false))), (_GLF_IDENTITY(-3.2, _GLF_IDENTITY(mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false)), (mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false))) / cos(0.0)))) / 1.0), -3.2), (clamp(-3.2, _GLF_IDENTITY(_GLF_IDENTITY(-3.2, mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false))), (_GLF_IDENTITY(-3.2, _GLF_IDENTITY(mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false)), (mix(float(-3.2), float(_GLF_FUZZED(-76.70)), bool(false))) / cos(0.0)))) / 1.0), -3.2)) - 0.0))) / 1.0), 5363.3898))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(mat2(mat2x3(transpose((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0)))), (mat2(mat2x3(transpose((mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))))) * (_GLF_IDENTITY(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 0.0)), mix(float(float(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), cos(0.0), 1.0, 1.0, 0.0, 0.0))), float(_GLF_FUZZED(941.994)), bool(false))))) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4x2(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((true ? vec3(-140.541, 4.2, 2.0).p : -8671.9603))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(vec2(70.75, -8741.3280)) : mat2(1.0) * (injectionSwitch)))))), 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat3x2(6.1, -71.15, -9.1, 9.9, 3.8, -3384.5880)) : _GLF_IDENTITY(mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), mat2(1.0) * (injectionSwitch)), vec2(mat4x2(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x2(_GLF_IDENTITY(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), vec2(mat4x2(false ? _GLF_FUZZED(fma(injectionSwitch, vec2(1880.7291, 3686.6045), vec2(-3.2, 5363.3898))) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, exp(0.0), 0.0, 0.0, 0.0, 1.0))), 1.0, 0.0, 1.0, 1.0)))))))))))).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.0)), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-568.271)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))
  return;
}
