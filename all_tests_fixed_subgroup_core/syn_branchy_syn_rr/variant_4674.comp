#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false))))), float(_GLF_FUZZED(-1965.2590)), bool(false)))), (float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false)))), mix(float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3.3)), bool(false))))), float(_GLF_FUZZED(-1965.2590)), bool(false))))) / 1.0))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(bvec3(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + determinant(mat2(0.0, 0.0, tan(0.0), sin(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), exp(0.0), 1.0, 1.0))))))))), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)) || false))), _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), false || (_GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0), (true ? (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))), injectionSwitch)).y, false, false, false)), ! (! (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2678.3701) : injectionSwitch.y))) * 1.0))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.93)), float(injectionSwitch.y), bool(true))), injectionSwitch.y), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.93)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(true))), injectionSwitch.y), mix(float(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.93)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), float(_GLF_FUZZED(-390.546)), bool(false)))) / 1.0)))), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.4), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(865.140)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), max(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), max(_GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), (false ? _GLF_FUZZED(vec2(6.0, -40.57)) : clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))), bool(_GLF_IDENTITY(bvec2(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))), false), bvec2(bvec2(bvec2(false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), true && (! (((injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))), false))))))) && true))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(25.45), _GLF_FUZZED(-466.345)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))).y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((false ? -6415.9303 : -2.1)), _GLF_FUZZED(-58.55)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(sqrt(vec2(-9.5, -86.44))))).y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED((- 8.1))), bool(false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(887.008), _GLF_FUZZED(-49.89)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false))))))).x) - 0.0) > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch)).y) * 1.0)), bool(true))), injectionSwitch.y), (_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(96.93), max(_GLF_FUZZED(96.93), _GLF_FUZZED(96.93)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y), mix(float(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(96.93)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (_GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))))))), injectionSwitch.y)), float(_GLF_FUZZED(-390.546)), bool(false)))) / 1.0)))), false || (bool(bool(injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-7.4, min(-7.4, -7.4))), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(865.140)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) * vec2(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), max(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))))) * vec2(1.0, 1.0)) - vec2(0.0, 0.0))).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3632.2033), _GLF_FUZZED(-2.5)), bvec2(false, false))).y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1993.5301))))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1993.5301))))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y)))))))), true, true, false)), true && (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1993.5301))))))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y)))))))), true, true, false)))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((- -30.22)), _GLF_FUZZED(float((+ 188714u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), false, false, false))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(45.64)))) + 0.0) > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), true && ((((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), true && ((((injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), true && ((((injectionSwitch.x > injectionSwitch.y)))))))))))))), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.9)), bool(false))) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-307.367), _GLF_FUZZED(-485.712)), bvec2(false, false))).y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.9)), bool(false))) > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-307.367), _GLF_FUZZED(-485.712)), bvec2(false, false))).y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.9))) > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bool((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (false))))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.0), _GLF_FUZZED((-23.26 + -875.449))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).y))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * _GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(3.6, -3.8))))).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, log(1.0) + (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(22.61) : injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))))))))))), true && (_GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, false, false)))))))))))), ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false), false, false, false))))))))))))) && true))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)))), true && (! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)), _GLF_IDENTITY((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0), _GLF_IDENTITY(min((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0), (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)), mat2(1.0) * (min((clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0), (clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0))))))) * vec2(1.0, 1.0)).y) && true)), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || ((bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false)), bool(bool(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))))) || false)))))))) && true)), ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) || (((injectionSwitch.x > injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) || (((injectionSwitch.x > injectionSwitch.y))))))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false))))))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false))))))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false)))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 1.0, 0.0)), 1.0, 0.0, 0.0, abs(0.0), determinant(mat3(1.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0))).y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true) || false))))))), true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))) && true)))))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true, false || (_GLF_IDENTITY((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true, ((! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true) || false))))), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * vec2(1.0, 1.0)).y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))) && true)), ((_GLF_IDENTITY(! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y))))))), (! (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) || ((! (((injectionSwitch.x > injectionSwitch.y))))))))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))))))))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (! (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) + 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(min(subgroup_id, subgroup_id), (min(subgroup_id, subgroup_id)) / 1u)) * subgroup_size, clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, uint(uvec4(workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size, 1u, 1u, 1u))), workgroup_base + _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size), clamp(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))) + ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), tan(determinant(_GLF_IDENTITY(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (0.0) / 1.0), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))))), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, float(mat4x3(0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, sqrt(1.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))), 1.0, 0.0, 1.0))))), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), transpose(transpose(_GLF_IDENTITY(transpose(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))))), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(mat4(-7.3, -5.8, 5370.5856, 933.310, -987.935, -4926.5262, -9117.6127, -6954.1955, 790.636, -7895.9475, -54.86, 8282.9851, 8353.4311, 5.8, 6.0, -346.321)) : transpose(mat4(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, float(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(2.6) : min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)))), 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0))))))), 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))))))))))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) && true, bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y) && true, true, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y) && true, true, true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (true ? _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])) : _GLF_FUZZED(subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), min(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))))), _GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(uint(buf[virtual_gid]))), _GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid])))))))) ^ 0u), 4, 64, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) / 1)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.7) : injectionSwitch.x)), injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(151.986) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (false ? _GLF_FUZZED(151.986) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - abs(0.0))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))))).y))))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, (uint(read_1 == read_2) + 1) | (_GLF_IDENTITY(uint(read_1 == read_2) + 1, uint(uvec3(uint(read_1 == read_2) + 1, 1u, 0u))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), clamp(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) | 0))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(971.325)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(971.325)), _GLF_IDENTITY(bool(false), true && (bool(false)))))), false, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bool(bool(bvec3(false, false, true))))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), false, false))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(123159u, 169111u, 10082u, 103302u)) : uvec4(read_1, 1u, 1u, 1u)))), min(uint(_GLF_IDENTITY(uvec4(read_1, 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(123159u, 169111u, 10082u, 103302u)) : uvec4(read_1, 1u, 1u, 1u)))), uint(_GLF_IDENTITY(uvec4(read_1, 1u, 1u, 1u), (false ? _GLF_FUZZED(uvec4(123159u, 169111u, 10082u, 103302u)) : uvec4(read_1, 1u, 1u, 1u))))))) == read_2)))))), uint(read_1 == read_2))), uint(read_1 == read_2)))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) >> 0u), 1u * (0u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) >> _GLF_IDENTITY(uint(8u), uint(8u)))) + 1, ~ (~ (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), ~ (~ (uint(read_1 == read_2)))))), uint(read_1 == read_2))), uint(read_1 == read_2)))) | (_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (1u ^ 1u) | (_GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), uint(_GLF_IDENTITY(uint((0u)), ~ (~ (uint((0u)))))))) / 1u))) >> 0u), 1u * (0u))) ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) >> _GLF_IDENTITY(uint(8u), uint(8u)))) + 1))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.2)), vec2(_GLF_FUZZED(-4.4), (injectionSwitch)[_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, int(ivec3(1, 1, 0))))]), bvec2(false, true))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}
