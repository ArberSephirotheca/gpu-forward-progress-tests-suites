#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_32 {
 uint _f0;
 vec2 _f1;
} ;

struct _GLF_struct_31 {
 uvec4 _f0;
 uvec3 _f1;
 bvec2 _f2;
 uvec3 _f3;
 uint _f4;
} ;

struct _GLF_struct_33 {
 _GLF_struct_31 _f0;
 _GLF_struct_32 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_30 {
 uvec3 _f0;
 uint num_workgroup;
} ;

struct _GLF_struct_28 {
 mat2x4 _f0;
 ivec4 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 ivec3 _f4;
 uint _f5;
} ;

struct _GLF_struct_27 {
 float _f0;
 mat3 _f1;
 vec4 _f2;
 mat4x3 _f3;
 bvec3 _f4;
 mat4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
 ivec3 _f1;
 mat2 _f2;
 bvec4 _f3;
 vec4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_29 {
 int _f0;
 ivec3 _f1;
 _GLF_struct_26 _f2;
 bvec4 _f3;
 _GLF_struct_27 _f4;
 mat2 _f5;
 _GLF_struct_28 _f6;
} ;

struct _GLF_struct_34 {
 mat3 _f0;
 float _f1;
 mat4x3 _f2;
 _GLF_struct_29 _f3;
 _GLF_struct_30 _f4;
 _GLF_struct_33 _f5;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
 mat2x3 _f1;
 uint _f2;
} ;

struct _GLF_struct_23 {
 vec4 _f0;
 _GLF_struct_22 _f1;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 uint _f1;
 vec3 _f2;
 ivec4 _f3;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 _GLF_struct_20 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_18 {
 mat2x3 _f0;
 int _f1;
 uvec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_17 {
 mat2 _f0;
 uvec4 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_16 {
 vec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 float _f3;
} ;

struct _GLF_struct_19 {
 _GLF_struct_16 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_18 _f2;
 uint read_1;
 vec4 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_25 {
 _GLF_struct_19 _f0;
 _GLF_struct_21 _f1;
 _GLF_struct_23 _f2;
 _GLF_struct_24 _f3;
 bool _f4;
 mat2x3 _f5;
 float _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 bvec2 _f1;
 mat3x2 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_12 {
 mat4x2 _f0;
 vec2 _f1;
 vec2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 bvec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
 uint subgroup_local_id;
 mat2x3 _f1;
 bool _f2;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 uvec4 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 mat2 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 int _f2;
 _GLF_struct_10 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_6 {
 float _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_4 {
 mat2 _f0;
 uvec3 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_2 {
 float _f0;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat2x4 _f1;
 vec3 _f2;
 mat2x3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat4 _f1;
 vec2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 int _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_3 _f0;
 float _f1;
 vec4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_11 _f5;
 _GLF_struct_14 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))) && true)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, 405.592))), clamp((true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, 405.592))), (true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, 405.592))), (true ? injectionSwitch : _GLF_FUZZED(vec2(20.78, 405.592)))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch))) + _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))), 1.0, 0.0)), mat2(1.0) * (vec2(mat2x3(injectionSwitch, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0))), 1.0, 0.0)))))))) + _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, abs(0.0)), (vec2(0.0, abs(0.0))) + vec2(0.0, 0.0)))), injectionSwitch.x))), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), clamp(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-81.03)), float(1.0), bool(true))))), 1.0) * (vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))), _GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x)))))), ((_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x))))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2(0.0, 0.0) + (_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.7)), bool(false))), injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), min(_GLF_IDENTITY(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(179.540)), float(float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), bool(true))), float(mat3x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), injectionSwitch.x)))))))))), _GLF_IDENTITY(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.6))), 0.0)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), vec2(vec2(_GLF_IDENTITY(vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(vec2(-696.455, -6.8)) : vec2(1.0, 1.0) * (vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))))))).y))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_3(_GLF_struct_0(mat4x3(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(906.703), (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(906.703), max(true ? 1.0 : _GLF_FUZZED(906.703), true ? 1.0 : _GLF_FUZZED(906.703)))) + 0.0))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(906.703)))), float(_GLF_FUZZED(-6.5)), bool(false)))), transpose(transpose(mat4(1.0)))), vec2(1.0), _GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))), (true ? transpose(mat2(1.0)) : _GLF_FUZZED(mat2(1.5, 164.378, 5.6, 7.1)))))), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(transpose(mat2(_GLF_IDENTITY(1.0, float(mat4x2(1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), log(sqrt(1.0)), _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 0.0))), 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0)))))), (true ? transpose(mat2(1.0)) : _GLF_FUZZED(mat2(1.5, 164.378, 5.6, 7.1)))))), _GLF_IDENTITY(_GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x2((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x2((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x2((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))) + mat2(0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat2(0.2, 8.0, 0.5, -9.4)) : transpose(_GLF_IDENTITY(_GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x2((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0), mat2(mat4x2((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))))) + mat2(0.0, 0.0, 0.0, 0.0))))))))) * mat2(1.0))))), _GLF_struct_1(ivec4(1), mat2x4(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY((false ? 5.6 : -80.84), clamp((false ? 5.6 : -80.84), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true))) ? 5.6 : -80.84), (false ? 5.6 : -80.84))))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9663.3811)), float(1.0), bool(true))), 1.0))), bool(true)), float(_GLF_IDENTITY(vec2(mix(float(_GLF_FUZZED(_GLF_IDENTITY((false ? 5.6 : -80.84), clamp((false ? 5.6 : -80.84), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true))) ? 5.6 : -80.84), (false ? 5.6 : -80.84))))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9663.3811)), float(1.0), bool(true))), 1.0))), bool(true)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(vec2((vec2(mix(float(_GLF_FUZZED(_GLF_IDENTITY((false ? 5.6 : -80.84), clamp((false ? 5.6 : -80.84), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true))) ? 5.6 : -80.84), (false ? 5.6 : -80.84))))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9663.3811)), float(1.0), bool(true))), 1.0))), bool(true)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))[0], _GLF_FUZZED(-4.6)), vec2(_GLF_FUZZED(-6.8), (vec2(mix(float(_GLF_FUZZED(_GLF_IDENTITY((false ? 5.6 : -80.84), clamp((false ? 5.6 : -80.84), (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true))), true))) ? 5.6 : -80.84), (false ? 5.6 : -80.84))))), float(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9663.3811)), float(1.0), bool(true))), 1.0))), bool(true)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))[1]), bvec2(false, true))))))), mat2x3(1.0), mat2(1.0)), 1, _GLF_struct_2(_GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, vec4(1.0), _GLF_struct_5(_GLF_struct_4(mat2(1.0), uvec3(1u), vec2(1.0)), bvec4(true)), _GLF_struct_7(_GLF_struct_6(1.0, mat4x2(1.0)), mat3(1.0)), _GLF_struct_11(_GLF_struct_8(bvec2(true), mat2(1.0), vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(0.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_struct_9(ivec2(1), uvec4(1u), mat3x4(1.0)), 1, _GLF_struct_10(vec2(1.0), gl_SubgroupInvocationID, mat2x3(1.0), true), mat2x3(1.0)), _GLF_struct_14(_GLF_struct_12(mat4x2(1.0), vec2(1.0), vec2(1.0), mat2x3(1.0)), _GLF_struct_13(mat2x3(1.0), bvec2(true), mat3x2(1.0), ivec2(1)), bvec2(true), mat4(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_IDENTITY(mat3(1.0), mat3(mat4x3(mat3(1.0)))), 1.0, mat4x3(1.0), _GLF_struct_29(1, ivec3(1), _GLF_struct_26(mat4x3(1.0), ivec3(1), mat2(1.0), bvec4(true), vec4(1.0), mat2(1.0)), bvec4(true), _GLF_struct_27(1.0, mat3(1.0), vec4(1.0), mat4x3(1.0), bvec3(true), mat4(1.0), bvec3(true)), mat2(1.0), _GLF_struct_28(mat2x4(1.0), _GLF_IDENTITY(ivec4(1), _GLF_IDENTITY((ivec4(1)) - ivec4(0, 0, 0, 0), ((ivec4(1)) - ivec4(0, 0, 0, 0)) / (ivec4(1, 1, 1, 1) & ivec4(1, 1, 1, 1)))), bvec2(true), mat3x2(1.0), ivec3(1), 1u)), _GLF_struct_30(uvec3(1u), gl_NumWorkGroups.x), _GLF_struct_33(_GLF_struct_31(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) * _GLF_IDENTITY((uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)), clamp((uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)), (uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u)), (uvec4(1u, 1u, 1u, 1u) | uvec4(1u, 1u, 1u, 1u))))), uvec3(1u), bvec2(true), uvec3(1u), 1u), _GLF_struct_32(1u, vec2(1.0)), mat3x2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.1)), float(1.0), bool(true))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), min((gl_WorkGroupID) | (gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID) | (gl_WorkGroupID), max((gl_WorkGroupID) | (gl_WorkGroupID), (gl_WorkGroupID) | (gl_WorkGroupID)))))))), (gl_WorkGroupID) - uvec3(0u, 0u, 0u)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), ! (! (bool(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 1u * (_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_id))))), (workgroup_size * workgroup_id) >> 0u)));
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, (_GLF_struct_replacement_15._f5._f3.subgroup_local_id) | (_GLF_struct_replacement_15._f5._f3.subgroup_local_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id))))) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id))), (clamp(_GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)), _GLF_IDENTITY(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, max(_GLF_struct_replacement_15._f5._f3.subgroup_local_id, _GLF_struct_replacement_15._f5._f3.subgroup_local_id)))) - 0u)) << 0u))) | 0u))))));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1), min((_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1), (_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1))) % subgroup_size), uint(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size + (_GLF_IDENTITY((_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1), min((_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1), (_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1))) % subgroup_size), (1u & 1u), 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_19(_GLF_struct_16(vec4(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0))))), mat2x3(1.0), uvec3(1u), 1.0), _GLF_struct_17(mat2(1.0), uvec4(1u), bvec4(true)), _GLF_struct_18(mat2x3(1.0), 1, uvec3(1u), _GLF_IDENTITY(ivec3(1), ~ (~ (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), max((ivec3(1)), (ivec3(1)))) | (ivec3(1))))))), atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, 0 ^ (64)), (_GLF_IDENTITY(64, 0 ^ (64))) * 1), 0), _GLF_IDENTITY(vec4(1.0), mix(vec4((vec4(1.0))[0], _GLF_FUZZED(4851.3350), _GLF_FUZZED(908.341), (vec4(1.0))[3]), _GLF_IDENTITY(vec4(_GLF_FUZZED(float(uvec3(51999u, 127233u, 90274u).t)), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-85.07)), vec4(mat3x4(vec4(_GLF_FUZZED(float(uvec3(51999u, 127233u, 90274u).t)), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-85.07)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), sin(0.0), 1.0, 1.0, 0.0, 1.0, 1.0))), bvec4(false, true, true, false))), mat4x2(1.0)), _GLF_struct_21(uvec2(1u), _GLF_struct_20(mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (true ? ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(1u, 0u + (1u)))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), 1u, 1u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))), 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_IDENTITY(uvec2(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), min(uvec2(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), uvec2(((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))))), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (1u) >> 0u))))))) * 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 0u, 1u))), uvec3(1u, 0u, 1u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 0u, 1u))), uvec3(1u, 0u, 1u)))), 1u, 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), 1u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), 1u, 1u))), 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) * 1u), 0u, _GLF_IDENTITY(1u, max(1u, 1u))), (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 0u, 1u))), uvec3(1u, 0u, 1u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 0u, 1u))), uvec3(1u, 0u, 1u)))), 1u, 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), 1u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), 1u, 1u))), 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) * 1u), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))) | (uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), max(1u, 1u)), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u)) >> uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) * 1u), max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 0u, 1u))), uvec3(1u, 0u, 1u)))), uint(uvec4(uint(_GLF_IDENTITY(uvec3(1u, 0u, 1u), clamp(uvec3(1u, 0u, 1u), _GLF_IDENTITY(uvec3(1u, 0u, 1u), uvec3(0u, 0u, 0u) + (uvec3(1u, 0u, 1u))), uvec3(1u, 0u, 1u)))), 1u, 0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))))))), 1u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 1u, 1u))), 1u, 1u))), 1u, 1u, 0u)) | uvec4(0u, 0u, 0u, 0u)))))), 1u, ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u))) * 1u), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))))), vec3(1.0), ivec4(1)), bvec3(true)), _GLF_struct_23(vec4(1.0), _GLF_struct_22(ivec4(1), mat2x3(1.0), _GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_struct_24(ivec4(1)), true, mat2x3(1.0), 1.0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(min(4, _GLF_IDENTITY(4, max(4, 4))), (min(4, _GLF_IDENTITY(4, max(4, 4)))) - int(_GLF_ZERO(0.0, injectionSwitch.x)))), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_struct_replacement_15._f5._f3.subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
    barrier();
   int i = _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), max(0, 0));
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_25._f0.read_1 == read_2) + 1, 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), max(_GLF_IDENTITY(~ (next_virtual_gid), (~ (next_virtual_gid)) | (~ (next_virtual_gid))), _GLF_IDENTITY(~ (next_virtual_gid), (false ? _GLF_FUZZED(workgroup_size) : ~ (next_virtual_gid)))))))], _GLF_IDENTITY(uint(_GLF_struct_replacement_25._f0.read_1 == read_2), (uint(_GLF_struct_replacement_25._f0.read_1 == read_2)) << 0u) + 1, 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 + (4)))), _GLF_IDENTITY(4, (4) / 1))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), cos(0.0), determinant(mat4(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, exp(0.0)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
}
