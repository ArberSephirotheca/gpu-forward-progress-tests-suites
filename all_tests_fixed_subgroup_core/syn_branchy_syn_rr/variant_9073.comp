#version 460
struct _GLF_struct_17 {
 bvec3 _f0;
 uint _f1;
 vec2 _f2;
 mat3x4 _f3;
 uint _f4;
 vec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_16 {
 mat2 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_15 {
 mat2x4 _f0;
} ;

struct _GLF_struct_14 {
 int _f0;
 mat4x2 _f1;
 uint subgroup_size;
 uvec4 _f2;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 _GLF_struct_14 _f1;
 mat4 _f2;
 _GLF_struct_15 _f3;
 mat3x2 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_19 {
 uvec4 _f0;
 _GLF_struct_18 _f1;
 uvec2 _f2;
 float _f3;
 mat3x4 _f4;
 mat2 _f5;
} ;

struct _GLF_struct_11 {
 bool _f0;
 vec2 _f1;
 int _f2;
 mat4 _f3;
} ;

struct _GLF_struct_10 {
 vec3 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_12 {
 uvec3 _f0;
 uvec3 _f1;
 _GLF_struct_10 _f2;
 bool _f3;
 _GLF_struct_11 _f4;
 ivec4 _f5;
 float _f6;
} ;

struct _GLF_struct_8 {
 mat3 _f0;
 vec2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_7 {
 mat4x3 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 bvec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 uvec2 _f1;
 mat2x3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_9 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 float _f2;
 _GLF_struct_8 _f3;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 ivec4 _f1;
 bvec4 _f2;
 uvec2 _f3;
 ivec3 _f4;
 mat2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
 mat2x3 _f1;
 bvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 mat4x3 _f1;
 vec2 _f2;
 int _f3;
 mat3x4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 bool _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
} ;

struct _GLF_struct_0 {
 bvec2 _f0;
 uint _f1;
 uvec4 _f2;
 mat4x3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_13 {
 _GLF_struct_0 _f0;
 uvec3 _f1;
 _GLF_struct_5 _f2;
 float _f3;
 _GLF_struct_9 _f4;
 uint read_1;
 _GLF_struct_12 _f5;
 mat4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(uvec4(1u), _GLF_struct_18(ivec4(1), _GLF_struct_14(1, mat4x2(1.0), gl_SubgroupSize, uvec4(1u)), mat4(1.0), _GLF_struct_15(mat2x4(1.0)), mat3x2(1.0), _GLF_struct_16(mat2(1.0), uvec2(1u)), _GLF_struct_17(bvec3(true), 1u, vec2(1.0), mat3x4(1.0), 1u, vec4(1.0), uvec3(1u))), uvec2(1u), 1.0, mat3x4(1.0), mat2(1.0));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_19._f1._f1.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_19._f1._f1.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_19._f1._f1.subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(_GLF_struct_0(bvec2(true), 1u, uvec4(1u), mat4x3(1.0), bvec3(true)), uvec3(1u), _GLF_struct_5(_GLF_struct_1(vec2(1.0), true, ivec2(1)), _GLF_struct_2(true, mat4x3(1.0), vec2(1.0), 1, mat3x4(1.0), bvec2(true)), _GLF_struct_3(vec3(1.0), mat2x3(1.0), bvec3(true), vec2(1.0)), _GLF_struct_4(vec2(1.0), ivec4(1), bvec4(true), uvec2(1u), ivec3(1), mat2(1.0), uvec4(1u))), 1.0, _GLF_struct_9(_GLF_struct_6(bvec3(true), uvec2(1u), mat2x3(1.0), uvec4(1u)), _GLF_struct_7(mat4x3(1.0), mat3x2(1.0), mat4x2(1.0), bvec2(true), vec2(1.0)), 1.0, _GLF_struct_8(mat3(1.0), vec2(1.0), ivec2(1))), atomicLoad(buf[virtual_gid], 4, 64, 0), _GLF_struct_12(uvec3(1u), uvec3(1u), _GLF_struct_10(vec3(1.0), mat4x3(1.0)), true, _GLF_struct_11(true, vec2(1.0), 1, mat4(1.0)), ivec4(1), 1.0), mat4(1.0));
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < _GLF_struct_replacement_19._f1._f1.subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_13.read_1 == read_2) + 1, 4, 64, 4);
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_struct_replacement_13.read_1 == read_2) + 1, 4, 64, 4);
  }
}
