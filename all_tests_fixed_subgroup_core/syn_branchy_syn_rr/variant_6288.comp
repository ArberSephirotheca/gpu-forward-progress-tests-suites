#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))), false || (bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false)))))) && true)), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))), (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false))), false || (bool(_GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), (bool(bvec4((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))) || false)))))) && true)))))))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), _GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), min(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(105172u, 143867u, _GLF_IDENTITY(53665u, 0u | (53665u)))) : uvec3(0u))), uvec3(0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(uvec3(0u), 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u), 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u))), ((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u)))) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u))) ^ uvec3(0u, 0u, 0u)), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u), (uvec3(0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))), uvec3(0u))) * (uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), min(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(105172u, 143867u, _GLF_IDENTITY(53665u, 0u | (53665u)))) : uvec3(0u))), uvec3(0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(uvec3(0u), 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u), 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u))), ((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u)))) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u))) ^ uvec3(0u, 0u, 0u)), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u), (uvec3(0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))), uvec3(0u))) * (uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uvec3(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), min(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(105172u, 143867u, _GLF_IDENTITY(53665u, 0u | (53665u)))) : uvec3(0u))), uvec3(0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(uvec3(0u), 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u), 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u))), ((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u)))) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u))) ^ uvec3(0u, 0u, 0u)), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u), (uvec3(0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))), uvec3(0u))) * (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (uvec3(((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), min(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(105172u, 143867u, _GLF_IDENTITY(53665u, 0u | (53665u)))) : uvec3(0u))), uvec3(0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(uvec3(0u), 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u), 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u))), ((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u)))) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u))) ^ uvec3(0u, 0u, 0u)), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u), (uvec3(0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))), uvec3(0u))) * (uvec3(0u, 0u, 0u))))))), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), min(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(105172u, 143867u, _GLF_IDENTITY(53665u, 0u | (53665u)))) : uvec3(0u))), uvec3(0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(uvec3(0u), 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u), 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u))), ((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u)))) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u))) ^ uvec3(0u, 0u, 0u)), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u), (uvec3(0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))), uvec3(0u))) * (uvec3(0u, 0u, 0u)), ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), min(_GLF_IDENTITY(uvec3(0u), (false ? _GLF_FUZZED(uvec3(105172u, 143867u, _GLF_IDENTITY(53665u, 0u | (53665u)))) : uvec3(0u))), uvec3(0u))), uvec3(_GLF_IDENTITY(0u, max(0u, 0u))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(uvec3(0u), 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u), 0u), _GLF_IDENTITY((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u))), ((true ? _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, 0u | (0u))), ~ (~ (~ (_GLF_IDENTITY(0u, 0u | (0u))))))))), min(uvec4(uvec3(0u), 0u), _GLF_IDENTITY(uvec4(uvec3(0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), (true ? uvec4(uvec3(0u), 0u) : _GLF_FUZZED(uvec4(187762u, 65101u, 52825u, 16469u)))))) : _GLF_FUZZED(uvec4(41230u, 42757u, 184020u, 70640u)))) / uvec4(1u, 1u, 1u, 1u)))), max(uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) >> 0u)), (uvec3(_GLF_IDENTITY(0u, (0u) >> 0u))) ^ uvec3(0u, 0u, 0u)), 0u)), uvec3(uvec4(uvec3(_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u))), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(0u), 0u)), max(uvec3(uvec4(uvec3(0u), 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(0u), (uvec3(0u)) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u))))))))))), uvec3(0u))) * (uvec3(0u, 0u, 0u))))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), uvec3(1u, 1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups))), ((_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))) >> uvec3(0u, 0u, 0u))))))).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y)) && ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) || false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 0u | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) ^ (0u << _GLF_IDENTITY(uint(1u), uint(1u))))));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u ^ (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), ! (! (! (_GLF_IDENTITY(true, (true) && true)))))))) && true)))), false)))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), 1u * ((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(5u), uint(5u))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), 1u * ((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(5u), uint(5u))))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), 1u * ((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u)))), 1u * ((_GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) + 0u), 0u, 1u, 0u))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), true))))) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(5u), uint(5u)))))))))) + subgroup_local_id) | 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0), clamp(vec4(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0), vec4(injectionSwitch, 0.0, 1.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (0) >> 0), 0, 0, 1))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), bool(bvec2(_GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), bool(bvec3(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), true, true))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))), bool(bvec3(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))))))), true, true))), true, false, true))) || false)))), bool(bvec3(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec3(bvec4(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))), true)), ! (! (bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! _GLF_IDENTITY((! (bool(bvec2(false, true)))), ! (! ((! (bool(bvec2(false, true))))))))))))), bool(bvec3(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), false)))), (_GLF_IDENTITY((_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))))))))), false)))), ((_GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(false || (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))), _GLF_IDENTITY(bool(bvec4(false || (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))), false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), true))))), true, false, true))), false)), false || (bool(bvec4(false || (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))))), false, false, false)))))), false))))) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(28.25, 58.11, 4.2, -245.057)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(28.25, 58.11, 4.2, -245.057)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(28.25, 58.11, 4.2, -245.057)) : mat2(_GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch)).x > injectionSwitch.y)))))))))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED((- -0.2))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-78.06)), (float(_GLF_FUZZED(-78.06))) + 0.0), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(749.971)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))), bool(true)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(749.971)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true)))), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-8.3) : _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))))))), bool(true))), mix(float(_GLF_FUZZED(749.971)), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), float(mat4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), 1.0 * (_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(vec3(min(injectionSwitch.x, injectionSwitch.x), 1.0, 1.0)))))))), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))) / 1.0)) - 0.0), cos(0.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, cos(0.0), 1.0), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), dot(vec4(1.0, 1.0, cos(0.0), 1.0), vec4(0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0))), length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat2(exp(0.0), sin(0.0), 0.0, 1.0)), 1.0, abs(1.0)))), bool(true)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(749.971)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((19.28 - -976.266)) : injectionSwitch.x)), 0.0))), min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(749.971)), clamp(float(_GLF_FUZZED(749.971)), _GLF_IDENTITY(float(_GLF_FUZZED(749.971)), (float(_GLF_FUZZED(749.971))) + 0.0), float(_GLF_FUZZED(749.971)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(-78.06, (true ? _GLF_IDENTITY(-78.06, clamp(_GLF_IDENTITY(-78.06, float(mat3x4(-78.06, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))), -78.06, -78.06)) : _GLF_FUZZED(-324.795))))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(mat4x2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), bool(true)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3((injectionSwitch) * mat2(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))).x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(749.971)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-2.0)))), bool(true)))), bool(true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(749.971)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))), mix(float(_GLF_FUZZED(749.971)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))), bool(true)))))), float(_GLF_FUZZED((false ? -60.56 : -9592.5868))), bool(false)))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true)))) * 1.0), float(_GLF_FUZZED((909.276 + 478.263))), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + tan(vec2(0.0, 0.0))).y)), false, true)))))))))), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).x, mix(float(_GLF_FUZZED((- -0.2))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, determinant(mat4(1.0, 0.0, abs(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * round(length(normalize(1.0)))), 0.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0), (true ? mat2x4(_GLF_IDENTITY(1.0, (1.0) / 1.0), log(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat2x4(37.76, -5.3, -5.4, 5684.3966, -5.8, 635.167, -3375.9489, -4.6)))))), 1.0))), 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(74.00)), float(0.0), bool(true)))), min(vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-233.776))), 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) - log(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / abs(1.0)), 1.0, 1.0))))), float(vec2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0))), abs(abs(0.0)), 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)))), _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0))).x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false)))))) / exp(0.0)) * 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))) * 1.0), float(_GLF_FUZZED((909.276 + 478.263))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false)))))) / exp(0.0)) * 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))) * 1.0), float(_GLF_FUZZED((909.276 + 478.263))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false)))))) / exp(0.0)) * 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))) * 1.0), float(_GLF_FUZZED((909.276 + 478.263))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false)))))) / exp(0.0)) * 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))) * 1.0), float(_GLF_FUZZED((909.276 + 478.263))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (false ? _GLF_FUZZED(-575.804) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, abs(0.0)))), injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false))))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), true && ((true)))))) || false)))))) / exp(0.0)) * 1.0, mix(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-78.06)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))), bool(true)))) * 1.0), float(_GLF_FUZZED((909.276 + 478.263))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(true))) > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read_2 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec2((virtual_gid), 0u))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec2((virtual_gid), 0u))) | 0u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec2((virtual_gid), 0u))) | 0u)) << 0u), 1u, 1u, 0u), (uvec4(1u, 1u, 1u, 1u) ^ uvec4(1u, 1u, 1u, 1u)) ^ (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(_GLF_IDENTITY(uvec2((virtual_gid), 0u), (uvec2((virtual_gid), 0u)) << uvec2(0u, 0u)))) | 0u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), uint(uvec2((virtual_gid), 0u))) | 0u)) << 0u), 1u, 1u, 0u)))))], 4, _GLF_IDENTITY(64, 0 | (64)), _GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-91752) : _GLF_IDENTITY(0, 0 | (0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), vec2(mat2x4(_GLF_IDENTITY(mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), clamp(mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), _GLF_IDENTITY(mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), (mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))) / vec2(1.0, 1.0)), _GLF_IDENTITY(mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)), vec2(0.0, 0.0) + (mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true)))))), 0.0, cos(0.0), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0, 1.0, 0.0)))) * vec2(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9.5)), bool(false))))))[1], max((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))))), true))) * vec2(1.0, 1.0)))[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2((_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(0.9, (_GLF_IDENTITY(0.9, float(float(0.9)))) + abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))))))), vec2(_GLF_FUZZED((65.93 / -32.15)), ((injectionSwitch))[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), true))) * vec2(1.0, 1.0)))[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((- -3.1))), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), injectionSwitch, injectionSwitch)).y)), false, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true && (false)), false))), false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), false, false)), (bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), false))), false, false))) && true)))), bool(bvec2(bool(bvec4(false, false, false, false)), true))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(-306.318, (true ? -306.318 : _GLF_FUZZED(atan(196.256, -2.3))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[1]), vec2(_GLF_FUZZED((vec4(3.1, -7.0, -2.7, 0.0) + vec4(48.19, -1.5, 934.261, -5017.7847)).x), _GLF_FUZZED(690.609)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(_GLF_FUZZED(-76.81), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[1]), vec2(_GLF_FUZZED((vec4(3.1, -7.0, -2.7, 0.0) + vec4(48.19, -1.5, 934.261, -5017.7847)).x), _GLF_FUZZED(690.609)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(_GLF_FUZZED(-76.81), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[1]), vec2(_GLF_FUZZED((vec4(3.1, -7.0, -2.7, 0.0) + vec4(48.19, -1.5, 934.261, -5017.7847)).x), _GLF_FUZZED(690.609)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(_GLF_FUZZED(-76.81), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[1]), vec2(_GLF_FUZZED((vec4(3.1, -7.0, -2.7, 0.0) + vec4(48.19, -1.5, 934.261, -5017.7847)).x), _GLF_FUZZED(690.609)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(_GLF_FUZZED(-76.81), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)))[0], _GLF_FUZZED(37.93)), vec2(_GLF_FUZZED(-870.574), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))), mix(vec2((vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[0], (vec2((injectionSwitch)[0], _GLF_FUZZED((-70.22 + 4.4))))[1]), vec2(_GLF_FUZZED((vec4(3.1, -7.0, -2.7, 0.0) + vec4(48.19, -1.5, 934.261, -5017.7847)).x), _GLF_FUZZED(690.609)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), vec2(_GLF_FUZZED(-76.81), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), injectionSwitch)))[1]), bvec2(false, true))))).x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u | (subgroup_local_id), (0u | (subgroup_local_id)) / 1u)) + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))), false, true)))))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), _GLF_IDENTITY(bool(bvec4(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec4(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), true && (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, bool(bvec2(false, true)))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)) && true))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! _GLF_IDENTITY((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))), bool(bvec4(! ((bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))))) && true)) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))))))))))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), true && (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), true && (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))))), ! (! (_GLF_IDENTITY(! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true)))))))))), true && (! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true)))))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))) && true), true, true, true))))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4318.9881)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) ^ 0u, 0u ^ ((next_virtual_gid) ^ 0u)))) << 0u, uint(uvec3((_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) << 0u, 1u, 1u)))), (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) ^ 0u)) << 0u)))], uint(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), min(~ _GLF_IDENTITY((read_2), ((read_2)) - (0u << _GLF_IDENTITY(uint(6u), uint(6u)))), ~ (read_2))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(max(read_1, read_1), (_GLF_IDENTITY(_GLF_IDENTITY(max(read_1, read_1), (_GLF_IDENTITY(max(read_1, read_1), (max(read_1, read_1)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), _GLF_IDENTITY(min(max(read_1, read_1), max(read_1, read_1)), 0u + (min(max(read_1, read_1), max(read_1, read_1)))))) ^ 0u)) == _GLF_IDENTITY(read_2, ~ (~ (read_2))), ! (! (read_1 == read_2)))))) + 1, 4, _GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), clamp(_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)), 0 ^ (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), (_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), max(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64)))) >> 0), _GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), clamp(_GLF_IDENTITY(clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), (clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64)) / 1), clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64), clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(ivec3(64, 1, 0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64))), clamp(64, _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(64, 1, 0), ~ (~ (_GLF_IDENTITY(ivec3(64, 1, 0), (ivec3(64, 1, 0)) ^ (ivec3(0, 0, 0) | ivec3(0, 0, 0)))))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-22703) : 64)))), int(ivec3(64, 1, 0))) : _GLF_FUZZED(90947))), 64)))))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true))))))), bool(bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}
