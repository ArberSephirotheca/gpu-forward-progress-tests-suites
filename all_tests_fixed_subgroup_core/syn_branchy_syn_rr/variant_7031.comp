#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), true, true, true))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 + (int(5)))))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, (0) - 0) >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(791.636)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))) && true)), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))), mix(vec2((clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[0], (clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))[1]), vec2(_GLF_FUZZED(-458.416), _GLF_FUZZED(float(37416))), bvec2(false, false)))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_injected_loop_counter != 0, false, false, true)), bool(bvec4(bool(bvec4(_injected_loop_counter != 0, false, false, true)), false, false, false))), (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter != 0, true && (_injected_loop_counter != 0)), false, false, true))) && true))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false, false))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(bool(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), true), false)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false), true), false))))))), true, true, true)))))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1, (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 1) << 0))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, true)))))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch), clamp(max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch), max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     if(_GLF_DEAD(false))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   barrier();
                  }
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))));
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), min(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, ~ (~ (3)))), 0 + (int(3)))))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), true)))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false, true))), true, _GLF_IDENTITY(false, (false) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.3), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, false)), false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, false)), false, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(false, false), false, false)), false, true)))))))))))), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0])), injectionSwitch[1])).y, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, 1.0, 0.0, 1.0)))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), _GLF_IDENTITY(true, (true) && true), true))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), false || _GLF_IDENTITY(_GLF_IDENTITY(((true)), ! (! (((true))))), bool(bvec4(_GLF_IDENTITY(((true)), ! (! (((true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(true, true && (true)))), ((! (_GLF_IDENTITY(true, true && (true))))) && true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(true, true && (true)))), false || (! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true))))))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(true, true && (true))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(true, true && (true))), false, true)))))))), bool(bool((_GLF_IDENTITY(true, true && (true))))))) || false)), bool(bvec3(! ((_GLF_IDENTITY(true, _GLF_IDENTITY(true && _GLF_IDENTITY((true), ! (! ((true)))), (_GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((true), ! _GLF_IDENTITY((! ((true))), ! (! ((! ((true)))))))) || false)))), true, true)))), _GLF_IDENTITY(false, bool(bvec3(false, true, true))) || (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, true && (true)))), bool(_GLF_IDENTITY(bvec3(! ((_GLF_IDENTITY(true, true && (true)))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(true, true && (true)))), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(true, true && (true)))), true, true))))))))))))))))), _GLF_IDENTITY(false || (! (! (_GLF_IDENTITY(true, true && (true))))), ! (! (false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) && (true))), ! (! ((_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true) && (true)))))))))))))))))))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec3(int(2), 1, 1)), min(int(ivec3(int(2), 1, 1)), int(ivec3(int(2), 1, 1)))))), (0 >> _GLF_IDENTITY(int(2), int(2))) - (0 | 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), true, false, false))))) || false)))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(412.923)), mix(float(float(_GLF_FUZZED(412.923))), float(_GLF_FUZZED(-33.38)), bool(false))), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, tan(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0)), clamp(float(mat2(injectionSwitch.x, tan(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0)), float(mat2(injectionSwitch.x, tan(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0)), float(mat2(injectionSwitch.x, tan(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)))), 0.0, 1.0)))))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))) - 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))), float(_GLF_FUZZED(5609.8706)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), _GLF_IDENTITY(float(injectionSwitch.x), clamp(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) + 0.0), float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))) > injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))), float(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, max(0, 0))], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-55.24) : injectionSwitch.x)))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true)), float(mat3(mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true)), 1.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0))), mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true)), max(mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true)), mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))), (true ? max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))) : _GLF_FUZZED(7.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), (_GLF_IDENTITY(_GLF_FUZZED(6280.6735), _GLF_IDENTITY(float(float(_GLF_FUZZED(6280.6735))), (true ? float(float(_GLF_FUZZED(6280.6735))) : _GLF_FUZZED(1.1))))) - sin(0.0))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))), float(mat4x3(max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))).x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)))))) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)), clamp(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))))), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], 0.0 + (injectionSwitch[1])))).x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), 0.0))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), _GLF_IDENTITY(float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), (true ? _GLF_FUZZED(6280.6735) : _GLF_FUZZED(-6022.8558))), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 0.0, sqrt(1.0))), (float(mat3(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), (true ? _GLF_FUZZED(6280.6735) : _GLF_FUZZED(-6022.8558))), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 0.0, sqrt(1.0)))) / 1.0))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(1.9))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(412.923), (_GLF_FUZZED(412.923)) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat2(min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), (true ? _GLF_FUZZED(6280.6735) : _GLF_FUZZED(-6022.8558))), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 0.0, sqrt(1.0))), (float(mat3(_GLF_IDENTITY(_GLF_FUZZED(6280.6735), (true ? _GLF_FUZZED(6280.6735) : _GLF_FUZZED(-6022.8558))), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), abs(1.0), 0.0, sqrt(1.0)))) / 1.0))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) : _GLF_FUZZED(1.9))), min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(412.923), (_GLF_FUZZED(412.923)) * _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))))), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6280.6735)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(412.923)), bool(false)))))), float(_GLF_FUZZED(-7.6)), bool(false)))), 1.0, 1.0, 1.0)) : _GLF_FUZZED(-0.1))))))) > injectionSwitch.y)))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), (false) && true)));
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         barrier();
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((workgroup_id ++)) : subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u))), (subgroup_local_id) - 0u), subgroup_local_id));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY(! (! (bool(_GLF_DEAD(false)))), ! (! (! (! _GLF_IDENTITY((bool(_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec4((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), true && (bool(bvec4((bool(_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(131147u) : subgroup_local_id)) + 1))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) | (1u ^ 1u)), _GLF_FUZZED(subgroup_local_id))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))))))) ^ 0u)), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)) | ((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), ~ (_GLF_IDENTITY(~ (uint(uint(subgroup_size))), (_GLF_IDENTITY(~ (uint(uint(subgroup_size))), (~ (uint(uint(subgroup_size)))) ^ 0u)) >> 0u)))) | (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) - 0u)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(uint(subgroup_size))) | (uint(uint(subgroup_size))), (_GLF_IDENTITY((uint(uint(subgroup_size))) | (uint(uint(subgroup_size))), ((uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))) | ((uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))))) | ((uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), ~ (~ (uint(uint(subgroup_size))))), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(_GLF_IDENTITY(uint(subgroup_size), (uint(subgroup_size)) * 1u))) | _GLF_IDENTITY((uint(uint(subgroup_size))), ((uint(uint(subgroup_size)))) - 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(uint(subgroup_size))), clamp((uint(uint(subgroup_size))), (uint(uint(subgroup_size))), (uint(uint(subgroup_size))))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), max(max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) >> 0u)) + 0u)) >> 0u)), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)), 1u, 0u)), min(_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u), min(_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u), _GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)))), 1u, 0u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) ^ (uint(uvec3((_GLF_IDENTITY(_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u), min(_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u), _GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)))), 1u, 0u)))), uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)), 1u, 0u)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))))))))), (false ? _GLF_FUZZED((-- workgroup_size)) : clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (0u | 0u) | (subgroup_size)), subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(true, ! (! (true))) ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u)))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))))))) | (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, 0u, 0u))))))))))))), uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id)), (max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id)), min(max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id)), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id)))))))), ~ (~ (_GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id)))), 0u ^ ((true ? _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (true ? ~ (subgroup_size) : _GLF_FUZZED(170730u))))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), min(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 1u * (_GLF_FUZZED(subgroup_local_id))))))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id)))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), ~ (~ (uint(subgroup_size))))), (uint(uint(subgroup_size))) | (uint(uint(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(uint(subgroup_size))) | (uint(uint(subgroup_size))), ((uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))) * 1u)), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), min(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) ^ (0u ^ (0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))) | _GLF_IDENTITY((uint(uint(subgroup_size))), ((uint(uint(subgroup_size)))) + 0u)), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(subgroup_size), max(uint(subgroup_size), _GLF_IDENTITY(uint(subgroup_size), (true ? uint(subgroup_size) : _GLF_FUZZED((-- workgroup_base))))))), (uint(_GLF_IDENTITY(uint(subgroup_size), (_GLF_IDENTITY(uint(subgroup_size), (false ? _GLF_FUZZED(workgroup_base) : uint(subgroup_size)))) / 1u))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))) >> uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(uint(subgroup_size))), (true ? _GLF_IDENTITY((uint(uint(subgroup_size))), min((uint(uint(subgroup_size))), (uint(uint(subgroup_size))))) : _GLF_FUZZED(195002u))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) >> uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))) + 0u), 1u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), _GLF_IDENTITY(uint(uint(subgroup_size)), 0u ^ (uint(uint(subgroup_size))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 1u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(uvec4(8u, (1u ^ 1u), 0u, 1u)))), _GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(workgroup_base)))))))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(_GLF_IDENTITY(uint(subgroup_size), 0u ^ (uint(subgroup_size))))) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) / 1u)) >> (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size))))) ^ 0u), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)), ((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size))))) ^ 0u), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)), ((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))))), (uint(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size))))) ^ 0u), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)), ((uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u))) / uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), _GLF_IDENTITY(0u, (0u) >> 0u), 1u)))))))))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))) | 0u))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), max(_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(workgroup_base) : (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(1u), uint(1u))), (false ? _GLF_FUZZED(subgroup_local_id) : (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) | ((0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), min(uint(uint(subgroup_size)), uint(uint(subgroup_size)))), uint(uint(subgroup_size)), uint(uint(subgroup_size)))), (_GLF_IDENTITY(uint(uint(subgroup_size)), clamp(_GLF_IDENTITY(uint(uint(subgroup_size)), min(uint(uint(subgroup_size)), uint(uint(subgroup_size)))), uint(uint(subgroup_size)), uint(uint(subgroup_size))))) >> 0u), (uint(uint(subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size))))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), uint(uvec3(~ (1u), 0u, 0u)))), (~ (_GLF_IDENTITY(~ (1u), uint(uvec3(~ (1u), 0u, 0u))))) << 0u))))))) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (uint(subgroup_size))))), ((uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (uint(subgroup_size)))))) - 0u) | (uint(uint(subgroup_size)))), 0u, 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (_GLF_IDENTITY(uint(uint(subgroup_size)), max(uint(uint(subgroup_size)), uint(uint(subgroup_size))))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1u), uint(uvec3(~ (1u), 0u, 0u)))), (~ (_GLF_IDENTITY(~ (1u), uint(uvec3(~ (1u), 0u, 0u))))) << 0u))))))) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (uint(subgroup_size))))), ((uint(_GLF_IDENTITY(uint(subgroup_size), 0u | (uint(subgroup_size)))))) - 0u) | (uint(uint(subgroup_size)))), 0u, 1u)))))))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uint(uint(subgroup_size)), _GLF_IDENTITY((uint(uint(subgroup_size))), ((((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * ((uint(uint(subgroup_size))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u), (uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, 1u)) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(uint(uint(subgroup_size)), (uint(uint(subgroup_size))) | (uint(uint(subgroup_size)))), 0u, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, ~ (~ (1u))) : _GLF_FUZZED(workgroup_id))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), _GLF_IDENTITY(0u, (0u) | (0u)) | (subgroup_size)))), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_FUZZED(subgroup_local_id)), min((_GLF_FUZZED(subgroup_local_id)), (_GLF_FUZZED(subgroup_local_id)))) - (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> _GLF_IDENTITY(0u, (0u) * 1u)), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) >> 0u)) + 0u)) >> 0u)), ((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id))), (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id)))) | (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) | (subgroup_local_id)))))))), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))), _GLF_IDENTITY((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) >> 0u)) + 0u)) >> 0u, min((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) >> 0u)) + 0u)) >> 0u, (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))))) >> 0u)) + 0u)) >> 0u))))) / 1u), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u ^ (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id))))), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(uint(uvec2(_GLF_FUZZED(subgroup_local_id), 0u)), (uint(uvec2(_GLF_FUZZED(subgroup_local_id), 0u))) | (uint(uvec2(_GLF_FUZZED(subgroup_local_id), 0u))))), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)), 1u, 0u)), 0u | (_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) / 1u), 0u, 0u)))) >> 0u)), 1u, 0u)), min(uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(subgroup_local_id))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), uint(_GLF_IDENTITY(uvec2(_GLF_FUZZED(subgroup_local_id), (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))), max(uvec2(_GLF_FUZZED(subgroup_local_id), (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uvec2(_GLF_FUZZED(subgroup_local_id), (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uvec2(_GLF_FUZZED(subgroup_local_id), (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec2(_GLF_FUZZED(subgroup_local_id), (1u | uint(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), _GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)), min((true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)), _GLF_IDENTITY((true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)), ~ (~ ((true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u))))))) + 0u)) >> 0u)), 1u, 0u)), uint(uvec3((_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(num_workgroup)))), _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u + (_GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))))))), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u) | (max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u), (true ? subgroup_size : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY(max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), clamp(max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id)))) >> 0u)) + 0u)) >> 0u)), 1u, 0u)))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) | (_GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id)))))))))))) - 0u), uint(uvec2(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(workgroup_size))), (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (1u) / 1u), 1u)))) | 0u)))))));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2672.5020)), float(injectionSwitch.y), bool(true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint read_1 = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])), (buf[virtual_gid]) - 0u), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3411.9777) : 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))) | (-18235 & 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 0, 0))) | (-18235 & 0), (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))) | (-18235 & 0)) << 0), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))) | (-18235 & 0), _GLF_IDENTITY(0, int(ivec3(0, 0, 0))) | (-18235 & 0)))), ((0 | (-18235 & 0))) >> (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(2), int(2)), int(ivec2(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), ~ (~ (_GLF_IDENTITY(int(2), int(2))))), 0)))))); _injected_loop_counter --)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(64, (64) << 0), 0);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false))) || (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(cos(0.0), 1.0)), dot(vec2(0.0, 0.0), vec2(cos(0.0), 1.0))), 0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 0.0, 0.0, 0.0)), (false ? _GLF_FUZZED(vec2(-9498.1259, -4.0)) : vec2(mat4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(cos(0.0), 1.0)), dot(vec2(0.0, 0.0), vec2(cos(0.0), 1.0))), 0.0, 1.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), 0.0, 0.0, 0.0))))).y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(0.4, float(vec2(0.4, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), (injectionSwitch.y) / 1.0), injectionSwitch.y)))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), true)))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(210.391))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), bool(bvec4((_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, (false) && true)))))), false, true, false))))))) || false), true && (false))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(1213.0017) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(1213.0017) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(1213.0017) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0)))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(1213.0017) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (false ? _GLF_FUZZED(1213.0017) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))) > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (4) | (4)), 4)), 64, 4);
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) || false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(log(5521.3237)))) * (injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(read_1))) == read_2), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2))), max(uint(read_1 == read_2), uint(read_1 == read_2))), uint(read_1 == read_2))) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
}
