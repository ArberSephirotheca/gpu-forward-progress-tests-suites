#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (! (false)))), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base;
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), (false ? _GLF_FUZZED(reflect(vec2(9.6, 258.841), vec2(6.0, -197.676))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))))) : _GLF_FUZZED(vec2(33.75, 3468.9978))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8535.0136), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((true ? 2946.2644 : -2.6))), bvec2(true, false)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).x)) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), (false ? _GLF_FUZZED(reflect(vec2(9.6, 258.841), vec2(6.0, -197.676))) : _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), (true ? _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), min(clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))))) : _GLF_FUZZED(vec2(33.75, 3468.9978))))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0))))) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-588.529 * 42.92)), _GLF_IDENTITY(_GLF_FUZZED(8.1), (_GLF_FUZZED(8.1)) + 0.0)), vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) >> 0)], _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(8535.0136), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((true ? 2946.2644 : -2.6))), bvec2(true, false)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)))).x)) > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = (0 ^ (0 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (true ? _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-50591) : 1)), 1, 1))) - 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) >> 0) : _GLF_FUZZED(87949))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) | 0)), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, 0 | (3))), (_GLF_IDENTITY(int(3), (int(3)) << 0)) / 1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(3), (int(3)) | (int(3))), 1)), int(ivec3(int(ivec2(int(3), 1)), 1, 0))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec2(int(3), 1)), int(ivec3(int(ivec2(int(3), _GLF_IDENTITY(1, 1 * (1)))), 1, 0))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) | (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 1)), int(ivec3(int(_GLF_IDENTITY(ivec2(int(3), 1), ~ (~ (ivec2(int(3), 1))))), 1, 0)))))) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - (0 >> _GLF_IDENTITY(int(5), int(5))))), 0 | ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - (0 >> _GLF_IDENTITY(int(5), int(5)))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - (0 >> _GLF_IDENTITY(int(5), int(5))))) ^ 0)))))) << 0, 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec2(int(3), 1)), int(_GLF_IDENTITY(ivec3(int(ivec2(int(3), _GLF_IDENTITY(1, 1 * (1)))), 1, 0), (ivec3(int(ivec2(int(3), _GLF_IDENTITY(1, 1 * (1)))), 1, 0)) | (_GLF_IDENTITY(ivec3(int(ivec2(int(3), _GLF_IDENTITY(1, 1 * (1)))), 1, 0), (ivec3(int(ivec2(int(3), _GLF_IDENTITY(1, 1 * (1)))), 1, 0)) | (ivec3(int(ivec2(int(3), _GLF_IDENTITY(1, 1 * (1)))), 1, 0))))))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (int(3))))) | (_GLF_IDENTITY(int(3), (int(3)) | (int(3))))), 1)), int(ivec3(int(ivec2(int(3), 1)), 1, 0)))))) - _GLF_IDENTITY((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - (0 >> _GLF_IDENTITY(int(5), int(5))))), 0 | ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (_GLF_IDENTITY(int(5), int(5))) - (0 >> _GLF_IDENTITY(int(5), int(5))))))))) << 0)))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     continue;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (true && ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))) > injectionSwitch.y))))
  barrier();
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y = _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0u, max(0u, 0u)) : _GLF_FUZZED(41089u))), 0u), (uvec3(subgroup_size, 0u, 0u)) << uvec3(0u, 0u, 0u)))), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y = subgroup_size) << (106273u & 0u));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.y;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(87.89), mix(float(_GLF_FUZZED(2757.2191)), float(_GLF_FUZZED(87.89)), bool(true)))), bool(_GLF_IDENTITY(false, (false) && true)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(87.89)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0, sin(0.0)), clamp(vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(_GLF_FUZZED(87.89)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0, sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(87.89)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0, sin(0.0)), vec3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(87.89)), bool(_GLF_IDENTITY(false, (false) && true)))), 0.0, sin(0.0)))))) > injectionSwitch.y))) || false))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 | (_injected_loop_counter)) < 1); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.x;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
        }
       else
        {
        }
       barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   else
    {
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false, false, true)), bool(bvec4(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))), false, false, true)), true, true, false))))))))
    {
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), false || (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
      }
     for(int _injected_loop_counter = ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false) || false)), true)))))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x)) < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
          barrier();
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5.8) : injectionSwitch[1]))))) / vec2(1.0, 1.0)).y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, 1 * (1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), float(mat2x4(injectionSwitch.y, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.8)), float(0.0), bool(true)))))), 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             else
              {
              }
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            {
             for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))))))
          return;
        }
       else
        {
        }
       barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6265.7208) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      continue;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (uvec3(gl_WorkGroupSize))))), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), max(uvec3(gl_WorkGroupSize), uvec3(gl_WorkGroupSize))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (uvec3(gl_WorkGroupSize))), (false ? _GLF_FUZZED(uvec3(14951u, 95541u, 67070u)) : _GLF_IDENTITY(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, 0u) ^ (uvec3(gl_WorkGroupSize))), (_GLF_IDENTITY(uvec3(gl_WorkGroupSize), uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, min(0u, 0u)), 0u)))) ^ (uvec3(gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u))))))))) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size, _GLF_IDENTITY(0u, (0u) - 0u) + _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size, 0u | (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size))), (true ? (_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size, 0u | (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w = workgroup_size))) : _GLF_FUZZED(subgroup_local_id))));
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) : _GLF_FUZZED(5.3))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, clamp(4, 4, 4)))))), bool(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))))))))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true)))))))))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.w * workgroup_id;
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w = workgroup_base;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), false))))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(injectionSwitch.y)), clamp(float(float(injectionSwitch.y)), float(float(injectionSwitch.y)), float(float(injectionSwitch.y))))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))), bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0))), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - log(1.0)))) || false), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(7.7)))) * abs(1.0)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(81.00))), 1.0, 0.0, log(1.0), 0.0, 0.0, sqrt(1.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), determinant(mat2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)))), 0.0 + (determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 1.0)))))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0)), (false ? _GLF_FUZZED(80.91) : float(mat2x4(1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0))))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0)))), (float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0)), 1.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, float(float(1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 0.0, 1.0))))), 1.0))))) - 0.0)))), false, true))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0)) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-4.2)), bool(false))))) / 1.0) < injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 1.0, 0.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) * mat2(1.0)) * vec2(1.0, 1.0)))) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x, injectionSwitch.x)), _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(-4.2)), bool(false))))) / 1.0) < injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), true, true), true))))))))), false, true))), false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
          {
           barrier();
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   else
    {
    }
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (true ? _GLF_IDENTITY(uvec4(6u), uvec4(6u)) : _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base))), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, (6u) << 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))), ~ (~ (_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) | (6u))), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))), (clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (6u)))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)))) | (clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(1u, (1u) / 1u))))).w, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), (_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) << uvec4(0u, 0u, 0u, 0u))) + (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))))), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) >> (89794u & 0u))), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))) | (0u)), 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u), min(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u), uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u))))), 1u), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED((workgroup_size ++)))), (1u) ^ 0u), 1u)))))).w, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))).w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))).w)), (false ? _GLF_FUZZED(atomicMin(subgroup_id, workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ _GLF_IDENTITY((uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u)), min((uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u)), (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), _GLF_IDENTITY(uvec4(3u), uvec4(0u, 0u, 0u, 0u) | (uvec4(3u))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), ~ (_GLF_IDENTITY(~ (uvec4(6u)), (~ (uvec4(6u))) * uvec4(1u, 1u, 1u, 1u)))), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) | (6u))) >> 0u)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))).w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(1u, 1u, 1u, 1u) * (uvec4(6u))), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))) * uvec4(1u, 1u, 1u, 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))), (_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))) | (_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) | (uvec4(161859u, 140793u, 196633u, 56460u) & uvec4(0u, 0u, 0u, 0u))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) - (0u & 28390u))), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u))))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u))), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))) >> (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))).w))))) | 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), (_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) << uvec4(0u, 0u, 0u, 0u))) + (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(3u), uvec4(3u))))), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) >> (89794u & 0u))), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u)))) | (0u)), 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u), min(uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u), uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u))))), 1u), (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, max(1u, 1u)) : _GLF_FUZZED((workgroup_size ++)))), (1u) ^ 0u), 1u)))))).w, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))).w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))).w)), (false ? _GLF_FUZZED(atomicMin(subgroup_id, workgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ _GLF_IDENTITY((uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u)), min((uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u)), (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(uvec4(3u), max(uvec4(3u), _GLF_IDENTITY(uvec4(3u), uvec4(0u, 0u, 0u, 0u) | (uvec4(3u))))))) + (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), ~ (_GLF_IDENTITY(~ (uvec4(6u)), (~ (uvec4(6u))) * uvec4(1u, 1u, 1u, 1u)))), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, clamp(6u, 6u, 6u))) | (6u))) >> 0u)))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(6u), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) | (_GLF_IDENTITY(1u, (1u) ^ 0u))), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))))).w, 0u + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(6u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(1u, 1u, 1u, 1u) * (uvec4(6u))), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(6u), uvec4(6u))) | (_GLF_IDENTITY(uvec4(6u), uvec4(6u))))) * uvec4(1u, 1u, 1u, 1u))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) ^ (uvec4(93797u, 12085u, 5658u, 163474u) & uvec4(0u, 0u, 0u, 0u))) << _GLF_IDENTITY(uvec4(3u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))), (_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u)))) | (_GLF_IDENTITY(uvec4(3u), max(uvec4(3u), uvec4(3u))))))) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), min(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(6u), uvec4(6u)))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, ~ (~ (_GLF_IDENTITY(6u, (6u) | (6u)))))), uvec4(6u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), (uvec4(6u)) | (uvec4(161859u, 140793u, 196633u, 56460u) & uvec4(0u, 0u, 0u, 0u))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(6u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), uvec4(6u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u)), _GLF_IDENTITY(uvec4(6u), uvec4(_GLF_IDENTITY(6u, ~ (~ (6u))))), _GLF_IDENTITY(uvec4(6u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(6u, (6u) - (0u & 28390u))), clamp(_GLF_IDENTITY(uvec4(6u), max(uvec4(6u), uvec4(6u))), uvec4(6u), uvec4(6u)))))))))) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u))))))) + (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u))), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base) / _GLF_IDENTITY(uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u), (false ? _GLF_FUZZED(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) : uvec4(1u, 1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))) >> (uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u))))))).w))))) | 0u))) ^ 0u) | 0u), _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w), (false ? _GLF_FUZZED(177940u) : (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w) | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w))))) / 1u) + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(uvec4(57205u, 66725u, 99884u, 34404u)) : _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size) / uvec4(1u, 1u, 1u, 1u)))).y;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 & 71545))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z = virtual_gid;
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.w + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.x * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z, max(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z)), (true ? _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z, max(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z, GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z)) : _GLF_FUZZED(workgroup_id))) + ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 1, 1, 0)), 0 + (int(ivec4(1, 1, 1, 0)))))) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z);
 for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      continue;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bvec3(bool(bvec2(true, false)), false, false))))) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(126914u))), float(injectionSwitch.x), bool(true))) < injectionSwitch.y))), true))) && true))) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), true), false))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))), (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))) && true)), true), false)))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
              {
               return;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         return;
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), max(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), (float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))) / 1.0), float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))))), (_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0))), max(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0)), abs(1.0))), (float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))) / 1.0), float(mat2x4(injectionSwitch.y, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, determinant(mat4(0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.3)), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(float(1.0))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(1.0)))))) - sin(0.0))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))) : _GLF_FUZZED(atan(injectionSwitch, vec2(_GLF_IDENTITY(-9.3, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(-9.3, clamp(-9.3, _GLF_IDENTITY(-9.3, (-9.3) - 0.0), _GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, mix(float(-9.3), float(_GLF_FUZZED(-4740.7247)), bool(false))), -9.3))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), (false ? _GLF_FUZZED(-9158.9611) : _GLF_IDENTITY(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(-9.3, clamp(-9.3, _GLF_IDENTITY(-9.3, (-9.3) - 0.0), _GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, mix(float(-9.3), float(_GLF_FUZZED(-4740.7247)), bool(false))), -9.3))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), (_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(-9.3, clamp(-9.3, _GLF_IDENTITY(-9.3, (-9.3) - 0.0), _GLF_IDENTITY(-9.3, max(_GLF_IDENTITY(-9.3, mix(float(-9.3), float(_GLF_FUZZED(-4740.7247)), bool(false))), -9.3))))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, 0.0, abs(1.0), 0.0, 0.0))), 1.0), vec4(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 0.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(distance(vec3(-7.5, -537.165, -34.02), vec3(-705.613, 9.0, -9.7))) : float(vec2(1.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0)))))) - 0.0))), 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), 1.0, sin(0.0), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(mat3(-3.6, 83.67, 79.07, 5.0, 6.6, -2.5, -621.753, -419.207, 19.30)) : mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))))))), transpose(transpose(mat2x3(_GLF_IDENTITY(-9.3, (_GLF_IDENTITY(-9.3, clamp(-9.3, -9.3, -9.3))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(0.0, tan(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0), mat4x3(mat4(mat4x3(0.0, tan(0.0), 1.0, 1.0, sin(0.0), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0)))))), 1.0, 0.0, 1.0)), 1.0, sin(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 1.0 * _GLF_IDENTITY((0.0), clamp((0.0), (0.0), (0.0)))), 0.0))), 0.0)))))), 4105.2493))))).x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, (1.0) / determinant(mat2(1.0, 0.0, 0.0, 1.0))), exp(0.0), 0.0, 1.0)))) / 1.0)) * (injectionSwitch), min(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), min((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0)))), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.1, -0.6)))).y, (false ? _GLF_FUZZED(sin(6.8)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.1, -0.6)))).y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))[0], _GLF_FUZZED(-8.2)), vec2(_GLF_FUZZED(-7.2), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))).x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) + 0.0)))))
    barrier();
   barrier();
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), false || (true && (false))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) && _GLF_IDENTITY(true, ! (! (true)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) >> 0)), 4, 64, 4);
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec4(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(false, false || (false)), false, false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && _GLF_IDENTITY(true, true && (true)), bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true, false)))))), bool(bool(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    continue;
   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-0.6) : injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), bool(_GLF_IDENTITY(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), false), true), bvec3(bvec4(bvec3(bvec2(bool(bool(_GLF_IDENTITY(false, true && (false)))), false), true), false)))))))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0) + _GLF_IDENTITY((injectionSwitch.x), (true ? _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - 0.0) : _GLF_FUZZED(7.7)))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false)), true && (bool(bvec4(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, false))))))))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 1.0, 0.0, 1.0), mat2(mat3x2(mat2(1.0, 1.0, 0.0, 1.0)))))))), 1.0, 1.0, 1.0))), injectionSwitch)).y))))
          {
           for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), _GLF_IDENTITY(int(1), clamp(int(1), _GLF_IDENTITY(int(1), (int(1)) << 0), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 | 1) | 1)); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
        }
       else
        {
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) | 0)); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             for(int _injected_loop_counter = (60530 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
            }
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-4718.0496, max(-4718.0496, _GLF_IDENTITY(-4718.0496, max(-4718.0496, -4718.0496)))))), float(injectionSwitch.y), bool(true)))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5831.9453)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     return;
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        return;
       continue;
      }
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_1 = atomicLoad(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || (_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_base.z], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), int(ivec3(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), 1, 0))))), (false ? _GLF_FUZZED(-94287) : _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), int(ivec3(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), 1, 0))))), clamp(_GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), int(ivec3(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), 1, 0))))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), int(ivec3(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), 1, 0))))), _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), int(ivec3(~ (_GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) ^ 0)))), 1, 0))))))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.y + 1 < GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_14subgroup_idsubgroup_local_idsubgroup_sizeworkgroup_size.z)
  {
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), ((1)) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (1 ^ 1) | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   barrier();
                  }
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))), false)))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   barrier();
                  }
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        continue;
      }
     return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true)), (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))) && true))) && true))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false))))))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(bvec3(read_1 == read_2, true, false), true))))), false, _GLF_IDENTITY(true, ! (! (true))), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false))))))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(bvec3(read_1 == read_2, true, false), true))))), false, _GLF_IDENTITY(true, ! (! (true))), true)))), true))))), (uint(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false))))))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(bvec3(read_1 == read_2, true, false), true))))), false, _GLF_IDENTITY(true, ! (! (true))), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(read_1 == read_2, true, false))), false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec4(! (bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true, false))))))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, true, false), bvec3(bvec4(bvec3(read_1 == read_2, true, false), true))))), false, _GLF_IDENTITY(true, ! (! (true))), true)))), true)))))) ^ 0u), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(1u, 1u)))), clamp((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(1u, 1u)))), (uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(1u, 1u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(1u, 1u)))), ~ (~ ((uint(_GLF_IDENTITY(read_1 == read_2, false || (read_1 == read_2)))) / _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), min(_GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(1u, 1u)))))))))) + 1, _GLF_IDENTITY(4, 0 | (4)), 64, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != 0), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)))); _injected_loop_counter --)
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), ~ (~ (uint(uint(read_1 == _GLF_IDENTITY(read_2, clamp(read_2, read_2, _GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, min(read_2, read_2)), read_2)))))))))), (uint(_GLF_IDENTITY(uint(uint(read_1 == read_2)), ~ (~ (_GLF_IDENTITY(uint(uint(read_1 == read_2)), min(uint(uint(read_1 == read_2)), _GLF_IDENTITY(uint(uint(read_1 == read_2)), max(uint(uint(read_1 == read_2)), uint(uint(read_1 == read_2))))))))))) + 0u)) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(abs(0.0) + _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-3.0) : (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))), (true ? abs(0.0) + _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(-3.0) : (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4((injectionSwitch.x), 0.0, sqrt(1.0), 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))))))) : _GLF_FUZZED(-1161.5538)))) > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(28.10, -6580.3916, 2026.7264, 505.461, -98.58, -3.0, 80.23, -9.8, -120.818, -6784.7961, -9.1, -5632.1956, 34.10, -4.4, -413.376, -4169.6728)) : _GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-92.97, -422.883, 97.28, -666.955, 42.90, 0.7, -625.011, 24.38, 3390.6853, -4377.6600, -3.1, -8751.0943, 28.39, 8.9, 9.4, -673.910)) : mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch)))[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_IDENTITY(_GLF_FUZZED(-3556.1103), mix(float(_GLF_FUZZED(-3556.1103)), float(_GLF_FUZZED(-4.5)), bool(false)))), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y) || false)))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), clamp(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103))) * vec2(1.0, 1.0)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), clamp(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))))))), bvec2(false, false))).y))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(_GLF_IDENTITY(-3556.1103, (-3556.1103) - 0.0))), bvec2(false, false))).y, ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), float(vec2(1.0, 1.0))))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), float(vec2(1.0, 1.0))))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)), _GLF_IDENTITY(bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), float(vec2(1.0, 1.0))))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)), true)), (bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / vec2(1.0, 1.0))), float(vec2(1.0, 1.0))))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)), true))) && true)))))))), true && (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-2.5)), float(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1130.3223) : _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(3.5)), bool(false)))))), bool(true)))), _GLF_IDENTITY((injectionSwitch), abs(vec2(0.0, 0.0)) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y), true && _GLF_IDENTITY((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0)], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), max(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(_GLF_IDENTITY(false, false || (false)), false))).y)), bool(bvec4((! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (0) | 0)], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), max(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(_GLF_IDENTITY(false, false || (false)), false))).y)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), exp(vec2(0.0, 0.0)) * ((injectionSwitch)))[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_IDENTITY(_GLF_FUZZED(-3556.1103), min(_GLF_FUZZED(-3556.1103), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-529.478, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(-529.478, 0.0 + (-529.478)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), min(vec3(_GLF_IDENTITY(-529.478, 0.0 + (-529.478)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec3(_GLF_IDENTITY(-529.478, 0.0 + (-529.478)), _GLF_ZERO(0.0, injectionSwitch.x), 0.0)))))), (_GLF_FUZZED(-529.478)) - 0.0), _GLF_FUZZED(-3556.1103)), bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y) || false)))))), true && (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), min(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), vec2(mat2x4(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0, 1.0, 1.0, 0.0, 0.0))))), bvec2(false, _GLF_IDENTITY(false, (false) && true)))).y))))))))))) || false))))) || false)), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(28.10, (28.10) - 0.0), -6580.3916, 2026.7264, 505.461, -98.58, -3.0, 80.23, -9.8, -120.818, -6784.7961, -9.1, -5632.1956, 34.10, -4.4, -413.376, -4169.6728)) : _GLF_IDENTITY(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(-92.97, -422.883, 97.28, -666.955, 42.90, 0.7, -625.011, 24.38, 3390.6853, -4377.6600, -3.1, -8751.0943, 28.39, 8.9, _GLF_IDENTITY(9.4, min(9.4, 9.4)), -673.910)) : mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, sqrt(1.0), tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), clamp(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), clamp(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), (vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1])) * mat2(1.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), mat2(1.0) * (vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(sqrt(1.0))))))[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, sqrt(sqrt(1.0))))))[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)), ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(713.336)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false)), tan(vec2(0.0, 0.0)) + (_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false)), max(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false)), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))))))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y)))), bool(bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec4(0, 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0, 1 * (0))))], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y))))))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(_GLF_IDENTITY(-3556.1103, (-3556.1103) - 0.0))), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(_GLF_IDENTITY(-3556.1103, (-3556.1103) - 0.0))), bvec2(false, false))).y))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), clamp(float(vec2(1.0, 1.0)), float(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), mat2(1.0) * (mat3x2(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0))))), 1.0)), float(vec2(1.0, 1.0))))), 0.0, tan(0.0), determinant(mat3(0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y))))), true && (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-2.5)), float(_GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-1130.3223) : _GLF_IDENTITY(float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(_GLF_IDENTITY((injectionSwitch)[0], (_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0]))) * 1.0), 0.0, 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(3.5)), bool(false)))))), _GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY((injectionSwitch), abs(vec2(0.0, 0.0)) + ((injectionSwitch)))[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(_GLF_IDENTITY(-3556.1103, min(_GLF_IDENTITY(-3556.1103, mix(float(_GLF_FUZZED(7.9)), float(-3556.1103), bool(true))), _GLF_IDENTITY(-3556.1103, clamp(-3556.1103, -3556.1103, -3556.1103)))))), bvec2(false, false))).y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[_GLF_IDENTITY(0, (0) | 0)], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), max(vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)))), bvec2(_GLF_IDENTITY(false, false || (false)), false))).y)))))))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), exp(vec2(0.0, 0.0)) * ((injectionSwitch)))[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_IDENTITY(_GLF_FUZZED(-3556.1103), min(_GLF_FUZZED(-3556.1103), _GLF_FUZZED(-3556.1103)))), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-529.478), (_GLF_FUZZED(-529.478)) - 0.0), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y))))), true && (! (bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-529.478, (-529.478) - 0.0)), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2x3((injectionSwitch)[0], 0.0, 1.0, 1.0, 0.0, 1.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-529.478), _GLF_FUZZED(-3556.1103)), bvec2(false, false))).y))))))))))) || false))))) || false))) && true) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true), true))))))
              {
               return;
              }
             else
              {
              }
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), true))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   do
    {
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true)), (bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))) && true)))))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}
