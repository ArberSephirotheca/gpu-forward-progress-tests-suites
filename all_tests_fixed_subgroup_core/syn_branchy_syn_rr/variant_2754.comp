#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((166.944)), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(830.234)), bool(false)))), vec2((injectionSwitch)[0], _GLF_FUZZED(9393.8746)), bvec2(true, false))).x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), true, _GLF_IDENTITY(true, (true) || false))), false, false))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x < injectionSwitch.y))), ! (! (bool(bool(! (injectionSwitch.x < injectionSwitch.y))))))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), true, true)), false, false))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.1))), ! (! (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false))), true, false)))), false))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), false), true, true)), false, false)))))) && true)) && true))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(5297.5212, -21.01)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), ((false ? _GLF_FUZZED(vec2(5297.5212, -21.01)) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) - sin(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(((mat3x2(-5375.2603, -8.1, 305.108, -32.78, 7.3, 9.9) == mat3x2(-4967.3027, _GLF_IDENTITY(_GLF_IDENTITY(968.509, float(mat3(968.509, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (true ? dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(8.1)))), 1.0, tan(log(1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0)))), (968.509) + abs(0.0)), -8285.6053, 3.6, -411.194, -80.12)) ? vec2(-705.538, -0.1).s : -1.0)), min(_GLF_FUZZED(((mat3x2(-5375.2603, -8.1, 305.108, -32.78, 7.3, 9.9) == mat3x2(-4967.3027, _GLF_IDENTITY(_GLF_IDENTITY(968.509, float(mat3(968.509, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (true ? dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(8.1)))), 1.0, tan(log(1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0)))), (968.509) + abs(0.0)), -8285.6053, 3.6, -411.194, -80.12)) ? vec2(-705.538, -0.1).s : -1.0)), _GLF_IDENTITY(_GLF_FUZZED(((mat3x2(-5375.2603, -8.1, 305.108, -32.78, 7.3, 9.9) == mat3x2(-4967.3027, _GLF_IDENTITY(_GLF_IDENTITY(968.509, float(mat3(968.509, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (true ? dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(8.1)))), 1.0, tan(log(1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0)))), (968.509) + abs(0.0)), -8285.6053, 3.6, -411.194, -80.12)) ? vec2(-705.538, -0.1).s : -1.0)), (true ? _GLF_FUZZED(((mat3x2(-5375.2603, -8.1, 305.108, -32.78, 7.3, 9.9) == mat3x2(-4967.3027, _GLF_IDENTITY(_GLF_IDENTITY(968.509, float(mat3(968.509, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)), (true ? dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, 1.0)) : _GLF_FUZZED(8.1)))), 1.0, tan(log(1.0)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), log(1.0)))), (968.509) + abs(0.0)), -8285.6053, 3.6, -411.194, -80.12)) ? vec2(-705.538, -0.1).s : -1.0)) : _GLF_FUZZED(638.864))))), (true ? _GLF_FUZZED(((mat3x2(-5375.2603, -8.1, 305.108, -32.78, 7.3, 9.9) == mat3x2(-4967.3027, _GLF_IDENTITY(968.509, (968.509) + abs(0.0)), -8285.6053, 3.6, -411.194, _GLF_IDENTITY(-80.12, (_GLF_IDENTITY(-80.12, float(mat3(-80.12, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0)))))) ? vec2(-705.538, -0.1).s : _GLF_IDENTITY(-1.0, float(mat2x4(-1.0, 0.0, log(1.0), 0.0, tan(0.0), 0.0, 0.0, 0.0))))) : _GLF_FUZZED(_GLF_IDENTITY(59.38, (false ? _GLF_FUZZED(distance(injectionSwitch, vec2(81.60, -8.0))) : 59.38)))))), (float(_GLF_FUZZED(((mat3x2(-5375.2603, -8.1, 305.108, -32.78, 7.3, 9.9) == mat3x2(-4967.3027, 968.509, -8285.6053, 3.6, -411.194, -80.12)) ? vec2(-705.538, -0.1).s : -1.0)))) + 0.0), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y))))) > injectionSwitch.y), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0)))) * 1.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (true ? 0.0 : _GLF_FUZZED(sqrt(307.766)))), 1.0, 0.0, 0.0, 0.0)), min(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))).y))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.6) : 1.0))), 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))).y)))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(bool(true), (bool(true)) && true)), false), true, true)))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) && true), true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false))))))))), true))))))), (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), float(_GLF_IDENTITY(vec3((0.0), 1.0, 0.0), mix(vec3((vec3((0.0), 1.0, 0.0))[0], (vec3((0.0), 1.0, 0.0))[1], (vec3((0.0), 1.0, 0.0))[2]), vec3(_GLF_FUZZED(-546.963), _GLF_FUZZED(-6.5), _GLF_FUZZED(-615.345)), bvec3(false, false, false))))) / 1.0)) / 1.0), 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(sqrt(307.766)))), 1.0, 0.0, 0.0, 0.0)), min(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))).y))), ! (! (! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-8.3)), float(1.0), bool(true))), 1.0)), 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) / 1.0), 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(sqrt(307.766), min(sqrt(307.766), sqrt(307.766)))))), 1.0, 0.0, 0.0, 0.0)), min(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat4(0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))).y)))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(7.6) : 1.0))), 0.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, sqrt(0.0), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), min(float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), 1.0))))).y)))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(true, true, false)), bvec3(bvec3(bvec3(bvec3(true, true, false)))))), false))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true, true, false)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, ! (! (true))), false)))), false)))), false)))), bvec3(bvec3(bvec3(bvec3(bvec3(true, true, false))))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), false))))))))), true)))))))) || false)))) || false)))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-0.5)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) + 0.0)), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)).x > injectionSwitch.y))))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0), mat3(mat4(mat3(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, abs(1.0), 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), vec2(mat3x2(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0)))).y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), determinant(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0)), 1.0), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0))), determinant(mat2(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0)), 1.0)))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7392.9822) : injectionSwitch.y)), injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec3(! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), false, true)), (bool(bvec3(! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), false, true))) || false))))))))))))) && true))))))) && true, ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false), false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false))) || false))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((vec2(8.3, 4633.9527) - vec2(2225.6931, 7.5)).x), _GLF_FUZZED(((-50586 == 18116) ? 5.9 : 332.717))), bvec2(false, false))).y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0)))) - sqrt(0.0)) > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((true), ! (! ((true)))))))) && true)))), false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, bool(bvec4(((injectionSwitch.x > injectionSwitch.y)) || false, false, false, false)))) && true))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), true && (bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false || (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))))))))) || false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), (injectionSwitch.y) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))) - 0.0))) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))) : _GLF_FUZZED(workgroup_id)), ((true ? _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), max(min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id))), min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))))) : _GLF_FUZZED(workgroup_id))) | ((true ? _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 1u, 1u))))))) : _GLF_FUZZED(workgroup_id))))), max(_GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(workgroup_id, (true ? _GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)))) : _GLF_FUZZED(workgroup_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), ! (! (bool(bvec4(false, false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u), ~ (~ (workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ 0u))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1], min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1], clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1], max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1], _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7932.3422)), vec2(_GLF_FUZZED(-780.453), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))[1])))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), (true ? vec2(mat4x2(injectionSwitch, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(injectionSwitch)))).y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, true, false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y))) || false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY((1), 0 ^ ((1)))))), ~ (~ (int(int(_GLF_IDENTITY(1, 0 | (1)))))))))) * 1u), (_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(int(_GLF_IDENTITY(1, 0 | (1)))), ~ (~ (int(int(_GLF_IDENTITY(1, 0 | (1)))))))))) * 1u)) - 0u), _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 1u, 0u))))), 4, 64, 4);
 uint read_1 = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), clamp(_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u), virtual_gid, virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(4, 0))), ~ (~ (_GLF_IDENTITY(4, int(ivec2(4, 0)))))), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read_2 = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)) ^ (4)), 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-911.174)), bool(false)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.2) : injectionSwitch.x)) : _GLF_FUZZED(smoothstep(2.1, 6958.2904, -3.6)))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec3(-3689.5358, -79.43, 6.5), (vec4(-6.1, -72.77, 3308.9665, 67.14) * mat3x4(17.50, -788.536, 0.8, 19.72, 93.36, 7.2, -9.6, -152.586, -6293.4295, -670.495, 3.8, -497.922)))) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))))))) + uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))))))) + uvec4(0u, 0u, 0u, 0u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))), ~ (~ (~ (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), min((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))), 0u | ((_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))))))), 0u, 1u)) - uvec4(0u, 0u, 0u, 0u))))))))))) + uvec4(0u, 0u, 0u, 0u))))) ^ uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (uint(_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))) + uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (_GLF_IDENTITY(uint(6u), uint(uvec4(uint(6u), 0u, _GLF_IDENTITY(0u, (0u) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u)))))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ _GLF_IDENTITY((uint(6u)), max((uint(6u)), (uint(6u)))))))), 0u, 1u)) + uvec4(0u, 0u, 0u, 0u))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(subgroup_size, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 1u * (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))))), 0u, 1u), (_GLF_IDENTITY(uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u)) << uvec4(0u, 0u, 0u, 0u))) | (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(8u), uvec4(8u)))), (uvec4(subgroup_size, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), 0u, 1u)) + uvec4(0u, 0u, 0u, 0u)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.1)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false))))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(4, 0 ^ (4)))), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(4.7, -2.7)))), _GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))))))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.8) : injectionSwitch.y)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))) ? _GLF_FUZZED(-8.6) : injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}
