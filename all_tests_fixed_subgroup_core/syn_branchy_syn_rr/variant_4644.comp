#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
uint subgroup_size = 16;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))), 0u))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))))))) << 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (true ? _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_id))) ^ 0u) : _GLF_FUZZED(subgroup_local_id))) * subgroup_size + subgroup_local_id) * 1u), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), clamp(uint(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), uint(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)))), uint(uint(_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id))))))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) + (subgroup_size)) : _GLF_FUZZED(subgroup_id))))))), (subgroup_size) / (1u & 1u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) << 0u) + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (true ? _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) : _GLF_FUZZED(subgroup_local_id))))) * subgroup_size + subgroup_local_id) * 1u)) * 1u);
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) >> 0u, ((subgroup_local_id + 1) >> 0u) - 0u))))) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 uint read_2 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   int i = 0;
   atomicStore(buf[next_virtual_gid], uint(read_1 == read_2) + 1, 4, 64, _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) >> 0)))));
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, ~ (_GLF_IDENTITY(~ (read_2), (~ (read_2)) ^ 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false)))))), true && (! (_GLF_IDENTITY(read_1 == read_2, true && (_GLF_IDENTITY(read_1 == read_2, bool(bvec2(read_1 == read_2, false))))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec2(read_1, 1u))) == read_2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))), clamp((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))), 0u | ((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(read_1 == read_2, false, false)))), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))))) / 1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))) / 1u, max((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))) / 1u, (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))) / 1u)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))) / 1u, max((_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))) / 1u, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) ^ 0u)) ^ 0u) == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), (true ? uint(read_1 == read_2) : _GLF_FUZZED(read_2))), uint(read_1 == read_2)))) / 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) * 1u) << 0u)) / 1u) == read_2), (uint(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), (true ? _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)) : _GLF_FUZZED(virtual_gid)))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / 1u))) | (_GLF_IDENTITY((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))), ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))))))) ^ (0u ^ (0u | 0u))) / _GLF_IDENTITY(1u, (1u) >> 0u)), (true ? (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) / _GLF_IDENTITY(1u, (1u) >> 0u)) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), clamp(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) ^ 0u))), _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u) >> 0u)) * 1u))) | (uint(read_1 == read_2)))) ^ 0u) + 1))))) - 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) * 1u) << 0u)) / 1u) == read_2), (uint(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2)))))) ^ 0u) + 1, max(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)))) : _GLF_FUZZED(virtual_gid), ~ (~ (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)), 0u | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)))) : _GLF_FUZZED(virtual_gid))))))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / 1u))) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))) / _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) >> 0u, _GLF_IDENTITY(0u, 0u ^ (0u)) ^ ((1u) >> 0u)))), (true ? (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) / _GLF_IDENTITY(1u, (1u) >> 0u)) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u), _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)))) / 1u, ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u) >> 0u)) * 1u))) | (uint(read_1 == read_2)))) ^ 0u) + 1))))) - 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) * 1u) << 0u)) / 1u) == read_2), (uint(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), (true ? _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), (true && (read_1 == read_2)) || false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)) : _GLF_FUZZED(virtual_gid)))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / 1u))) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))) / _GLF_IDENTITY(1u, (1u) >> 0u)), (true ? (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) / _GLF_IDENTITY(1u, (1u) >> 0u)) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u) >> 0u)) * 1u))) | (uint(read_1 == read_2)))) ^ 0u) + 1))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) * 1u) << 0u)) / 1u) == read_2), (uint(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), (true ? _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), (true && (read_1 == read_2)) || false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)) : _GLF_FUZZED(virtual_gid)))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / 1u))) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))) / _GLF_IDENTITY(1u, (1u) >> 0u)), (true ? (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) / _GLF_IDENTITY(1u, (1u) >> 0u)) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u) >> 0u)) * 1u))) | (uint(read_1 == read_2)))) ^ 0u) + 1))))), 0u ^ ((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, min(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, _GLF_IDENTITY((read_1), ((read_1)) * 1u) << 0u)) / 1u) == read_2), (uint(_GLF_IDENTITY(read_1, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(read_1, (read_1) | (read_1)))) == _GLF_IDENTITY(read_2, ~ (~ (read_2))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, max(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, min(read_2, read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) - 0u)), (true ? _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(read_1 == read_2, _GLF_IDENTITY(true && (read_1 == read_2), (true && (read_1 == read_2)) || false)), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) << 0u)) - 0u)) : _GLF_FUZZED(virtual_gid)))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY((_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, uint(uvec4(read_1, 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / 1u))) | ((uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))))))) / _GLF_IDENTITY(1u, (1u) >> 0u)), (true ? (_GLF_IDENTITY((uint(read_1 == read_2)) / 1u, clamp((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u, (uint(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) | (read_1))) / 1u) == read_2)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))) | ((uint(_GLF_IDENTITY(read_1 == read_2, true && (read_1 == read_2)))) / _GLF_IDENTITY(1u, (1u) >> 0u)) : _GLF_FUZZED(next_virtual_gid))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u, ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2))))) / 1u)) / 1u) >> 0u)) * 1u))) | (uint(read_1 == read_2)))) ^ 0u) + 1)))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))), _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | 0u)), clamp((uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | 0u)), (uint(read_1 == _GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))), max((read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))), (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))), (uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))) * 1u)))))) | 0u)), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(_GLF_IDENTITY(read_2, clamp(read_2, _GLF_IDENTITY(read_2, 0u | (_GLF_IDENTITY(read_2, ~ (~ (read_2))))), read_2)), uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))), (uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))) | 0u))))))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), _GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2)) | (_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2))), uint(read_1 == read_2)))))))) / 1u)) | (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) | (uint(read_1 == read_2)))))) ^ 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (read_1) ^ 0u), 1u, 1u))) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, min(read_2, read_2)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)))))))) / 1u)), ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(read_2, min(read_2, read_2)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u)))))))) / 1u))) >> (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | _GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) ^ 0u) : _GLF_FUZZED(next_virtual_gid)))), 0u ^ (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec3(_GLF_IDENTITY(read_1, (read_1) ^ 0u), 1u, 1u))) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(read_2, min(read_2, read_2)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) / 1u)))), (uint(1u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))))), uint(uint(uint(uvec3(_GLF_IDENTITY(read_2, min(read_2, read_2)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (1u) / 1u)))), (uint(1u)) / 1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))))))))))) / 1u)) | _GLF_IDENTITY((uint(read_1 == read_2)), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) ? _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) ^ 0u) : _GLF_FUZZED(next_virtual_gid))))))) ^ 0u) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == read_2)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), 0u ^ (_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(num_workgroup) : uint(read_1 == read_2)))))) / 1u)) | (uint(read_1 == read_2)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : 0u))) << 0u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), ~ (_GLF_IDENTITY(~ (uint(read_1 == read_2)), 0u | (~ (uint(read_1 == read_2)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))))) ^ 0u, 0u ^ ((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) << 0u))) | (uint(read_1 == read_2)), ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2))) | ((_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == read_2)) / 1u)) | (uint(read_1 == read_2)))))) ^ 0u)), ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, ! (! (_GLF_IDENTITY(read_1 == read_2, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (read_1 == read_2)))))), (_GLF_IDENTITY(uint(read_1 == read_2), max(_GLF_IDENTITY(uint(read_1 == read_2), min(uint(read_1 == read_2), uint(read_1 == read_2))), _GLF_IDENTITY(uint(read_1 == read_2), 0u | _GLF_IDENTITY((uint(read_1 == read_2)), ((uint(read_1 == read_2))) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) << 0u)), min((_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, (read_2) / 1u)))), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (_GLF_IDENTITY(uint(read_1 == read_2), 0u + (_GLF_IDENTITY(uint(read_1 == read_2), min(_GLF_IDENTITY(uint(read_1 == read_2), uint(uvec4(uint(read_1 == read_2), 0u, 0u, 0u))), uint(read_1 == read_2)))))))), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)), min((_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, (read_1) >> 0u)) + 0u), 0u + (read_1)) == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max((uint(read_1 == read_2)) / 1u, _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, ((uint(read_1 == read_2)) / 1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (uint(read_1 == read_2)) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, 0u + (read_1)) == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (uint(read_1 == read_2)) / 1u), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(read_1, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(0u, ~ (~ (0u))))) + (read_1)) == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (uint(read_1 == read_2)) / 1u)) ^ 0u)))) | (uint(read_1 == read_2)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (_GLF_IDENTITY(_GLF_IDENTITY(read_1, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(read_1, 0u | (read_1)), 0u)), (false ? _GLF_FUZZED(read_1) : uint(uvec2(_GLF_IDENTITY(read_1, 0u | (read_1)), 0u))))), 0u + (read_1)) == read_2) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) || false))))), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))))))) ^ 0u) - 0u))))) + 1) >> 0u), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), clamp(uint(read_1 == read_2), uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(143883u) : _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u))), max(_GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(143883u) : _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u))), _GLF_IDENTITY(uint(read_1 == read_2), (false ? _GLF_FUZZED(143883u) : _GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) - 0u)))))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u, 1u * ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u))) + 1) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, _GLF_IDENTITY(read_1, (true ? read_1 : _GLF_FUZZED(next_virtual_gid))), read_1)) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(bvec3(_GLF_IDENTITY(read_1 == read_2, ! (_GLF_IDENTITY(! (read_1 == read_2), false || (_GLF_IDENTITY(! (read_1 == read_2), bool(_GLF_IDENTITY(bvec2(! (read_1 == read_2), false), bvec2(bvec3(bvec2(! (read_1 == read_2), false), true))))))))), true, true)))), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1)))) : _GLF_FUZZED(virtual_gid), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), (! _GLF_IDENTITY((_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec4(67680u, 145443u, 66177u, 139391u)[1]) : read_2))) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec4(67680u, 145443u, 66177u, 139391u)[1]) : read_2))) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), ((_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_2, 0u | (read_2)), (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(uvec4(67680u, 145443u, 66177u, 139391u)[1]) : read_2))) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))))) || false), false, false, false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | _GLF_IDENTITY((_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))), ((_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))) | ((_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(_GLF_IDENTITY(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) | ((read_2))) / 1u)))))), true), bvec2(bvec4(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, _GLF_IDENTITY((read_2), ((read_2)) | ((read_2))) / 1u)))))), true), true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), ! (! (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))))))), (! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), _GLF_IDENTITY(bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)), true && (bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)), true && (bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true)))), _GLF_IDENTITY((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! ((! (_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bvec2(_GLF_IDENTITY(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u)))))), bool(bool(read_1 == _GLF_IDENTITY(read_2, (read_2) | (_GLF_IDENTITY(read_2, uint(uint(_GLF_IDENTITY(read_2, (read_2) / 1u))))))))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), true, true))))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, (read_2) - 0u)) ^ 0u)), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, max(read_1, read_1))) * 1u), uint(uvec3(_GLF_IDENTITY(read_1, (read_1) ^ 0u), 1u, 1u))) == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(_GLF_IDENTITY(read_1, min(read_1, read_1)) == _GLF_IDENTITY(read_2, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(read_2, min(read_2, read_2)), min(read_2, read_2)), 1u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))))) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1, (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, uint(uvec3(read_1, 0u, 1u))) == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(_GLF_IDENTITY(read_2, max(_GLF_IDENTITY(read_2, 0u | (read_2)), read_2))) : 0u))) << 0u), clamp((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(_GLF_IDENTITY(read_1, (read_1) >> 0u) == read_2)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : 0u))) << 0u), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : 0u))) << 0u), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(read_2) : 0u))) << 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max(_GLF_IDENTITY((uint(read_1 == read_2)), 0u + _GLF_IDENTITY(((uint(read_1 == read_2))), 0u | (((uint(read_1 == read_2)))))) / 1u, (uint(read_1 == read_2)) / 1u)))) | (uint(read_1 == read_2)))) ^ 0u, ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))), min((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | _GLF_IDENTITY((uint(read_1 == read_2)), max(_GLF_IDENTITY((uint(read_1 == read_2)), 0u | ((uint(read_1 == read_2)))), (uint(read_1 == read_2)))))), (_GLF_IDENTITY(uint(read_1 == _GLF_IDENTITY(read_2, (read_2) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (uint(read_1 == read_2)) / 1u)) | (uint(_GLF_IDENTITY(read_1 == read_2, ! (! (read_1 == _GLF_IDENTITY(read_2, (0u | uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (read_2))))))))))) ^ 0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u)))) | (uint(read_1 == read_2)))) ^ 0u, ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))), min((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)))), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))))) ^ 0u) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((uint(read_1 == read_2)) / 1u, max((uint(read_1 == read_2)) / 1u, (uint(read_1 == read_2)) / 1u)))) | (uint(read_1 == read_2)))) ^ 0u, ((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == _GLF_IDENTITY(read_2, (_GLF_IDENTITY(read_2, ~ (~ (read_2)))) ^ 0u))) / 1u)) | (uint(read_1 == read_2)))), min((_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, (read_1 == read_2) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))))) ^ 0u) - 0u)) << 0u)) - 0u))))) + 1) >> 0u), _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), _GLF_IDENTITY((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)), min((_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)))) | (uint(read_1 == read_2)))) ^ 0u) + 1, _GLF_IDENTITY(uint(_GLF_IDENTITY(read_1, clamp(read_1, read_1, read_1)) == _GLF_IDENTITY(read_2, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(read_2, ~ (~ (read_2)))))), (_GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(read_1 == read_2), (uint(read_1 == read_2)) / 1u)) | (uint(read_1 == read_2)))) ^ 0u) + 1)) : _GLF_FUZZED(virtual_gid)) - 0u))), 4, 64, _GLF_IDENTITY(4, int(ivec2(4, 1))));
  }
}
