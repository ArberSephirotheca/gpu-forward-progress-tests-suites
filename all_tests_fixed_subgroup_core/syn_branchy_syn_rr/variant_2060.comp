#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(1, 1, 1)) : _GLF_FUZZED(-44696))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), clamp((0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5))), (0 << _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
          barrier();
        }
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          continue;
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y), false))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-6.8, clamp(-6.8, -6.8, -6.8))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-6.8, clamp(-6.8, -6.8, -6.8))))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y), determinant(mat2(1.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)), tan(0.0), 1.0, tan(0.0), 0.0, 1.0, 0.0, 1.0))).y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-6.8, clamp(-6.8, -6.8, -6.8)))))))) && true), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                barrier();
               return;
              }
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (false || (false)))))))
              break;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))))))))))
            continue;
           if(_GLF_DEAD(false))
            continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec3(! (! (_GLF_DEAD(false))), true, _GLF_IDENTITY(true, false || (true)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
              }
             barrier();
            }
           continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(vec2(815.395, 9.8)))).y, true, true)), bool(bool(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))))))))
            continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0))), 0.0)), 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-640.560), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-640.560), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-640.560), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), false)), bool(bvec2(bool(bvec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.4)), vec2(_GLF_FUZZED(-640.560), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y), false)), true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! ((! _GLF_IDENTITY((false), bool(bvec4((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x))) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)) > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)))))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true), true)))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 for(int _injected_loop_counter = ((0 | 0) << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) >> 0))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))), false || (bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false))))), true, true)))))))))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))
              {
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED((- -2.9))), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))), 0.0), (vec3(injectionSwitch, 0.0)) - vec3(0.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-29.19) : _GLF_IDENTITY(0.0, float(float(0.0))))), 0.0)))))).x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              continue;
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), max(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))) || _GLF_IDENTITY(false, (false) || false))));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, true && (((injectionSwitch.x > injectionSwitch.y)) || false))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false, true, false)), false)))) || false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1))
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) || false), (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.6) : injectionSwitch.y)) : _GLF_FUZZED(-9.2)))) - 0.0))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2.6) : injectionSwitch.y)) : _GLF_FUZZED(-9.2)))) - 0.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)) : _GLF_FUZZED(-9.2), mix(float(_GLF_FUZZED(-0.7)), float(true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))) ? _GLF_FUZZED(-2.6) : injectionSwitch.y)) : _GLF_FUZZED(-9.2)), bool(true)))))) - 0.0))))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) && true)))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        continue;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true)))))))))
  {
   for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(false ? _GLF_FUZZED(-8.4) : 0.0, min(false ? _GLF_FUZZED(-8.4) : 0.0, false ? _GLF_FUZZED(-8.4) : 0.0)))), max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), float(vec2(clamp(0.0, 0.0, 0.0), 0.0)))))))))).x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), false, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (bool(_GLF_DEAD(false)))), ! (! (bool(_GLF_DEAD(false)))))), false, true, false))), bool(bvec3(! (bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false)))))), false, true, false))), true, false))))))))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(148669u))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          break;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), true)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), true)), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / exp(0.0)))))))), false))))))) && _GLF_IDENTITY(true, (true) || false)))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
              return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               continue;
              }
             return;
             if(_GLF_DEAD(false))
              {
               do
                {
                 return;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
                  break;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          continue;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0))), 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))) || false)), false, false)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)))), false || (bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))))))))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))))
        barrier();
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2.4), _GLF_FUZZED(-4.4)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), ! (! (bool(bvec2(true, true)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, ((! (_GLF_DEAD(false))) && true) || false))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))) && true, _GLF_IDENTITY(((! (_GLF_DEAD(false))) && true) || false, ! (! (((! (_GLF_DEAD(false))) && true) || false)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))) || false))))))))
      barrier();
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) && _GLF_IDENTITY(true, ! (! (true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        barrier();
       break;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.0, -7.3)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.0, -7.3)))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.0, -7.3)))))[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-5.8)), bvec2(false, false)))) / vec2(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.0, -7.3)))), mix(vec2((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.0, -7.3)))))[0], (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.0, -7.3)))))[1]), vec2(_GLF_FUZZED(-3.6), _GLF_FUZZED(-5.8)), bvec2(false, false)))) / vec2(1.0, 1.0)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0))).x > injectionSwitch.y)))))))
        continue;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.y = subgroup_id;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(bvec2(_GLF_DEAD(false), false)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), false)), bvec2(bvec4(bvec2(bvec2(_GLF_DEAD(false), false)), true, true))), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_DEAD(false), false)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_DEAD(false), false))))), false, false)))))))))))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 0)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6))), int(6))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(ivec3(_GLF_IDENTITY(int(6), int(ivec2(int(6), 0))), (1 | 1), 1))), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(72241) : int(6))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(5, min(5, 5))))))), max(_GLF_IDENTITY((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6))), int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, 0 ^ (6))))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(72241) : int(6))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), 0 | (int(5))), (true ? _GLF_IDENTITY(int(5), 0 | (int(5))) : _GLF_FUZZED(-41700))))), ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(72241) : int(6))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5)))))) << 0), (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), max(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6))), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(72241) : int(6))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 0, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))) | 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ (0))) | 0, (true ? (_GLF_IDENTITY(0, 0 ^ (0))) | 0 : _GLF_FUZZED(41738)))) >> 0)))))), ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(6), (int(6)) - 0)), (~ (_GLF_IDENTITY(int(6), (int(6)) - 0))) ^ 0)))) | (int(6))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), 0 | (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))))))), (false ? _GLF_FUZZED(14329) : _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec4(5, 0, 1, 0)))), _GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec4(5, 1, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), 1)))), (int(ivec4(5, 1, 1, 1))) | (int(ivec4(5, 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))))))))), _GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))))) : _GLF_FUZZED((-95306))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(ivec3(int(_GLF_IDENTITY(5, 0 ^ (5))), 0, _GLF_IDENTITY(0, (0) * 1)))))) + 0)), ((_GLF_IDENTITY((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) << 0)), _GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(72241) : int(6))))) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (_GLF_IDENTITY(0, 0 ^ (0))) - 0)) | 0))))), ((((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) | (6))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))))), (false ? _GLF_FUZZED(14329) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec4(5, 0, 1, 0)))), _GLF_IDENTITY(int(ivec4(int(_GLF_IDENTITY(5, int(ivec4(5, 0, 1, 0)))), 1, 0, 1)), clamp(int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) / 1)) | (5)), int(ivec4(5, 0, 1, 0)))), 1, 0, 1), min(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) / 1)) | (5)), int(ivec4(5, 0, 1, 0)))), 1, 0, 1), ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) / 1)) | (5)), int(ivec4(5, 0, 1, 0)))), 1, 0, 1)))), int(ivec4(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec4(5, 0, 1, 0), (ivec4(5, 0, 1, 0)) | ivec4(0, 0, 0, 0))))), 1, 0, 1)), int(ivec4(int(_GLF_IDENTITY(5, int(ivec4(5, 0, 1, 0)))), 1, 0, 1))))), _GLF_IDENTITY(int(5), 0 | (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(ivec4(5, 1, 1, 1)), (int(ivec4(5, 1, 1, 1))) | (int(ivec4(5, 1, 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, min(1, 1)), 1))))))))))), _GLF_IDENTITY(int(5), 0 | _GLF_IDENTITY((int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((5), max(_GLF_IDENTITY((5), (false ? _GLF_FUZZED(-5200) : (5))), (5))), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))), ~ (_GLF_IDENTITY(~ ((int(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), 0 | (_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(~ ((int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))))), _GLF_IDENTITY(~ ((int(_GLF_IDENTITY(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), min(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))), _GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(5), int(5))))))))), (true ? ~ ((int(_GLF_IDENTITY(5, (_GLF_IDENTITY(_GLF_IDENTITY(5, ~ (_GLF_IDENTITY(~ (5), max(~ (5), ~ (5))))), (5) << 0)) ^ (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) + 0)), int(5))))))) : _GLF_FUZZED(-40453))))))))) : _GLF_FUZZED((-95306))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(ivec3(int(5), 0, _GLF_IDENTITY(0, (0) * 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(int(5), int(5))), int(ivec3(int(5), 0, _GLF_IDENTITY(0, (0) * 1))))) | 0))) + _GLF_IDENTITY(0, 1 * (0))))) ^ 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch))) + vec2(0.0, 0.0)), (injectionSwitch) + vec2(0.0, 0.0)))).y)) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(true, (true) || false) ? _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(49561, clamp(49561, 49561, 49561)))))) | 0))), 0 | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, int(ivec4(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) | 0)), (int(_GLF_IDENTITY(int(_injected_loop_counter), (int(_injected_loop_counter)) | 0))) * 1)), 1, 1, (0 >> _GLF_IDENTITY(int(2), int(2)))))) : _GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y, ! (! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter), (_GLF_IDENTITY(true, (true) || false) ? _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y)) ? _injected_loop_counter : _GLF_FUZZED(_injected_loop_counter) : _GLF_FUZZED(_GLF_IDENTITY(49561, _GLF_IDENTITY(clamp(49561, 49561, 49561), (_GLF_IDENTITY(clamp(49561, 49561, 49561), max(clamp(49561, 49561, 49561), clamp(49561, 49561, 49561)))) - 0)))))) | 0))))) > _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) | (~ (0)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(0.5, 2754.1729)) : injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false))))))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) && true)), false, false), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)) && true)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)) && true)), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)) && true)), false, false))))))), false)))))))))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, injectionSwitch)).y))))
        return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)), true))))) || false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
    return;
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((false ? -94.32 : -1073.0777))), float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), bool(true)))), 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) + sin(0.0)), 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) + vec2(0.0, 0.0)).y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), ((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))))), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) * 1.0))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(-785.912)), bool(false))), max(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), ((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))))), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) * 1.0))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(-785.912)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), ((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))))), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) * 1.0))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(-785.912)), bool(false))), (_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), (false ? _GLF_FUZZED(9.1) : _GLF_IDENTITY((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y), ((false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)) - determinant(mat2(0.0, 0.0, 1.0, 0.0)))))), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0)), mix(float(float(vec4(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), (float(_GLF_IDENTITY(mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-0.4, -1.5, -8.7, -6418.7945, -9520.1274, -6.9, -603.599, -676.007)) : mat4x2(float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9127.8300) : injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))))) * 1.0))), determinant(mat3(1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), length(0.0), 0.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0, 1.0))), float(_GLF_FUZZED(-785.912)), bool(false)))) / 1.0)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true))))))))))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat2x4(-5588.9282, 5.7, -7.4, 8.3, -29.54, 736.164, 3.5, -630.811)) : mat2x4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0))))), 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat4(0.0, 0.0, 0.0, tan(0.0), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))), 1.0, 0.0))))) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2)))), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(0.0), clamp(_GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(-7455.3547) : abs(0.0))), _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), _GLF_IDENTITY(abs(0.0), _GLF_IDENTITY(float(vec3(abs(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))), 1.0 * (float(vec3(abs(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))))))), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), round(length(normalize(1.0))), tan(determinant(mat2(0.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0))))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(-60.92))), _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((false ? (-9.5 * -9.1) : 324.223))), bool(false))), abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true)))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true)))), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true)))), mix(float(_GLF_FUZZED((-454.820 / 22.89))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true))))), bool(true))), 1.0)), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true)))), mix(float(_GLF_FUZZED((-454.820 / 22.89))), float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), mix(float(_GLF_FUZZED(38.76)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))), (true ? _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0)))) : _GLF_FUZZED(clamp(-2848.9836, 683.129, 7109.8605))))), bool(true))))), bool(true))), 1.0))) + 0.0)))))))))))))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 1.0, abs(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) * mat4(1.0))))))))))), ! (! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0))))))) - 0.0), 1.0, 1.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x2(float(mat2x4(injectionSwitch.y, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 0.0)) * mat4(1.0))))))))))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       return;
      }
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))));
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(float(44628))))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-68.38)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     for(int _injected_loop_counter = ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 1 * (3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), (int(3)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), clamp(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), int(_GLF_IDENTITY(3, int(ivec2(3, 0))))))) | (int(_GLF_IDENTITY(3, int(ivec2(3, 0))))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec2(3, 0)))), (false ? _GLF_FUZZED(29395) : int(_GLF_IDENTITY(3, int(ivec2(3, 0))))))))), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5))))), int(ivec4(int(5), 0, _GLF_IDENTITY(1, 0 | (1)), 1))), int(5)), max(((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 1 * _GLF_IDENTITY((3), ((3)) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), (int(3)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), int(3)), _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, (3) | (3)))), _GLF_IDENTITY(int(3), int(3))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5))))), int(ivec4(int(5), 0, 1, 1))), int(5)), ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(3, 1 * (3))), _GLF_IDENTITY(_GLF_IDENTITY(int(3), 1 * (int(3))), (int(3)) / 1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (_GLF_IDENTITY(int(3), int(3))) / 1), _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(int(3), int(3))))) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5))))), (int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5)))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5))))), min(int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5))))), int(_GLF_IDENTITY(5, min(5, _GLF_IDENTITY(5, 0 + (5))))))))), int(ivec4(int(5), 0, 1, 1))), int(5))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, min(5, 5))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y), false, false), false))))))))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))))
    return;
  }
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), (false ? _GLF_FUZZED(uvec3(146546u, 158266u, 114533u)) : (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x))))).x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))) ^ uvec3(0u, 0u, 0u))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (false ? _GLF_FUZZED(uvec3(63143u, 182841u, 103306u)) : (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))).x, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), (false ? _GLF_FUZZED(uvec3(63143u, 182841u, 103306u)) : (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))))).x) | 0u), (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))).x) - 0u)) | (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))))).x)), min(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3.6), _GLF_FUZZED(-4.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(step(476.176, 9689.0103)) : injectionSwitch.x))))).x, _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x))));
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-64.57)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6.6), _GLF_FUZZED(-64.57)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x) + 0.0), clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(417.164)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, cos(0.0), exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(417.164)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, cos(0.0), exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))))))), float(mat2x3(float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(417.164)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, cos(0.0), exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(417.164)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, 1.0, sqrt(0.0), 1.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, cos(0.0), exp(0.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, tan(0.0)), vec4(0.0, 0.0, 1.0, 0.0)))))))), 1.0, 0.0, 1.0, 1.0, cos(0.0))))), injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), (float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0))) - 0.0)) > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))); _injected_loop_counter ++)
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(0.0, min(0.0, 0.0))), injectionSwitch.x)) < injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
                return;
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                    {
                     barrier();
                    }
                  }
                 else
                  {
                  }
                }
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), ! (! (bool(bvec3(false, false, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), _GLF_IDENTITY(! (! (bool(bvec3(false, false, true)))), false || (! (! (bool(bvec3(false, false, true)))))))))))))
            return;
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = (-48349 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), false || (true && (false))), bool(bvec3(_GLF_IDENTITY(true && (false), false || (true && (false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(! (_GLF_IDENTITY(true && (false), false || (true && (false)))), false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, ! (! (false))))))))))))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
                barrier();
               continue;
              }
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
              break;
             barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
              barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(trunc(47.98))))), (! (injectionSwitch.x > injectionSwitch.y)) || false)) || false)))))));
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(false, true)), false)), false || (bool(bvec2(bool(bvec2(false, true)), false)))))) || (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec2(0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) && true) ? injectionSwitch.y : _GLF_FUZZED(3.5)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 uint workgroup_base = GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.w * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.y * GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (workgroup_base + GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size))))).z) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 1.0, determinant(mat3(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(329.239)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0, 1.0, determinant(mat3(0.0, 0.0, _GLF_IDENTITY(0.0, log(abs(1.0)) + (0.0)), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(1.0, (1.0) + _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), vec4(mat2x4(vec4(0.0, 1.0, 0.0, 0.0), 1.0, 0.0, 0.0, 1.0)))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0), (mat2x3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0), (mat4(1.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, tan(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))))), 0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), 0.0 + (dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(10.51)), bool(false))), 0.0)), max(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(96.95) : 1.0)), 0.0, 0.0))))), 1.0)) + mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), vec3(1.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, length(0.0), 0.0, 1.0, 1.0))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), clamp((1 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) << 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) + 0))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) << 0))
        {
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((false), ((false)) && true), false, false), false)))))))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))) || false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(49.58)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0)))), bool(true))), 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, _GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size))) + uvec4(0u, 0u, 0u, 0u)).z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (0u))), (uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (0u)))) | (uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, _GLF_IDENTITY(0u, (0u) | (0u))))), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u + (1u)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, 0u | (1u)))) - 0u) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size : _GLF_FUZZED(uvec4(23486u, 169797u, 199257u, 29322u)))), _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u)))) | ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))))))) - uvec4(0u, 0u, 0u, 0u))).z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, 0u | (1u)))) - 0u) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size : _GLF_FUZZED(uvec4(23486u, 169797u, 199257u, 29322u)))), _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u)))) | ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))))))) - uvec4(0u, 0u, 0u, 0u))).z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z)), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, 0u | (1u)))) - 0u) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (true ? GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size : _GLF_FUZZED(uvec4(23486u, 169797u, 199257u, 29322u)))), _GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u)))) | ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))))))) - uvec4(0u, 0u, 0u, 0u))).z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))) >> 0u))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((28652u & 0u) ^ (1u), (true ? _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) / 1u) : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)), 0u | (clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))))), 1u)), 0u)))))) / 1u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0 * (injectionSwitch.x), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), 1.0 * (1.0 * (injectionSwitch.x))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0), mat2x3(mat2x4(mat2x3(_GLF_IDENTITY(1.0 * (injectionSwitch.x), 1.0 * (1.0 * (injectionSwitch.x))), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, 1.0))))))), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), _GLF_IDENTITY(max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)), ~ (~ (max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u + (0u))) | 0u)) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u))))))))) / 1u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))) / 1u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), ((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) + uvec4(0u, 0u, 0u, 0u))), max(~ (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), ((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) + uvec4(0u, 0u, 0u, 0u))), ~ (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), ((GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) + uvec4(0u, 0u, 0u, 0u))))))) ^ (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u))) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(0u, 0u, 0u, 0u)))) / uvec4(1u, 1u, 1u, 1u)) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z) << 0u), 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u))) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), (_GLF_IDENTITY((28652u & 0u), uint(_GLF_IDENTITY(uint((28652u & 0u)), (uint((28652u & 0u))) - (0u << _GLF_IDENTITY(uint(3u), uint(3u)))))) ^ (1u)) * 1u)))), 1u)), 0u)))))) / 1u)) * 1u), uint(uint(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x), float(_GLF_FUZZED((+ (+ 233.745)))), bool(false))))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))))) / _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_base) : 1u)))))), workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)), 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u), 0u)), 0u), clamp(_GLF_IDENTITY(uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u), 0u)), 0u), max(uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u), 0u)), 0u), uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u), 0u)), 0u))), uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u), 0u)), 0u), uvec4(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) + 0u), 0u)), 0u))) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), min(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(28652u, (28652u) << 0u) & 0u) ^ (1u), clamp((_GLF_IDENTITY(28652u & 0u, (28652u & 0u) - 0u)) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))) / 1u), _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uint(workgroup_base)))) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))) + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-95.88)))) - 0.0), 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)).z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u), (min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)) << 0u)), 0u)))))) / 1u))), workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(6.0) : _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((28652u & 0u) ^ (1u), clamp(_GLF_IDENTITY((28652u & 0u) ^ (1u), 0u | ((28652u & 0u) ^ (1u))), _GLF_IDENTITY((28652u & 0u) ^ (1u), min((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u))), (28652u & 0u) ^ (1u))), clamp((28652u & 0u) ^ (1u), (28652u & _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) ^ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(subgroup_size, num_workgroup)) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))))), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY((28652u & 0u) ^ (1u), clamp(_GLF_IDENTITY((28652u & 0u) ^ (1u), 0u | ((28652u & 0u) ^ (1u))), _GLF_IDENTITY((28652u & 0u) ^ (1u), min((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u))), (28652u & 0u) ^ (1u))), clamp((28652u & 0u) ^ (1u), (28652u & _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) ^ (_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(atomicMin(subgroup_size, num_workgroup)) : _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u))))))), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)), 0u)))))))) / 1u), workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u)))), uvec4(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) : _GLF_FUZZED(19.81)))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) ^ (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(5u), uvec4(5u))))))) ^ uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (0u) >> 0u))).y * _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, uint(uint(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u), (min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)) ^ 0u)), 0u)))), 0u ^ (uint(_GLF_IDENTITY(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), max(uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, 1u, 0u), uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, 0u, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u), (min(_GLF_IDENTITY(1u, _GLF_IDENTITY((28652u & 0u) ^ (1u), clamp((28652u & 0u) ^ (1u), (28652u & 0u) ^ (1u), _GLF_IDENTITY((28652u & 0u) ^ (1u), ((28652u & 0u) ^ (1u)) * 1u)))), 1u)) ^ 0u)), 0u)))))))) / 1u))) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), 0u + (0u | (1u)))), (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), 0u + (0u | (1u))))) - 0u))) - 0u) + 1) % _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, clamp(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (true ? _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[0], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[1], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[2], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[3], (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[3]) ^ (1u ^ 1u)))) : _GLF_FUZZED(uvec4(23486u, 169797u, 199257u, 29322u)))), _GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, min(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) : GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size))) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u), uvec4(0u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(132306u, 62621u, 106467u).zyzx) : _GLF_IDENTITY(uvec4(0u), uvec4(0u))))) >> _GLF_IDENTITY(uvec4(0u), uvec4(0u)))))), GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)), GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u)))) * 1u)) | (0u)), 0u, _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (0u) / 1u)), _GLF_IDENTITY(0u, (0u) << 0u)))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(_GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u, 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))), ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u, 0u)))) | ((_GLF_IDENTITY(max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size), _GLF_IDENTITY((max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u), max((max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u), (max(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size)) << uvec4(0u, 0u, 0u, 0u))))))))) - uvec4(0u, _GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 0u)), 0u, 0u))).z, GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z)))) * 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.x = _GLF_IDENTITY(next_virtual_gid, (true ? _GLF_IDENTITY(next_virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (next_virtual_gid)) : _GLF_FUZZED(130180u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     return;
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-79.39, 6617.4893)))).x > injectionSwitch.y))));
  }
 else
  {
   atomicStore(buf[GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.x], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))))), ! (! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false, true))))))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, (1 & 1)), (true ? _GLF_IDENTITY(ivec4(1, 0, 0, (1 & 1)), min(ivec4(1, 0, 0, (1 & 1)), ivec4(1, 0, 0, (1 & 1)))) : _GLF_FUZZED(ivec4(69757, -1956, 14598, -11774))))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(1, 0, 0, (1 & 1)), (true ? _GLF_IDENTITY(ivec4(1, 0, 0, (1 & 1)), min(ivec4(1, 0, 0, (1 & 1)), ivec4(1, 0, 0, (1 & 1)))) : _GLF_FUZZED(ivec4(69757, -1956, 14598, -11774))))), (int(_GLF_IDENTITY(ivec4(1, 0, 0, (1 & 1)), (true ? _GLF_IDENTITY(ivec4(1, 0, 0, (1 & 1)), min(ivec4(1, 0, 0, (1 & 1)), ivec4(1, 0, 0, (1 & 1)))) : _GLF_FUZZED(ivec4(69757, -1956, 14598, -11774)))))) << 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_FUZZED(-551.606)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-474.062)), float(injectionSwitch.y), bool(true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint read_1 = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true) || false, false, true, true)), false || (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true) || false, false, true, true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((false)) && true) || false))) && true), _GLF_IDENTITY(false, (false) && true), false, false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true))), bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) || false)), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ((false)) && true) || false))) && true), _GLF_IDENTITY(false, (false) && true), false, false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false) && true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         for(int _injected_loop_counter = (_GLF_IDENTITY((1 & 1), ((1 & _GLF_IDENTITY(1, ~ (~ (1))))) ^ 0) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), max(int(ivec2(1, 0)), int(ivec2(1, 0))))) | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (0 | 0) | (min(_injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)) > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 1.0, 0.0))))), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) && true), false, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.6)), float(injectionSwitch.x), bool(true))), injectionSwitch.x)))) > injectionSwitch.y) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) && true), false, false, true)), false, false, false)))), (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read_2 = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) * int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) ^ 0) << _GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(6), int(6)), (_GLF_IDENTITY(int(6), int(6))) | 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) / 1), (_GLF_IDENTITY(int(6), (int(6)) / 1)) << 0)) - (0 >> _GLF_IDENTITY(int(4), int(4))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) | _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), _GLF_IDENTITY(~ (0), 0 ^ (~ _GLF_IDENTITY((0), ((0)) | ((0)))))))))))))) >> 0)), max(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, max(6, _GLF_IDENTITY(6, int(int(6)))))), int(6))), int(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 ^ (int(6))), int(6))), 0, 1, (_GLF_IDENTITY(_GLF_IDENTITY(0 | 1, max(0 | 1, 0 | 1)), (0 | 1) ^ _GLF_IDENTITY((60988 & 0), ((60988 & 0)) >> 0)))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (6) * 1)))), int(ivec4((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(6, 0 + (6))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(6, 0 + (6))), 0, 1, (0 >> _GLF_IDENTITY(int(6), int(6)))), ~ (~ (ivec4((_GLF_IDENTITY(6, 0 + (6))), 0, 1, (0 >> _GLF_IDENTITY(int(6), int(6))))))))))))), 0, 1, (0 | 1)))), _GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ (~ (6)))))), int(6))), 1, (1 | 0)), _GLF_IDENTITY((ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ _GLF_IDENTITY((~ (6)), clamp((~ (6)), (~ (6)), (~ (6)))))))), int(6))), 1, (1 | 0))), ivec3(ivec3((ivec3((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | (_GLF_IDENTITY(6, ~ _GLF_IDENTITY((~ (6)), clamp((~ (6)), (~ (6)), (~ (6)))))))), int(6))), 1, (1 | 0)))))) << ivec3(0, 0, 0)))), int(ivec4((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(6), (int(6)) - 0))), int(6))), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) | 0))), 1, _GLF_IDENTITY((0 | 1), int(ivec3((0 | 1), 1, 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) + 0) << _GLF_IDENTITY(int(_GLF_IDENTITY(6, min(6, 6))), int(6))))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), min(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6))))))), int(_GLF_IDENTITY(ivec2(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(-4137, min(_GLF_IDENTITY(-4137, (-4137) << 0), _GLF_IDENTITY(-4137, (-4137) << 0)))) : _GLF_IDENTITY(6, min(6, 6)), min(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6))))))), (_GLF_IDENTITY(64467, min(64467, 64467)) & 0)), ivec2(_GLF_IDENTITY(ivec2(ivec2(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), min(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), false ? _GLF_IDENTITY(_GLF_FUZZED(-4137), (_GLF_FUZZED(-4137)) >> 0) : _GLF_IDENTITY(6, min(6, 6))))))), (64467 & 0))), ivec2(ivec2(ivec2(ivec2(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), min(false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6)), false ? _GLF_FUZZED(-4137) : _GLF_IDENTITY(6, min(6, 6))))))), (64467 & 0)))))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), false || (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(_injected_loop_counter > _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0))))), (_injected_loop_counter > _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (0)))))) && true)) || false)))), ! _GLF_IDENTITY((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), min(0, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (_GLF_IDENTITY(0, (0) ^ 0)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) | 0))), max(_GLF_IDENTITY(0, (0) / 1), 0))))))), (true ? _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, max(_GLF_IDENTITY((0) / 1, 0 | ((0) / 1)), (0) / 1))))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)))) | 0))), max(_GLF_IDENTITY(0, (0) / 1), 0))))))) : _GLF_FUZZED(7242)))) - 0)))), _GLF_IDENTITY(! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), 0)))))))))) - 0)))))), (! (! ((! (_GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), clamp((~ (0)), (~ (0)), (~ (0))))))), (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(int(0)))) ^ 0)) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), 0)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))), max(_GLF_IDENTITY(0, (0) / 1), 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1)), (false ? _GLF_FUZZED(45162) : (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(0, (0) / 1))))))), max(_GLF_IDENTITY(0, (0) / 1), 0)))) + 0)))))))) - 0))))))) && true))); _injected_loop_counter --)
    {
     if(subgroup_local_id + 1 < GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.z)
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false)))))))
          return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, sin(0.0), 0.0, 0.0, 0.0)))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, bool(bvec2(_injected_loop_counter > 0, true)))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), 1.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0, sin(0.0), sqrt(0.0), 0.0, 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 0.0, cos(0.0), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), sin(0.0), sqrt(0.0), 0.0, 0.0, 1.0))) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
                  break;
                }
               else
                {
                }
              }
             barrier();
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(0.2))), injectionSwitch.x))), bool(true))) > injectionSwitch.y))))
                return;
               barrier();
              }
             if(_GLF_DEAD(false))
              break;
            }
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, true))))
              barrier();
             continue;
            }
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || false), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))) || _GLF_IDENTITY(false, bool(bvec2(false, false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true) || false), true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) || false)) && true) || false), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), ! (! (! ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))))))) && true) || false), true)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), false, true))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), false, true))))))), false, false)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true) || false), true)), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true))))))), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), false, true))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true))))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, false || (true)))))))) && true) || false), true)))), true)))))))), false, true))))))), false, false)))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true))))), ((_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true) || false), true)), true)))), true))), true, true)))), true))), true))))))
                continue;
               break;
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           continue;
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, true && (true)))))))
            barrier();
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))
                {
                 barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       int i = 0;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true))))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (0 ^ (_GLF_IDENTITY(0, min(0, 0)) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((- _injected_loop_counter)) : int(3)))), (~ (_GLF_IDENTITY(int(3), (false ? _GLF_FUZZED((- _injected_loop_counter)) : int(3))))) << 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 & int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 continue;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                    return;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       break;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2.7)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), true, true)))))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       continue;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false)))))))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
            {
             if(_GLF_DEAD(false))
              break;
             continue;
             if(_GLF_DEAD(false))
              continue;
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(9545.2308, 417.972)))).y)), true)))))))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, bool(bvec4(true, true, true, false))), false)))))))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
            continue;
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0)) || false); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             continue;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(_GLF_IDENTITY((int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1), ((int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7.6, -2.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6122.3119), _GLF_FUZZED(-4323.8282)), bvec2(false, false))))).y)) ^ 1)) | ((int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1))), max((int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(1.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0), mix(vec4(_GLF_FUZZED(6.5), _GLF_FUZZED(-688.374), _GLF_FUZZED(7.2), _GLF_FUZZED(77.61)), vec4((vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(1.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))[0], (vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(1.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))[1], (vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(1.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))[2], (vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(1.0)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0))[3]), bvec4(true, true, true, true)))))) ^ 1), (_GLF_IDENTITY(int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ^ 1, (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1) | (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)))))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * exp(vec2(0.0, 0.0))), vec2(mat4x2(mat2(1.0) * ((injectionSwitch) * exp(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0))))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * exp(vec2(0.0, 0.0))), vec2(mat4x2(mat2(1.0) * ((injectionSwitch) * exp(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * exp(vec2(0.0, 0.0)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch) * exp(vec2(0.0, 0.0))), vec2(mat4x2(mat2(1.0) * ((injectionSwitch) * exp(vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, abs(1.0), 1.0))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(66.00)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(66.00)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), (true ? mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-0.2), _GLF_FUZZED(66.00)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(injectionSwitch)))))))).x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
                continue;
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(((- 8.9))), _GLF_FUZZED(-25.37)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9537.5246) : (injectionSwitch)[1]))), bvec2(true, true))).x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), float(vec2(float(vec4(injectionSwitch.y, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0))))))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) + 0.0) > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    return;
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.4) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))) && true)))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
                      barrier();
                     barrier();
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               barrier();
               for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 + (_injected_loop_counter --)))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.9) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), abs(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.9) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(tan(vec2(0.0, 0.0)))), injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), 1.0))[0], _GLF_FUZZED(-1169.4473)), vec2(_GLF_FUZZED(3.8), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-1684.5970)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))), 1.0))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true)))), mix(float(_GLF_FUZZED((-7.0 - -3489.9122))), float(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(tan(vec2(0.0, 0.0)))), injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(675.759)), (false ? _GLF_FUZZED(-198.417) : float(_GLF_FUZZED(675.759)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(6440.3049, -7.2, -8753.0874, 6.8) * injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))).y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)), (bool(bool(true))) || false)))))))), 1.0))[0], _GLF_FUZZED(-1169.4473)), vec2(_GLF_FUZZED(3.8), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0)), min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0)), ((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0))) / vec2(1.0, 1.0)), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0))))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true))))), bool(true))))), true && ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.9) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)), abs(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(3.9) : injectionSwitch.x)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(true))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(tan(vec2(0.0, 0.0)))), injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)))))))), 1.0))[0], _GLF_FUZZED(-1169.4473)), vec2(_GLF_FUZZED(3.8), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, _GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED(-1684.5970)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))), 1.0))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true)))), mix(float(_GLF_FUZZED((-7.0 - -3489.9122))), float(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), _GLF_IDENTITY(bool(true), (bool(true)) && true))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(tan(vec2(0.0, 0.0)))), injectionSwitch)).y, mix(_GLF_IDENTITY(float(_GLF_FUZZED(675.759)), (false ? _GLF_FUZZED(-198.417) : float(_GLF_FUZZED(675.759)))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((mat2(6440.3049, -7.2, -8753.0874, 6.8) * injectionSwitch)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))).y), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), (bool(true)) || false)) || false)), (bool(bool(true))) || false)))))))), 1.0))[0], _GLF_FUZZED(-1169.4473)), vec2(_GLF_FUZZED(3.8), _GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0)), min(_GLF_IDENTITY((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0)), ((vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0))) / vec2(1.0, 1.0)), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), clamp(mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true)), mix(float(_GLF_FUZZED(675.759)), float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), transpose(transpose(mat2x4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, abs(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0))))))).y), bool(true))))), 1.0))))[_GLF_IDENTITY(1, min(1, 1))]), bvec2(false, true))))), bool(true))))))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((mat2(279.650, 525.183, 9.5, 9.4) / mat2(8.3, 4.6, 3113.7998, -6798.7185))) : mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x)) > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec3(true, false, false))) && (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED((mat2(279.650, 525.183, 9.5, 9.4) / mat2(8.3, 4.6, 3113.7998, -6798.7185))) : mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x)) > injectionSwitch.y)))))), false, false), true))))))))
            barrier();
           if(_GLF_DEAD(false))
            break;
          }
        }
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
         atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.x, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size.x) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[0], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[1], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[2], GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size[3])).x))], uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, (read_1) * 1u), (_GLF_IDENTITY(read_1, (read_1) * 1u)) ^ 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read_1, min(_GLF_IDENTITY(read_1, (_GLF_IDENTITY(read_1, 1u * (read_1))) | (read_1)), _GLF_IDENTITY(read_1, max(read_1, read_1)))), (read_1) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(read_1, (read_1) * 1u)) ^ 0u, uint(uint((_GLF_IDENTITY(read_1, (read_1) * 1u)) ^ 0u))))) ^ 0u) == read_2) + _GLF_IDENTITY(1, (1) >> 0), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))), ~ (~ ((_GLF_IDENTITY(~ (64), min(~ (64), ~ (64))))))), int(int(~ (_GLF_IDENTITY(~ (64), min(~ (64), ~ (64)))))))), 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x : _GLF_FUZZED(1.9))))) > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, false))), ! (! (_GLF_DEAD(false)))))
          barrier();
         continue;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(1.0, 1.0) * (mat2(1.0) * ((injectionSwitch)))))))[0])), _GLF_FUZZED(-383.127)), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, _GLF_IDENTITY(true, true && (true))))).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(1.0, 1.0) * (mat2(1.0) * ((injectionSwitch)))))))[0])), _GLF_FUZZED(-383.127)), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, _GLF_IDENTITY(true, true && (true))))).x > injectionSwitch.y)), bool(bool(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), max(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), vec2(1.0, 1.0) * (mat2(1.0) * ((injectionSwitch)))))))[0])), _GLF_FUZZED(-383.127)), vec2(_GLF_FUZZED(float(true)), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))))[1]), bvec2(false, _GLF_IDENTITY(true, true && (true))))).x > injectionSwitch.y))))), false)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         continue;
        }
       for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) | 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((int(1)) | 0))))), _GLF_IDENTITY(max((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))), clamp(_GLF_IDENTITY(max((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))), min(max((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))), max((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))))), max((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0)))), max((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 ^ 0, (1 ^ 0) - 0))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-0.1, -0.0)))).x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size, (GLF_merged4_0_1_16_1_1_11_2_1_13_3_1_14next_virtual_gidsubgroup_idsubgroup_sizeworkgroup_size) - uvec4(0u, 0u, 0u, 0u)).x], _GLF_IDENTITY(uint(read_1 == read_2), (_GLF_IDENTITY(uint(_GLF_IDENTITY(read_1 == read_2, bool(_GLF_IDENTITY(bvec3(read_1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(read_1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(read_1 == read_2, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))))), uint(uvec4(uint(read_1 == read_2), 1u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))) - _GLF_IDENTITY(0u, min(0u, 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))) | 0, ~ (~ ((_GLF_IDENTITY(1, max(1, 1))) | 0)))), 4, 64, 4);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(bvec3(false, false, true), false))))))))))
        break;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        continue;
      }
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true)))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (false) || false)))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_IDENTITY(false, (false) || false))))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, ! (! (false))))))))
              continue;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3))), bool(bvec4(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
              continue;
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          break;
         barrier();
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
  }
 while(_GLF_WRAPPED_LOOP(false));
}
