#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec4 GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_6num_workgroupread_2;
 GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.xy = GLF_merged2_0_1_13_1_1_6num_workgroupread_2;
 uvec4 GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid;
 uvec4 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id;
 uvec4 GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
    {
     return;
    }
  }
 uvec4 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup;
 uvec3 GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gid;
 GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz = GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gid;
 uvec3 GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_size;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz = _GLF_IDENTITY(GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_size, min(GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_size, GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_size));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uvec4 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id;
 uvec4 GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base;
 uvec4 GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
  return;
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (14067 & 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(false, (false) && true), true, false)), true && (bool(bvec4(false, false, true, false)))))))))
        break;
      }
    }
   if(_GLF_DEAD(false))
    continue;
  }
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 uvec2 GLF_merged2_0_1_6_1_1_6read_1read_2;
 GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.zw = GLF_merged2_0_1_6_1_1_6read_1read_2;
 GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy = GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.zw;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uvec4 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_6_1_1_11read_1subgroup_id;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz.xy = GLF_merged2_0_1_6_1_1_11read_1subgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw = GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz.xy;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(vec4(9.4, -3.1, 472.710, 4.6)[0]) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(95.32)), bool(false))))) : _GLF_FUZZED(948.342))) > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 uvec2 GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.xy = GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroup;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.xy = GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.xy;
 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.xy = GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.xy;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false)))))) && (false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           do
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
          {
           if(_GLF_DEAD(false))
            break;
           break;
          }
        }
      }
     else
      {
      }
     do
      {
       return;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.3)), float(injectionSwitch.y), bool(true))))), cos(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))))
            break;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
              {
               return;
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true)), false, false)))))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         continue;
        }
       if(_GLF_DEAD(false))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.z = subgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz.y = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.z;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = (-24309 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | (2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.z = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz) ^ uvec3(0u, 0u, 0u))))).y, 1u * (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.z = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz, (GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz) ^ uvec3(0u, 0u, 0u))))).y, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.z = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz, _GLF_IDENTITY((GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz) ^ uvec3(0u, 0u, 0u), max((GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz) ^ uvec3(0u, 0u, 0u), (GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz) ^ uvec3(0u, 0u, 0u))))))).y) >> 0u)));
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0)), min(float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0)), float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         break;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0))), mix(vec2((vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0))))[0], _GLF_FUZZED(-0.2)), vec2(_GLF_FUZZED(-81.83), (vec2(mat4x2(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0))))[1]), bvec2(false, true)))).y) + 0.0)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.w = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.z;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 do
  {
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = ((_GLF_IDENTITY((1 ^ 1), clamp((1 ^ 1), (1 ^ 1), (1 ^ 1))) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, (6) << (1 ^ 1))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(6))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], injectionSwitch[1])))).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], injectionSwitch[1])))).y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0), injectionSwitch[1], injectionSwitch[1])))).y))))))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             continue;
             if(_GLF_DEAD(false))
              continue;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))
          return;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             return;
            }
          }
         else
          {
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(bool(_GLF_DEAD(false)), false))))))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
          {
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? int(6) : _GLF_FUZZED(_GLF_IDENTITY((25550 & 54113), ~ (~ (_GLF_IDENTITY((25550 & 54113), (_GLF_IDENTITY((25550 & 54113), ((25550 & 54113)) | 0)) | ((25550 & 54113))))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), clamp(ivec2(0, 1), ivec2(0, 1), ivec2(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) >> (0 | 0)), 0, 0)), 1))))), false || (_injected_loop_counter != 0))); _injected_loop_counter --)
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y = GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.w;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
  }
uint subgroup_size = 16;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz.z = subgroup_size;
  }
 GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z = _GLF_IDENTITY(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid, uvec4(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid[0], GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid[1], GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid[2], GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid[3])).xyz.z;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z = subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      return;
     return;
    }
   GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.w = GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.z;
  }
 else
  {
  }
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.w = _GLF_IDENTITY(GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id, (GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id) / ((uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))).w;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     continue;
    }
   if(_GLF_DEAD(false))
    break;
   GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.w, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.w) | (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.w, (GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.w) ^ 0u)))) - 0u);
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(((1 & 1) & 1), int(int(_GLF_IDENTITY(((1 & 1) & 1), clamp(((1 & 1) & 1), ((1 & 1) & 1), ((1 & 1) & 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter --, 0 | (_injected_loop_counter --)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   break;
                  }
                 break;
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  break;
                 do
                  {
                   return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              break;
             continue;
            }
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (0 | 0))))), min(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (0 | 0))))), ~ (~ ((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (0 | 0)))))))), _GLF_IDENTITY((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (_GLF_IDENTITY(0, (0) | 0) | 0))))), min((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (_GLF_IDENTITY(0, (0) | 0) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (_GLF_IDENTITY(0, (0) | 0) | 0))))), ((_GLF_IDENTITY(1 ^ (0 | 0), ~ (~ (1 ^ (_GLF_IDENTITY(0, (0) | 0) | 0)))))) - 0)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), true && (! (_GLF_WRAPPED_IF_TRUE(true)))), ! (! (! (_GLF_WRAPPED_IF_TRUE(true))))))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              continue;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             break;
            }
           do
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) || false))), bool(bvec4((! (_GLF_IDENTITY(false, (false) || false))), true, true, false))))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) * 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.xy.x = num_workgroup;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         break;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.w = GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.xy.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   else
    {
     return;
    }
  }
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.x = GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.w;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.xy.y = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id, (true ? GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id : _GLF_FUZZED(GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id)))) / uvec4(1u, 1u, 1u, 1u)).x;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), min(_GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (~ (~ (gl_WorkGroupSize))), (~ (~ (~ (gl_WorkGroupSize)))) | (~ (~ (~ (gl_WorkGroupSize)))))))))), (_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), ~ (~ (~ (gl_WorkGroupSize))))))) + uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) * 1), int(7))))) >> _GLF_IDENTITY(int(7), int(7))))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (0 ^ 1) * (int(5))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) / 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   break;
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
            }
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                return;
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  return;
                 return;
                }
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0))))))))))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, 0u + (gl_WorkGroupID.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.z = workgroup_id;
 uint workgroup_base = workgroup_size * GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.z;
 GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y = GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.w;
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) + uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(104734u, 114499u, 110960u)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) + uvec3(0u, 0u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) + uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u))))))) >> uvec3(0u, 0u, 0u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u)), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, uvec3(0u, 0u, 0u) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz))) >> uvec3(0u, 0u, 0u))) >> uvec3(0u, 0u, 0u))))) : _GLF_FUZZED((uvec3(94613u, 72530u, 37215u) >> GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz)))).y + _GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw) | (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw)).y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z + GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x;
 GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.w = virtual_gid;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), ~ (~ (int(4)))))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitfieldReverse(-25317)) : int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
  {
   GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w = GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.w;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz.z = GLF_merged3_0_2_54_2_1_17_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupsubgroup_local_idvirtual_gid.w;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup, uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup, uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup) - uvec4(0u, 0u, 0u, 0u)))))).xyz.y, uint(uvec4(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, 0u, 1u, 0u))) + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, clamp(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y : _GLF_FUZZED(subgroup_id))) * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, 0u + (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)))) + ((GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x + 1) % GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, uint(uvec4(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, 0u, 1u, 0u))) + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, clamp(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup) << uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) / 1u) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base) << uvec4(0u, 0u, 0u, 0u)).z) / 1u), ~ (_GLF_IDENTITY(~ (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) / 1u) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) / 1u) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) / 1u) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u), 0u, 1u, 0u)))))), (~ (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) / 1u) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u))) | (~ (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) / _GLF_IDENTITY(1u, (1u) | (1u))) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u)))))), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)) + ((GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x + 1) % GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, uint(uvec4(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, 0u, 1u, 0u))) + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, clamp(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, (true ? _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, clamp(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)), GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)) : _GLF_FUZZED((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup | GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id, (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup | GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id) | (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup | GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id)))))).z, _GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, 0u + (GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y)) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)).z, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)).z, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)).z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)).z) | (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base, uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base)).z)))))))), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, max(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw)).y), (true ? ~ (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) : _GLF_FUZZED(workgroup_base))))) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, max(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw)).y), (true ? ~ (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) : _GLF_FUZZED(workgroup_base))))) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z), 1u, 1u)), uint(uint(uint(uvec3((_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, max(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw, GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw)).y), (true ? ~ (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y) : _GLF_FUZZED(workgroup_base))))) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z), 1u, 1u)))))) / 1u), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id) | (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id)))).zw.y, ~ (~ (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id) | (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id) | (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id)))).zw.y))) * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)) + ((GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x + 1) % GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, uint(uvec4(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, 0u, 1u, 0u))) + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, clamp(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, max(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id))) | (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id)).zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) / 1u), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)) + ((_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x, uint(uvec2(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x, 1u))) + 1) % GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, uint(uvec4(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y, 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u))) + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, clamp(_GLF_IDENTITY(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, clamp(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (true ? GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id : _GLF_FUZZED(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base))).zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z) ^ 0u)) / 1u), GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.y + GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.y * GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)) + ((GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x + 1) % _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, (true ? _GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z, ~ (~ (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z))) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz.y), 0u ^ (_GLF_FUZZED(GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz.y))))))));
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.w = next_virtual_gid;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.xy.x = GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.w;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id, min(GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id, GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id)), clamp(GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id, _GLF_IDENTITY(GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id, (GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id) ^ uvec4(0u, 0u, 0u, 0u)), GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id)).xy.x], uint(1), 4, 64, _GLF_IDENTITY(4, 0 | (4)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
          }
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_IF_TRUE(true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x)), true && (_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x < injectionSwitch.y)))) && (_GLF_DEAD(false))))
            break;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               return;
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
            return;
          }
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 uint read_1 = atomicLoad(buf[GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz.z], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.x = read_1;
 GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz.x = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.y = GLF_merged2_0_3_61_3_1_16GLF_merged3_0_1_6_1_1_11_2_1_13read_1subgroup_idsubgroup_sizenext_virtual_gid.xyz.x;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (injectionSwitch.y))))))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), bool(bool(! (! (_GLF_WRAPPED_IF_TRUE(true))))))) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          break;
         GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x = GLF_merged4_0_1_13_1_1_6_2_1_11_3_1_17num_workgroupread_1subgroup_idsubgroup_local_id.y;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) + 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               return;
              }
            }
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))
          {
           return;
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   else
    {
     if(_GLF_DEAD(false))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u))), (uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u))), (uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))))) | (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u), max(uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u), uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u))), (uvec4(_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, (_GLF_IDENTITY(GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x, 1u * (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x))) | (GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.x)), 1u, 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))))));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), false || (_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))), bool(bvec3(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)), false, true)))); _GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED((_injected_loop_counter ++)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, sin(0.0), 0.0, 1.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0, 0.0, abs(0.0), 0.0)), 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                return;
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 do
                  {
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))))
                      {
                      }
                     else
                      {
                       GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x = GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.z;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 uint read_2 = atomicLoad(buf[GLF_merged2_0_3_77_3_1_11GLF_merged2_0_2_41_2_1_11GLF_merged2_0_1_6_1_1_11read_1subgroup_idvirtual_gidvirtual_gid.xyz.z], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.xy.y = read_2;
 GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.y = GLF_merged2_0_2_43_2_2_35GLF_merged2_0_1_13_1_1_6num_workgroupread_2GLF_merged2_0_1_6_1_1_6read_1read_2.xy.y;
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), int(_GLF_ZERO(0.0, injectionSwitch.x)) | ((4))) >> 0), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0)), max((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0))) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), (_GLF_IDENTITY(4, (4) >> 0)) - 0)) | (_GLF_IDENTITY(4, (4) >> 0))))), _GLF_IDENTITY(4, (4) >> 0)))), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), _GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(4) : _GLF_FUZZED(-67913))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) / 1) != ((0 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) ^ 0))) << _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1)), min(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1)), (int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) << _GLF_IDENTITY(int(1), int(1))) | 0)))) / ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(0 + (int(1)), int(ivec4(0 + (int(1)), (0 | 0), 0, 0))))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.y = GLF_merged4_0_1_6_1_1_6_2_1_11_3_1_17read_1read_2subgroup_idsubgroup_local_id.y;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0))).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(GLF_merged2_0_3_75_3_1_13GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_idnum_workgroup.xyz.x + 1 < GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.z)
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 0.0, 0.0)), (vec2(mat2x4(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), min(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (clamp(1.0, 1.0, 1.0)) + 0.0), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), (false ? _GLF_FUZZED(-8.5) : clamp(1.0, 1.0, 1.0)))))), 1.0, 0.0, 0.0))) / vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     int i = 0;
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       atomicStore(buf[GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.xy.x], _GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, clamp(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, _GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id, (GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id) ^ uvec4(0u, 0u, 0u, 0u)))).zw.x == GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.y) + 1, ~ (~ (_GLF_IDENTITY(uint(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x == GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.y), max(uint(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x == GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.y), uint(_GLF_IDENTITY(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x, max(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x, GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x)) == GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.y))) + 1))), _GLF_IDENTITY(4, 1 * (4)), 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false))))
        break;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), mat2(1.0) * (mat2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))))).y))))
        {
        }
       else
        {
         return;
        }
      }
     atomicStore(buf[GLF_merged3_0_2_54_2_1_6_3_1_11GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupread_1subgroup_id.xy.x], uint(GLF_merged2_0_2_54_2_2_41GLF_merged2_0_1_16_1_1_13next_virtual_gidnum_workgroupGLF_merged2_0_1_6_1_1_11read_1subgroup_id.zw.x == GLF_merged3_0_2_35_2_1_13_3_1_14GLF_merged2_0_1_6_1_1_6read_1read_2subgroup_sizeworkgroup_base.xy.y) + 1, 4, 64, _GLF_IDENTITY(4, (4) - 0));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
}
